<bug>
          <bug_id>6714</bug_id>
          
          <creation_ts>2012-08-15 15:48:00 +0200</creation_ts>
          <short_desc>Refactor generator.py to allow better wrapping</short_desc>
          <delta_ts>2014-03-03 08:47:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>1.6.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Elsdoerfer">michael</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30383</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-15 15:48:15 +0200</bug_when>
            <thetext>I&#39;d like to be able to call generate with a dynamically generated config. That is, instead of a fixed config.json file, I have a Python command which would put together the configuration (based on, for example, which &quot;plugins&quot; of my app are enabled), and would then simply import generator.py and run the CLI while passing a dict that would be used instead of config.json.

Would such a change be merged?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30434</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 12:46:31 +0200</bug_when>
            <thetext>See https://github.com/qooxdoo/qooxdoo/pull/30</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30437</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 13:57:41 +0200</bug_when>
            <thetext>Actually, the above commit would override the scriptUri of all libraries. This is the one that is working for me:

https://github.com/aspectit/qooxdoo/commit/7dd93f2a49a05db68dfb8eb3a3a787cd1eed3c79</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30438</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 14:00:49 +0200</bug_when>
            <thetext>Damn, ignore the preceding comment; it was meant for a different ticket; sorry.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30443</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-08-21 14:30:16 +0200</bug_when>
            <thetext>Dynamically generating configs for the generator is not far-fetched. But why don&#39;t you just write them as files to disk, and then call the generator via shell exit, passing the file path with -c ?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30447</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 15:41:31 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; Dynamically generating configs for the generator is not far-fetched. But why
&gt; don&#39;t you just write them as files to disk, and then call the generator via
&gt; shell exit, passing the file path with -c ?!

That&#39;s not as nice; this is particularly relevant in my case because end users will have to run those scripts, and I don&#39;t want them to be confronted with files being generated. Now, the file could be generated in a temporary directory, but then there would presumably be issues with relative paths as well that need to be adapted for etc.

This seems like something that Qooxdoo could easily offer; basically, it is already 90% there with the Config class being able to be initialized with a Python dict instead of a file; and the code in many places paying attention to a filename not being available; despite the number of commits, there really only a handful of minor things that this pull request needed to change.

In short, I&#39;d really like to see this merged. I&#39;d be happy to make adjustments if necessary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30928</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-10-11 17:16:53 +0200</bug_when>
            <thetext>What can I do to help get this merged? I&#39;ve had the first merge conflict now keeping my branch up to date, and I&#39;d only expect more trouble in the future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30932</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-10-11 18:22:59 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; What can I do to help get this merged? I&#39;ve had the first merge conflict now
&gt; keeping my branch up to date, and I&#39;d only expect more trouble in the future.

I&#39;m afraid you have to bear with us. This is not a trivial patch, so we cannot just pick it up on passing. In fact it is quite substantial. But our queues are packed, and there are simply too many other things more pressing than accommodating your patch. Sorry.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30934</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-10-11 20:11:33 +0200</bug_when>
            <thetext>Thanks. I appreciate the time issues.

Still, fwiw, let me just add that I think that this patch looks more substantial than it is. The biggest part is just copying the contents of one file to another, while splitting off some lines into a separate method; the code doesn&#39;t actually change.

There are a number of other changes, but each one is basically minor and isolated. I&#39;ve taken the liberty to add comments to the pull request for each change, just in case it helps.

Given that this does not change any core internals, but only the outer surface of the CLI, I don&#39;t believe there to be a danger of introducing hard to find bugs down the road.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35764</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:03 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>