<bug>
          <bug_id>4611</bug_id>
          
          <creation_ts>2011-02-02 14:24:00 +0100</creation_ts>
          <short_desc>Demobrowser samples should have a better responsiveness and usability</short_desc>
          <delta_ts>2014-03-03 08:47:39 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Shimon Doodkin">helpmepro1</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22537</commentid>
            <who name="Shimon Doodkin">helpmepro1</who>
            <bug_when>2011-02-02 14:24:01 +0100</bug_when>
            <thetext>This framework has huge problem with expected responsiveness.
For example tree demo you can double-click on a folder till tomorrow and there is no response.

I propose to start a new project to test the responsiveness of all components and fix it.

It is simple ,
just to use the correct event handlers,
and do staff at correct time, 
as expected by a user of windows or mac.

Mac in general has better interface responsiveness then windows.

For example to look how the components behave in windows or Linux or Mac and
Make the JavaScript components behave as expected, by user,
From what he learned by using some windows system.

To check: clicks, double click, drag-outs, selects, mouse overs, mouse outs.
Because sometimes the result of clicking is displayed too late.
And some times it required to use on mouse down event instead of on click.

Cappuccino has good responsibleness, but I prefer something in JavaScript
see good responsive example:
https://gomockingbird.com/mockingbird/#9aeialy/26ghU9
maybe there are more demos in the Cappuccino wiki
https://github.com/280north/cappuccino/wiki/Modules</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22546</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-02-02 16:00:23 +0100</bug_when>
            <thetext>Shimon, could you be more specific, please? For instance, what do you exactly mean by &quot;For example tree demo you can double-click on a folder till tomorrow and there is no response&quot;? What demo and in what browser under what OS would that be? Can you reproduce it in the showcase? I just checked and it feels quite responsive.

We&#39;d appreciate any more specific finding of yours (e.g. where exactly you would expect to react on mousedown instead of a click). Please post such specific reports so that we could have a look and address each one individually, thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22553</commentid>
            <who name="Shimon Doodkin">helpmepro1</who>
            <bug_when>2011-02-03 00:23:28 +0100</bug_when>
            <thetext>I have gone over the demos and did a usability report:

http://demo.qooxdoo.org/current/demobrowser/

* The menu of the demo browser should work with one click.
also the folders should open and close automatically with one click when clicked.
the keyboard behavior of the menu works well.


* the splitpan resizer in the demo window is too large, and goes over the scrollbar on the left.

* hover images of Buttons should be preloaded.
or all the images will be one image with background position change.

Animation &gt; login:
* text labels should be clickable and on click do focus text filed
* maybe to create a component of  a text box with a lablel.


Animation &gt; tree highlight
* the menu should work with one click.


Data &gt; ExtendedList

* when i click from outside on the list component a focus type border on an item is expected.
* labels should be selectable (on form dialogs texts and on message box texts)
* keyboard behavior should work with up and down keys
* should check on whole item click not just on text

Data &gt; ExtendedTree
* a focus border might be expected
* hover under line or text color might improve responsiveness, if underline then a cursor of pointer is expected.
* mouse click on the triangle or plus  should just open the menu
* should work one click to open folders
* in windows the pluses or the triangles on sides of items hide when mouse out.

Data &gt; Finder
* mouse drag should move the selection
* a hover color or underline might help

Data &gt; Flickr 
* Image List should have some kind of hover indication, there is no indication that i can click on the list.
* image labels might make sense and maybe also balloon with an alt title .

Data &gt; Form
* the labels should behave like html labels when clicked.
* the select box has good hover responsibleness, the design of it might be good for other place.

Data &gt; FormAndListController
* the labels behave like ok but should work on mouse-down not on mouse-click.

Data &gt; FormController
* the labels should be clickable on full length not just on text
* the calendar days should have mouse hover background color, because it is small and hart to pick a number quickly.

Data &gt; Gears
 the spin text input buttons should work on mouse down.

Data &gt; ListController

the current behavior witch might be good and quicker for use.
* a hover color might add
* a focus line might be good

the alternative behavior is expected by a windows user:
- a Focus border line is around the selected item.
- keys move the focus border line
- space selects the item (makes it blue)

Data &gt; JSONToList
* the item image might on white background, with transparent blue on it.
 a selected image looks transparent half blue on it.
* some hover background color for an item might be missing or as a light border.

Data&gt;Single Value bindings
Scrollbar component:
The behavior of slider drag is working well when dragged more then there is. 
On the contrary, a scrollbar with a large handle, it dos not scrolls when entered back  from outside, until mouse goes to starting point, just then scrolls.

* The behavior of slider - when first time clicking on it before it was focused  and sliding it, it does not slides.

* for the slider, a hover color or border color might be good.

a hover color or the-like, tells the user that it can be clicked.

Event &gt; key event 
The key event seems like it is little slower then the low level key event
the same slowness is also noticed with the mouse.
maybe it is based on timeout and timeout is limited to 50ms.

Progressive &gt; progressive table boolean
* the table cell should have a focus line when clicked,
* the table is configured to be selected by line a whole line maybe should have a focus line when clicked.
* the check box click should work on the whole cell.
* the check box should work on mouse down.

Root &gt; inline dynamic resize
* the widgets scroll when an item is clicked a focus line might be ok, even if it is not selectable,
* a clickable item should have some hover response

Root &gt; inline window: modal window
* a click outside the window should flash the modal window title and scroll to it if required.

showcase &gt; dialog
* the labels are not clickable
* the responsiveness of check boxes is fine

showcase &gt; form
toggle button :
* hard to distinguish inner shadow.
split button:
* maybe to test if it is good to auto open the small menu with mouse over.
* the menu in mac flashes before disappear.
labels:
* should work on mouse down
list:
* a focus line might missing

table &gt;table cell editor
* in the edit focus , a black border might be better. or a focus line.

* the check box clickspace is too small and unclickable, the whole cell should be used as clicking place or at last some more larger region.
* when clicking on a not editable cell, should be some sort of response that it was clicked, maybe a focus line , or a blink in color or border.

Tests &gt; SelectBox EdgeCases
* the select box item selection should work on mouse down.

Tests &gt; Virtual_List
additive selection:
* has no focus line - try to work with the keyboard


UI &gt; form validation
 * maybe the error balloon, when clicked inside the element should disappear after 2 seconds or when user starts typing, and may appear back after 2 seconds when user stopped typing.

Virtual &gt; Complex
* the cells check box behaves well.

Virtual &gt; Table
* the cells when clicked might be good to have a focus border line.

Widget &gt; Color selector
* a click on old color or on new color expected to set the color to it.

Widget &gt; Tree
when the menu operates in one click ,
* when the folder is not selected first click on it should not close it.

Widget &gt; Tree Columns
* the checkbox click space should be larger,
  in html checkbox there are like 3-5 pixel clickable margins.

Widget TabView
* a hover highlight is welcome on tab buttons.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35979</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:39 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>