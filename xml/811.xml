<bug>
          <bug_id>811</bug_id>
          
          <creation_ts>2008-03-27 06:42:00 +0100</creation_ts>
          <short_desc>Pretty printing of commented boolean messed up</short_desc>
          <delta_ts>2014-03-03 15:22:29 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2917</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2008-03-27 06:42:36 +0100</bug_when>
            <thetext>I found this in the source code in qx.ui.menu.Manager.js:

        // Close menu if the target is not the opener button...
        if (vMenu.getOpener() !==

        //  and
        vTarget &amp;&amp;
        (vTarget &amp;&amp;

        // or the event is a mouse up on a child button of the menu

        // the event is a mouse down on a non-child of the menu
        (!vMenu.isSubElement(vTarget) &amp;&amp; isMouseDown) ||

        // or the event is a key (esc) event
        (vMenu.isSubElement(vTarget, true) &amp;&amp; isMouseUp) || (!isMouseDown &amp;&amp; !isMouseUp)))
        {

Looks like a complicated boolean expression with comments has been ripped apart by the pretty printing. Makes it difficult to understand what is going on.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3248</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-10 09:43:54 +0200</bug_when>
            <thetext>to thomas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7909</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 12:28:03 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19154</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-06 11:24:35 +0200</bug_when>
            <thetext>Another example:

The class qx.fx.effect.core.Scroll has this expression at its end:

      return
      (
        ( (x &lt; 0) &amp;&amp; (left == 0) ) || // left limit
        ( (x &gt; 0) &amp;&amp; (left == (element.scrollWidth - element.clientWidth)) ) // 
right limit
      )
      &amp;&amp;
      (
        ( (y &lt; 0) &amp;&amp; (top == 0) ) || // upper limit
        ( (y &gt; 0) &amp;&amp; (top == (element.scrollHeight - element.clientHeight)) ) 
// lower limit
      );

which becomes under pretty-printing

      return (((x &lt; 0) &amp;&amp; (left == 0)) ||   // left limit
      ((x &gt; 0) &amp;&amp; (left == (element.scrollWidth - element.clientWidth)))  // 
right limit) &amp;&amp;
      (((y &lt; 0) &amp;&amp; (top == 0)) ||   // upper limit
      ((y &gt; 0) &amp;&amp; (top == (element.scrollHeight - element.clientHeight)))  // 
lower limit);

Mind how &#39;) &amp;&amp;&#39; and &#39;);&#39; get drawn into the comments, invalidating the whole 
expression.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24641</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-05-20 10:40:39 +0200</bug_when>
            <thetext>Similar case as with the other single-line comment bugs: the necessary line 
break after a single-line comment is cancled out by calling &quot;noline()&quot; in the 
processing of the following operator; omitting the noline() call fixes this. 
The example from qx.ui.menu.Manager is no longer available, due to re-writes of 
the class, but the fix works for the example from the comment.

Withe r27347.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37695</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:29 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>