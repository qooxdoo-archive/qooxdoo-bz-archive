<bug>
          <bug_id>7902</bug_id>
          
          <creation_ts>2013-11-26 14:26:00 +0100</creation_ts>
          <short_desc>RemoveAll() on model with cascaded properties ignores bounded converter function</short_desc>
          <delta_ts>2014-02-10 16:11:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>3.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34406</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-11-26 14:26:41 +0100</bug_when>
            <thetext>removeAll() on model with cascaded properties ignores bounded converter function.

e.g.
var model = qx.data.marshal.Json.createModel([{x: &quot;a&quot;}, {x: &quot;b&quot;}]);

var list = new qx.ui.form.List();
this.getRoot().add(list, {left: 0, right: 0});

var controller = new qx.data.controller.List(model, list, &quot;x&quot;);

controller.setDelegate({
  bindItem : function(c, item, id) {
    c.bindDefaultProperties(item, id);
    c.bindProperty(&quot;x&quot;, &quot;gap&quot;, {
      converter : function(data) {
        return 10;
      }
    }, item, id);
  }
});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34887</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-01-29 17:44:19 +0100</bug_when>
            <thetext>The call of the converter has been removed due to request of bug #7261, which in my opinion is still valid. So I tried to fix the general issue of breaking if a target property is not nullable. I decided to reset the property instead of setting it to null which fixed the exception in the sample code and kept the fix for #7261 active.

master: 54f65a41ecb5737615fc68d5f77fec72884240ac
3.5.1: d16e32fee99eae3cb9c9668f882e36cfffd831ca</thetext>
          </long_desc>
      
      

    </bug>