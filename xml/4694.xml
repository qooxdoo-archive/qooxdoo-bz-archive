<bug>
          <bug_id>4694</bug_id>
          
          <creation_ts>2011-02-22 13:18:00 +0100</creation_ts>
          <short_desc>Add Base64 decode function to qx.util.Base64</short_desc>
          <delta_ts>2014-03-03 15:25:59 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.util</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          <blocked>3269</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22877</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-02-22 13:18:39 +0100</bug_when>
            <thetext>Right now there is only an encode function in the qx.util.Base64 util class available. Please add a decode function to the class.

Please add the following link to the license area of the class, as the encode method seems to be taken from this link as well (looks pretty much the same to me = plagiarism?).

http://www.webtoolkit.info/javascript-base64.html

Here is the decode function I have added to my qooxdoo branch (taken from the link above and altered it to our need). Not tested so far (only in my application code):

  /**
     * Decode a base64 string (http://en.wikipedia.org/wiki/Base64).
     *
     * @param input {String} the input string to decode
     * @return {String} The decoded input string.
     */
    decode : function (input)
    {
      var keyStr = this.__keystr;
      var output = &quot;&quot;;
      var chr1, chr2, chr3;
      var enc1, enc2, enc3, enc4;
      var i = 0;

      input = input.replace(/[^A-Za-z0-9\+\/\=]/g, &quot;&quot;);

      while (i &lt; input.length) {

        enc1 = keyStr.indexOf(input.charAt(i++));
        enc2 = keyStr.indexOf(input.charAt(i++));
        enc3 = keyStr.indexOf(input.charAt(i++));
        enc4 = keyStr.indexOf(input.charAt(i++));

        chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);
        chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);
        chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;

        output = output + String.fromCharCode(chr1);
        if (enc3 != 64) {
          output = output + String.fromCharCode(chr2);
        }
        if (enc4 != 64) {
          output = output + String.fromCharCode(chr3);
        }

      }

      return output;
    }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22889</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2011-02-22 14:35:19 +0100</bug_when>
            <thetext>fixed with 25181.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22891</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-02-22 14:48:48 +0100</bug_when>
            <thetext>Just putting an URL in the file header is pretty sloppy, right?! Do a proper job in attributing foreign work, with author, home page, license etc., like e.g. it is done in qx.util.StringSplit (a class which you have edited as well, so you should actually know).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22892</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-02-22 14:55:24 +0100</bug_when>
            <thetext>(In reply to comment #3)
&gt; Please add the following link to the license area of the class, as the encode
&gt; method seems to be taken from this link as well (looks pretty much the same to
&gt; me = plagiarism?).
&gt; 
&gt; http://www.webtoolkit.info/javascript-base64.html

Thanks, Tino, for pointing that out.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22893</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2011-02-22 14:58:02 +0100</bug_when>
            <thetext>Done with 25182.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22938</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-24 13:36:43 +0100</bug_when>
            <thetext>Andreas and I have just seen that this is CC2 licensed which is not compatible to our license. Please remove the code and check for alternatives.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22939</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-24 13:39:47 +0100</bug_when>
            <thetext>Please also add more unit tests like testing the decode and encode separately and also test unicode characters.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22940</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2011-02-24 13:46:38 +0100</bug_when>
            <thetext>Which code should we remove? From Tino&#39;s comments it seems that the encode method is also from the same source. Should we remove the encode method also, or just the decode method?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22958</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-25 09:00:04 +0100</bug_when>
            <thetext>Both because they are not compatible license wise. But we should not remove them, instead replace them with something compatible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23958</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-04-11 14:49:40 +0200</bug_when>
            <thetext>fixed on trunk with rev. 26685</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24287</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-05-02 11:55:57 +0200</bug_when>
            <thetext>Reopened Bug:

The class still has the following header, with the incompatible &quot;Create Commons&quot; license and the link to the old code. Do we still use this code? When we do not use any code of the original anymore, please remove the header.

   This class contains code based on the following work:

   * Base64 encode / decode
       http://www.webtoolkit.info/javascript-base64.html

     Copyright:
       (c) 2011, http://www.webtoolkit.info/

     License:
       Creative-Commons Attribution 2.0 England and Wales:
       http://www.webtoolkit.info/licence</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24290</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-02 13:16:20 +0200</bug_when>
            <thetext>fixed on trunk with rev. 26981.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38942</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:59 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>