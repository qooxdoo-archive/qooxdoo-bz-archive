<bug>
          <bug_id>5924</bug_id>
          
          <creation_ts>2011-12-08 15:12:00 +0100</creation_ts>
          <short_desc>Adding: Calling from outside the overridden Superclass Method</short_desc>
          <delta_ts>2014-03-03 08:46:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>documentation.manual</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27897</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-12-08 15:12:35 +0100</bug_when>
            <thetext>http://manual.qooxdoo.org/1.6.x/pages/core/oo_feature_summary.html#static-classes

Calling from outside the overridden Superclass Method

qx.Class.define(&#39;A&#39;, {
  members: {
     f: function() {}
  }
});

qx.Class.define(&#39;B&#39;), {
  extend: A,
  members: {
     f: function() {},
     g: function() {
        &lt;code&gt;.f();
     }
  }
});


replace &lt;code&gt; to show this example cause this.base doe not work here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27901</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-12-09 08:47:05 +0100</bug_when>
            <thetext>Sorry but I don&#39;t get it. :( You want to call a overridden method within method which is not overriding it?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27918</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-12-09 12:14:09 +0100</bug_when>
            <thetext>I propose to document how to call the overridden superclass function from another function in the subclass. (Not from inside the function overriding in the subclass i.e. this.base) There are use cases for this such as creating a widget with two parts, one dependent on calling the superclass function and the other one on the subclass function.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27959</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-12-12 09:21:30 +0100</bug_when>
            <thetext>(In reply to comment #2)
&gt; I propose to document how to call the overridden superclass function from
&gt; another function in the subclass. (Not from inside the function overriding in
&gt; the subclass i.e. this.base) There are use cases for this such as creating a
&gt; widget with two parts, one dependent on calling the superclass function and the
&gt; other one on the subclass function.

And I have no idea if that is possible at all. And even if, I don&#39;t think it should be because I seriously doubt the class structure if thats necessary!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35534</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:26 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>