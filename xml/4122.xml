<bug>
          <bug_id>4122</bug_id>
          
          <creation_ts>2010-09-27 16:59:00 +0200</creation_ts>
          <short_desc>replace the word length as a local variable</short_desc>
          <delta_ts>2013-07-22 12:51:28 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20365</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-09-27 16:59:08 +0200</bug_when>
            <thetext>The following results is mainly coming from testing of latest FF. We have also performed the same tests for other browsers with varying results, but still showing a significant optimization.

First test to get a correction value for the time of the outer bound of the test between the time markers.

Second shows the results from the specific test of loops.

1. Correction value
var cycles = 100000000;

var startTime = new Date().valueOf();
startL.setValue(startTime.toString());

var array = new Array(cycles);

&lt;here comes loop&gt;

var endTime = new Date().valueOf();
endL.setValue(endTime.toString());

var correction = (endTime - startTime);
correctionL.setValue(correction.toString());

2. length inside loop

for(var x=0; x&lt;array.length; x++)

Correction: 0 ms
Result: 1294 ms

3. local var with length outside

var len2 = array2.length;

for(var x=0; x&lt;len2; x++)

Correction: 0 ms
Result: 1103 ms

4. local var with length inside

for(var x=0, len3=array3.length; x&lt;len3; x++)

Correction: 0 ms
Result: 1100 ms

5.
var len4 = array4.length;

do
{
} while(--len4);

(--len4 is faster than len4--  !!!!)

Correction: 0 ms
Result: 843 ms

---------------------------------

at best about 35% improvement in speed!!!!

We have used two different computers:
- Acer Aspire One netbook
- the fastest desktop PC we could find

IE, FF, Opera and Safari have been tested.

1000 repetitive test with the same setup have been performed.

Bigger difference than these figures for the Acer Aspire One.

----------------------------------

After these tests we propose the following code changes:
1. manual change of length in all loops

for(var x=0, len = array.length; x&lt;len; x+)

look at references below


2. remove all dot references in the second parameter of the loop and change it to a local var

for (var i = 0; i&lt;p.x.length; i++)

move it outside if you don&#39;t want a dynamic behaviour of the condition! ....

var len = p.x.length;

for (var i=0; i&lt;len; i++)


3. don&#39;t have any static expressions inside the loop parameter 2 or 3 if not necessary because of dynamic behaviour

for (parm1; parm2; parm3)

not even this.getColumnCount()  (this gives dot notation and this function is called every time it passes!!!!

4. let the generator change all loops

from for loops to reversed do-while loops

same references below

5. you use the word length as a local variable
The word is not reserved, instead classified as &quot;other javascript keywords&quot;, but it is wise not to use it as a local variable as it can be mixed with the counting function of arrays.

we propose to change it!


Stefan
-------------------------------------
references (556 not optimized for length and expression and about 950 not optimized for for -&gt; do-while loops)

framework/source/class/qx/data/marshal/Json.js:        for (var i = 0; i &lt; data.length; i++) {
framework/source/class/qx/data/marshal/Json.js:        for (var i = 0; i &lt; data.length; i++) {
framework/source/class/qx/data/controller/MSelection.js:      for (var i = 0; i &lt; targetSelection.length; i++) {
framework/source/class/qx/data/controller/MSelection.js:        for (var i = 0; i &lt; this.getSelection().length; i++) {
framework/source/class/qx/data/controller/MSelection.js:        for (var i = 0; i &lt; targetSelection.length; i++) {
framework/source/class/qx/data/controller/MSelection.js:        for (var i = this.getSelection().length - 1; i &gt;= 0; i--) {
framework/source/class/qx/data/controller/MSelection.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/data/controller/Object.js:      for (var i = 0; i &lt; this.__targets.length; i++) {
framework/source/class/qx/data/controller/Object.js:      for (var i = 0; i &lt; this.__targets.length; i++) {
framework/source/class/qx/data/controller/Object.js:      for (var i = 0; i &lt; currentListing.length; i++) {
framework/source/class/qx/data/controller/Form.js:        for (var i = 0; i &lt; names.length; i++) {
framework/source/class/qx/data/controller/List.js:          for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/data/controller/List.js:          for (var i = 0; i &lt; this.__lookupTable.length; i++) {
framework/source/class/qx/data/controller/List.js:        for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0; i &lt; this.__boundProperties.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var  i = 0; i &lt; this.__boundProperties.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0; i &lt; this.__boundPropertiesReverse.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/data/controller/List.js:        for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0, l = children.length; i &lt; l; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0, l = children.length; i &lt; l; i++) {
framework/source/class/qx/data/controller/List.js:        for (var j = oldTable.length; j &gt; this.__lookupTable.length; j--) {
framework/source/class/qx/data/controller/List.js:        for (var j = oldTable.length; j &lt; this.__lookupTable.length; j++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0; i &lt; listItems.length; i++) {
framework/source/class/qx/data/controller/List.js:      for (var i = 0; i &lt; model.getLength(); i++) {
framework/source/class/qx/data/controller/Tree.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/data/controller/Tree.js:          for (var j = i; j &lt; rootNode.getChildren().length; j++) {
framework/source/class/qx/data/controller/Tree.js:      for (var i = rootNode.getChildren().length -1; i &gt;= children.length; i--) {
framework/source/class/qx/data/controller/Tree.js:      for (var i = 0; i &lt; this.__boundProperties.length; i++) {
framework/source/class/qx/data/controller/Tree.js:        for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var i = 0; i &lt; propertyNames.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var j = context.index + 1; j &lt; context.propertyNames.length; j++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var j = context.index + 1; j &lt; context.propertyNames.length; j++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var i = 0; i &lt; propertyNames.length - 1; i++) {
framework/source/class/qx/data/SingleValueBinding.js:          for (var j = i + 1; j &lt; propertyNames.length - 1; j++) {
framework/source/class/qx/data/SingleValueBinding.js:          for (var j = i + 1; j &lt; propertyNames.length - 1; j++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var i = 0; i &lt; properties.length - 1; i++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var i = 0; i &lt; propertyNames.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:        for (var i = 0; i &lt; id.sources.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:        for (var i = 0; i &lt; id.targets.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:        for (var i = 0; i &lt; bindings.length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:      for (var i = 0; i &lt; this.__bindings[object.toHashCode()].length; i++) {
framework/source/class/qx/data/SingleValueBinding.js:        for (var i = 0; i &lt; this.__bindings[hash].length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; arguments.length; i++) {
framework/source/class/qx/data/Array.js:    for (var i=0; i&lt;this.__array.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; arguments.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 2; i &lt; arguments.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; returnArray.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; this.__array.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; array.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; this.length; i++)
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; this.length; i++) {
framework/source/class/qx/data/Array.js:      for (var i = 1; i &lt; this.length; i++)
framework/source/class/qx/data/Array.js:      for (var i = 1; i &lt; this.length; i++)
framework/source/class/qx/data/Array.js:      for (var i = 0; i &lt; this.__array.length; i++) {
framework/source/class/qx/data/Array.js:    for (var i = 0; i &lt; this.__array.length; i++) {
framework/source/class/qx/Class.js:      for (var i = 0; i &lt; ns.length; i++) {
framework/source/class/qx/Class.js:            for (var i=0; i&lt;interfaces.length; i++) {
framework/source/class/qx/ui/core/SingleSelectionManager.js:      for (var i = 0; i &lt; items.length; i++)
framework/source/class/qx/ui/core/SingleSelectionManager.js:      for (var i = 0; i &lt; items.length; i++)
framework/source/class/qx/ui/core/MExecutable.js:      for (var i = 0; i &lt; this._bindableProperties.length; i++) {
framework/source/class/qx/ui/core/Blocker.js:      for (var i = 0; i &lt; blockers.length; i++) {
framework/source/class/qx/ui/core/selection/ScrollArea.js:          for (; i&lt;length; i++)
framework/source/class/qx/ui/core/selection/Abstract.js:      for (var i = 0; i &lt; selectables.length; i++)
framework/source/class/qx/ui/core/selection/Widget.js:        for (var i=index+1; i&lt;children.length; i++)
framework/source/class/qx/ui/core/MMultiSelectionHandling.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/ui/control/DateChooser.js:        for (var i=0; i&lt;6*7; i++)
framework/source/class/qx/ui/control/ColorPopup.js:        for (var i=0; i&lt;this.__fieldNumber; i++)
framework/source/class/qx/ui/control/ColorPopup.js:      for (var i=0; i&lt;vFields.length; i++) {
framework/source/class/qx/ui/treevirtual/TreeVirtual.js:    for (var i=0; i&lt;headings.length; i++)
framework/source/class/qx/ui/treevirtual/TreeVirtual.js:    for (var i=0; i&lt;scrollers.length; i++)
framework/source/class/qx/ui/treevirtual/TreeVirtual.js:      for (var i=0;
framework/source/class/qx/ui/treevirtual/TreeVirtual.js:        for (var j=selectedRanges[i].minIndex;
framework/source/class/qx/ui/treevirtual/SimpleTreeDataCellRenderer.js:      for (var i=0; i&lt;node.level; i++)
framework/source/class/qx/ui/treevirtual/SelectionManager.js:            for (var i=0; i&lt;scrollers.length; i++)
framework/source/class/qx/ui/treevirtual/SelectionManager.js:          for (var i=0; i&lt;columnPositions[treeCol].visX; i++) {
framework/source/class/qx/ui/treevirtual/SimpleTreeDataModel.js:      for (var col=0; col&lt;this.getColumnCount(); col++)
framework/source/class/qx/ui/treevirtual/SimpleTreeDataModel.js:      for (var i=this._nodeArr[nodeId].children.length-1; i&gt;=0; i--)
framework/source/class/qx/ui/treevirtual/SimpleTreeDataModel.js:              for (var j=0; j&lt;child.columnData.length; j++)
framework/source/class/qx/ui/treevirtual/MFamily.js:      for (var i=0; i&lt;parentChildren.length; i++)
framework/source/class/qx/ui/treevirtual/MFamily.js:      for (var i=0; i&lt;parentChildren.length; i++)
framework/source/class/qx/ui/tree/SelectionManager.js:        for (var i = 0; i &lt; items.length; i++)
framework/source/class/qx/ui/tree/Tree.js:      for (var i = 0; i &lt; selection.length; i++) {
framework/source/class/qx/ui/layout/Grid.js:        for (var x=column; x&lt;column+props.colSpan; x++)
framework/source/class/qx/ui/layout/Grid.js:          for (var y=row; y&lt;row+props.rowSpan; y++)
framework/source/class/qx/ui/layout/Grid.js:      for (var y=0; y&lt;=maxRowIndex; y++) {
framework/source/class/qx/ui/layout/Grid.js:        for (var j=0; j&lt;widgetProps.rowSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:          for (var j=0; j&lt;widgetProps.rowSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:          for (var j=0; j&lt;widgetProps.rowSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:        for (var j=0; j&lt;widgetProps.colSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:          for (var j=0; j&lt;widgetProps.colSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:          for (var j=0; j&lt;widgetProps.colSpan; j++)
framework/source/class/qx/ui/layout/Grid.js:          for (var i=0; i&lt;widgetProps.colSpan; i++) {
framework/source/class/qx/ui/layout/Grid.js:          for (var i=0; i&lt;widgetProps.rowSpan; i++) {
framework/source/class/qx/ui/layout/Atom.js:          for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Atom.js:          for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/LineSizeIterator.js:      for (var i=this.__childIndex; i&lt;children.length; i++)
framework/source/class/qx/ui/layout/VBox.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/VBox.js:      for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/VBox.js:        for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/VBox.js:      for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/VBox.js:      for (var i=0, l=children.length; i&lt;l; i+=1)
framework/source/class/qx/ui/layout/HBox.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/HBox.js:      for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/HBox.js:        for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/HBox.js:      for (i=0; i&lt;length; i+=1)
framework/source/class/qx/ui/layout/Flow.js:      for (var i=0; i&lt;line.children.length; i++)
framework/source/class/qx/ui/layout/Dock.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/layout/Dock.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/toolbar/ToolBar.js:        for (var i = 0; i &lt; this.__removedItems.length; i++) {
framework/source/class/qx/ui/menu/Manager.js:      for (var i=start; i&lt;length &amp;&amp; i&gt;=0; i+=iter)
framework/source/class/qx/ui/menu/Manager.js:        for (var i = 1; i &lt;= length; i++)
framework/source/class/qx/ui/menu/Manager.js:        for (var i = 1; i &lt;= length; i++)
framework/source/class/qx/ui/menu/Menu.js:      for (var i = 0; i &lt; children.length; i++)
framework/source/class/qx/ui/menu/Menu.js:          for (var i=0; i&lt;children.length; i++) {
framework/source/class/qx/ui/menu/Layout.js:        for (var column=0; column&lt;sizes.length; column++)
framework/source/class/qx/ui/virtual/core/Axis.js:      for (var i=0; i&lt;indexes.length; i++)
framework/source/class/qx/ui/virtual/cell/Cell.js:      for (var i=0; i&lt;themableProperties.length; i++) {
framework/source/class/qx/ui/virtual/cell/Cell.js:      for (var i=0; i&lt;properties.length; i++)
framework/source/class/qx/ui/virtual/selection/Row.js:      for (var i=0, l=this._getItemCount(); i&lt;l; i++)
framework/source/class/qx/ui/virtual/form/ListController.js:      for (var i = 0; i &lt; targetSelection.length; i++) {
framework/source/class/qx/ui/virtual/form/List.js:      for (var i=0; i&lt;widgets.length; i++)
framework/source/class/qx/ui/virtual/layer/Column.js:      for (var x=0; x&lt;columnSizes.length; x++)
framework/source/class/qx/ui/virtual/layer/WidgetCellSpan.js:    for (var i=0; i&lt;children.length; i++) {
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:      for (var i=0; i&lt;children.length; i++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:      for (var y=0; y&lt;rowSizes.length; y++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:        for (var x=0; x&lt;columnSizes.length; x++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:      for (var i=0; i&lt;children.length; i++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:      for (var y=0; y&lt;rowSizes.length; y++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:        for (var x=0; x&lt;columnSizes.length; x++)
framework/source/class/qx/ui/virtual/layer/WidgetCell.js:    for (var i=0; i&lt;children.length; i++) {
framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js:        for (var i=0, l=cells.length; i&lt;l; i++)
framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js:        for (var i=0; i&lt;rowSizes.length; i++) {
framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/ui/virtual/layer/Row.js:      for (var y=0; y&lt;rowSizes.length; y++)
framework/source/class/qx/ui/virtual/layer/GridLines.js:      for (var y=0; y&lt;rowSizes.length-1; y++)
framework/source/class/qx/ui/virtual/layer/GridLines.js:      for (var x=0; x&lt;columnSizes.length-1; x++)
framework/source/class/qx/ui/virtual/layer/HtmlCell.js:      for (var y=0; y&lt;rowSizes.length; y++)
framework/source/class/qx/ui/splitpane/VLayout.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/splitpane/VLayout.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/splitpane/HLayout.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/splitpane/HLayout.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/ui/form/RadioButtonGroup.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/ui/form/RadioButtonGroup.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/ui/form/RadioButtonGroup.js:      for (var i = 0; i &lt; radioItems.length; i++) {
framework/source/class/qx/ui/form/MModelSelection.js:      for (var i = 0; i &lt; data.length; i++) {
framework/source/class/qx/ui/form/MModelSelection.js:      for (var i = 0; i &lt; modelSelection.length; i++) {
framework/source/class/qx/ui/form/MModelSelection.js:        for (var j = 0; j &lt; selectables.length; j++) {
framework/source/class/qx/ui/form/RadioGroup.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/form/RadioGroup.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/form/Form.js:      for (var i = 0; i &lt; this.__groups.length; i++) {
framework/source/class/qx/ui/form/Form.js:        for (var j = 0; j &lt; group.names.length; j++) {
framework/source/class/qx/ui/form/renderer/Double.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/ui/form/renderer/AbstractRenderer.js:    for (var i = 0; i &lt; groups.length; i++) {
framework/source/class/qx/ui/form/renderer/AbstractRenderer.js:    for (var i = 0; i &lt; buttons.length; i++) {
framework/source/class/qx/ui/form/renderer/AbstractRenderer.js:        for (var i = 0; i &lt; this._names.length; i++) {
framework/source/class/qx/ui/form/renderer/AbstractRenderer.js:    for (var i = 0; i &lt; this._visibilityBindingIds.length; i++) {
framework/source/class/qx/ui/form/renderer/SinglePlaceholder.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/ui/form/renderer/Single.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/ui/form/List.js:        for (var i=0; i&lt;items.length; i++) {
framework/source/class/qx/ui/form/validation/Manager.js:      for (var i = 0; i &lt; this.__formItems.length; i++) {
framework/source/class/qx/ui/form/validation/Manager.js:      for (var i = 0; i &lt; this.__formItems.length; i++) {
framework/source/class/qx/ui/form/validation/Manager.js:      for (var i = 0; i &lt; this.__formItems.length; i++) {
framework/source/class/qx/ui/form/Resetter.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/form/Resetter.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/form/Resetter.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/form/Resetter.js:      for (var i = 0; i &lt; this.__items.length; i++) {
framework/source/class/qx/ui/progressive/headfoot/TableHeading.js:    for (var i = 0; i &lt; columnData.length; i++)
framework/source/class/qx/ui/progressive/headfoot/TableHeading.js:      for (var i = 0; i &lt; columnData.length; i++)
framework/source/class/qx/ui/progressive/renderer/table/cell/Conditional.js:      for (i = 0; i &lt; this.__conditions.length; i++)
framework/source/class/qx/ui/progressive/renderer/table/Row.js:        for (var i = 0; i &lt; columnData.length; i++)
framework/source/class/qx/ui/progressive/renderer/table/Row.js:      for (var i = 0; i &lt; data.length; i++)
framework/source/class/qx/ui/progressive/renderer/table/Row.js:      for (var i = 0,
framework/source/class/qx/ui/progressive/renderer/table/Row.js:        for (var i = tr.__clazz[hash].cellstylesheet.length - 1; i &gt;= 0; i--)
framework/source/class/qx/ui/tabview/TabView.js:      for (var i = 0; i &lt; buttons.length; i++) {
framework/source/class/qx/ui/tabview/TabView.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/ui/tabview/TabView.js:      for (var i = 0; i &lt;buttons.length; i++) {
framework/source/class/qx/ui/table/columnmodel/Basic.js:      for (var hidden=0; hidden&lt;initiallyHiddenColumns.length; hidden++)
framework/source/class/qx/ui/table/columnmodel/Basic.js:        for (var overX=0; overX&lt;this.__overallColumnArr.length; overX++)
framework/source/class/qx/ui/table/columnmodel/Basic.js:        for (var visX=0; visX&lt;this.__visibleColumnArr.length; visX++)
framework/source/class/qx/ui/table/columnmodel/Basic.js:          for (var x=overX+1; x&lt;this.__overallColumnArr.length; x++)
framework/source/class/qx/ui/table/columnmodel/Basic.js:        for (var colIdx = 0; colIdx &lt; this.__overallColumnArr.length; colIdx++)
framework/source/class/qx/ui/table/columnmodel/Basic.js:        for (var colIdx = 0; colIdx &lt; this.__overallColumnArr.length; colIdx++){
framework/source/class/qx/ui/table/columnmodel/Basic.js:    for (var i=0; i&lt; this.__columnDataArr.length; i++)
framework/source/class/qx/ui/table/columnmodel/resizebehavior/Default.js:        for (i=0; i&lt;visibleColumns.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:        for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:        for (var i=scrollerArr.length; i&lt;metaColumnCounts.length; i++)
framework/source/class/qx/ui/table/Table.js:              for (var i = 0; i &lt; capture.length; i++)
framework/source/class/qx/ui/table/Table.js:              for (var i = 0; i &lt; bubble.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:        for (var i=scrollerArr.length-1; i&gt;=fromMetaColumn; i--)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:        for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:        for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++) {
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;metaColumnCounts.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:      for (var i=0; i&lt;scrollerArr.length; i++)
framework/source/class/qx/ui/table/Table.js:        for (var i = 0, arr = this._getPaneScrollerArr(); i &lt; arr.length; i++)
framework/source/class/qx/ui/table/Table.js:        for (var i = 0, arr = this._getPaneScrollerArr(); i &lt; arr.length; i++)
framework/source/class/qx/ui/table/Table.js:        for (var i = 0, arr = this._getPaneScrollerArr(); i &lt; arr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:        for (var j=this.__selectedRangeArr[i].minIndex; j&lt;=this.__selectedRangeArr[i].maxIndex; j++) {
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (;newRangeIndex&lt;this.__selectedRangeArr.length; newRangeIndex++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=1; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/selection/Model.js:      for (var i=0; i&lt;this.__selectedRangeArr.length; i++)
framework/source/class/qx/ui/table/model/Abstract.js:      for (var i=0; i&lt;columnIdArr.length; i++) {
framework/source/class/qx/ui/table/model/Abstract.js:      for (var i=0; i&lt;this.__columnIdArr.length; ++i) {
framework/source/class/qx/ui/table/model/Filtered.js:      for (var kludge = rowNum;
framework/source/class/qx/ui/table/model/Remote.js:          for (var relRow=0; relRow&lt;rowDataArr.length; relRow++)
framework/source/class/qx/ui/table/model/Remote.js:      for (var col=0; col&lt;this.getColumnCount(); col++) {
framework/source/class/qx/ui/table/model/Simple.js:        for (var col = 0; col &lt; this.getColumnCount(); col++) {
framework/source/class/qx/ui/table/model/Simple.js:      for (var col=0; col&lt;this.getColumnCount(); col++) {
framework/source/class/qx/ui/table/model/Simple.js:      for (var col=0; col&lt;this.getColumnCount(); col++) {
framework/source/class/qx/ui/list/core/MSelectionHandling.js:      for (var i = 0; i &lt; selection.getLength(); i++)
framework/source/class/qx/bom/element/Class.js:        for (var i=0; i&lt;classes.length; i++) {
framework/source/class/qx/bom/element/Class.js:        for (var i=0; i&lt;classes.length; i++) {
framework/source/class/qx/bom/htmlarea/HtmlArea.js:      for (i = 0; i &lt; a.length; i++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:         for (var i=0; i&lt;listTypes.length; i++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:           for (var j=0; j&lt;tmp.length; j++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:           for (i=0; i&lt;spans.length; i++) {
framework/source/class/qx/bom/Selector.js:      for ( var i = 1; i &lt; results.length; i++ ) {
framework/source/class/qx/bom/Selector.js:          for ( var i = 0; (item = curLoop[i]) != null; i++ ) {
framework/source/class/qx/bom/Selector.js:      for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
framework/source/class/qx/bom/client/Flash.js:        for (var i=0; i&lt;splitInput.length; i++)
framework/source/class/qx/bom/Font.js:      for (var i=0; i&lt;parts.length; i++)
framework/source/class/qx/bom/Font.js:      for (var i=0, l=value.length; i&lt;l; i++)
framework/source/class/qx/bom/Collection.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/bom/Input.js:        for (var i=one ? index : 0, max=one ? index+1 : options.length; i&lt;max; i++)
framework/source/class/qx/core/Assert.js:      for (var i=0; i&lt;expected.length; i++) {
framework/source/class/qx/core/Variant.js:      for (var i=0; i&lt;urlVariants.length; i++)
framework/source/class/qx/core/Setting.js:      for (var i=0; i&lt;urlSettings.length; i++)
framework/source/class/qx/core/Aspect.js:      for (var i=0; i&lt;reg.length; i++)
framework/source/class/qx/core/Aspect.js:        for (var i=0; i&lt;before.length; i++) {
framework/source/class/qx/core/Aspect.js:        for (var i=0; i&lt;after.length; i++) {
framework/source/class/qx/locale/Manager.js:        for ( var i = 0; i &lt; args.length; i++)
framework/source/class/qx/locale/Date.js:      for (var i=0; i&lt;days.length; i++)
framework/source/class/qx/locale/Date.js:      for (var i=0; i&lt;12; i++)
framework/source/class/qx/dev/unit/TestLoaderNative.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoaderNative.js:        for (var j=0; j&lt;methods.length; j++) {
framework/source/class/qx/dev/unit/TestLoaderNative.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoaderNative.js:          for (var j=0; j&lt;methods.length; j++)
framework/source/class/qx/dev/unit/TestLoaderNative.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestSuite.js:      for (var i=0; i&lt;this._tests.length; i++)
framework/source/class/qx/dev/unit/TestLoader.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoader.js:        for (var j=0; j&lt;methods.length; j++) {
framework/source/class/qx/dev/unit/TestLoader.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoader.js:          for (var j=0; j&lt;methods.length; j++)
framework/source/class/qx/dev/unit/TestLoader.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/AbstractTestSuite.js:      for (var i=0; i&lt;this._tests.length; i++) {
framework/source/class/qx/dev/unit/AbstractTestSuite.js:      for (var i=0; i&lt;this._tests.length; i++)
framework/source/class/qx/dev/unit/TestLoaderInline.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoaderInline.js:        for (var j=0; j&lt;methods.length; j++) {
framework/source/class/qx/dev/unit/TestLoaderInline.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/unit/TestLoaderInline.js:          for (var j=0; j&lt;methods.length; j++)
framework/source/class/qx/dev/unit/TestLoaderInline.js:      for (var i=0; i&lt;classes.length; i++)
framework/source/class/qx/dev/ObjectSummary.js:      for (var i=0; i&lt;vArrData.length; i++) {
framework/source/class/qx/dev/ObjectSummary.js:      for (var i=0; i&lt;vArrData.length; i++)
framework/source/class/qx/dev/Pollution.js:          for (var frameIndex=0; frameIndex&lt;window.length; frameIndex++) {
framework/source/class/qx/dev/Pollution.js:      for (var i=0; i&lt;ext.length; i++) {
framework/source/class/qx/dev/Pollution.js:      for (var i=0; i&lt;ext.length; i++) {
framework/source/class/qx/dev/Tokenizer.js:      for (var i = 0; i &lt; a.length; i++)
framework/source/class/qx/dev/Tokenizer.js:      for (var i=0; i&lt;tokens.length; i++) {
framework/source/class/qx/dev/StackTrace.js:          for (var i=0; i&lt;Math.min(callerTrace.length, errorTrace.length); i++)
framework/source/class/qx/dev/StackTrace.js:        for (var i=0; i&lt;lines.length; i++)
framework/source/class/qx/dev/Debug.js:        for (var i = 0; i &lt; model.length; i++) {
framework/source/class/qx/dev/Profile.js:      for (var i=0; i&lt;data.length; i++)
framework/source/class/qx/io/part/Part.js:    for (var i=0; i&lt;packages.length; i++)
framework/source/class/qx/io/part/Part.js:      for (var i=0; i&lt;this._packages.length; i++)
++) {
framework/source/class/qx/io/part/ClosurePart.js:      for (var i = 0; i &lt; this._packages.length; i++)
framework/source/class/qx/io/part/ClosurePart.js:      for (var i = 0; i &lt; this._packages.length; i++)
framework/source/class/qx/io/part/ClosurePart.js:      for (var i = 0; i &lt; this._packages.length; i++) {
framework/source/class/qx/io/remote/Exchange.js:              for (var i=0; i&lt;paramValue.length; i++)
framework/source/class/qx/io/remote/transport/Script.js:          for (var i=0; i&lt;value.length; i++) {
framework/source/class/qx/io/remote/transport/Iframe.js:          for (var i=0; i&lt;value.length; i++) {
framework/source/class/qx/io/remote/transport/Iframe.js:            for (var i=0; i&lt;value.length; i++)
framework/source/class/qx/io/remote/transport/XmlHttp.js:          for (var i=0; i&lt;value.length; i++) {
framework/source/class/qx/io/remote/transport/XmlHttp.js:            for (var i=0; i&lt;value.length; i++)
framework/source/class/qx/io/remote/transport/XmlHttp.js:        for (var i=0, l=vValues.length; i&lt;l; i++)
framework/source/class/qx/io/remote/Rpc.js:      for (var i=offset+1; i&lt;args.length; ++i)
framework/source/class/qx/event/message/Bus.js:        for (var i=0; i&lt;sub[message].length; i++)
framework/source/class/qx/event/message/Bus.js:      for (var i=0; i&lt;subscribers.length; i++)
framework/source/class/qx/event/type/Touch.js:        for (var i = 0; i &lt; nativeEvent.targetTouches.length; i++) {
framework/source/class/qx/event/type/Touch.js:        for (var i = 0; i &lt; nativeEvent.changedTouches.length; i++) {
framework/source/class/qx/event/type/Touch.js:        for (var i = 0; i &lt; nativeEvent.touches.length; i++) {
framework/source/class/qx/Bootstrap.js:      for (var i=0, keys=qx.Bootstrap.getKeys(statics), l=keys.length; i&lt;l; i++) {
framework/source/class/qx/Bootstrap.js:      for (var i=0, keys=qx.Bootstrap.getKeys(members), l=keys.length; i&lt;l; i++) {
framework/source/class/qx/Bootstrap.js:        for (var i=0, a=shadowedKeys, l=a.length; i&lt;l; i++)
framework/source/class/qx/log/Logger.js:    for (var i=0; i&lt;logs.length; i++) {
framework/source/class/qx/util/fsm/State.js:        for (var i=0; i&lt;functionRequest.length; i++)
framework/source/class/qx/util/fsm/State.js:          for (var j=0; j&lt;params.length; j++)
framework/source/class/qx/util/fsm/State.js:          for (var j=0; j&lt;a.length; j++)
framework/source/class/qx/util/fsm/State.js:            for (j=0; j&lt;g.length; j++)
framework/source/class/qx/util/fsm/State.js:                &quot;  for (var i = 0; i &lt; groupObjects.length; i++)&quot; +
framework/source/class/qx/util/fsm/FiniteStateMachine.js:      for (var i=0; i&lt;groupNames.length; i++)
framework/source/class/qx/util/fsm/FiniteStateMachine.js:        for (var i=0; i&lt;this.__blockedEvents.length; i++)
framework/source/class/qx/util/StringSplit.js:              for (var i = 1; i &lt; arguments.length - 2; i++)
framework/source/class/qx/util/format/NumberFormat.js:        for (groupPos=origIntegerStr.length; groupPos&gt;3; groupPos-=3) {
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;this.__formatTree.length; i++)
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;this.__parseFeed.usedRules.length; i++)
framework/source/class/qx/util/format/DateFormat.js:      for (var atomIdx=0; atomIdx&lt;this.__formatTree.length; atomIdx++)
framework/source/class/qx/util/format/DateFormat.js:          for (var ruleIdx=0; ruleIdx&lt;this.__parseRules.length; ruleIdx++)
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;shortMonthNames.length; i++) {
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;fullMonthNames.length; i++) {
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;narrowDayNames.length; i++) {
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;abbrDayNames.length; i++) {
framework/source/class/qx/util/format/DateFormat.js:      for (var i=0; i&lt;fullDayNames.length; i++) {
framework/source/class/qx/util/EditDistance.js:      for (posA=0; posA&lt;=dataA.length; posA++)
framework/source/class/qx/util/EditDistance.js:      for (posB=1; posB&lt;=dataB.length; posB++) {
framework/source/class/qx/util/EditDistance.js:      for (posA=1; posA&lt;=dataA.length; posA++)
framework/source/class/qx/util/EditDistance.js:        for (posB=1; posB&lt;=dataB.length; posB++)
framework/source/class/qx/util/Permutation.js:      for (var i=0; i&lt;keys.length; i++)
framework/source/class/qx/util/Permutation.js:        for (var i=0; i&lt;values.length; i++)
framework/source/class/qx/util/TimerManager.js:      for (var i = 0; i &lt; length; i++)
framework/source/class/qx/util/TimerManager.js:      for (var i = 0; i &lt; length; i++)
framework/source/class/qx/util/Serializer.js:          for (var i = 0; i &lt; value.length; i++) {
framework/source/class/qx/util/Serializer.js:        for (var i = 0; i &lt; object.getLength(); i++)
framework/source/class/qx/util/Serializer.js:        for (var i = 0; i &lt; object.length; i++)
framework/source/class/qx/util/Serializer.js:        for (var i = 0; i &lt; object.getLength(); i++) {
framework/source/class/qx/util/Serializer.js:        for (var i = 0; i &lt; object.length; i++) {
framework/source/class/qx/fx/effect/core/Parallel.js:      for (var i=0; i&lt;effects.length; i++) {
framework/source/class/qx/fx/effect/core/Parallel.js:      for (var i=0; i&lt;effects.length; i++) {
framework/source/class/qx/lang/Core.js:        for (var i=fromIndex; i&lt;this.length; i++)
framework/source/class/qx/lang/JsonImpl.js:          for (var i = 0; i &lt; length; i += 1) {
framework/source/class/qx/lang/JsonImpl.js:            for (var i = 0; i &lt; length; i += 1)
framework/source/class/qx/lang/String.js:      for (var i=0; i&lt;args.length; i++) {
framework/source/class/qx/lang/Array.js:      for (var i=0; i&lt;length; i++)
framework/source/class/qx/type/BaseArray.js:    for (var length = args.length; length;) {
framework/source/class/qx/type/BaseArray.js:    for (var i=0, length=arguments.length; i&lt;length; i++)
framework/source/class/qx/dom/Node.js:          for (i=0; i&lt;length; i++) {
framework/source/class/qx/html/Element.js:      for (var i=0; i&lt;this._actions.length; i++)
framework/source/class/qx/html/Element.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/html/Element.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/html/Element.js:        for (var i=0; i&lt;length; i++)
framework/source/class/qx/Part.js:    for (var i=0; i&lt;uris.length; i++)
framework/source/class/qx/Part.js:      for (var i = 0; i &lt; pkgIndexes.length; i++) {
framework/source/class/qx/Part.js:      for (var i = 0; i &lt; this.__packages.length; i++) {
framework/source/class/qx/Part.js:      for (var i = 0; i &lt; listeners.length; i++) {
framework/source/class/qx/Part.js:      for (var i=0; i&lt;partNames.length; i++) {
framework/source/class/qx/Part.js:          for (var i = 0; i &lt; parts.length; i++) {
framework/source/class/qx/Part.js:      for (var i=0; i&lt;parts.length; i++) {
framework/source/class/qx/Part.js:      for (var i=0; i&lt;partNames.length; i++) {
framework/source/class/qx/Part.js:            for (var i = 0; i &lt; partNames.length; i++) {
framework/source/class/qx/Part.js:      for (var i=0; i&lt;packages.length; i++) {
framework/source/class/qx/Part.js:        for (var i = 0; i &lt; listeners.length; i++) {
framework/source/class/qx/Part.js:      for (var i=0; i&lt;listeners.length; i++) {
framework/source/class/qx/xml/Element.js:        for (var i=0; i&lt;result.snapshotLength; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/ListWithObjects.js:      for (var i = 0; i &lt; this.__list.getChildren().length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/ListReverse.js:      for (var i = 0; i &lt; items.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; checkArray.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; checkArray.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length - 2; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length - 2; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; selList.getChildren().length; i++) {
framework/source/class/qx/test/data/controller/List.js:      for (var i = 0; i &lt; this.__data.length; i++) {
framework/source/class/qx/test/data/controller/Tree.js:      for (var i = 0; i &lt; nodes.length; ++i) {
framework/source/class/qx/test/data/controller/Tree.js:      for (var i = 0; i &lt; nodes.length; ++i) {
framework/source/class/qx/test/Xml.js:      for (var i=0; i&lt;arr.length; i++) {
framework/source/class/qx/test/ui/tree/Tree.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/test/ui/layout/LayoutItem.js:      for (var i=0; i&lt;children.length; i++)
framework/source/class/qx/test/ui/ChildrenHandling.js:      for (var i=0; i&lt;expected.length; i++) {
framework/source/class/qx/test/ui/ChildrenHandling.js:      for (var i=0; i&lt;children.length; i++) {
framework/source/class/qx/test/ui/ChildrenHandling.js:      for (var i=0; i&lt;4; i++)
framework/source/class/qx/test/ui/selection/TreeSingleSelection.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/Stack.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/RadioGroup.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/RadioGroup.js:      for (var i = 0; i &lt; this.__radioButtons.length; i++) {
framework/source/class/qx/test/ui/selection/AbstractMultiSelectonTest.js:      for (var i = 0; i &lt; this._notInSelection.length; i++) {
framework/source/class/qx/test/ui/selection/ListSingleSelection.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/SelectBox.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/TreeMultiSelection.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/AbstractSingleSelectonTest.js:      for (var i = 0; i &lt; items.length; i++)
framework/source/class/qx/test/ui/selection/TabView.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/selection/ListMultiSelection.js:      for (var i = 0; i &lt; length; i++) {
framework/source/class/qx/test/ui/Destroy.js:        for (var i=0; i&lt;args.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:        for (var i=0; i&lt;layoutArgsArr.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;layouts.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:        for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:        for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/Destroy.js:      for (var i=0; i&lt;forms.length; i++) {
framework/source/class/qx/test/ui/virtual/performance/AbstractLayerTest.js:      for (var i=0; i&lt;this.rowCount; i++) {
framework/source/class/qx/test/ui/virtual/performance/AbstractLayerTest.js:      for (var i=0; i&lt;this.colCount; i++) {
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlDivRelative.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/performance/layer/DomCell.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCssCell.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCellNaive.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/performance/layer/DomPoolCell.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/performance/layer/DomPoolCell.js:      for (var j=i; j&lt;childNodes.length; i++) {
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCell.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/PaneUpdate.js:      for (var i=0; i&lt;methodNames.length; i++) {
framework/source/class/qx/test/ui/virtual/layer/LayerSimple.js:      for (var x=0; x&lt;rowSizes.length; x++)
framework/source/class/qx/test/ui/virtual/layer/WidgetCell.js:      for (var i=0; i&lt;this._pool.length; i++) {
framework/source/class/qx/test/ui/virtual/layer/CellSpanManager.js:      for (var i=0, l=cells.length; i&lt;l; i++)
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.count; i++) {
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.count; i++) {
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var j=0; j&lt;this.ITEM_POS_ITER; j++)
framework/source/class/qx/test/ui/virtual/Axis.js:        for (var i=0; i&lt;this.ITEM_POS_COUNT; i++)
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var j=0; j&lt;this.TOTAL_SIZE_ITER; j++)
framework/source/class/qx/test/ui/virtual/Axis.js:        for (var i=0; i&lt;this.TOTAL_SIZE_ITEMS; i++)
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.SETUP_ITER; i++)
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.count; i++) {
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.SETUP_ITER; i++)
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.FIND_ITER; i++) {
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.count; i++) {
framework/source/class/qx/test/ui/virtual/Axis.js:      for (var i=0; i&lt;this.FIND_ITER; i++) {
framework/source/class/qx/test/ui/form/MenuButton.js:      for (var i = 0; i &lt; buttons.length; i++) {
framework/source/class/qx/test/ui/form/ModelSelection.js:      for (var i = 0; i &lt; children.length; i++) {
framework/source/class/qx/test/ui/form/FormManager.js:      for (var i = 0; i &lt; widgets.length; i++) {
framework/source/class/qx/test/ui/form/FormManager.js:      for (var i = 0; i &lt; widgets.length; i++) {
framework/source/class/qx/test/ui/LayoutTestCase.js:          for (var i=0; i&lt;listeners[hash][key].length; i++)
framework/source/class/qx/test/ui/LayoutTestCase.js:        for (var i=0; i&lt;args.length; i++) {
framework/source/class/qx/test/ui/Window.js:      for (var i = 0; i &lt; this._win.length; i++) {
framework/source/class/qx/test/ui/Window.js:       for (var i = 0; i &lt; this._win.length; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/table/Table.js:      for (var i = 0; i &lt; data.length - 1; i++) {
framework/source/class/qx/test/ui/list/core/MultiSelection.js:      for (var i = 0; i &lt; selectionFromManager.length; i++) {
framework/source/class/qx/test/ui/list/core/MultiSelection.js:      for (var i = 0; i &lt; selectionFromManager.length; i++) {
framework/source/class/qx/test/ui/list/core/MultiSelection.js:          for (var i = 0; i &lt; selectionFromManager.length; i++) {
framework/source/class/qx/test/ui/list/MAssert.js:      for (var i = 0; i &lt; model.getLength(); i++) {
framework/source/class/qx/test/core/Object.js:      for (var i = 0; i &lt; data.length; i++) {
framework/source/class/qx/test/io/remote/Request.js:      for (var i = 0; i &lt; this.__requests.length; i++)
framework/source/class/qx/test/io/remote/Request.js:      for (var i = 0; i &lt; this.__requests.length; i++)
framework/source/class/qx/test/util/NumberFormat.js:      for (var i=0; i&lt;badNumberStrings.length; i++)
framework/source/class/qx/test/util/placement/Placement.js:      for (var i=0; i&lt;modes.length; i++)
framework/source/class/qx/test/util/StringSplit.js:      for (var i = 0; i &lt; testCode.length; i++)
framework/source/class/qx/test/renderer/Color.js:      for (var i=0; i&lt;invalidColors.length; i++)
framework/source/class/qx/test/lang/JsonParseES5.js:      for (var i=0; i&lt;spaces.length; i++)
framework/source/class/qx/test/lang/JsonParseES5.js:      for (var i=0; i&lt;chars.length; i++)
framework/source/class/qx/test/Part.js:      for (var s=0; s&lt;refUrls.length; s++){
framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/ui/virtual/layer/.svn/text-base/HtmlCellSpan.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/ui/virtual/layer/.svn/text-base/HtmlCell.js.svn-base:        for(var x=0; x&lt;columnSizes.length; x++)
framework/source/class/qx/ui/virtual/layer/HtmlCell.js:        for(var x=0; x&lt;columnSizes.length; x++)
framework/source/class/qx/ui/list/core/MSelectionHandling.js:      for(var i = 0; i &lt; managerSelection.length; i++) {
framework/source/class/qx/ui/list/core/.svn/text-base/MSelectionHandling.js.svn-base:      for(var i = 0; i &lt; managerSelection.length; i++) {
framework/source/class/qx/bom/htmlarea/HtmlArea.js:        for(var i=0; i&lt;element.childNodes.length; i++)
framework/source/class/qx/bom/htmlarea/.svn/text-base/HtmlArea.js.svn-base:        for(var i=0; i&lt;element.childNodes.length; i++)
framework/source/class/qx/bom/htmlarea/manager/.svn/text-base/Command.js.svn-base:       for(var i=0; i&lt;parents.length; i++)
framework/source/class/qx/bom/htmlarea/manager/.svn/text-base/Command.js.svn-base:         for(var i=0; i&lt;lists.length; i++)
framework/source/class/qx/bom/htmlarea/manager/.svn/text-base/Command.js.svn-base:           for(j=0; j&lt;listElement.childNodes.length; j++)
framework/source/class/qx/bom/htmlarea/manager/.svn/text-base/Command.js.svn-base:         for(i=0; i&lt;parents.length; i++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:       for(var i=0; i&lt;parents.length; i++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:         for(var i=0; i&lt;lists.length; i++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:           for(j=0; j&lt;listElement.childNodes.length; j++)
framework/source/class/qx/bom/htmlarea/manager/Command.js:         for(i=0; i&lt;parents.length; i++)
framework/source/class/qx/fx/effect/core/.svn/text-base/Parallel.js.svn-base:      for(var i=0; i&lt;effects.length; i++)
framework/source/class/qx/fx/effect/core/Parallel.js:      for(var i=0; i&lt;effects.length; i++)
framework/source/class/qx/lang/.svn/text-base/Function.js.svn-base:     *   for(var i = 0; i &lt; arguments.length; i++) {
framework/source/class/qx/lang/Function.js:     *   for(var i = 0; i &lt; arguments.length; i++) {
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlDivRelative.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/DomCell.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCssCell.js:      for(var y=0; y&lt;columnSizes.length; y++) {
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCssCell.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCellNaive.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/DomPoolCell.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCell.js:      for(var y=0; y&lt;columnSizes.length; y++) {
framework/source/class/qx/test/ui/virtual/performance/layer/HtmlTableCell.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/DomCell.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlTableCssCell.js.svn-base:      for(var y=0; y&lt;columnSizes.length; y++) {
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlTableCssCell.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlDivRelative.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlTableCell.js.svn-base:      for(var y=0; y&lt;columnSizes.length; y++) {
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlTableCell.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/DomPoolCell.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/performance/layer/.svn/text-base/HtmlTableCellNaive.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/layer/LayerSimple.js:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/virtual/layer/.svn/text-base/LayerSimple.js.svn-base:        for(var y=0; y&lt;columnSizes.length; y++)
framework/source/class/qx/test/ui/embed/Flash.js:          for(var i = 0; i &lt; children.length; i++)
framework/source/class/qx/test/ui/embed/.svn/text-base/Flash.js.svn-base:          for(var i = 0; i &lt; children.length; i++)
framework/source/class/qx/test/lang/JsonParseES5.js:      for  (var i=0; i&lt;strings.length; i++)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20428</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-30 21:57:28 +0200</bug_when>
            <thetext>*** Bug 4118 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20430</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-30 21:58:17 +0200</bug_when>
            <thetext>*** Bug 4119 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20432</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-30 21:58:42 +0200</bug_when>
            <thetext>*** Bug 4120 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20434</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-30 21:59:12 +0200</bug_when>
            <thetext>*** Bug 4121 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20435</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-30 22:04:58 +0200</bug_when>
            <thetext>Stefan, do you really think entering the same bug 5 times does help the project? Changing only the headline is not filing a bug and leads only to work on our side. So please stop cross posting mails from the mailing list!
Anyway, did you read what I said about you mail? 
&quot;I wanted to tell you why this is not going to happen [...]&quot; what is so hard to get here in that sentence? I though it is quite clear that filing a bug is a waste of time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20439</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-01 10:47:13 +0200</bug_when>
            <thetext>We have done the proposed changes 1-5 half-MANUALLY by some not too complicated scripts to get the changes.

---------------------------------------------------------------------------
AND we see changes in speed better than before mentioned micro-optimizations. One should not  neglect these changes to take place. You have to remember that we are not driving a 1000 line application! Every single optimization is important when it affects the user&#39;s subjective experience!

If one wants the best code, these optimizations are obvious.

1, 2, 3 and 5 are easy to do. 4 the generator has to do though we did it manually to check out how much faster the application becomes!!!
---------------------------------------------------------------------------</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20443</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-02 09:00:41 +0200</bug_when>
            <thetext>Stefan, to be honest, I don&#39;t care if the idea behind your bugs are good or not. Just cross posting a huge text block from the mailing list containing a lot of information does not work. You can not just throw some pieces at us and expect us to run! Either you open up quality bug reports containing only the following information:
1. Whats the problem (important)
  - If its an enhancement, why should we include it
2. If you think you know how to fix it, supply a proposal (proposal, not an order)
3. If you already have some kind of patch, working code please supply that too
or i will close the bugs. We are not willing to dig into what you have thought and / or some mailing list threads to find out what you want us to do.
I still believe that you want qooxdoo to improve. But what you are currently doing is really the oposite because you are mostly keeping us from doing quality things on other tasks. You said you contribute by opening bugs, which is pretty good in general. But take the time to open up quality bug reports!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20465</commentid>
              <attachid>813</attachid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-04 14:41:45 +0200</bug_when>
            <thetext>Created attachment 813
Changed length keyword when used as a local variable to len to write clear code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20466</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-04 14:44:41 +0200</bug_when>
            <thetext>You have explicitly said before that you want a clear and easy understandable and less misunderstood code. Here you are for the keyword classified as &quot;other javascript keyword&quot;, length.

A patch has been attached.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20477</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-05 09:29:02 +0200</bug_when>
            <thetext>Finally, with that patch, I understand what you wanted to do. But why should it be much cleaner? You just replaced the locale variables length with len. And that should be more readable and cleaner code? I guess in most cases, the local variables length refer to some kind of length so why not name it like that?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20484</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-05 11:41:42 +0200</bug_when>
            <thetext>As I wrote before:

&quot;The word is not reserved, instead classified as &quot;other javascript keywords&quot;,
but it is wise not to use it as a local variable as it can be mixed with the
counting function of arrays.&quot;

You wanted readability and clear code, then you also understand that your rhetorics is more NIH and incomplete dysjunction than logics. length is already a used word by javascript. More I don&#39;t need to say.... Don&#39;t complicate things.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20497</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-06 08:09:03 +0200</bug_when>
            <thetext>&gt; &quot;The word is not reserved, instead classified as &quot;other javascript keywords&quot;,
&gt; but it is wise not to use it as a local variable as it can be mixed with the
&gt; counting function of arrays.&quot;
I&#39;m working on the code every day and I havent mixed it up.

&gt; You wanted readability and clear code, ...
Yes and I don&#39;t agree with you that we get cleaner code with that. Blindly replacing a speaking variable with an abbreviation of it, even if its a word used by arrays does not make the code better in my opinion.

&gt; Don&#39;t complicate things.
I don&#39;t plan to --&gt; wontfix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20503</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-06 10:24:34 +0200</bug_when>
            <thetext>&gt;&gt; &quot;The word is not reserved, instead classified as &quot;other javascript keywords&quot;,
&gt;&gt; but it is wise not to use it as a local variable as it can be mixed with the
&gt;&gt; counting function of arrays.&quot;

&gt;I&#39;m working on the code every day and I havent mixed it up.

If you want a good tech discussion then stay with relevant arguments and not personal ones like you do.

You have still not responded in an adequate regarding the fact that: &quot;The word length is already a taken name classified by javascript as &#39;other javascript keywords&#39;&quot;. This is a fact! To be logical and follow your path of thinking you should start using all javascript used words as variables. That will be even more mixed up!

&gt;&gt; You wanted readability and clear code, ...
&gt;Yes and I don&#39;t agree with you that we get cleaner code with that. Blindly
&gt;replacing a speaking variable with an abbreviation of it, even if its a word
&gt;used by arrays does not make the code better in my opinion.

This is an incomplete dysjunction! I think you didn&#39;t understand what I said before. Here is how you reason (an example):

Mouse eats cheese
Mouse is a two-syllable word
therefore all two-syllable words eat cheese


Read what you wrote again and then you will see that what you say is not logical in a technical perspective.

:-)

&gt;&gt; Don&#39;t complicate things.
&gt;I don&#39;t plan to --&gt; wontfix.

yes, you do!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20509</commentid>
              <attachid>816</attachid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-06 12:35:34 +0200</bug_when>
            <thetext>Created attachment 816
Declaring comparison variable in parameter 2 in parameter 1 where it is possible</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20971</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-29 09:56:44 +0200</bug_when>
            <thetext>Won&#39;t apply. Doesn&#39;t sufficiently improve readability/performance/compatibility of the framework, but could of course be followed in your custom code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20979</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-10-29 11:22:18 +0200</bug_when>
            <thetext>&quot;Doesn&#39;t sufficiently improve 
readability&quot; -&gt; true
&quot;performance&quot; -&gt; true
&quot;compatibility&quot; -&gt; true

BUT a change

1. lessens the risk of mistakes when reading, coding, interpreting
2. makes the code less language dependent (the same analogue of naming creates compilation errors in other programming languages)
3. makes code independent to conformation of future javascript syntax

Is this really ok? :

var if = 1;
var else = &quot;nice&quot;;

fortunately they create an error....

in other languages the keyword length creates an error but unfortunately not in Java yet.....</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21439</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-11-20 19:11:27 +0100</bug_when>
            <thetext>We have now completed the loop optimizations for the whole qooxdoo framework!

We were told by someone.....that we should not use our time on micro optimizations! As a matter of fact it these micro optimizations now give us in average a startup time much lower than ever before for a small application of about 1000 lines custom code!!!!

about 21% improvement!!!!!!

During the test we have used a simple Acer Aspire One D250.

We have attached the patch.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21440</commentid>
              <attachid>843</attachid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-11-20 19:14:30 +0100</bug_when>
            <thetext>Created attachment 843
Loop optimizations

So called micro optimizations, someone stated that.....</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21441</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-11-22 08:03:43 +0100</bug_when>
            <thetext>Stefan, if you have a 1000 line custom application to reproducibly benchmark this, please attach it, as well as the info how you ran your tests (including test setup like OS, browsers).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21442</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-22 08:28:44 +0100</bug_when>
            <thetext>So your saying that your saving 21% startup time by only replacing the word &quot;length&quot; by &quot;len&quot; and do some loop optimization? As Andreas said, we need some more data on that before we can decide to take a deeper look at this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21460</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-11-22 13:52:11 +0100</bug_when>
            <thetext>Andreas: You will get it when we can set off time for it.

Martin: Then use your time instead for better things if you don&#39;t think it is useful what we contribute.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21478</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-23 08:40:25 +0100</bug_when>
            <thetext>Read my post on the mailing list:
http://qooxdoo.678.n2.nabble.com/So-called-micro-optimizations-someone-said-so-tp5758649p5761920.html</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>813</attachid>
            <date>2010-10-04 14:41:00 +0200</date>
            <delta_ts>2010-10-04 14:41:45 +0200</delta_ts>
            <desc>Changed length keyword when used as a local variable to len to write clear code.</desc>
            <filename>diff_rev_x.txt</filename>
            <type>text/plain</type>
            <size>29978</size>
            <attacher>dev</attacher>
            
              <data encoding="base64">SW5kZXg6IHRlc3QvdHlwZS9CYXNlQXJyYXkuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC90eXBlL0Jh
c2VBcnJheS5qcwkocmV2aXNpb24gMjM0MjcpCisrKyB0ZXN0L3R5cGUvQmFzZUFycmF5LmpzCSh3
b3JraW5nIGNvcHkpCkBAIC03OCwxMiArNzgsMTIgQEAKICAgICB0ZXN0QXJyYXlQdXNoIDogZnVu
Y3Rpb24oKQogICAgIHsKICAgICAgIHZhciBsaXN0ID0gbmV3IHF4LnRlc3QudHlwZS5UZXN0QXJy
YXkoMSwgMik7Ci0gICAgICB2YXIgbGVuZ3RoID0gbGlzdC5wdXNoKDMpOwotICAgICAgdGhpcy5h
c3NlcnRFcXVhbHMoMywgbGVuZ3RoKTsKKyAgICAgIHZhciBsZW4gPSBsaXN0LnB1c2goMyk7Cisg
ICAgICB0aGlzLmFzc2VydEVxdWFscygzLCBsZW4pOwogICAgICAgdGhpcy5hc3NlcnRBcnJheUVx
dWFscyhbMSwgMiwgM10sIGxpc3QpOwogCi0gICAgICB2YXIgbGVuZ3RoID0gbGlzdC5wdXNoKDQs
IDUpOwotICAgICAgdGhpcy5hc3NlcnRFcXVhbHMoNSwgbGVuZ3RoKTsKKyAgICAgIGxlbiA9IGxp
c3QucHVzaCg0LCA1KTsKKyAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKDUsIGxlbik7CiAgICAgICB0
aGlzLmFzc2VydEFycmF5RXF1YWxzKFsxLCAyLCAzLCA0LCA1XSwgbGlzdCk7CiAgICAgfSwKIApA
QCAtMTA3LDcgKzEwNyw3IEBACiAgICAgdGVzdEFycmF5VW5zaGlmdCA6IGZ1bmN0aW9uKCkKICAg
ICB7CiAgICAgICB2YXIgbGlzdCA9IG5ldyBxeC50ZXN0LnR5cGUuVGVzdEFycmF5KDIsIDMsIDQs
IDUpOwotICAgICAgdmFyIGxlbmd0aCA9IGxpc3QudW5zaGlmdCgxKTsKKyAgICAgIHZhciBsZW4g
PSBsaXN0LnVuc2hpZnQoMSk7CiAgICAgICB0aGlzLmFzc2VydEFycmF5RXF1YWxzKFsxLCAyLCAz
LCA0LCA1XSwgbGlzdCk7CiAgICAgfSwKIApJbmRleDogdGVzdC91aS9zZWxlY3Rpb24vU3RhY2su
anMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24vU3RhY2suanMJKHJldmlzaW9uIDIz
NDI3KQorKysgdGVzdC91aS9zZWxlY3Rpb24vU3RhY2suanMJKHdvcmtpbmcgY29weSkKQEAgLTI3
LDcgKzI3LDcgQEAKIAogICAgIHNldFVwIDogZnVuY3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBs
ZW5ndGggPSAxMDsKKyAgICAgIHZhciBsZW4gPSAxMDsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0
aW9uID0gW107CiAgICAgICB0aGlzLl9tb2RlID0gIiI7CiAKQEAgLTQ3LDcgKzQ3LDcgQEAKICAg
ICAgIHRoaXMuX3dpZGdldCA9IG5ldyBxeC51aS5jb250YWluZXIuU3RhY2soKTsKICAgICAgIHRo
aXMuZ2V0Um9vdCgpLmFkZCh0aGlzLl93aWRnZXQpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7
CiAgICAgICAgIHZhciBpdGVtID0gdGhpcy5fX2NyZWF0ZUl0ZW0oIlBhZ2UiICsgaSwgY29sb3Jz
W2ldKTsKICAgICAgICAgdGhpcy5fd2lkZ2V0LmFkZChpdGVtKTsKIApAQCAtOTksNCArOTksNCBA
QAogICAgICAgcmV0dXJuIGl0ZW07CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVu
ZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1RyZWVTaW5nbGVTZWxlY3Rp
b24uanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24vVHJlZVNpbmdsZVNlbGVjdGlv
bi5qcwkocmV2aXNpb24gMjM0MjcpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9UcmVlU2luZ2xlU2Vs
ZWN0aW9uLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNSw3ICsyNSw3IEBACiAgIHsKICAgICBzZXRV
cCA6IGZ1bmN0aW9uKCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CisgICAgICB2YXIg
bGVuID0gMTA7CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IFtdOwogICAgICAgdGhpcy5f
bW9kZSA9ICJzaW5nbGUiOwogCkBAIC00MSw3ICs0MSw3IEBACiAgICAgICByb290LnNldE9wZW4o
dHJ1ZSk7CiAgICAgICB0aGlzLl93aWRnZXQuc2V0Um9vdChyb290KTsKIAotICAgICAgZm9yICh2
YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBs
ZW47IGkrKykgewogICAgICAgICB2YXIgZm9sZGVyID0gbmV3IHF4LnVpLnRyZWUuVHJlZUZvbGRl
cigiRm9sZGVyIiArIGkpOwogICAgICAgICBmb2xkZXIuc2V0T3Blbih0cnVlKTsKICAgICAgICAg
dmFyIGZpbGUgPSBuZXcgcXgudWkudHJlZS5UcmVlRmlsZSgiRmlsZSIgKyBpKTsKQEAgLTEyMiw0
ICsxMjIsNCBAQAogICAgICAgdHJlZS5kZXN0cm95KCk7CiAgICAgfQogICB9Ci19KTsKXCBObyBu
ZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1NlbGVj
dEJveC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9TZWxlY3RCb3guanMJKHJl
dmlzaW9uIDIzNDI3KQorKysgdGVzdC91aS9zZWxlY3Rpb24vU2VsZWN0Qm94LmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0yNSwxNCArMjUsMTQgQEAKICAgewogICAgIHNldFVwIDogZnVuY3Rpb24oKQog
ICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSAxMDsKKyAgICAgIHZhciBsZW4gPSAxMDsKICAgICAg
IHRoaXMuX25vdEluU2VsZWN0aW9uID0gW107CiAgICAgICB0aGlzLl9tb2RlID0gIm9uZSI7CiAK
ICAgICAgIHRoaXMuX3dpZGdldCA9IG5ldyBxeC51aS5mb3JtLlNlbGVjdEJveCgpOwogICAgICAg
dGhpcy5nZXRSb290KCkuYWRkKHRoaXMuX3dpZGdldCk7CiAKLSAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgbGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKysp
IHsKICAgICAgICAgdmFyIGl0ZW0gPSBuZXcgcXgudWkuZm9ybS5MaXN0SXRlbSgiTGlzdEl0ZW0i
ICsgaSk7CiAgICAgICAgIHRoaXMuX3dpZGdldC5hZGQoaXRlbSk7CiAKQEAgLTc3LDQgKzc3LDQg
QEAKICAgICAgIHJldHVybiBuZXcgcXgudWkuZm9ybS5MaXN0SXRlbShuYW1lKTsKICAgICB9CiAg
IH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogdGVzdC91aS9z
ZWxlY3Rpb24vUmFkaW9Hcm91cC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9S
YWRpb0dyb3VwLmpzCShyZXZpc2lvbiAyMzQyNykKKysrIHRlc3QvdWkvc2VsZWN0aW9uL1JhZGlv
R3JvdXAuanMJKHdvcmtpbmcgY29weSkKQEAgLTI3LDcgKzI3LDcgQEAKIAogICAgIHNldFVwIDog
ZnVuY3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSAxMDsKKyAgICAgIHZhciBsZW4g
PSAxMDsKICAgICAgIHRoaXMuX21vZGUgPSAib25lIjsKICAgICAgIHRoaXMuX19yYWRpb0J1dHRv
bnMgPSBbXTsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0aW9uID0gW107CkBAIC0zNSw3ICszNSw3
IEBACiAgICAgICB0aGlzLl93aWRnZXQgPSBuZXcgcXgudWkuZm9ybS5SYWRpb0dyb3VwKCk7CiAg
ICAgICB2YXIgcm9vdCA9IHRoaXMuZ2V0Um9vdCgpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7
CiAgICAgICAgIHZhciBpdGVtID0gbmV3IHF4LnVpLmZvcm0uUmFkaW9CdXR0b24oIlJhZGlvQnV0
dG9uIiArIGkpOwogICAgICAgICByb290LmFkZChpdGVtLCB7dG9wOiAyMCppfSk7CiAgICAgICAg
IHRoaXMuX3dpZGdldC5hZGQoaXRlbSk7CkBAIC0xMzYsNCArMTM2LDQgQEAKICAgICAgIHJhZGlv
QnV0dG9uMS5kaXNwb3NlKCk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBv
ZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL0xpc3RNdWx0aVNlbGVjdGlvbi5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9MaXN0TXVsdGlTZWxlY3Rpb24uanMJ
KHJldmlzaW9uIDIzNDI3KQorKysgdGVzdC91aS9zZWxlY3Rpb24vTGlzdE11bHRpU2VsZWN0aW9u
LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNSw3ICsyNSw3IEBACiAgIHsKICAgICBzZXRVcCA6IGZ1
bmN0aW9uKCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CisgICAgICB2YXIgbGVuID0g
MTA7CiAgICAgICB0aGlzLl9zZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0
aW9uID0gW107CiAgICAgICB0aGlzLl9tb2RlID0gIm11bHRpIjsKQEAgLTQyLDcgKzQyLDcgQEAK
ICAgICAgIHRoaXMuYXNzZXJ0SWRlbnRpY2FsKHNlbGVjdGlvbi5sZW5ndGgsIDAsCiAgICAgICAg
ICJDb3VsZG4ndCBzZXR1cCB0ZXN0LCBiZWNhdXNlIHNlbGVjdGlvbiBpc24ndCBlbXB0eSIpOwog
Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVtID0gbmV3IHF4LnVpLmZv
cm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkpOwogICAgICAgICB0aGlzLl93aWRnZXQuYWRkKGl0
ZW0pOwogCkBAIC04MCw0ICs4MCw0IEBACiAgICAgICByZXR1cm4gbmV3IHF4LnVpLmZvcm0uTGlz
dEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
Cit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1RyZWVNdWx0aVNlbGVjdGlvbi5qcwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9UcmVlTXVsdGlTZWxlY3Rpb24uanMJKHJldmlz
aW9uIDIzNDI3KQorKysgdGVzdC91aS9zZWxlY3Rpb24vVHJlZU11bHRpU2VsZWN0aW9uLmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0yNSw3ICsyNSw3IEBACiAgIHsKICAgICBzZXRVcCA6IGZ1bmN0aW9u
KCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CisgICAgICB2YXIgbGVuID0gMTA7CiAg
ICAgICB0aGlzLl9zZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0aW9uID0g
W107CiAgICAgICB0aGlzLl9tb2RlID0gIm11bHRpIgpAQCAtNDMsNyArNDMsNyBAQAogICAgICAg
dGhpcy5fd2lkZ2V0LnNldFJvb3Qocm9vdCk7CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbi5w
dXNoKHJvb3QpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7Cisg
ICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgIHZhciBmb2xkZXIg
PSBuZXcgcXgudWkudHJlZS5UcmVlRm9sZGVyKCJGb2xkZXIiICsgaSk7CiAgICAgICAgIGZvbGRl
ci5zZXRPcGVuKHRydWUpOwogICAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbi5wdXNoKGZvbGRl
cik7CkBAIC04NSw0ICs4NSw0IEBACiAgICAgICByZXR1cm4gbmV3IHF4LnVpLnRyZWUuVHJlZUZp
bGUobmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9
KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1RhYlZpZXcuanMKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVz
dC91aS9zZWxlY3Rpb24vVGFiVmlldy5qcwkocmV2aXNpb24gMjM0MjcpCisrKyB0ZXN0L3VpL3Nl
bGVjdGlvbi9UYWJWaWV3LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNywxNCArMjcsMTQgQEAKIAog
ICAgIHNldFVwIDogZnVuY3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSAxMDsKKyAg
ICAgIHZhciBsZW4gPSAxMDsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0aW9uID0gW107CiAgICAg
ICB0aGlzLl9tb2RlID0gIm9uZSI7CiAKICAgICAgIHRoaXMuX3dpZGdldCA9IG5ldyBxeC51aS50
YWJ2aWV3LlRhYlZpZXcoKTsKICAgICAgIHRoaXMuZ2V0Um9vdCgpLmFkZCh0aGlzLl93aWRnZXQp
OwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVtID0gbmV3IHF4LnVp
LnRhYnZpZXcuUGFnZSgiUGFnZSIgKyBpKTsKICAgICAgICAgdGhpcy5fd2lkZ2V0LmFkZChpdGVt
KTsKIApAQCAtNzIsNCArNzIsNCBAQAogICAgICAgcmV0dXJuIG5ldyBxeC51aS50YWJ2aWV3LlBh
Z2UobmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9
KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL0xpc3RTaW5nbGVTZWxlY3Rpb24uanMKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24vTGlzdFNpbmdsZVNlbGVjdGlvbi5qcwkocmV2aXNp
b24gMjM0MjcpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9MaXN0U2luZ2xlU2VsZWN0aW9uLmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0yNSw3ICsyNSw3IEBACiAgIHsKICAgICBzZXRVcCA6IGZ1bmN0aW9u
KCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CisgICAgICB2YXIgbGVuID0gMTA7CiAg
ICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IFtdOwogICAgICAgdGhpcy5fbW9kZSA9ICJzaW5n
bGUiOwogCkBAIC0zNyw3ICszNyw3IEBACiAgICAgICB9KTsKICAgICAgIHRoaXMuZ2V0Um9vdCgp
LmFkZCh0aGlzLl93aWRnZXQpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsg
aSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgIHZh
ciBpdGVtID0gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkpOwogICAgICAg
ICB0aGlzLl93aWRnZXQuYWRkKGl0ZW0pOwogCkBAIC03OCw0ICs3OCw0IEBACiAgICAgICByZXR1
cm4gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBu
ZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHR5cGUvQmFzZUFycmF5LmpzCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLS0tIHR5cGUvQmFzZUFycmF5LmpzCShyZXZpc2lvbiAyMzQyNykKKysrIHR5cGUvQmFz
ZUFycmF5LmpzCSh3b3JraW5nIGNvcHkpCkBAIC00NDcsOCArNDQ3LDggQEAKIAogICAgIHZhciBh
cmdzID0gInBvcC5wdXNoLnJldmVyc2Uuc2hpZnQuc29ydC5zcGxpY2UudW5zaGlmdC5qb2luLnNs
aWNlIi5zcGxpdCgiLiIpOwogCi0gICAgZm9yICh2YXIgbGVuZ3RoID0gYXJncy5sZW5ndGg7IGxl
bmd0aDspIHsKLSAgICAgIFN0YWNrLnByb3RvdHlwZVthcmdzWy0tbGVuZ3RoXV0gPSBBcnJheS5w
cm90b3R5cGVbYXJnc1tsZW5ndGhdXTsKKyAgICBmb3IgKHZhciBsZW4gPSBhcmdzLmxlbmd0aDsg
bGVuOykgeworICAgICAgU3RhY2sucHJvdG90eXBlW2FyZ3NbLS1sZW5dXSA9IEFycmF5LnByb3Rv
dHlwZVthcmdzW2xlbl1dOwogICAgIH0KICAgfTsKIApAQCAtNDYwLDcgKzQ2MCw3IEBACiAgIHsK
ICAgICB2YXIgY29uc3RydWN0b3IgPSB0aGlzLnNsaWNlKDApOwogCi0gICAgZm9yICh2YXIgaT0w
LCBsZW5ndGg9YXJndW1lbnRzLmxlbmd0aDsgaTxsZW5ndGg7IGkrKykKKyAgICBmb3IgKHZhciBp
PTAsIGxlbj1hcmd1bWVudHMubGVuZ3RoOyBpPGxlbjsgaSsrKQogICAgIHsKICAgICAgIHZhciBj
b3B5OwogCkBAIC01NDgsMTAgKzU0OCwxMCBAQAogfQogCiAKLWZ1bmN0aW9uIFN0YWNrKGxlbmd0
aCkKK2Z1bmN0aW9uIFN0YWNrKGxlbikKIHsKICAgaWYoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSAm
JiB0eXBlb2YgbGVuZ3RoID09PSAibnVtYmVyIikgewotICAgIHRoaXMubGVuZ3RoID0gLTEgPCBs
ZW5ndGggJiYgbGVuZ3RoID09PSBsZW5ndGggPj4gLjUgPyBsZW5ndGggOiB0aGlzLnB1c2gobGVu
Z3RoKTsKKyAgICB0aGlzLmxlbmd0aCA9IC0xIDwgbGVuICYmIGxlbiA9PT0gbGVuID4+IC41ID8g
bGVuIDogdGhpcy5wdXNoKGxlbik7CiAgIH0gZWxzZSBpZihhcmd1bWVudHMubGVuZ3RoKSB7CiAg
ICAgdGhpcy5wdXNoLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgIH0KSW5kZXg6IGxhbmcvT2Jq
ZWN0LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIGxhbmcvT2JqZWN0LmpzCShyZXZpc2lvbiAyMzQyNykKKysr
IGxhbmcvT2JqZWN0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMDYsMTEgKzEwNiwxMSBAQAogICAg
ICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICB9CiAKLSAgICAgICAgdmFyIGxlbmd0aCA9IDA7
CisgICAgICAgIHZhciBsZW4gPSAwOwogCiAgICAgICAgIGZvciAodmFyIGtleSBpbiBtYXApCiAg
ICAgICAgIHsKLSAgICAgICAgICBpZiAoKCsrbGVuZ3RoKSA+PSBtaW5MZW5ndGgpIHsKKyAgICAg
ICAgICBpZiAoKCsrbGVuKSA+PSBtaW5MZW5ndGgpIHsKICAgICAgICAgICAgIHJldHVybiB0cnVl
OwogICAgICAgICAgIH0KICAgICAgICAgfQpJbmRleDogbGFuZy9Kc29uSW1wbC5qcwo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09Ci0tLSBsYW5nL0pzb25JbXBsLmpzCShyZXZpc2lvbiAyMzQyNykKKysrIGxhbmcvSnNvbklt
cGwuanMJKHdvcmtpbmcgY29weSkKQEAgLTE3NCw4ICsxNzQsOCBAQAogCiAgICAgICAgICAgLy8g
VGhlIHZhbHVlIGlzIGFuIGFycmF5LiBTdHJpbmdpZnkgZXZlcnkgZWxlbWVudC4gVXNlIG51bGwg
YXMgYSBwbGFjZWhvbGRlcgogICAgICAgICAgIC8vIGZvciBub24tSlNPTiB2YWx1ZXMuCi0gICAg
ICAgICAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDsKLSAgICAgICAgICBmb3IgKHZhciBpID0g
MDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7CisgICAgICAgICAgdmFyIGxlbiA9IHZhbHVlLmxlbmd0
aDsKKyAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7CiAgICAgICAg
ICAgICBwYXJ0aWFsW2ldID0gdGhpcy5fX3N0cihpLCB2YWx1ZSkgfHwgJ251bGwnOwogICAgICAg
ICAgIH0KIApAQCAtMTgzLDcgKzE4Myw3IEBACiAKICAgICAgICAgICAvLyBKb2luIGFsbCBvZiB0
aGUgZWxlbWVudHMgdG9nZXRoZXIsIHNlcGFyYXRlZCB3aXRoIGNvbW1hcywgYW5kIHdyYXAgdGhl
bSBpbgogICAgICAgICAgIC8vIGJyYWNrZXRzLgotICAgICAgICAgIGlmIChwYXJ0aWFsLmxlbmd0
aCA9PT0gMCkgeworICAgICAgICAgIGlmIChwYXJ0aWFsLmxlbiA9PT0gMCkgewogICAgICAgICAg
ICAgdmFyIHN0cmluZyA9ICdbXSc7CiAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLl9fZ2FwKSB7
CiAgICAgICAgICAgICBzdHJpbmcgPSAnW1xuJyArIHRoaXMuX19nYXAgKyBwYXJ0aWFsLmpvaW4o
JyxcbicgKyB0aGlzLl9fZ2FwKSArICdcbicgKyBtaW5kICsgJ10nCkBAIC0yMDYsOCArMjA2LDgg
QEAKICAgICAgICAgICAvLyBJZiB0aGUgcmVwbGFjZXIgaXMgYW4gYXJyYXksIHVzZSBpdCB0byBz
ZWxlY3QgdGhlIG1lbWJlcnMgdG8gYmUgc3RyaW5naWZpZWQuCiAgICAgICAgICAgaWYgKHRoaXMu
X19yZXAgJiYgdHlwZW9mIHRoaXMuX19yZXAgPT09ICdvYmplY3QnKQogICAgICAgICAgIHsKLSAg
ICAgICAgICAgIHZhciBsZW5ndGggPSB0aGlzLl9fcmVwLmxlbmd0aDsKLSAgICAgICAgICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpCisgICAgICAgICAgICB2YXIgbGVuID0g
dGhpcy5fX3JlcC5sZW5ndGg7CisgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsg
aSArPSAxKQogICAgICAgICAgICAgewogICAgICAgICAgICAgICB2YXIgayA9IHRoaXMuX19yZXBb
aV07CiAgICAgICAgICAgICAgIGlmICh0eXBlb2YgayA9PT0gJ3N0cmluZycpCkBAIC00MDksNCAr
NDA5LDQgQEAKICAgICAgIHJldHVybiByZXZpdmVyLmNhbGwoaG9sZGVyLCBrZXksIHZhbHVlKTsK
ICAgICB9CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDog
bGFuZy9BcnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsYW5nL0FycmF5LmpzCShyZXZpc2lvbiAyMzQy
NykKKysrIGxhbmcvQXJyYXkuanMJKHdvcmtpbmcgY29weSkKQEAgLTM3NCwxMyArMzc0LDEzIEBA
CiAgICAgICovCiAgICAgZXF1YWxzIDogZnVuY3Rpb24oYXJyMSwgYXJyMikKICAgICB7Ci0gICAg
ICB2YXIgbGVuZ3RoID0gYXJyMS5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gYXJyMS5sZW5ndGg7
CiAKLSAgICAgIGlmIChsZW5ndGggIT09IGFycjIubGVuZ3RoKSB7CisgICAgICBpZiAobGVuICE9
PSBhcnIyLmxlbmd0aCkgewogICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICB9CiAKLSAgICAg
IGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47
IGkrKykKICAgICAgIHsKICAgICAgICAgaWYgKGFycjFbaV0gIT09IGFycjJbaV0pIHsKICAgICAg
ICAgICByZXR1cm4gZmFsc2U7CkluZGV4OiBCb290c3RyYXAuanMKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gQm9v
dHN0cmFwLmpzCShyZXZpc2lvbiAyMzQyNykKKysrIEJvb3RzdHJhcC5qcwkod29ya2luZyBjb3B5
KQpAQCAtMzIwLDEzICszMjAsMTMgQEAKIAogICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbihtYXAp
CiAgICAgICB7Ci0gICAgICAgIHZhciBsZW5ndGggPSAwOworICAgICAgICB2YXIgbGVuID0gMDsK
IAogICAgICAgICBmb3IgKHZhciBrZXkgaW4gbWFwKSB7Ci0gICAgICAgICAgbGVuZ3RoKys7Cisg
ICAgICAgICAgbGVuKys7CiAgICAgICAgIH0KIAotICAgICAgICByZXR1cm4gbGVuZ3RoOworICAg
ICAgICByZXR1cm4gbGVuOwogICAgICAgfQogICAgIH0pWygoe30pLl9fY291bnRfXyA9PSAwKSA/
ICJjb3VudCIgOiAiZGVmYXVsdCJdLAogCkluZGV4OiBodG1sL0VsZW1lbnQuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gaHRtbC9FbGVtZW50LmpzCShyZXZpc2lvbiAyMzQyNykKKysrIGh0bWwvRWxlbWVudC5q
cwkod29ya2luZyBjb3B5KQpAQCAtNTExLDkgKzUxMSw5IEBACiAgICAgICB2YXIgY2hpbGRyZW4g
PSB0aGlzLl9fY2hpbGRyZW47CiAgICAgICBpZiAoY2hpbGRyZW4pCiAgICAgICB7Ci0gICAgICAg
IHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICAgIHZhciBsZW4gPSBjaGlsZHJl
bi5sZW5ndGg7CiAgICAgICAgIHZhciBjaGlsZDsKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxl
bmd0aDsgaSsrKQorICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICAgIHsK
ICAgICAgICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogCkBAIC01MzAsNyArNTMwLDcgQEAKIAog
ICAgICAgICB0aGlzLl9jb3B5RGF0YShmYWxzZSk7CiAKLSAgICAgICAgaWYgKGNoaWxkcmVuICYm
IGxlbmd0aCA+IDApIHsKKyAgICAgICAgaWYgKGNoaWxkcmVuICYmIGxlbiA+IDApIHsKICAgICAg
ICAgICB0aGlzLl9pbnNlcnRDaGlsZHJlbigpOwogICAgICAgICB9CiAgICAgICB9CkBAIC01Njcs
MTMgKzU2NywxMyBAQAogICAgIF9pbnNlcnRDaGlsZHJlbiA6IGZ1bmN0aW9uKCkKICAgICB7CiAg
ICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47Ci0gICAgICB2YXIgbGVuZ3RoID0g
Y2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAg
IHZhciBjaGlsZDsKIAotICAgICAgaWYgKGxlbmd0aCA+IDIpCisgICAgICBpZiAobGVuID4gMikK
ICAgICAgIHsKICAgICAgICAgdmFyIGRvbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVu
dEZyYWdtZW50KCk7Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAg
ICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgY2hpbGQg
PSBjaGlsZHJlbltpXTsKICAgICAgICAgICBpZiAoY2hpbGQuX19lbGVtZW50ICYmIGNoaWxkLl9f
aW5jbHVkZWQpIHsKQEAgLTU4Niw3ICs1ODYsNyBAQAogICAgICAgZWxzZQogICAgICAgewogICAg
ICAgICB2YXIgZG9tRWxlbWVudCA9IHRoaXMuX19lbGVtZW50OwotICAgICAgICBmb3IgKHZhciBp
PTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAg
ICAgICAgewogICAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgICAgaWYgKGNo
aWxkLl9fZWxlbWVudCAmJiBjaGlsZC5fX2luY2x1ZGVkKSB7CkBAIC0yNjg4LDQgKzI2ODgsNCBA
QAogICAgICAgdGhpcy5fX3Byb3BlcnR5Sm9icyA9IHRoaXMuX19lbGVtZW50ID0gdGhpcy5fX3Bh
cmVudCA9CiAgICAgICB0aGlzLl9fbGF6eVNjcm9sbEludG9WaWV3WCA9IHRoaXMuX19sYXp5U2Ny
b2xsSW50b1ZpZXdZID0gbnVsbDsKICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmls
ZQorfSk7CkluZGV4OiBkYXRhL2NvbnRyb2xsZXIvTGlzdC5qcwo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkYXRh
L2NvbnRyb2xsZXIvTGlzdC5qcwkocmV2aXNpb24gMjM0MjcpCisrKyBkYXRhL2NvbnRyb2xsZXIv
TGlzdC5qcwkod29ya2luZyBjb3B5KQpAQCAtMzUxLDggKzM1MSw4IEBACiAgICAgICAgIGlmICh0
YXJnZXQgIT0gbnVsbCkgewogICAgICAgICAgIC8vIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZSBiaWRu
aW5ncyB0b28gc28gdXNlIHRoZSBjb250cm9sbGVyIG1ldGhvZAogICAgICAgICAgIC8vIGZvciBy
ZW12aW5nIGl0ZW1zCi0gICAgICAgICAgdmFyIGxlbmd0aCA9IHRhcmdldC5nZXRDaGlsZHJlbigp
Lmxlbmd0aDsKLSAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7Cisg
ICAgICAgICAgdmFyIGxlbiA9IHRhcmdldC5nZXRDaGlsZHJlbigpLmxlbmd0aDsKKyAgICAgICAg
ICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICB0aGlzLl9fcmVt
b3ZlSXRlbSgpOwogICAgICAgICAgIH07CiAgICAgICAgIH0KSW5kZXg6IGJvbS9Db2xsZWN0aW9u
LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KLS0tIGJvbS9Db2xsZWN0aW9uLmpzCShyZXZpc2lvbiAyMzQyNykKKysr
IGJvbS9Db2xsZWN0aW9uLmpzCSh3b3JraW5nIGNvcHkpCkBAIC02MSwxMSArNjEsMTEgQEAKICAg
ewogICAgIHJldHVybiBmdW5jdGlvbihhcmcxLCBhcmcyLCBhcmczLCBhcmc0LCBhcmc1LCBhcmc2
KQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDsKLSAgICAgIGlmIChsZW5n
dGggPiAwKQorICAgICAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoOworICAgICAgaWYgKGxlbiA+IDAp
CiAgICAgICB7CiAgICAgICAgIHZhciBwdG4gPSBjbGF6elttZXRob2RdOwotICAgICAgICBmb3Ig
KHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkr
KykKICAgICAgICAgewogICAgICAgICAgIGlmICh0aGlzW2ldLm5vZGVUeXBlID09PSAxKSB7CiAg
ICAgICAgICAgICBwdG4uY2FsbChjbGF6eiwgdGhpc1tpXSwgYXJnMSwgYXJnMiwgYXJnMywgYXJn
NCwgYXJnNSwgYXJnNik7CkluZGV4OiB1aS92aXJ0dWFsL2Zvcm0vTGlzdENvbnRyb2xsZXIuanMK
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQotLS0gdWkvdmlydHVhbC9mb3JtL0xpc3RDb250cm9sbGVyLmpzCShyZXZpc2lv
biAyMzQyNykKKysrIHVpL3ZpcnR1YWwvZm9ybS9MaXN0Q29udHJvbGxlci5qcwkod29ya2luZyBj
b3B5KQpAQCAtNTcwLDggKzU3MCw4IEBACiAgICAgICovCiAgICAgX3N5bmNSb3dDb3VudDogZnVu
Y3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSB0aGlzLmdldFJvd0NvdW50KCk7Ci0g
ICAgICB0aGlzLmdldFRhcmdldCgpLnNldFJvd0NvdW50KGxlbmd0aCk7CisgICAgICB2YXIgbGVu
ID0gdGhpcy5nZXRSb3dDb3VudCgpOworICAgICAgdGhpcy5nZXRUYXJnZXQoKS5zZXRSb3dDb3Vu
dChsZW4pOwogICAgIH0sCiAKIApJbmRleDogdWkvY29yZS9zZWxlY3Rpb24vU2Nyb2xsQXJlYS5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSB1aS9jb3JlL3NlbGVjdGlvbi9TY3JvbGxBcmVhLmpzCShyZXZpc2lv
biAyMzQyNykKKysrIHVpL2NvcmUvc2VsZWN0aW9uL1Njcm9sbEFyZWEuanMJKHdvcmtpbmcgY29w
eSkKQEAgLTExMSw3ICsxMTEsNyBAQAogICAgIF9nZXRQYWdlIDogZnVuY3Rpb24obGVhZCwgdXAp
CiAgICAgewogICAgICAgdmFyIHNlbGVjdGFibGVzID0gdGhpcy5nZXRTZWxlY3RhYmxlcygpOwot
ICAgICAgdmFyIGxlbmd0aCA9IHNlbGVjdGFibGVzLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBz
ZWxlY3RhYmxlcy5sZW5ndGg7CiAgICAgICB2YXIgc3RhcnQgPSBzZWxlY3RhYmxlcy5pbmRleE9m
KGxlYWQpOwogCiAgICAgICAvLyBHaXZlbiBsZWFkIGlzIG5vdCBhIHNlbGVjdGFibGU/IT8KQEAg
LTE3OSw3ICsxNzksNyBAQAogICAgICAgICB3aGlsZSgxKQogICAgICAgICB7CiAgICAgICAgICAg
Ly8gSXRlcmF0ZSB0aHJvdWdoIGFsbCBzZWxlY3RhYmxlcyBmcm9tIHN0YXJ0Ci0gICAgICAgICAg
Zm9yICg7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgICAgZm9yICg7IGk8bGVuOyBpKyspCiAgICAg
ICAgICAgewogICAgICAgICAgICAgYm90dG9tID0gd2lkZ2V0LmdldEl0ZW1Cb3R0b20oc2VsZWN0
YWJsZXNbaV0pOwogCkluZGV4OiB1aS9zcGxpdHBhbmUvSExheW91dC5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB1aS9zcGxpdHBhbmUvSExheW91dC5qcwkocmV2aXNpb24gMjM0MjcpCisrKyB1aS9zcGxpdHBh
bmUvSExheW91dC5qcwkod29ya2luZyBjb3B5KQpAQCAtNjgsMTEgKzY4LDExIEBACiAgICAgcmVu
ZGVyTGF5b3V0IDogZnVuY3Rpb24oYXZhaWxXaWR0aCwgYXZhaWxIZWlnaHQpCiAgICAgewogICAg
ICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZhciBs
ZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3Ro
OwogICAgICAgdmFyIGNoaWxkLCB0eXBlOwogICAgICAgdmFyIGJlZ2luLCBzcGxpdHRlciwgc2xp
ZGVyLCBlbmQ7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJl
bltpXTsKICAgICAgICAgdHlwZSA9IGNoaWxkLmdldExheW91dFByb3BlcnRpZXMoKS50eXBlOwpA
QCAtMTY5LDEyICsxNjksMTIgQEAKICAgICBfY29tcHV0ZVNpemVIaW50IDogZnVuY3Rpb24oKQog
ICAgIHsKICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7Ci0g
ICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxk
cmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZCwgaGludCwgcHJvcHM7CiAgICAgICB2YXIgbWlu
V2lkdGg9MCwgd2lkdGg9MCwgbWF4V2lkdGg9MDsKICAgICAgIHZhciBtaW5IZWlnaHQ9MCwgaGVp
Z2h0PTAsIG1heEhlaWdodD0wOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKysp
CisgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxk
ID0gY2hpbGRyZW5baV07CiAgICAgICAgIHByb3BzID0gY2hpbGQuZ2V0TGF5b3V0UHJvcGVydGll
cygpOwpJbmRleDogdWkvc3BsaXRwYW5lL1ZMYXlvdXQuanMKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvc3Bs
aXRwYW5lL1ZMYXlvdXQuanMJKHJldmlzaW9uIDIzNDI3KQorKysgdWkvc3BsaXRwYW5lL1ZMYXlv
dXQuanMJKHdvcmtpbmcgY29weSkKQEAgLTY4LDExICs2OCwxMSBAQAogICAgIHJlbmRlckxheW91
dCA6IGZ1bmN0aW9uKGF2YWlsV2lkdGgsIGF2YWlsSGVpZ2h0KQogICAgIHsKICAgICAgIHZhciBj
aGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7Ci0gICAgICB2YXIgbGVuZ3RoID0g
Y2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAg
IHZhciBjaGlsZCwgdHlwZTsKICAgICAgIHZhciBiZWdpbiwgc3BsaXR0ZXIsIHNsaWRlciwgZW5k
OwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBp
PTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CiAg
ICAgICAgIHR5cGUgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCkudHlwZTsKQEAgLTE2OSwx
MiArMTY5LDEyIEBACiAgICAgX2NvbXB1dGVTaXplSGludCA6IGZ1bmN0aW9uKCkKICAgICB7CiAg
ICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwotICAgICAgdmFy
IGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5n
dGg7CiAgICAgICB2YXIgY2hpbGQsIGhpbnQsIHByb3BzOwogICAgICAgdmFyIG1pbkhlaWdodD0w
LCBoZWlnaHQ9MCwgbWF4SGVpZ2h0PTA7CiAgICAgICB2YXIgbWluV2lkdGg9MCwgd2lkdGg9MCwg
bWF4V2lkdGg9MDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAg
Zm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgewogICAgICAgICBjaGlsZCA9IGNoaWxk
cmVuW2ldOwogICAgICAgICBwcm9wcyA9IGNoaWxkLmdldExheW91dFByb3BlcnRpZXMoKTsKSW5k
ZXg6IHVpL2Zvcm0vUmFkaW9Hcm91cC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL1JhZGlvR3Jv
dXAuanMJKHJldmlzaW9uIDIzNDI3KQorKysgdWkvZm9ybS9SYWRpb0dyb3VwLmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0zNjIsMTggKzM2MiwxOCBAQAogICAgICAgfQogCiAgICAgICB2YXIgaSA9IDA7
Ci0gICAgICB2YXIgbGVuZ3RoID0gaXRlbXMubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGl0ZW1z
Lmxlbmd0aDsKIAogICAgICAgLy8gRmluZCBuZXh0IGVuYWJsZWQgaXRlbQogICAgICAgaWYgKHRo
aXMuZ2V0V3JhcCgpKSB7Ci0gICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkgJSBsZW5ndGg7Cisg
ICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkgJSBsZW47CiAgICAgICB9IGVsc2UgewotICAgICAg
ICBpbmRleCA9IE1hdGgubWluKGluZGV4ICsgMSwgbGVuZ3RoIC0gMSk7CisgICAgICAgIGluZGV4
ID0gTWF0aC5taW4oaW5kZXggKyAxLCBsZW4gLSAxKTsKICAgICAgIH0KIAotICAgICAgd2hpbGUg
KGkgPCBsZW5ndGggJiYgIWl0ZW1zW2luZGV4XS5nZXRFbmFibGVkKCkpCisgICAgICB3aGlsZSAo
aSA8IGxlbiAmJiAhaXRlbXNbaW5kZXhdLmdldEVuYWJsZWQoKSkKICAgICAgIHsKLSAgICAgICAg
aW5kZXggPSAoaW5kZXggKyAxKSAlIGxlbmd0aDsKKyAgICAgICAgaW5kZXggPSAoaW5kZXggKyAx
KSAlIGxlbjsKICAgICAgICAgaSsrOwogICAgICAgfQogCkBAIC0zOTQsMTggKzM5NCwxOCBAQAog
ICAgICAgfQogCiAgICAgICB2YXIgaSA9IDA7Ci0gICAgICB2YXIgbGVuZ3RoID0gaXRlbXMubGVu
Z3RoOworICAgICAgdmFyIGxlbiA9IGl0ZW1zLmxlbmd0aDsKIAogICAgICAgLy8gRmluZCBwcmV2
aW91cyBlbmFibGVkIGl0ZW0KICAgICAgIGlmICh0aGlzLmdldFdyYXAoKSkgewotICAgICAgICBp
bmRleCA9IChpbmRleCAtIDEgKyBsZW5ndGgpICUgbGVuZ3RoOworICAgICAgICBpbmRleCA9IChp
bmRleCAtIDEgKyBsZW4pICUgbGVuOwogICAgICAgfSBlbHNlIHsKICAgICAgICAgaW5kZXggPSBN
YXRoLm1heChpbmRleCAtIDEsIDApOwogICAgICAgfQogCi0gICAgICB3aGlsZSAoaSA8IGxlbmd0
aCAmJiAhaXRlbXNbaW5kZXhdLmdldEVuYWJsZWQoKSkKKyAgICAgIHdoaWxlIChpIDwgbGVuICYm
ICFpdGVtc1tpbmRleF0uZ2V0RW5hYmxlZCgpKQogICAgICAgewotICAgICAgICBpbmRleCA9IChp
bmRleCAtIDEgKyBsZW5ndGgpICUgbGVuZ3RoOworICAgICAgICBpbmRleCA9IChpbmRleCAtIDEg
KyBsZW4pICUgbGVuOwogICAgICAgICBpKys7CiAgICAgICB9CiAKSW5kZXg6IHVpL21lbnUvTWFu
YWdlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9tZW51L01hbmFnZXIuanMJKHJldmlzaW9uIDIzNDI3
KQorKysgdWkvbWVudS9NYW5hZ2VyLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMTIsMTAgKzExMiwx
MCBAQAogICAgIF9nZXRDaGlsZCA6IGZ1bmN0aW9uKG1lbnUsIHN0YXJ0LCBpdGVyLCBsb29wKQog
ICAgIHsKICAgICAgIHZhciBjaGlsZHJlbiA9IG1lbnUuZ2V0Q2hpbGRyZW4oKTsKLSAgICAgIHZh
ciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVu
Z3RoOwogICAgICAgdmFyIGNoaWxkOwogCi0gICAgICBmb3IgKHZhciBpPXN0YXJ0OyBpPGxlbmd0
aCAmJiBpPj0wOyBpKz1pdGVyKQorICAgICAgZm9yICh2YXIgaT1zdGFydDsgaTxsZW4gJiYgaT49
MDsgaSs9aXRlcikKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAg
ICAgaWYgKGNoaWxkLmlzRW5hYmxlZCgpICYmICFjaGlsZC5pc0Fub255bW91cygpKSB7CkBAIC0x
MjUsNyArMTI1LDcgQEAKIAogICAgICAgaWYgKGxvb3ApCiAgICAgICB7Ci0gICAgICAgIGkgPSBp
ID09IGxlbmd0aCA/IDAgOiBsZW5ndGgtMTsKKyAgICAgICAgaSA9IGkgPT0gbGVuID8gMCA6IGxl
bi0xOwogICAgICAgICBmb3IgKDsgaSE9c3RhcnQ7IGkrPWl0ZXIpCiAgICAgICAgIHsKICAgICAg
ICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwpAQCAtNjUxLDEwICs2NTEsMTAgQEAKIAogICAgICAg
ICAvLyBHZXQgcHJldmlvdXMgYnV0dG9uLCBmYWxsYmFjayB0byBlbmQgaWYgZmlyc3QgYXJyaXZl
ZAogICAgICAgICB2YXIgcHJldkJ1dHRvbiA9IG51bGw7Ci0gICAgICAgIHZhciBsZW5ndGggPSAg
YnV0dG9ucy5sZW5ndGg7Ci0gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IGxlbmd0aDsgaSsr
KQorICAgICAgICB2YXIgbGVuID0gIGJ1dHRvbnMubGVuZ3RoOworICAgICAgICBmb3IgKHZhciBp
ID0gMTsgaSA8PSBsZW47IGkrKykKICAgICAgICAgewotICAgICAgICAgIHZhciBidXR0b24gPSBi
dXR0b25zWyhpbmRleCAtIGkgKyBsZW5ndGgpICUgbGVuZ3RoXTsKKyAgICAgICAgICB2YXIgYnV0
dG9uID0gYnV0dG9uc1soaW5kZXggLSBpICsgbGVuKSAlIGxlbl07CiAgICAgICAgICAgaWYoYnV0
dG9uLmlzRW5hYmxlZCgpKSB7CiAgICAgICAgICAgICBwcmV2QnV0dG9uID0gYnV0dG9uOwogICAg
ICAgICAgICAgYnJlYWs7CkBAIC03NTgsMTAgKzc1OCwxMCBAQAogCiAgICAgICAgIC8vIEdldCBu
ZXh0IGJ1dHRvbiwgZmFsbGJhY2sgdG8gZmlyc3QgaWYgZW5kIGFycml2ZWQKICAgICAgICAgdmFy
IG5leHRCdXR0b24gPSBudWxsOwotICAgICAgICB2YXIgbGVuZ3RoID0gIGJ1dHRvbnMubGVuZ3Ro
OwotICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBsZW5ndGg7IGkrKykKKyAgICAgICAgdmFy
IGxlbiA9ICBidXR0b25zLmxlbmd0aDsKKyAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gbGVu
OyBpKyspCiAgICAgICAgIHsKLSAgICAgICAgICB2YXIgYnV0dG9uID0gYnV0dG9uc1soaW5kZXgg
KyBpKSAlIGxlbmd0aF07CisgICAgICAgICAgdmFyIGJ1dHRvbiA9IGJ1dHRvbnNbKGluZGV4ICsg
aSkgJSBsZW5dOwogICAgICAgICAgIGlmKGJ1dHRvbi5pc0VuYWJsZWQoKSkgewogICAgICAgICAg
ICAgbmV4dEJ1dHRvbiA9IGJ1dHRvbjsKICAgICAgICAgICAgIGJyZWFrOwpJbmRleDogdWkvbGF5
b3V0L1ZCb3guanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvbGF5b3V0L1ZCb3guanMJKHJldmlzaW9uIDIz
NDI3KQorKysgdWkvbGF5b3V0L1ZCb3guanMJKHdvcmtpbmcgY29weSkKQEAgLTIyMSwxNCArMjIx
LDE0IEBACiAgICAgX19yZWJ1aWxkQ2FjaGUgOiBmdW5jdGlvbigpCiAgICAgewogICAgICAgdmFy
IGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZhciBsZW5ndGgg
PSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwogICAg
ICAgdmFyIGVuYWJsZUZsZXggPSBmYWxzZTsKLSAgICAgIHZhciByZXVzZSA9IHRoaXMuX19oZWln
aHRzICYmIHRoaXMuX19oZWlnaHRzLmxlbmd0aCAhPSBsZW5ndGggJiYgdGhpcy5fX2ZsZXhzICYm
IHRoaXMuX19oZWlnaHRzOworICAgICAgdmFyIHJldXNlID0gdGhpcy5fX2hlaWdodHMgJiYgdGhp
cy5fX2hlaWdodHMubGVuZ3RoICE9IGxlbiAmJiB0aGlzLl9fZmxleHMgJiYgdGhpcy5fX2hlaWdo
dHM7CiAgICAgICB2YXIgcHJvcHM7CiAKICAgICAgIC8vIFNwYXJzZSBhcnJheSAoa2VlcCBvbGQg
b25lIGlmIGxlbmd0aHMgaGFzIG5vdCBiZWVuIG1vZGlmaWVkKQotICAgICAgdmFyIGhlaWdodHMg
PSByZXVzZSA/IHRoaXMuX19oZWlnaHRzIDogbmV3IEFycmF5KGxlbmd0aCk7Ci0gICAgICB2YXIg
ZmxleHMgPSByZXVzZSA/IHRoaXMuX19mbGV4cyA6IG5ldyBBcnJheShsZW5ndGgpOworICAgICAg
dmFyIGhlaWdodHMgPSByZXVzZSA/IHRoaXMuX19oZWlnaHRzIDogbmV3IEFycmF5KGxlbik7Cisg
ICAgICB2YXIgZmxleHMgPSByZXVzZSA/IHRoaXMuX19mbGV4cyA6IG5ldyBBcnJheShsZW4pOwog
CiAgICAgICAvLyBSZXZlcnNlIHN1cHBvcnQKICAgICAgIGlmICh0aGlzLmdldFJldmVyc2VkKCkp
IHsKQEAgLTIzNiw3ICsyMzYsNyBAQAogICAgICAgfQogCiAgICAgICAvLyBMb29wIHRocm91Z2gg
Y2hpbGRyZW4gdG8gcHJlcGFyc2UgdmFsdWVzCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3Ro
OyBpKyspCisgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAg
IHByb3BzID0gY2hpbGRyZW5baV0uZ2V0TGF5b3V0UHJvcGVydGllcygpOwogCkBAIC0zMTEsNyAr
MzExLDcgQEAKIAogICAgICAgLy8gQ2FjaGUgY2hpbGRyZW4KICAgICAgIHZhciBjaGlsZHJlbiA9
IHRoaXMuX19jaGlsZHJlbjsKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7Cisg
ICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwogICAgICAgdmFyIHV0aWwgPSBxeC51aS5s
YXlvdXQuVXRpbDsKIAogCkBAIC0zMzAsNyArMzMwLDcgQEAKICAgICAgIHZhciBoZWlnaHRzID0g
W107CiAgICAgICB2YXIgYWxsb2NhdGVkSGVpZ2h0ID0gZ2FwczsKIAotICAgICAgZm9yIChpPTA7
IGk8bGVuZ3RoOyBpKz0xKQorICAgICAgZm9yIChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgewog
ICAgICAgICBwZXJjZW50ID0gdGhpcy5fX2hlaWdodHNbaV07CiAKQEAgLTM0OSw3ICszNDksNyBA
QAogICAgICAgICB2YXIgZmxleGlibGVzID0ge307CiAgICAgICAgIHZhciBmbGV4LCBvZmZzZXQ7
CiAKLSAgICAgICAgZm9yIChpPTA7IGk8bGVuZ3RoOyBpKz0xKQorICAgICAgICBmb3IgKGk9MDsg
aTxsZW47IGkrPTEpCiAgICAgICAgIHsKICAgICAgICAgICBmbGV4ID0gdGhpcy5fX2ZsZXhzW2ld
OwogCkBAIC00MDcsNyArNDA3LDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gUmVuZGVyIGNoaWxk
cmVuIGFuZCBzZXBhcmF0b3JzCi0gICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEpCisgICAg
ICBmb3IgKGk9MDsgaTxsZW47IGkrPTEpCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRy
ZW5baV07CiAgICAgICAgIGhlaWdodCA9IGhlaWdodHNbaV07CkluZGV4OiB1aS9sYXlvdXQvQXRv
bS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0tLSB1aS9sYXlvdXQvQXRvbS5qcwkocmV2aXNpb24gMjM0MjcpCisr
KyB1aS9sYXlvdXQvQXRvbS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTI4LDcgKzEyOCw3IEBACiAK
ICAgICAgIHZhciBpY29uUG9zaXRpb24gPSB0aGlzLmdldEljb25Qb3NpdGlvbigpOwogICAgICAg
dmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZhciBsZW5n
dGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwog
CiAgICAgICB2YXIgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0OwogICAgICAgdmFyIGNoaWxkLCBo
aW50OwpAQCAtMTM4LDE0ICsxMzgsMTQgQEAKICAgICAgIC8vIHJldmVyc2Ugb3JkZXJpbmcKICAg
ICAgIGlmIChpY29uUG9zaXRpb24gPT09ICJib3R0b20iIHx8IGljb25Qb3NpdGlvbiA9PT0gInJp
Z2h0IikKICAgICAgIHsKLSAgICAgICAgdmFyIHN0YXJ0ID0gbGVuZ3RoLTE7CisgICAgICAgIHZh
ciBzdGFydCA9IGxlbi0xOwogICAgICAgICB2YXIgZW5kID0gLTE7CiAgICAgICAgIHZhciBpbmNy
ZW1lbnQgPSAtMTsKICAgICAgIH0KICAgICAgIGVsc2UKICAgICAgIHsKICAgICAgICAgdmFyIHN0
YXJ0ID0gMDsKLSAgICAgICAgdmFyIGVuZCA9IGxlbmd0aDsKKyAgICAgICAgdmFyIGVuZCA9IGxl
bjsKICAgICAgICAgdmFyIGluY3JlbWVudCA9IDE7CiAgICAgICB9CiAKQEAgLTI2OCwxMSArMjY4
LDExIEBACiAgICAgX2NvbXB1dGVTaXplSGludCA6IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2
YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwotICAgICAgdmFyIGxlbmd0
aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAg
ICAgICB2YXIgaGludCwgcmVzdWx0OwogCiAgICAgICAvLyBGYXN0IHBhdGggZm9yIG9ubHkgb25l
IGNoaWxkCi0gICAgICBpZiAobGVuZ3RoID09PSAxKQorICAgICAgaWYgKGxlbiA9PT0gMSkKICAg
ICAgIHsKICAgICAgICAgdmFyIGhpbnQgPSBjaGlsZHJlblswXS5nZXRTaXplSGludCgpOwogCkBA
IC0yOTcsNyArMjk3LDcgQEAKICAgICAgICAgaWYgKGljb25Qb3NpdGlvbiA9PT0gInRvcCIgfHwg
aWNvblBvc2l0aW9uID09PSAiYm90dG9tIikKICAgICAgICAgewogICAgICAgICAgIHZhciBjb3Vu
dCA9IDA7Ci0gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgICAg
IGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgICB7CiAgICAgICAgICAgICBoaW50
ID0gY2hpbGRyZW5baV0uZ2V0U2l6ZUhpbnQoKTsKIApAQCAtMzI0LDcgKzMyNCw3IEBACiAgICAg
ICAgIGVsc2UKICAgICAgICAgewogICAgICAgICAgIHZhciBjb3VudD0wOwotICAgICAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVu
OyBpKyspCiAgICAgICAgICAgewogICAgICAgICAgICAgaGludCA9IGNoaWxkcmVuW2ldLmdldFNp
emVIaW50KCk7CiAKSW5kZXg6IHVpL2xheW91dC9Eb2NrLmpzCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL2xh
eW91dC9Eb2NrLmpzCShyZXZpc2lvbiAyMzQyNykKKysrIHVpL2xheW91dC9Eb2NrLmpzCSh3b3Jr
aW5nIGNvcHkpCkBAIC0yODksNyArMjg5LDcgQEAKICAgICB7CiAgICAgICB2YXIgYWxsID0gdGhp
cy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKICAgICAgIHZhciBjaGlsZCwgY2VudGVyOwotICAgICAg
dmFyIGxlbmd0aCA9IGFsbC5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gYWxsLmxlbmd0aDsKIAog
ICAgICAgdmFyIGhpZ2ggPSBbXTsKICAgICAgIHZhciBsb3cgPSBbXTsKQEAgLTI5OCw3ICsyOTgs
NyBAQAogICAgICAgdmFyIHlmaXJzdCA9IHRoaXMuZ2V0U29ydCgpID09PSAieSI7CiAgICAgICB2
YXIgeGZpcnN0ID0gdGhpcy5nZXRTb3J0KCkgPT09ICJ4IjsKIAotICAgICAgZm9yICh2YXIgaT0w
OyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAg
ewogICAgICAgICBjaGlsZCA9IGFsbFtpXTsKICAgICAgICAgZWRnZSA9IGNoaWxkLmdldExheW91
dFByb3BlcnRpZXMoKS5lZGdlOwpAQCAtMzM1LDcgKzMzNSw3IEBACiAKICAgICAgIC8vIENhY2hl
IGVkZ2VzIGZvciBmYXN0ZXIgYWNjZXNzCiAgICAgICB2YXIgZWRnZXM9W107Ci0gICAgICBmb3Ig
KHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKysp
CiAgICAgICB7CiAgICAgICAgIGVkZ2UgPSByZXN1bHRbaV0uZ2V0TGF5b3V0UHJvcGVydGllcygp
LmVkZ2U7CiAgICAgICAgIGVkZ2VzW2ldID0gdGhpcy5fX2VkZ2VNYXBbZWRnZV0gfHwgNTsKQEAg
LTM2Nyw3ICszNjcsNyBAQAogICAgICAgdmFyIHV0aWwgPSBxeC51aS5sYXlvdXQuVXRpbDsKICAg
ICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX19jaGlsZHJlbjsKICAgICAgIHZhciBlZGdlcyA9IHRo
aXMuX19lZGdlczsKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2
YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwogICAgICAgdmFyIGZsZXhpYmxlcywgY2hpbGQsIGhp
bnQsIHByb3BzLCBmbGV4LCBncm93LCB3aWR0aCwgaGVpZ2h0LCBvZmZzZXQ7CiAKICAgICAgIHZh
ciB3aWR0aHMgPSBbXTsKQEAgLTM5NSw3ICszOTUsNyBAQAogICAgICAgICBhbGxvY2F0ZWRIZWln
aHQgLT0gc2VwYXJhdG9yV2lkdGhzLnkgKyBzcGFjaW5nWTsKICAgICAgIH0KIAotICAgICAgZm9y
ICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsr
KQogICAgICAgewogICAgICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogICAgICAgICBwcm9wcyA9
IGNoaWxkLmdldExheW91dFByb3BlcnRpZXMoKTsKQEAgLTQ3Niw3ICs0NzYsNyBAQAogICAgICAg
ICBmbGV4aWJsZXMgPSB7fTsKICAgICAgICAgZ3JvdyA9IGFsbG9jYXRlZFdpZHRoIDwgYXZhaWxX
aWR0aDsKIAotICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgewogICAgICAgICAgIGNoaWxkID0gY2hp
bGRyZW5baV07CiAKQEAgLTUzMCw3ICs1MzAsNyBAQAogICAgICAgICBmbGV4aWJsZXMgPSBbXTsK
ICAgICAgICAgZ3JvdyA9IGFsbG9jYXRlZEhlaWdodCA8IGF2YWlsSGVpZ2h0OwogCi0gICAgICAg
IGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxl
bjsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKIApAQCAt
NTkxLDcgKzU5MSw3IEBACiAgICAgICB2YXIgbWFyZ2luVG9wLCBtYXJnaW5Cb3R0b20sIG1hcmdp
bkxlZnQsIG1hcmdpblJpZ2h0OwogICAgICAgdmFyIGFsaWduTWFwID0gdGhpcy5fX2FsaWduTWFw
OwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBp
PTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIC8vIENhY2hlIGNoaWxkIGRhdGEKICAg
ICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKQEAgLTgxNSw3ICs4MTUsNyBAQAogICAgICAgdmFy
IGNoaWxkcmVuID0gdGhpcy5fX2NoaWxkcmVuOwogICAgICAgdmFyIGVkZ2VzID0gdGhpcy5fX2Vk
Z2VzOwogCi0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxl
biA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBoaW50LCBjaGlsZDsKICAgICAgIHZhciBt
YXJnaW5YLCBtYXJnaW5ZOwogCkBAIC04MzcsNyArODM3LDcgQEAKICAgICAgIH0KIAogICAgICAg
Ly8gRGV0ZWN0IGNoaWxkcmVuIHNpemVzCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNo
aWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgIGhpbnQgPSBjaGlsZC5nZXRTaXplSGludCgpOwpJ
bmRleDogdWkvbGF5b3V0L0hCb3guanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvbGF5b3V0L0hCb3guanMJ
KHJldmlzaW9uIDIzNDI3KQorKysgdWkvbGF5b3V0L0hCb3guanMJKHdvcmtpbmcgY29weSkKQEAg
LTIyMCwxNCArMjIwLDE0IEBACiAgICAgX19yZWJ1aWxkQ2FjaGUgOiBmdW5jdGlvbigpCiAgICAg
ewogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAg
IHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4u
bGVuZ3RoOwogICAgICAgdmFyIGVuYWJsZUZsZXggPSBmYWxzZTsKLSAgICAgIHZhciByZXVzZSA9
IHRoaXMuX193aWR0aHMgJiYgdGhpcy5fX3dpZHRocy5sZW5ndGggIT0gbGVuZ3RoICYmIHRoaXMu
X19mbGV4cyAmJiB0aGlzLl9fd2lkdGhzOworICAgICAgdmFyIHJldXNlID0gdGhpcy5fX3dpZHRo
cyAmJiB0aGlzLl9fd2lkdGhzLmxlbmd0aCAhPSBsZW4gJiYgdGhpcy5fX2ZsZXhzICYmIHRoaXMu
X193aWR0aHM7CiAgICAgICB2YXIgcHJvcHM7CiAKICAgICAgIC8vIFNwYXJzZSBhcnJheSAoa2Vl
cCBvbGQgb25lIGlmIGxlbmd0aHMgaGFzIG5vdCBiZWVuIG1vZGlmaWVkKQotICAgICAgdmFyIHdp
ZHRocyA9IHJldXNlID8gdGhpcy5fX3dpZHRocyA6IG5ldyBBcnJheShsZW5ndGgpOwotICAgICAg
dmFyIGZsZXhzID0gcmV1c2UgPyB0aGlzLl9fZmxleHMgOiBuZXcgQXJyYXkobGVuZ3RoKTsKKyAg
ICAgIHZhciB3aWR0aHMgPSByZXVzZSA/IHRoaXMuX193aWR0aHMgOiBuZXcgQXJyYXkobGVuKTsK
KyAgICAgIHZhciBmbGV4cyA9IHJldXNlID8gdGhpcy5fX2ZsZXhzIDogbmV3IEFycmF5KGxlbik7
CiAKICAgICAgIC8vIFJldmVyc2Ugc3VwcG9ydAogICAgICAgaWYgKHRoaXMuZ2V0UmV2ZXJzZWQo
KSkgewpAQCAtMjM1LDcgKzIzNSw3IEBACiAgICAgICB9CiAKICAgICAgIC8vIExvb3AgdGhyb3Vn
aCBjaGlsZHJlbiB0byBwcmVwYXJzZSB2YWx1ZXMKLSAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5n
dGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAg
ICAgcHJvcHMgPSBjaGlsZHJlbltpXS5nZXRMYXlvdXRQcm9wZXJ0aWVzKCk7CiAKQEAgLTMxMCw3
ICszMTAsNyBAQAogCiAgICAgICAvLyBDYWNoZSBjaGlsZHJlbgogICAgICAgdmFyIGNoaWxkcmVu
ID0gdGhpcy5fX2NoaWxkcmVuOwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsK
KyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgdXRpbCA9IHF4LnVp
LmxheW91dC5VdGlsOwogCiAKQEAgLTMyOSw3ICszMjksNyBAQAogICAgICAgdmFyIHdpZHRocyA9
IFtdOwogICAgICAgdmFyIGFsbG9jYXRlZFdpZHRoID0gZ2FwczsKIAotICAgICAgZm9yIChpPTA7
IGk8bGVuZ3RoOyBpKz0xKQorICAgICAgZm9yIChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgewog
ICAgICAgICBwZXJjZW50ID0gdGhpcy5fX3dpZHRoc1tpXTsKIApAQCAtMzQ4LDcgKzM0OCw3IEBA
CiAgICAgICAgIHZhciBmbGV4aWJsZXMgPSB7fTsKICAgICAgICAgdmFyIGZsZXgsIG9mZnNldDsK
IAotICAgICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEpCisgICAgICAgIGZvciAoaT0wOyBp
PGxlbjsgaSs9MSkKICAgICAgICAgewogICAgICAgICAgIGZsZXggPSB0aGlzLl9fZmxleHNbaV07
CiAKQEAgLTQwNyw3ICs0MDcsNyBAQAogICAgICAgfQogCiAgICAgICAvLyBSZW5kZXIgY2hpbGRy
ZW4gYW5kIHNlcGFyYXRvcnMKLSAgICAgIGZvciAoaT0wOyBpPGxlbmd0aDsgaSs9MSkKKyAgICAg
IGZvciAoaT0wOyBpPGxlbjsgaSs9MSkKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJl
bltpXTsKICAgICAgICAgd2lkdGggPSB3aWR0aHNbaV07CkluZGV4OiB1dGlsL1RpbWVyTWFuYWdl
ci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0tLSB1dGlsL1RpbWVyTWFuYWdlci5qcwkocmV2aXNpb24gMjM0Mjcp
CisrKyB1dGlsL1RpbWVyTWFuYWdlci5qcwkod29ya2luZyBjb3B5KQpAQCAtMTcxLDggKzE3MSw4
IEBACiAgICAgewogICAgICAgLy8gRmluZCB0aGlzIHRpbWVyIGlkIGluIHRoZSB0aW1lLW9yZGVy
ZWQgbGlzdAogICAgICAgdmFyIHRpbWVyUXVldWUgPSB0aGlzLnNlbGYoYXJndW1lbnRzKS5fX3Rp
bWVyUXVldWU7Ci0gICAgICB2YXIgbGVuZ3RoID0gdGltZXJRdWV1ZS5sZW5ndGg7Ci0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQorICAgICAgdmFyIGxlbiA9IHRpbWVyUXVl
dWUubGVuZ3RoOworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykKICAgICAgIHsK
ICAgICAgICAgLy8gSXMgdGhpcyB0aGUgb25lIHdlJ3JlIGxvb2tpbmcgZm9yPwogICAgICAgICBp
ZiAodGltZXJRdWV1ZVtpXSA9PSB0aW1lcklkKQpAQCAtMjE4LDggKzIxOCw4IEBACiAgICAgICAv
LyBhcHByb3ByaWF0ZSBwbGFjZSB0byBpbnNlcnQgdGhpcyB0aW1lci4KICAgICAgIHZhciB0aW1l
clF1ZXVlID0gdGhpcy5zZWxmKGFyZ3VtZW50cykuX190aW1lclF1ZXVlOwogICAgICAgdmFyIHRp
bWVyRGF0YSA9IHRoaXMuc2VsZihhcmd1bWVudHMpLl9fdGltZXJEYXRhOwotICAgICAgdmFyIGxl
bmd0aCA9IHRpbWVyUXVldWUubGVuZ3RoOwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5n
dGg7IGkrKykKKyAgICAgIHZhciBsZW4gPSB0aW1lclF1ZXVlLmxlbmd0aDsKKyAgICAgIGZvciAo
dmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIC8vIEhhdmUgd2UgcmVh
Y2hlZCBhIGxhdGVyIHRpbWU/CiAgICAgICAgIGlmICh0aW1lckRhdGFbdGltZXJRdWV1ZVtpXV0u
ZXhwaXJlQXQgPiBleHBpcmVBdCkKQEAgLTIzMyw3ICsyMzMsNyBAQAogICAgICAgfQogCiAgICAg
ICAvLyBEaWQgd2UgZmluZCBzb21lcGxhY2UgaW4gdGhlIG1pZGRsZSBvZiB0aGUgcXVldWUgZm9y
IGl0PwotICAgICAgaWYgKHRpbWVyUXVldWUubGVuZ3RoID09IGxlbmd0aCkKKyAgICAgIGlmICh0
aW1lclF1ZXVlLmxlbmd0aCA9PSBsZW4pCiAgICAgICB7CiAgICAgICAgIC8vIE5vcGUuICBJbnNl
cnQgaXQgYXQgdGhlIGVuZC4KICAgICAgICAgdGltZXJRdWV1ZS5wdXNoKHRpbWVySWQpOwo=
</data>

          </attachment>
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>816</attachid>
            <date>2010-10-06 12:35:00 +0200</date>
            <delta_ts>2010-10-06 12:35:34 +0200</delta_ts>
            <desc>Declaring comparison variable in parameter 2 in parameter 1 where it is possible</desc>
            <filename>diff_rev_2.txt</filename>
            <type>text/plain</type>
            <size>32881</size>
            <attacher>dev</attacher>
            
              <data encoding="base64">SW5kZXg6IGRvbS9Ob2RlLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGRvbS9Ob2RlLmpzCShyZXZpc2lvbiAy
MzQ1MykKKysrIGRvbS9Ob2RlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yODUsOCArMjg1LDggQEAK
ICAgICAgIHN3aXRjaChub2RlLm5vZGVUeXBlKQogICAgICAgewogICAgICAgICBjYXNlIDE6IC8v
IE5PREVfRUxFTUVOVAotICAgICAgICAgIHZhciBpLCBhPVtdLCBub2Rlcz1ub2RlLmNoaWxkTm9k
ZXMsIGxlbmd0aD1ub2Rlcy5sZW5ndGg7Ci0gICAgICAgICAgZm9yIChpPTA7IGk8bGVuZ3RoOyBp
KyspIHsKKyAgICAgICAgICB2YXIgYT1bXSwgbm9kZXM9bm9kZS5jaGlsZE5vZGVzOworICAgICAg
ICAgIGZvciAodmFyIGk9MCwgbGVuPW5vZGVzLmxlbmd0aDsgaTxsZW47IGkrKykgewogICAgICAg
ICAgICAgYVtpXSA9IHRoaXMuZ2V0VGV4dChub2Rlc1tpXSk7CiAgICAgICAgICAgfTsKIApJbmRl
eDogdGVzdC90eXBlL0Jhc2VBcnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3R5cGUvQmFzZUFy
cmF5LmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHRlc3QvdHlwZS9CYXNlQXJyYXkuanMJKHdvcmtp
bmcgY29weSkKQEAgLTc4LDEyICs3OCwxMiBAQAogICAgIHRlc3RBcnJheVB1c2ggOiBmdW5jdGlv
bigpCiAgICAgewogICAgICAgdmFyIGxpc3QgPSBuZXcgcXgudGVzdC50eXBlLlRlc3RBcnJheSgx
LCAyKTsKLSAgICAgIHZhciBsZW5ndGggPSBsaXN0LnB1c2goMyk7Ci0gICAgICB0aGlzLmFzc2Vy
dEVxdWFscygzLCBsZW5ndGgpOworICAgICAgdmFyIGxlbiA9IGxpc3QucHVzaCgzKTsKKyAgICAg
IHRoaXMuYXNzZXJ0RXF1YWxzKDMsIGxlbik7CiAgICAgICB0aGlzLmFzc2VydEFycmF5RXF1YWxz
KFsxLCAyLCAzXSwgbGlzdCk7CiAKLSAgICAgIHZhciBsZW5ndGggPSBsaXN0LnB1c2goNCwgNSk7
Ci0gICAgICB0aGlzLmFzc2VydEVxdWFscyg1LCBsZW5ndGgpOworICAgICAgbGVuID0gbGlzdC5w
dXNoKDQsIDUpOworICAgICAgdGhpcy5hc3NlcnRFcXVhbHMoNSwgbGVuKTsKICAgICAgIHRoaXMu
YXNzZXJ0QXJyYXlFcXVhbHMoWzEsIDIsIDMsIDQsIDVdLCBsaXN0KTsKICAgICB9LAogCkBAIC0x
MDcsNyArMTA3LDcgQEAKICAgICB0ZXN0QXJyYXlVbnNoaWZ0IDogZnVuY3Rpb24oKQogICAgIHsK
ICAgICAgIHZhciBsaXN0ID0gbmV3IHF4LnRlc3QudHlwZS5UZXN0QXJyYXkoMiwgMywgNCwgNSk7
Ci0gICAgICB2YXIgbGVuZ3RoID0gbGlzdC51bnNoaWZ0KDEpOworICAgICAgdmFyIGxlbiA9IGxp
c3QudW5zaGlmdCgxKTsKICAgICAgIHRoaXMuYXNzZXJ0QXJyYXlFcXVhbHMoWzEsIDIsIDMsIDQs
IDVdLCBsaXN0KTsKICAgICB9LAogCkluZGV4OiB0ZXN0L3VpL3NlbGVjdGlvbi9TdGFjay5qcwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9TdGFjay5qcwkocmV2aXNpb24gMjM0NTMp
CisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9TdGFjay5qcwkod29ya2luZyBjb3B5KQpAQCAtMjcsNyAr
MjcsNiBAQAogCiAgICAgc2V0VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgdmFyIGxlbmd0
aCA9IDEwOwogICAgICAgdGhpcy5fbm90SW5TZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX21v
ZGUgPSAiIjsKIApAQCAtNDcsNyArNDYsNyBAQAogICAgICAgdGhpcy5fd2lkZ2V0ID0gbmV3IHF4
LnVpLmNvbnRhaW5lci5TdGFjaygpOwogICAgICAgdGhpcy5nZXRSb290KCkuYWRkKHRoaXMuX3dp
ZGdldCk7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKyAgICAg
IGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykgewogICAgICAgICB2YXIgaXRlbSA9IHRoaXMu
X19jcmVhdGVJdGVtKCJQYWdlIiArIGksIGNvbG9yc1tpXSk7CiAgICAgICAgIHRoaXMuX3dpZGdl
dC5hZGQoaXRlbSk7CiAKQEAgLTk5LDQgKzk4LDQgQEAKICAgICAgIHJldHVybiBpdGVtOwogICAg
IH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0
L3VpL3NlbGVjdGlvbi9UcmVlU2luZ2xlU2VsZWN0aW9uLmpzCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3Qv
dWkvc2VsZWN0aW9uL1RyZWVTaW5nbGVTZWxlY3Rpb24uanMJKHJldmlzaW9uIDIzNDUzKQorKysg
dGVzdC91aS9zZWxlY3Rpb24vVHJlZVNpbmdsZVNlbGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpA
QCAtMjUsNyArMjUsNiBAQAogICB7CiAgICAgc2V0VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAg
ICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhpcy5fbm90SW5TZWxlY3Rpb24gPSBbXTsKICAg
ICAgIHRoaXMuX21vZGUgPSAic2luZ2xlIjsKIApAQCAtNDEsNyArNDAsNyBAQAogICAgICAgcm9v
dC5zZXRPcGVuKHRydWUpOwogICAgICAgdGhpcy5fd2lkZ2V0LnNldFJvb3Qocm9vdCk7CiAKLSAg
ICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkg
PSAwOyBpIDwgMTA7IGkrKykgewogICAgICAgICB2YXIgZm9sZGVyID0gbmV3IHF4LnVpLnRyZWUu
VHJlZUZvbGRlcigiRm9sZGVyIiArIGkpOwogICAgICAgICBmb2xkZXIuc2V0T3Blbih0cnVlKTsK
ICAgICAgICAgdmFyIGZpbGUgPSBuZXcgcXgudWkudHJlZS5UcmVlRmlsZSgiRmlsZSIgKyBpKTsK
QEAgLTEyMiw0ICsxMjEsNCBAQAogICAgICAgdHJlZS5kZXN0cm95KCk7CiAgICAgfQogICB9Ci19
KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0
aW9uL1NlbGVjdEJveC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9TZWxlY3RC
b3guanMJKHJldmlzaW9uIDIzNDUzKQorKysgdGVzdC91aS9zZWxlY3Rpb24vU2VsZWN0Qm94Lmpz
CSh3b3JraW5nIGNvcHkpCkBAIC0yNSwxNCArMjUsMTMgQEAKICAgewogICAgIHNldFVwIDogZnVu
Y3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSAxMDsKICAgICAgIHRoaXMuX25vdElu
U2VsZWN0aW9uID0gW107CiAgICAgICB0aGlzLl9tb2RlID0gIm9uZSI7CiAKICAgICAgIHRoaXMu
X3dpZGdldCA9IG5ldyBxeC51aS5mb3JtLlNlbGVjdEJveCgpOwogICAgICAgdGhpcy5nZXRSb290
KCkuYWRkKHRoaXMuX3dpZGdldCk7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3Ro
OyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykgewogICAgICAgICB2
YXIgaXRlbSA9IG5ldyBxeC51aS5mb3JtLkxpc3RJdGVtKCJMaXN0SXRlbSIgKyBpKTsKICAgICAg
ICAgdGhpcy5fd2lkZ2V0LmFkZChpdGVtKTsKIApAQCAtNzcsNCArNzYsNCBAQAogICAgICAgcmV0
dXJuIG5ldyBxeC51aS5mb3JtLkxpc3RJdGVtKG5hbWUpOwogICAgIH0KICAgfQotfSk7ClwgTm8g
bmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L3VpL3NlbGVjdGlvbi9SYWRp
b0dyb3VwLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9uL1JhZGlvR3JvdXAuanMJ
KHJldmlzaW9uIDIzNDUzKQorKysgdGVzdC91aS9zZWxlY3Rpb24vUmFkaW9Hcm91cC5qcwkod29y
a2luZyBjb3B5KQpAQCAtMjcsNyArMjcsNiBAQAogCiAgICAgc2V0VXAgOiBmdW5jdGlvbigpCiAg
ICAgewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhpcy5fbW9kZSA9ICJvbmUiOwog
ICAgICAgdGhpcy5fX3JhZGlvQnV0dG9ucyA9IFtdOwogICAgICAgdGhpcy5fbm90SW5TZWxlY3Rp
b24gPSBbXTsKQEAgLTM1LDcgKzM0LDcgQEAKICAgICAgIHRoaXMuX3dpZGdldCA9IG5ldyBxeC51
aS5mb3JtLlJhZGlvR3JvdXAoKTsKICAgICAgIHZhciByb290ID0gdGhpcy5nZXRSb290KCk7CiAK
LSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFy
IGkgPSAwOyBpIDwgMTA7IGkrKykgewogICAgICAgICB2YXIgaXRlbSA9IG5ldyBxeC51aS5mb3Jt
LlJhZGlvQnV0dG9uKCJSYWRpb0J1dHRvbiIgKyBpKTsKICAgICAgICAgcm9vdC5hZGQoaXRlbSwg
e3RvcDogMjAqaX0pOwogICAgICAgICB0aGlzLl93aWRnZXQuYWRkKGl0ZW0pOwpAQCAtMTM2LDQg
KzEzNSw0IEBACiAgICAgICByYWRpb0J1dHRvbjEuZGlzcG9zZSgpOwogICAgIH0KICAgfQotfSk7
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L3VpL3NlbGVjdGlv
bi9MaXN0TXVsdGlTZWxlY3Rpb24uanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24v
TGlzdE11bHRpU2VsZWN0aW9uLmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHRlc3QvdWkvc2VsZWN0
aW9uL0xpc3RNdWx0aVNlbGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpAQCAtMjUsNyArMjUsNiBA
QAogICB7CiAgICAgc2V0VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgdmFyIGxlbmd0aCA9
IDEwOwogICAgICAgdGhpcy5fc2VsZWN0aW9uID0gW107CiAgICAgICB0aGlzLl9ub3RJblNlbGVj
dGlvbiA9IFtdOwogICAgICAgdGhpcy5fbW9kZSA9ICJtdWx0aSI7CkBAIC00Miw3ICs0MSw3IEBA
CiAgICAgICB0aGlzLmFzc2VydElkZW50aWNhbChzZWxlY3Rpb24ubGVuZ3RoLCAwLAogICAgICAg
ICAiQ291bGRuJ3Qgc2V0dXAgdGVzdCwgYmVjYXVzZSBzZWxlY3Rpb24gaXNuJ3QgZW1wdHkiKTsK
IAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2
YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVtID0gbmV3IHF4LnVpLmZv
cm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkpOwogICAgICAgICB0aGlzLl93aWRnZXQuYWRkKGl0
ZW0pOwogCkBAIC04MCw0ICs3OSw0IEBACiAgICAgICByZXR1cm4gbmV3IHF4LnVpLmZvcm0uTGlz
dEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
Cit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1RyZWVNdWx0aVNlbGVjdGlvbi5qcwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9UcmVlTXVsdGlTZWxlY3Rpb24uanMJKHJldmlz
aW9uIDIzNDUzKQorKysgdGVzdC91aS9zZWxlY3Rpb24vVHJlZU11bHRpU2VsZWN0aW9uLmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0yNSw3ICsyNSw2IEBACiAgIHsKICAgICBzZXRVcCA6IGZ1bmN0aW9u
KCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CiAgICAgICB0aGlzLl9zZWxlY3Rpb24g
PSBbXTsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0aW9uID0gW107CiAgICAgICB0aGlzLl9tb2Rl
ID0gIm11bHRpIgpAQCAtNDMsNyArNDIsNyBAQAogICAgICAgdGhpcy5fd2lkZ2V0LnNldFJvb3Qo
cm9vdCk7CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbi5wdXNoKHJvb3QpOwogCi0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IDEwOyBpKyspIHsKICAgICAgICAgdmFyIGZvbGRlciA9IG5ldyBxeC51aS50cmVlLlRyZWVG
b2xkZXIoIkZvbGRlciIgKyBpKTsKICAgICAgICAgZm9sZGVyLnNldE9wZW4odHJ1ZSk7CiAgICAg
ICAgIHRoaXMuX25vdEluU2VsZWN0aW9uLnB1c2goZm9sZGVyKTsKQEAgLTg1LDQgKzg0LDQgQEAK
ICAgICAgIHJldHVybiBuZXcgcXgudWkudHJlZS5UcmVlRmlsZShuYW1lKTsKICAgICB9CiAgIH0K
LX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogdGVzdC91aS9zZWxl
Y3Rpb24vVGFiVmlldy5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3NlbGVjdGlvbi9UYWJWaWV3
LmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHRlc3QvdWkvc2VsZWN0aW9uL1RhYlZpZXcuanMJKHdv
cmtpbmcgY29weSkKQEAgLTI3LDE0ICsyNywxMyBAQAogCiAgICAgc2V0VXAgOiBmdW5jdGlvbigp
CiAgICAgewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhpcy5fbm90SW5TZWxlY3Rp
b24gPSBbXTsKICAgICAgIHRoaXMuX21vZGUgPSAib25lIjsKIAogICAgICAgdGhpcy5fd2lkZ2V0
ID0gbmV3IHF4LnVpLnRhYnZpZXcuVGFiVmlldygpOwogICAgICAgdGhpcy5nZXRSb290KCkuYWRk
KHRoaXMuX3dpZGdldCk7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKysp
IHsKKyAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykgewogICAgICAgICB2YXIgaXRl
bSA9IG5ldyBxeC51aS50YWJ2aWV3LlBhZ2UoIlBhZ2UiICsgaSk7CiAgICAgICAgIHRoaXMuX3dp
ZGdldC5hZGQoaXRlbSk7CiAKQEAgLTcyLDQgKzcxLDQgQEAKICAgICAgIHJldHVybiBuZXcgcXgu
dWkudGFidmlldy5QYWdlKG5hbWUpOwogICAgIH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBl
bmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L3VpL3NlbGVjdGlvbi9MaXN0U2luZ2xlU2VsZWN0
aW9uLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9uL0xpc3RTaW5nbGVTZWxlY3Rp
b24uanMJKHJldmlzaW9uIDIzNDUzKQorKysgdGVzdC91aS9zZWxlY3Rpb24vTGlzdFNpbmdsZVNl
bGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpAQCAtMjUsNyArMjUsNiBAQAogICB7CiAgICAgc2V0
VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhp
cy5fbm90SW5TZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX21vZGUgPSAic2luZ2xlIjsKIApA
QCAtMzcsNyArMzYsNyBAQAogICAgICAgfSk7CiAgICAgICB0aGlzLmdldFJvb3QoKS5hZGQodGhp
cy5fd2lkZ2V0KTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewor
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVtID0g
bmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkpOwogICAgICAgICB0aGlzLl93
aWRnZXQuYWRkKGl0ZW0pOwogCkBAIC03OCw0ICs3Nyw0IEBACiAgICAgICByZXR1cm4gbmV3IHF4
LnVpLmZvcm0uTGlzdEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0
IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvbGF5b3V0L1V0aWwuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gdGVzdC91aS9sYXlvdXQvVXRpbC5qcwkocmV2aXNpb24gMjM0NTMpCisrKyB0ZXN0L3Vp
L2xheW91dC9VdGlsLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yOSwxMyArMjksMTIgQEAKIAogICAg
ICAgZm9yICh2YXIgcnVuPTA7IHJ1bjxudW1SdW5zOyBydW4rKykKICAgICAgIHsKLSAgICAgICAg
dmFyIGxlbiA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDIwKSArIDE7CiAgICAgICAgIHZh
ciBzdW1NaW4gPSAwOwogICAgICAgICB2YXIgc3VtTWF4ID0gMDsKICAgICAgICAgdmFyIHN1bVZh
bHVlID0gMDsKICAgICAgICAgdmFyIGZsZXhpYmxlcyA9IHt9OwogCi0gICAgICAgIGZvciAodmFy
IGo9MDsgajxsZW47IGorKykKKyAgICAgICAgZm9yICh2YXIgaj0wLCBsZW4gPSBNYXRoLnJvdW5k
KE1hdGgucmFuZG9tKCkgKiAyMCkgKyAxOyBqPGxlbjsgaisrKQogICAgICAgICB7CiAgICAgICAg
ICAgdmFyIG1pbiA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDIwKTsKICAgICAgICAgICB2
YXIgbWF4ID0gbWluICsgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogNTApICsgMTsKQEAgLTg2
LDE0ICs4NSwxMyBAQAogCiAgICAgICBmb3IgKHZhciBydW49MDsgcnVuPG51bVJ1bnM7IHJ1bisr
KQogICAgICAgewotICAgICAgICB2YXIgbGVuID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICog
MjApICsgMTsKICAgICAgICAgdmFyIHN1bU1pbiA9IDA7CiAgICAgICAgIHZhciBzdW1NYXggPSAw
OwogICAgICAgICB2YXIgc3VtVmFsdWUgPSAwOwogICAgICAgICB2YXIgc3VtV2VpZ2h0cyA9IDA7
CiAgICAgICAgIHZhciBmbGV4aWJsZXMgPSB7fTsKIAotICAgICAgICBmb3IgKHZhciBqPTA7IGo8
bGVuOyBqKyspCisgICAgICAgIGZvciAodmFyIGo9MCwgbGVuID0gTWF0aC5yb3VuZChNYXRoLnJh
bmRvbSgpICogMjApICsgMTsgajxsZW47IGorKykKICAgICAgICAgewogICAgICAgICAgIHZhciBt
aW4gPSAwOwogICAgICAgICAgIHZhciBtYXggPSAzMjAwMDsKSW5kZXg6IGxhbmcvT2JqZWN0Lmpz
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KLS0tIGxhbmcvT2JqZWN0LmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIGxhbmcv
T2JqZWN0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMDYsMTEgKzEwNiwxMSBAQAogICAgICAgICAg
IHJldHVybiB0cnVlOwogICAgICAgICB9CiAKLSAgICAgICAgdmFyIGxlbmd0aCA9IDA7CisgICAg
ICAgIHZhciBsZW4gPSAwOwogCiAgICAgICAgIGZvciAodmFyIGtleSBpbiBtYXApCiAgICAgICAg
IHsKLSAgICAgICAgICBpZiAoKCsrbGVuZ3RoKSA+PSBtaW5MZW5ndGgpIHsKKyAgICAgICAgICBp
ZiAoKCsrbGVuKSA+PSBtaW5MZW5ndGgpIHsKICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAg
ICAgICAgIH0KICAgICAgICAgfQpAQCAtMjE5LDkgKzIxOSw3IEBACiAgICAgICAgIHF4LmNvcmUu
QXNzZXJ0ICYmIHF4LmNvcmUuQXNzZXJ0LmFzc2VydE1hcCh0YXJnZXQsICJJbnZhbGlkIGFyZ3Vt
ZW50ICd0YXJnZXQnIik7CiAgICAgICB9CiAKLSAgICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVu
Z3RoOwotCi0gICAgICBmb3IgKHZhciBpPTE7IGk8bGVuOyBpKyspIHsKKyAgICAgIGZvciAodmFy
IGk9MSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDsgaTxsZW47IGkrKykgewogICAgICAgICBxeC5s
YW5nLk9iamVjdC5tZXJnZVdpdGgodGFyZ2V0LCBhcmd1bWVudHNbaV0pOwogICAgICAgfQogCklu
ZGV4OiBsYW5nL0pzb25JbXBsLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGxhbmcvSnNvbkltcGwuanMJKHJl
dmlzaW9uIDIzNDUzKQorKysgbGFuZy9Kc29uSW1wbC5qcwkod29ya2luZyBjb3B5KQpAQCAtMTc0
LDggKzE3NCw3IEBACiAKICAgICAgICAgICAvLyBUaGUgdmFsdWUgaXMgYW4gYXJyYXkuIFN0cmlu
Z2lmeSBldmVyeSBlbGVtZW50LiBVc2UgbnVsbCBhcyBhIHBsYWNlaG9sZGVyCiAgICAgICAgICAg
Ly8gZm9yIG5vbi1KU09OIHZhbHVlcy4KLSAgICAgICAgICB2YXIgbGVuZ3RoID0gdmFsdWUubGVu
Z3RoOwotICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHsKKyAg
ICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgbGVuOyBpICs9
IDEpIHsKICAgICAgICAgICAgIHBhcnRpYWxbaV0gPSB0aGlzLl9fc3RyKGksIHZhbHVlKSB8fCAn
bnVsbCc7CiAgICAgICAgICAgfQogCkBAIC0xODMsNyArMTgyLDcgQEAKIAogICAgICAgICAgIC8v
IEpvaW4gYWxsIG9mIHRoZSBlbGVtZW50cyB0b2dldGhlciwgc2VwYXJhdGVkIHdpdGggY29tbWFz
LCBhbmQgd3JhcCB0aGVtIGluCiAgICAgICAgICAgLy8gYnJhY2tldHMuCi0gICAgICAgICAgaWYg
KHBhcnRpYWwubGVuZ3RoID09PSAwKSB7CisgICAgICAgICAgaWYgKHBhcnRpYWwubGVuID09PSAw
KSB7CiAgICAgICAgICAgICB2YXIgc3RyaW5nID0gJ1tdJzsKICAgICAgICAgICB9IGVsc2UgaWYg
KHRoaXMuX19nYXApIHsKICAgICAgICAgICAgIHN0cmluZyA9ICdbXG4nICsgdGhpcy5fX2dhcCAr
IHBhcnRpYWwuam9pbignLFxuJyArIHRoaXMuX19nYXApICsgJ1xuJyArIG1pbmQgKyAnXScKQEAg
LTIwNiw4ICsyMDUsNyBAQAogICAgICAgICAgIC8vIElmIHRoZSByZXBsYWNlciBpcyBhbiBhcnJh
eSwgdXNlIGl0IHRvIHNlbGVjdCB0aGUgbWVtYmVycyB0byBiZSBzdHJpbmdpZmllZC4KICAgICAg
ICAgICBpZiAodGhpcy5fX3JlcCAmJiB0eXBlb2YgdGhpcy5fX3JlcCA9PT0gJ29iamVjdCcpCiAg
ICAgICAgICAgewotICAgICAgICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuX19yZXAubGVuZ3RoOwot
ICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkKKyAgICAgICAg
ICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLl9fcmVwLmxlbmd0aDsgaSA8IGxlbjsgaSAr
PSAxKQogICAgICAgICAgICAgewogICAgICAgICAgICAgICB2YXIgayA9IHRoaXMuX19yZXBbaV07
CiAgICAgICAgICAgICAgIGlmICh0eXBlb2YgayA9PT0gJ3N0cmluZycpCkBAIC00MDksNCArNDA3
LDQgQEAKICAgICAgIHJldHVybiByZXZpdmVyLmNhbGwoaG9sZGVyLCBrZXksIHZhbHVlKTsKICAg
ICB9CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogbGFu
Zy9BcnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsYW5nL0FycmF5LmpzCShyZXZpc2lvbiAyMzQ1MykK
KysrIGxhbmcvQXJyYXkuanMJKHdvcmtpbmcgY29weSkKQEAgLTM3NCwxMyArMzc0LDEzIEBACiAg
ICAgICovCiAgICAgZXF1YWxzIDogZnVuY3Rpb24oYXJyMSwgYXJyMikKICAgICB7Ci0gICAgICB2
YXIgbGVuZ3RoID0gYXJyMS5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gYXJyMS5sZW5ndGg7CiAK
LSAgICAgIGlmIChsZW5ndGggIT09IGFycjIubGVuZ3RoKSB7CisgICAgICBpZiAobGVuICE9PSBh
cnIyLmxlbmd0aCkgewogICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICB9CiAKLSAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkr
KykKICAgICAgIHsKICAgICAgICAgaWYgKGFycjFbaV0gIT09IGFycjJbaV0pIHsKICAgICAgICAg
ICByZXR1cm4gZmFsc2U7CkBAIC00MjIsOSArNDIyLDkgQEAKICAgICAgICAgcXguY29yZS5Bc3Nl
cnQgJiYgcXguY29yZS5Bc3NlcnQuYXNzZXJ0QXJyYXkoYXJyLCAiUGFyYW1ldGVyIG11c3QgYmUg
YW4gYXJyYXkuIik7CiAgICAgICB9CiAKLSAgICAgIHZhciBpLCBsZW49YXJyLmxlbmd0aCwgcmVz
dWx0ID0gYXJyWzBdOworICAgICAgdmFyIHJlc3VsdCA9IGFyclswXTsKIAotICAgICAgZm9yIChp
ID0gMTsgaSA8IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDEsIGxlbj1hcnIubGVuZ3Ro
OyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChhcnJbaV0gPiByZXN1bHQpIHsK
ICAgICAgICAgICByZXN1bHQgPSBhcnJbaV07CkBAIC00NDgsOSArNDQ4LDkgQEAKICAgICAgICAg
cXguY29yZS5Bc3NlcnQgJiYgcXguY29yZS5Bc3NlcnQuYXNzZXJ0QXJyYXkoYXJyLCAiUGFyYW1l
dGVyIG11c3QgYmUgYW4gYXJyYXkuIik7CiAgICAgICB9CiAKLSAgICAgIHZhciBpLCBsZW49YXJy
Lmxlbmd0aCwgcmVzdWx0ID0gYXJyWzBdOworICAgICAgdmFyIHJlc3VsdCA9IGFyclswXTsKIAot
ICAgICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDEsIGxl
bj1hcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChhcnJbaV0g
PCByZXN1bHQpIHsKICAgICAgICAgICByZXN1bHQgPSBhcnJbaV07CkluZGV4OiB0eXBlL0Jhc2VB
cnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB0eXBlL0Jhc2VBcnJheS5qcwkocmV2aXNpb24gMjM0NTMp
CisrKyB0eXBlL0Jhc2VBcnJheS5qcwkod29ya2luZyBjb3B5KQpAQCAtNDQ3LDggKzQ0Nyw4IEBA
CiAKICAgICB2YXIgYXJncyA9ICJwb3AucHVzaC5yZXZlcnNlLnNoaWZ0LnNvcnQuc3BsaWNlLnVu
c2hpZnQuam9pbi5zbGljZSIuc3BsaXQoIi4iKTsKIAotICAgIGZvciAodmFyIGxlbmd0aCA9IGFy
Z3MubGVuZ3RoOyBsZW5ndGg7KSB7Ci0gICAgICBTdGFjay5wcm90b3R5cGVbYXJnc1stLWxlbmd0
aF1dID0gQXJyYXkucHJvdG90eXBlW2FyZ3NbbGVuZ3RoXV07CisgICAgZm9yICh2YXIgbGVuID0g
YXJncy5sZW5ndGg7IGxlbjspIHsKKyAgICAgIFN0YWNrLnByb3RvdHlwZVthcmdzWy0tbGVuXV0g
PSBBcnJheS5wcm90b3R5cGVbYXJnc1tsZW5dXTsKICAgICB9CiAgIH07CiAKQEAgLTQ2MCw3ICs0
NjAsNyBAQAogICB7CiAgICAgdmFyIGNvbnN0cnVjdG9yID0gdGhpcy5zbGljZSgwKTsKIAotICAg
IGZvciAodmFyIGk9MCwgbGVuZ3RoPWFyZ3VtZW50cy5sZW5ndGg7IGk8bGVuZ3RoOyBpKyspCisg
ICAgZm9yICh2YXIgaT0wLCBsZW49YXJndW1lbnRzLmxlbmd0aDsgaTxsZW47IGkrKykKICAgICB7
CiAgICAgICB2YXIgY29weTsKIApAQCAtNTQ4LDEwICs1NDgsMTAgQEAKIH0KIAogCi1mdW5jdGlv
biBTdGFjayhsZW5ndGgpCitmdW5jdGlvbiBTdGFjayhsZW4pCiB7CiAgIGlmKGFyZ3VtZW50cy5s
ZW5ndGggPT09IDEgJiYgdHlwZW9mIGxlbmd0aCA9PT0gIm51bWJlciIpIHsKLSAgICB0aGlzLmxl
bmd0aCA9IC0xIDwgbGVuZ3RoICYmIGxlbmd0aCA9PT0gbGVuZ3RoID4+IC41ID8gbGVuZ3RoIDog
dGhpcy5wdXNoKGxlbmd0aCk7CisgICAgdGhpcy5sZW5ndGggPSAtMSA8IGxlbiAmJiBsZW4gPT09
IGxlbiA+PiAuNSA/IGxlbiA6IHRoaXMucHVzaChsZW4pOwogICB9IGVsc2UgaWYoYXJndW1lbnRz
Lmxlbmd0aCkgewogICAgIHRoaXMucHVzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICB9Cklu
ZGV4OiBCb290c3RyYXAuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gQm9vdHN0cmFwLmpzCShyZXZpc2lvbiAy
MzQ1MykKKysrIEJvb3RzdHJhcC5qcwkod29ya2luZyBjb3B5KQpAQCAtMzIwLDEzICszMjAsMTMg
QEAKIAogICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbihtYXApCiAgICAgICB7Ci0gICAgICAgIHZh
ciBsZW5ndGggPSAwOworICAgICAgICB2YXIgbGVuID0gMDsKIAogICAgICAgICBmb3IgKHZhciBr
ZXkgaW4gbWFwKSB7Ci0gICAgICAgICAgbGVuZ3RoKys7CisgICAgICAgICAgbGVuKys7CiAgICAg
ICAgIH0KIAotICAgICAgICByZXR1cm4gbGVuZ3RoOworICAgICAgICByZXR1cm4gbGVuOwogICAg
ICAgfQogICAgIH0pWygoe30pLl9fY291bnRfXyA9PSAwKSA/ICJjb3VudCIgOiAiZGVmYXVsdCJd
LAogCkluZGV4OiBodG1sL0VsZW1lbnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gaHRtbC9FbGVtZW50Lmpz
CShyZXZpc2lvbiAyMzQ1MykKKysrIGh0bWwvRWxlbWVudC5qcwkod29ya2luZyBjb3B5KQpAQCAt
NTExLDkgKzUxMSw4IEBACiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47CiAg
ICAgICBpZiAoY2hpbGRyZW4pCiAgICAgICB7Ci0gICAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJl
bi5sZW5ndGg7CiAgICAgICAgIHZhciBjaGlsZDsKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxl
bmd0aDsgaSsrKQorICAgICAgICBmb3IgKHZhciBpPTAsIGxlbj1jaGlsZHJlbi5sZW5ndGg7IGk8
bGVuOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogCkBA
IC01MzAsNyArNTI5LDcgQEAKIAogICAgICAgICB0aGlzLl9jb3B5RGF0YShmYWxzZSk7CiAKLSAg
ICAgICAgaWYgKGNoaWxkcmVuICYmIGxlbmd0aCA+IDApIHsKKyAgICAgICAgaWYgKGNoaWxkcmVu
ICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgICB0aGlzLl9pbnNlcnRDaGlsZHJl
bigpOwogICAgICAgICB9CiAgICAgICB9CkBAIC01NjcsMTMgKzU2NiwxMyBAQAogICAgIF9pbnNl
cnRDaGlsZHJlbiA6IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlz
Ll9fY2hpbGRyZW47Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAg
dmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZDsKIAotICAgICAgaWYg
KGxlbmd0aCA+IDIpCisgICAgICBpZiAobGVuID4gMikKICAgICAgIHsKICAgICAgICAgdmFyIGRv
bUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7Ci0gICAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsg
aSsrKQogICAgICAgICB7CiAgICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAg
ICBpZiAoY2hpbGQuX19lbGVtZW50ICYmIGNoaWxkLl9faW5jbHVkZWQpIHsKQEAgLTU4Niw3ICs1
ODUsNyBAQAogICAgICAgZWxzZQogICAgICAgewogICAgICAgICB2YXIgZG9tRWxlbWVudCA9IHRo
aXMuX19lbGVtZW50OwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAg
ICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgewogICAgICAgICAgIGNoaWxk
ID0gY2hpbGRyZW5baV07CiAgICAgICAgICAgaWYgKGNoaWxkLl9fZWxlbWVudCAmJiBjaGlsZC5f
X2luY2x1ZGVkKSB7CkBAIC0yNjg4LDQgKzI2ODcsNCBAQAogICAgICAgdGhpcy5fX3Byb3BlcnR5
Sm9icyA9IHRoaXMuX19lbGVtZW50ID0gdGhpcy5fX3BhcmVudCA9CiAgICAgICB0aGlzLl9fbGF6
eVNjcm9sbEludG9WaWV3WCA9IHRoaXMuX19sYXp5U2Nyb2xsSW50b1ZpZXdZID0gbnVsbDsKICAg
fQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiBkYXRhL2NvbnRy
b2xsZXIvTGlzdC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkYXRhL2NvbnRyb2xsZXIvTGlzdC5qcwkocmV2
aXNpb24gMjM0NTMpCisrKyBkYXRhL2NvbnRyb2xsZXIvTGlzdC5qcwkod29ya2luZyBjb3B5KQpA
QCAtMzUxLDggKzM1MSw3IEBACiAgICAgICAgIGlmICh0YXJnZXQgIT0gbnVsbCkgewogICAgICAg
ICAgIC8vIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZSBiaWRuaW5ncyB0b28gc28gdXNlIHRoZSBjb250
cm9sbGVyIG1ldGhvZAogICAgICAgICAgIC8vIGZvciByZW12aW5nIGl0ZW1zCi0gICAgICAgICAg
dmFyIGxlbmd0aCA9IHRhcmdldC5nZXRDaGlsZHJlbigpLmxlbmd0aDsKLSAgICAgICAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisgICAgICAgICAgZm9yICh2YXIgaSA9IDAs
IGxlbiA9IHRhcmdldC5nZXRDaGlsZHJlbigpLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAg
ICAgICAgICB0aGlzLl9fcmVtb3ZlSXRlbSgpOwogICAgICAgICAgIH07CiAgICAgICAgIH0KSW5k
ZXg6IGJvbS9Db2xsZWN0aW9uLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGJvbS9Db2xsZWN0aW9uLmpzCShy
ZXZpc2lvbiAyMzQ1MykKKysrIGJvbS9Db2xsZWN0aW9uLmpzCSh3b3JraW5nIGNvcHkpCkBAIC02
MSwxMSArNjEsMTEgQEAKICAgewogICAgIHJldHVybiBmdW5jdGlvbihhcmcxLCBhcmcyLCBhcmcz
LCBhcmc0LCBhcmc1LCBhcmc2KQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0
aDsKLSAgICAgIGlmIChsZW5ndGggPiAwKQorICAgICAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoOwor
ICAgICAgaWYgKGxlbiA+IDApCiAgICAgICB7CiAgICAgICAgIHZhciBwdG4gPSBjbGF6elttZXRo
b2RdOwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAo
dmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgewogICAgICAgICAgIGlmICh0aGlzW2ldLm5v
ZGVUeXBlID09PSAxKSB7CiAgICAgICAgICAgICBwdG4uY2FsbChjbGF6eiwgdGhpc1tpXSwgYXJn
MSwgYXJnMiwgYXJnMywgYXJnNCwgYXJnNSwgYXJnNik7CkluZGV4OiB1aS92aXJ0dWFsL2Zvcm0v
TGlzdENvbnRyb2xsZXIuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdmlydHVhbC9mb3JtL0xpc3RDb250
cm9sbGVyLmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHVpL3ZpcnR1YWwvZm9ybS9MaXN0Q29udHJv
bGxlci5qcwkod29ya2luZyBjb3B5KQpAQCAtNTcwLDggKzU3MCw4IEBACiAgICAgICovCiAgICAg
X3N5bmNSb3dDb3VudDogZnVuY3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSB0aGlz
LmdldFJvd0NvdW50KCk7Ci0gICAgICB0aGlzLmdldFRhcmdldCgpLnNldFJvd0NvdW50KGxlbmd0
aCk7CisgICAgICB2YXIgbGVuID0gdGhpcy5nZXRSb3dDb3VudCgpOworICAgICAgdGhpcy5nZXRU
YXJnZXQoKS5zZXRSb3dDb3VudChsZW4pOwogICAgIH0sCiAKIApJbmRleDogdWkvdGFibGUvbW9k
ZWwvU2ltcGxlLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3RhYmxlL21vZGVsL1NpbXBsZS5qcwkocmV2
aXNpb24gMjM0NTMpCisrKyB1aS90YWJsZS9tb2RlbC9TaW1wbGUuanMJKHdvcmtpbmcgY29weSkK
QEAgLTIwOCwxMCArMjA4LDkgQEAKICAgICAgKiBOb3RlOiBJbmRpdmlkdWFsIGl0ZW1zIGFyZSBy
ZXRyaWV2ZWQgYnkge0BsaW5rICNnZXRSb3dEYXRhQXNNYXB9LgogICAgICAqLwogICAgIGdldERh
dGFBc01hcEFycmF5OiBmdW5jdGlvbigpIHsKLSAgICAgIHZhciBsZW4gPSB0aGlzLmdldFJvd0Nv
dW50KCk7CiAgICAgICB2YXIgZGF0YSA9IFtdOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8
IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRoaXMuZ2V0Um93Q291bnQo
KTsgaSA8IGxlbjsgaSsrKQogICAgICAgewogICAgICAgICBkYXRhLnB1c2godGhpcy5nZXRSb3dE
YXRhQXNNYXAoaSkpOwogICAgICAgfQpJbmRleDogdWkvY29yZS9zZWxlY3Rpb24vU2Nyb2xsQXJl
YS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0tLSB1aS9jb3JlL3NlbGVjdGlvbi9TY3JvbGxBcmVhLmpzCShyZXZp
c2lvbiAyMzQ1MykKKysrIHVpL2NvcmUvc2VsZWN0aW9uL1Njcm9sbEFyZWEuanMJKHdvcmtpbmcg
Y29weSkKQEAgLTExMSw3ICsxMTEsNiBAQAogICAgIF9nZXRQYWdlIDogZnVuY3Rpb24obGVhZCwg
dXApCiAgICAgewogICAgICAgdmFyIHNlbGVjdGFibGVzID0gdGhpcy5nZXRTZWxlY3RhYmxlcygp
OwotICAgICAgdmFyIGxlbmd0aCA9IHNlbGVjdGFibGVzLmxlbmd0aDsKICAgICAgIHZhciBzdGFy
dCA9IHNlbGVjdGFibGVzLmluZGV4T2YobGVhZCk7CiAKICAgICAgIC8vIEdpdmVuIGxlYWQgaXMg
bm90IGEgc2VsZWN0YWJsZT8hPwpAQCAtMTc5LDcgKzE3OCw3IEBACiAgICAgICAgIHdoaWxlKDEp
CiAgICAgICAgIHsKICAgICAgICAgICAvLyBJdGVyYXRlIHRocm91Z2ggYWxsIHNlbGVjdGFibGVz
IGZyb20gc3RhcnQKLSAgICAgICAgICBmb3IgKDsgaTxsZW5ndGg7IGkrKykKKyAgICAgICAgICBm
b3IgKHZhciBsZW4gPSBzZWxlY3RhYmxlcy5sZW5ndGg7IGk8bGVuOyBpKyspCiAgICAgICAgICAg
ewogICAgICAgICAgICAgYm90dG9tID0gd2lkZ2V0LmdldEl0ZW1Cb3R0b20oc2VsZWN0YWJsZXNb
aV0pOwogCkluZGV4OiB1aS9zcGxpdHBhbmUvSExheW91dC5qcwo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9z
cGxpdHBhbmUvSExheW91dC5qcwkocmV2aXNpb24gMjM0NTMpCisrKyB1aS9zcGxpdHBhbmUvSExh
eW91dC5qcwkod29ya2luZyBjb3B5KQpAQCAtNjgsMTEgKzY4LDEwIEBACiAgICAgcmVuZGVyTGF5
b3V0IDogZnVuY3Rpb24oYXZhaWxXaWR0aCwgYXZhaWxIZWlnaHQpCiAgICAgewogICAgICAgdmFy
IGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZhciBsZW5ndGgg
PSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgY2hpbGQsIHR5cGU7CiAgICAgICB2YXIgYmVn
aW4sIHNwbGl0dGVyLCBzbGlkZXIsIGVuZDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0
aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7IGk8bGVu
OyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgIHR5
cGUgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCkudHlwZTsKQEAgLTE2OSwxMiArMTY4LDEx
IEBACiAgICAgX2NvbXB1dGVTaXplSGludCA6IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIg
Y2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwotICAgICAgdmFyIGxlbmd0aCA9
IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZCwgaGludCwgcHJvcHM7CiAgICAgICB2
YXIgbWluV2lkdGg9MCwgd2lkdGg9MCwgbWF4V2lkdGg9MDsKICAgICAgIHZhciBtaW5IZWlnaHQ9
MCwgaGVpZ2h0PTAsIG1heEhlaWdodD0wOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3Ro
OyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsgaTxsZW47
IGkrKykKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAgcHJv
cHMgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCk7CkluZGV4OiB1aS9zcGxpdHBhbmUvVkxh
eW91dC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9zcGxpdHBhbmUvVkxheW91dC5qcwkocmV2aXNpb24g
MjM0NTMpCisrKyB1aS9zcGxpdHBhbmUvVkxheW91dC5qcwkod29ya2luZyBjb3B5KQpAQCAtNjgs
MTEgKzY4LDEwIEBACiAgICAgcmVuZGVyTGF5b3V0IDogZnVuY3Rpb24oYXZhaWxXaWR0aCwgYXZh
aWxIZWlnaHQpCiAgICAgewogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hp
bGRyZW4oKTsKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIg
Y2hpbGQsIHR5cGU7CiAgICAgICB2YXIgYmVnaW4sIHNwbGl0dGVyLCBzbGlkZXIsIGVuZDsKIAot
ICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBs
ZW4gPSBjaGlsZHJlbi5sZW5ndGg7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxk
ID0gY2hpbGRyZW5baV07CiAgICAgICAgIHR5cGUgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVz
KCkudHlwZTsKQEAgLTE2OSwxMiArMTY4LDExIEBACiAgICAgX2NvbXB1dGVTaXplSGludCA6IGZ1
bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGls
ZHJlbigpOwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBj
aGlsZCwgaGludCwgcHJvcHM7CiAgICAgICB2YXIgbWluSGVpZ2h0PTAsIGhlaWdodD0wLCBtYXhI
ZWlnaHQ9MDsKICAgICAgIHZhciBtaW5XaWR0aD0wLCB3aWR0aD0wLCBtYXhXaWR0aD0wOwogCi0g
ICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGxl
biA9IGNoaWxkcmVuLmxlbmd0aDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgY2hpbGQg
PSBjaGlsZHJlbltpXTsKICAgICAgICAgcHJvcHMgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVz
KCk7CkluZGV4OiB1aS9mb3JtL1JhZGlvR3JvdXAuanMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvZm9ybS9S
YWRpb0dyb3VwLmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHVpL2Zvcm0vUmFkaW9Hcm91cC5qcwko
d29ya2luZyBjb3B5KQpAQCAtMzYyLDE4ICszNjIsMTggQEAKICAgICAgIH0KIAogICAgICAgdmFy
IGkgPSAwOwotICAgICAgdmFyIGxlbmd0aCA9IGl0ZW1zLmxlbmd0aDsKKyAgICAgIHZhciBsZW4g
PSBpdGVtcy5sZW5ndGg7CiAKICAgICAgIC8vIEZpbmQgbmV4dCBlbmFibGVkIGl0ZW0KICAgICAg
IGlmICh0aGlzLmdldFdyYXAoKSkgewotICAgICAgICBpbmRleCA9IChpbmRleCArIDEpICUgbGVu
Z3RoOworICAgICAgICBpbmRleCA9IChpbmRleCArIDEpICUgbGVuOwogICAgICAgfSBlbHNlIHsK
LSAgICAgICAgaW5kZXggPSBNYXRoLm1pbihpbmRleCArIDEsIGxlbmd0aCAtIDEpOworICAgICAg
ICBpbmRleCA9IE1hdGgubWluKGluZGV4ICsgMSwgbGVuIC0gMSk7CiAgICAgICB9CiAKLSAgICAg
IHdoaWxlIChpIDwgbGVuZ3RoICYmICFpdGVtc1tpbmRleF0uZ2V0RW5hYmxlZCgpKQorICAgICAg
d2hpbGUgKGkgPCBsZW4gJiYgIWl0ZW1zW2luZGV4XS5nZXRFbmFibGVkKCkpCiAgICAgICB7Ci0g
ICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkgJSBsZW5ndGg7CisgICAgICAgIGluZGV4ID0gKGlu
ZGV4ICsgMSkgJSBsZW47CiAgICAgICAgIGkrKzsKICAgICAgIH0KIApAQCAtMzk0LDE4ICszOTQs
MTggQEAKICAgICAgIH0KIAogICAgICAgdmFyIGkgPSAwOwotICAgICAgdmFyIGxlbmd0aCA9IGl0
ZW1zLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBpdGVtcy5sZW5ndGg7CiAKICAgICAgIC8vIEZp
bmQgcHJldmlvdXMgZW5hYmxlZCBpdGVtCiAgICAgICBpZiAodGhpcy5nZXRXcmFwKCkpIHsKLSAg
ICAgICAgaW5kZXggPSAoaW5kZXggLSAxICsgbGVuZ3RoKSAlIGxlbmd0aDsKKyAgICAgICAgaW5k
ZXggPSAoaW5kZXggLSAxICsgbGVuKSAlIGxlbjsKICAgICAgIH0gZWxzZSB7CiAgICAgICAgIGlu
ZGV4ID0gTWF0aC5tYXgoaW5kZXggLSAxLCAwKTsKICAgICAgIH0KIAotICAgICAgd2hpbGUgKGkg
PCBsZW5ndGggJiYgIWl0ZW1zW2luZGV4XS5nZXRFbmFibGVkKCkpCisgICAgICB3aGlsZSAoaSA8
IGxlbiAmJiAhaXRlbXNbaW5kZXhdLmdldEVuYWJsZWQoKSkKICAgICAgIHsKLSAgICAgICAgaW5k
ZXggPSAoaW5kZXggLSAxICsgbGVuZ3RoKSAlIGxlbmd0aDsKKyAgICAgICAgaW5kZXggPSAoaW5k
ZXggLSAxICsgbGVuKSAlIGxlbjsKICAgICAgICAgaSsrOwogICAgICAgfQogCkluZGV4OiB1aS9t
ZW51L01hbmFnZXIuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvbWVudS9NYW5hZ2VyLmpzCShyZXZpc2lv
biAyMzQ1MykKKysrIHVpL21lbnUvTWFuYWdlci5qcwkod29ya2luZyBjb3B5KQpAQCAtMTEyLDEw
ICsxMTIsMTAgQEAKICAgICBfZ2V0Q2hpbGQgOiBmdW5jdGlvbihtZW51LCBzdGFydCwgaXRlciwg
bG9vcCkKICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSBtZW51LmdldENoaWxkcmVuKCk7Ci0g
ICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxk
cmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZDsKIAotICAgICAgZm9yICh2YXIgaT1zdGFydDsg
aTxsZW5ndGggJiYgaT49MDsgaSs9aXRlcikKKyAgICAgIGZvciAodmFyIGk9c3RhcnQ7IGk8bGVu
ICYmIGk+PTA7IGkrPWl0ZXIpCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07
CiAgICAgICAgIGlmIChjaGlsZC5pc0VuYWJsZWQoKSAmJiAhY2hpbGQuaXNBbm9ueW1vdXMoKSkg
ewpAQCAtMTI1LDcgKzEyNSw3IEBACiAKICAgICAgIGlmIChsb29wKQogICAgICAgewotICAgICAg
ICBpID0gaSA9PSBsZW5ndGggPyAwIDogbGVuZ3RoLTE7CisgICAgICAgIGkgPSBpID09IGxlbiA/
IDAgOiBsZW4tMTsKICAgICAgICAgZm9yICg7IGkhPXN0YXJ0OyBpKz1pdGVyKQogICAgICAgICB7
CiAgICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKQEAgLTY1MSwxMCArNjUxLDEwIEBACiAK
ICAgICAgICAgLy8gR2V0IHByZXZpb3VzIGJ1dHRvbiwgZmFsbGJhY2sgdG8gZW5kIGlmIGZpcnN0
IGFycml2ZWQKICAgICAgICAgdmFyIHByZXZCdXR0b24gPSBudWxsOwotICAgICAgICB2YXIgbGVu
Z3RoID0gIGJ1dHRvbnMubGVuZ3RoOwotICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBsZW5n
dGg7IGkrKykKKyAgICAgICAgdmFyIGxlbiA9ICBidXR0b25zLmxlbmd0aDsKKyAgICAgICAgZm9y
ICh2YXIgaSA9IDE7IGkgPD0gbGVuOyBpKyspCiAgICAgICAgIHsKLSAgICAgICAgICB2YXIgYnV0
dG9uID0gYnV0dG9uc1soaW5kZXggLSBpICsgbGVuZ3RoKSAlIGxlbmd0aF07CisgICAgICAgICAg
dmFyIGJ1dHRvbiA9IGJ1dHRvbnNbKGluZGV4IC0gaSArIGxlbikgJSBsZW5dOwogICAgICAgICAg
IGlmKGJ1dHRvbi5pc0VuYWJsZWQoKSkgewogICAgICAgICAgICAgcHJldkJ1dHRvbiA9IGJ1dHRv
bjsKICAgICAgICAgICAgIGJyZWFrOwpAQCAtNzU4LDEwICs3NTgsMTAgQEAKIAogICAgICAgICAv
LyBHZXQgbmV4dCBidXR0b24sIGZhbGxiYWNrIHRvIGZpcnN0IGlmIGVuZCBhcnJpdmVkCiAgICAg
ICAgIHZhciBuZXh0QnV0dG9uID0gbnVsbDsKLSAgICAgICAgdmFyIGxlbmd0aCA9ICBidXR0b25z
Lmxlbmd0aDsKLSAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gbGVuZ3RoOyBpKyspCisgICAg
ICAgIHZhciBsZW4gPSAgYnV0dG9ucy5sZW5ndGg7CisgICAgICAgIGZvciAodmFyIGkgPSAxOyBp
IDw9IGxlbjsgaSsrKQogICAgICAgICB7Ci0gICAgICAgICAgdmFyIGJ1dHRvbiA9IGJ1dHRvbnNb
KGluZGV4ICsgaSkgJSBsZW5ndGhdOworICAgICAgICAgIHZhciBidXR0b24gPSBidXR0b25zWyhp
bmRleCArIGkpICUgbGVuXTsKICAgICAgICAgICBpZihidXR0b24uaXNFbmFibGVkKCkpIHsKICAg
ICAgICAgICAgIG5leHRCdXR0b24gPSBidXR0b247CiAgICAgICAgICAgICBicmVhazsKSW5kZXg6
IHVpL2xheW91dC9WQm94LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL2xheW91dC9WQm94LmpzCShyZXZp
c2lvbiAyMzQ1MykKKysrIHVpL2xheW91dC9WQm94LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yMjEs
MTQgKzIyMSwxNCBAQAogICAgIF9fcmVidWlsZENhY2hlIDogZnVuY3Rpb24oKQogICAgIHsKICAg
ICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7Ci0gICAgICB2YXIg
bGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0
aDsKICAgICAgIHZhciBlbmFibGVGbGV4ID0gZmFsc2U7Ci0gICAgICB2YXIgcmV1c2UgPSB0aGlz
Ll9faGVpZ2h0cyAmJiB0aGlzLl9faGVpZ2h0cy5sZW5ndGggIT0gbGVuZ3RoICYmIHRoaXMuX19m
bGV4cyAmJiB0aGlzLl9faGVpZ2h0czsKKyAgICAgIHZhciByZXVzZSA9IHRoaXMuX19oZWlnaHRz
ICYmIHRoaXMuX19oZWlnaHRzLmxlbmd0aCAhPSBsZW4gJiYgdGhpcy5fX2ZsZXhzICYmIHRoaXMu
X19oZWlnaHRzOwogICAgICAgdmFyIHByb3BzOwogCiAgICAgICAvLyBTcGFyc2UgYXJyYXkgKGtl
ZXAgb2xkIG9uZSBpZiBsZW5ndGhzIGhhcyBub3QgYmVlbiBtb2RpZmllZCkKLSAgICAgIHZhciBo
ZWlnaHRzID0gcmV1c2UgPyB0aGlzLl9faGVpZ2h0cyA6IG5ldyBBcnJheShsZW5ndGgpOwotICAg
ICAgdmFyIGZsZXhzID0gcmV1c2UgPyB0aGlzLl9fZmxleHMgOiBuZXcgQXJyYXkobGVuZ3RoKTsK
KyAgICAgIHZhciBoZWlnaHRzID0gcmV1c2UgPyB0aGlzLl9faGVpZ2h0cyA6IG5ldyBBcnJheShs
ZW4pOworICAgICAgdmFyIGZsZXhzID0gcmV1c2UgPyB0aGlzLl9fZmxleHMgOiBuZXcgQXJyYXko
bGVuKTsKIAogICAgICAgLy8gUmV2ZXJzZSBzdXBwb3J0CiAgICAgICBpZiAodGhpcy5nZXRSZXZl
cnNlZCgpKSB7CkBAIC0yMzYsNyArMjM2LDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gTG9vcCB0
aHJvdWdoIGNoaWxkcmVuIHRvIHByZXBhcnNlIHZhbHVlcwotICAgICAgZm9yICh2YXIgaT0wOyBp
PGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgewog
ICAgICAgICBwcm9wcyA9IGNoaWxkcmVuW2ldLmdldExheW91dFByb3BlcnRpZXMoKTsKIApAQCAt
MzExLDcgKzMxMSw3IEBACiAKICAgICAgIC8vIENhY2hlIGNoaWxkcmVuCiAgICAgICB2YXIgY2hp
bGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVu
Z3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciB1dGlsID0g
cXgudWkubGF5b3V0LlV0aWw7CiAKIApAQCAtMzMwLDcgKzMzMCw3IEBACiAgICAgICB2YXIgaGVp
Z2h0cyA9IFtdOwogICAgICAgdmFyIGFsbG9jYXRlZEhlaWdodCA9IGdhcHM7CiAKLSAgICAgIGZv
ciAoaT0wOyBpPGxlbmd0aDsgaSs9MSkKKyAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSs9MSkKICAg
ICAgIHsKICAgICAgICAgcGVyY2VudCA9IHRoaXMuX19oZWlnaHRzW2ldOwogCkBAIC0zNDksNyAr
MzQ5LDcgQEAKICAgICAgICAgdmFyIGZsZXhpYmxlcyA9IHt9OwogICAgICAgICB2YXIgZmxleCwg
b2Zmc2V0OwogCi0gICAgICAgIGZvciAoaT0wOyBpPGxlbmd0aDsgaSs9MSkKKyAgICAgICAgZm9y
IChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgICB7CiAgICAgICAgICAgZmxleCA9IHRoaXMuX19m
bGV4c1tpXTsKIApAQCAtNDA3LDcgKzQwNyw3IEBACiAgICAgICB9CiAKICAgICAgIC8vIFJlbmRl
ciBjaGlsZHJlbiBhbmQgc2VwYXJhdG9ycwotICAgICAgZm9yIChpPTA7IGk8bGVuZ3RoOyBpKz0x
KQorICAgICAgZm9yIChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgewogICAgICAgICBjaGlsZCA9
IGNoaWxkcmVuW2ldOwogICAgICAgICBoZWlnaHQgPSBoZWlnaHRzW2ldOwpJbmRleDogdWkvbGF5
b3V0L0F0b20uanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvbGF5b3V0L0F0b20uanMJKHJldmlzaW9uIDIz
NDUzKQorKysgdWkvbGF5b3V0L0F0b20uanMJKHdvcmtpbmcgY29weSkKQEAgLTEyOCw3ICsxMjgs
NyBAQAogCiAgICAgICB2YXIgaWNvblBvc2l0aW9uID0gdGhpcy5nZXRJY29uUG9zaXRpb24oKTsK
ICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7Ci0gICAgICB2
YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxl
bmd0aDsKIAogICAgICAgdmFyIGxlZnQsIHRvcCwgd2lkdGgsIGhlaWdodDsKICAgICAgIHZhciBj
aGlsZCwgaGludDsKQEAgLTEzOCwxNCArMTM4LDE0IEBACiAgICAgICAvLyByZXZlcnNlIG9yZGVy
aW5nCiAgICAgICBpZiAoaWNvblBvc2l0aW9uID09PSAiYm90dG9tIiB8fCBpY29uUG9zaXRpb24g
PT09ICJyaWdodCIpCiAgICAgICB7Ci0gICAgICAgIHZhciBzdGFydCA9IGxlbmd0aC0xOworICAg
ICAgICB2YXIgc3RhcnQgPSBsZW4tMTsKICAgICAgICAgdmFyIGVuZCA9IC0xOwogICAgICAgICB2
YXIgaW5jcmVtZW50ID0gLTE7CiAgICAgICB9CiAgICAgICBlbHNlCiAgICAgICB7CiAgICAgICAg
IHZhciBzdGFydCA9IDA7Ci0gICAgICAgIHZhciBlbmQgPSBsZW5ndGg7CisgICAgICAgIHZhciBl
bmQgPSBsZW47CiAgICAgICAgIHZhciBpbmNyZW1lbnQgPSAxOwogICAgICAgfQogCkBAIC0yNjgs
MTEgKzI2OCwxMSBAQAogICAgIF9jb21wdXRlU2l6ZUhpbnQgOiBmdW5jdGlvbigpCiAgICAgewog
ICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZh
ciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVu
Z3RoOwogICAgICAgdmFyIGhpbnQsIHJlc3VsdDsKIAogICAgICAgLy8gRmFzdCBwYXRoIGZvciBv
bmx5IG9uZSBjaGlsZAotICAgICAgaWYgKGxlbmd0aCA9PT0gMSkKKyAgICAgIGlmIChsZW4gPT09
IDEpCiAgICAgICB7CiAgICAgICAgIHZhciBoaW50ID0gY2hpbGRyZW5bMF0uZ2V0U2l6ZUhpbnQo
KTsKIApAQCAtMjk3LDcgKzI5Nyw3IEBACiAgICAgICAgIGlmIChpY29uUG9zaXRpb24gPT09ICJ0
b3AiIHx8IGljb25Qb3NpdGlvbiA9PT0gImJvdHRvbSIpCiAgICAgICAgIHsKICAgICAgICAgICB2
YXIgY291bnQgPSAwOwotICAgICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAg
ICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICAgICAgewogICAgICAgICAg
ICAgaGludCA9IGNoaWxkcmVuW2ldLmdldFNpemVIaW50KCk7CiAKQEAgLTMyNCw3ICszMjQsNyBA
QAogICAgICAgICBlbHNlCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgY291bnQ9MDsKLSAgICAg
ICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgICAgZm9yICh2YXIgaT0w
OyBpPGxlbjsgaSsrKQogICAgICAgICAgIHsKICAgICAgICAgICAgIGhpbnQgPSBjaGlsZHJlbltp
XS5nZXRTaXplSGludCgpOwogCkluZGV4OiB1aS9sYXlvdXQvRG9jay5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB1aS9sYXlvdXQvRG9jay5qcwkocmV2aXNpb24gMjM0NTMpCisrKyB1aS9sYXlvdXQvRG9jay5q
cwkod29ya2luZyBjb3B5KQpAQCAtMjg5LDcgKzI4OSw3IEBACiAgICAgewogICAgICAgdmFyIGFs
bCA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7CiAgICAgICB2YXIgY2hpbGQsIGNlbnRlcjsK
LSAgICAgIHZhciBsZW5ndGggPSBhbGwubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGFsbC5sZW5n
dGg7CiAKICAgICAgIHZhciBoaWdoID0gW107CiAgICAgICB2YXIgbG93ID0gW107CkBAIC0yOTgs
NyArMjk4LDcgQEAKICAgICAgIHZhciB5Zmlyc3QgPSB0aGlzLmdldFNvcnQoKSA9PT0gInkiOwog
ICAgICAgdmFyIHhmaXJzdCA9IHRoaXMuZ2V0U29ydCgpID09PSAieCI7CiAKLSAgICAgIGZvciAo
dmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykK
ICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBhbGxbaV07CiAgICAgICAgIGVkZ2UgPSBjaGlsZC5n
ZXRMYXlvdXRQcm9wZXJ0aWVzKCkuZWRnZTsKQEAgLTMzNSw3ICszMzUsNyBAQAogCiAgICAgICAv
LyBDYWNoZSBlZGdlcyBmb3IgZmFzdGVyIGFjY2VzcwogICAgICAgdmFyIGVkZ2VzPVtdOwotICAg
ICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxl
bjsgaSsrKQogICAgICAgewogICAgICAgICBlZGdlID0gcmVzdWx0W2ldLmdldExheW91dFByb3Bl
cnRpZXMoKS5lZGdlOwogICAgICAgICBlZGdlc1tpXSA9IHRoaXMuX19lZGdlTWFwW2VkZ2VdIHx8
IDU7CkBAIC0zNjcsNyArMzY3LDcgQEAKICAgICAgIHZhciB1dGlsID0gcXgudWkubGF5b3V0LlV0
aWw7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47CiAgICAgICB2YXIgZWRn
ZXMgPSB0aGlzLl9fZWRnZXM7Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOwor
ICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBmbGV4aWJsZXMsIGNo
aWxkLCBoaW50LCBwcm9wcywgZmxleCwgZ3Jvdywgd2lkdGgsIGhlaWdodCwgb2Zmc2V0OwogCiAg
ICAgICB2YXIgd2lkdGhzID0gW107CkBAIC0zOTUsNyArMzk1LDcgQEAKICAgICAgICAgYWxsb2Nh
dGVkSGVpZ2h0IC09IHNlcGFyYXRvcldpZHRocy55ICsgc3BhY2luZ1k7CiAgICAgICB9CiAKLSAg
ICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxs
ZW47IGkrKykKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAg
cHJvcHMgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCk7CkBAIC00NzYsNyArNDc2LDcgQEAK
ICAgICAgICAgZmxleGlibGVzID0ge307CiAgICAgICAgIGdyb3cgPSBhbGxvY2F0ZWRXaWR0aCA8
IGF2YWlsV2lkdGg7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAg
ICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBjaGls
ZCA9IGNoaWxkcmVuW2ldOwogCkBAIC01MzAsNyArNTMwLDcgQEAKICAgICAgICAgZmxleGlibGVz
ID0gW107CiAgICAgICAgIGdyb3cgPSBhbGxvY2F0ZWRIZWlnaHQgPCBhdmFpbEhlaWdodDsKIAot
ICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9
MDsgaTxsZW47IGkrKykKICAgICAgICAgewogICAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07
CiAKQEAgLTU5MSw3ICs1OTEsNyBAQAogICAgICAgdmFyIG1hcmdpblRvcCwgbWFyZ2luQm90dG9t
LCBtYXJnaW5MZWZ0LCBtYXJnaW5SaWdodDsKICAgICAgIHZhciBhbGlnbk1hcCA9IHRoaXMuX19h
bGlnbk1hcDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9y
ICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgewogICAgICAgICAvLyBDYWNoZSBjaGlsZCBk
YXRhCiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CkBAIC04MTUsNyArODE1LDcgQEAKICAg
ICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX19jaGlsZHJlbjsKICAgICAgIHZhciBlZGdlcyA9IHRo
aXMuX19lZGdlczsKIAotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAg
IHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgaGludCwgY2hpbGQ7CiAgICAg
ICB2YXIgbWFyZ2luWCwgbWFyZ2luWTsKIApAQCAtODM3LDcgKzgzNyw3IEBACiAgICAgICB9CiAK
ICAgICAgIC8vIERldGVjdCBjaGlsZHJlbiBzaXplcwotICAgICAgZm9yICh2YXIgaT0wOyBpPGxl
bmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgewogICAg
ICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogICAgICAgICBoaW50ID0gY2hpbGQuZ2V0U2l6ZUhp
bnQoKTsKSW5kZXg6IHVpL2xheW91dC9IQm94LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL2xheW91dC9I
Qm94LmpzCShyZXZpc2lvbiAyMzQ1MykKKysrIHVpL2xheW91dC9IQm94LmpzCSh3b3JraW5nIGNv
cHkpCkBAIC0yMjAsMTQgKzIyMCwxNCBAQAogICAgIF9fcmVidWlsZENhY2hlIDogZnVuY3Rpb24o
KQogICAgIHsKICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7
Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNo
aWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBlbmFibGVGbGV4ID0gZmFsc2U7Ci0gICAgICB2YXIg
cmV1c2UgPSB0aGlzLl9fd2lkdGhzICYmIHRoaXMuX193aWR0aHMubGVuZ3RoICE9IGxlbmd0aCAm
JiB0aGlzLl9fZmxleHMgJiYgdGhpcy5fX3dpZHRoczsKKyAgICAgIHZhciByZXVzZSA9IHRoaXMu
X193aWR0aHMgJiYgdGhpcy5fX3dpZHRocy5sZW5ndGggIT0gbGVuICYmIHRoaXMuX19mbGV4cyAm
JiB0aGlzLl9fd2lkdGhzOwogICAgICAgdmFyIHByb3BzOwogCiAgICAgICAvLyBTcGFyc2UgYXJy
YXkgKGtlZXAgb2xkIG9uZSBpZiBsZW5ndGhzIGhhcyBub3QgYmVlbiBtb2RpZmllZCkKLSAgICAg
IHZhciB3aWR0aHMgPSByZXVzZSA/IHRoaXMuX193aWR0aHMgOiBuZXcgQXJyYXkobGVuZ3RoKTsK
LSAgICAgIHZhciBmbGV4cyA9IHJldXNlID8gdGhpcy5fX2ZsZXhzIDogbmV3IEFycmF5KGxlbmd0
aCk7CisgICAgICB2YXIgd2lkdGhzID0gcmV1c2UgPyB0aGlzLl9fd2lkdGhzIDogbmV3IEFycmF5
KGxlbik7CisgICAgICB2YXIgZmxleHMgPSByZXVzZSA/IHRoaXMuX19mbGV4cyA6IG5ldyBBcnJh
eShsZW4pOwogCiAgICAgICAvLyBSZXZlcnNlIHN1cHBvcnQKICAgICAgIGlmICh0aGlzLmdldFJl
dmVyc2VkKCkpIHsKQEAgLTIzNSw3ICsyMzUsNyBAQAogICAgICAgfQogCiAgICAgICAvLyBMb29w
IHRocm91Z2ggY2hpbGRyZW4gdG8gcHJlcGFyc2UgdmFsdWVzCi0gICAgICBmb3IgKHZhciBpPTA7
IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICB7
CiAgICAgICAgIHByb3BzID0gY2hpbGRyZW5baV0uZ2V0TGF5b3V0UHJvcGVydGllcygpOwogCkBA
IC0zMTAsNyArMzEwLDcgQEAKIAogICAgICAgLy8gQ2FjaGUgY2hpbGRyZW4KICAgICAgIHZhciBj
aGlsZHJlbiA9IHRoaXMuX19jaGlsZHJlbjsKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5s
ZW5ndGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwogICAgICAgdmFyIHV0aWwg
PSBxeC51aS5sYXlvdXQuVXRpbDsKIAogCkBAIC0zMjksNyArMzI5LDcgQEAKICAgICAgIHZhciB3
aWR0aHMgPSBbXTsKICAgICAgIHZhciBhbGxvY2F0ZWRXaWR0aCA9IGdhcHM7CiAKLSAgICAgIGZv
ciAoaT0wOyBpPGxlbmd0aDsgaSs9MSkKKyAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSs9MSkKICAg
ICAgIHsKICAgICAgICAgcGVyY2VudCA9IHRoaXMuX193aWR0aHNbaV07CiAKQEAgLTM0OCw3ICsz
NDgsNyBAQAogICAgICAgICB2YXIgZmxleGlibGVzID0ge307CiAgICAgICAgIHZhciBmbGV4LCBv
ZmZzZXQ7CiAKLSAgICAgICAgZm9yIChpPTA7IGk8bGVuZ3RoOyBpKz0xKQorICAgICAgICBmb3Ig
KGk9MDsgaTxsZW47IGkrPTEpCiAgICAgICAgIHsKICAgICAgICAgICBmbGV4ID0gdGhpcy5fX2Zs
ZXhzW2ldOwogCkBAIC00MDcsNyArNDA3LDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gUmVuZGVy
IGNoaWxkcmVuIGFuZCBzZXBhcmF0b3JzCi0gICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEp
CisgICAgICBmb3IgKGk9MDsgaTxsZW47IGkrPTEpCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0g
Y2hpbGRyZW5baV07CiAgICAgICAgIHdpZHRoID0gd2lkdGhzW2ldOwpJbmRleDogdXRpbC9UaW1l
ck1hbmFnZXIuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gdXRpbC9UaW1lck1hbmFnZXIuanMJKHJldmlzaW9u
IDIzNDUzKQorKysgdXRpbC9UaW1lck1hbmFnZXIuanMJKHdvcmtpbmcgY29weSkKQEAgLTE3MSw4
ICsxNzEsNyBAQAogICAgIHsKICAgICAgIC8vIEZpbmQgdGhpcyB0aW1lciBpZCBpbiB0aGUgdGlt
ZS1vcmRlcmVkIGxpc3QKICAgICAgIHZhciB0aW1lclF1ZXVlID0gdGhpcy5zZWxmKGFyZ3VtZW50
cykuX190aW1lclF1ZXVlOwotICAgICAgdmFyIGxlbmd0aCA9IHRpbWVyUXVldWUubGVuZ3RoOwot
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGkg
PSAwLCBsZW4gPSB0aW1lclF1ZXVlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKQogICAgICAgewogICAg
ICAgICAvLyBJcyB0aGlzIHRoZSBvbmUgd2UncmUgbG9va2luZyBmb3I/CiAgICAgICAgIGlmICh0
aW1lclF1ZXVlW2ldID09IHRpbWVySWQpCkBAIC0yMTgsOCArMjE3LDggQEAKICAgICAgIC8vIGFw
cHJvcHJpYXRlIHBsYWNlIHRvIGluc2VydCB0aGlzIHRpbWVyLgogICAgICAgdmFyIHRpbWVyUXVl
dWUgPSB0aGlzLnNlbGYoYXJndW1lbnRzKS5fX3RpbWVyUXVldWU7CiAgICAgICB2YXIgdGltZXJE
YXRhID0gdGhpcy5zZWxmKGFyZ3VtZW50cykuX190aW1lckRhdGE7Ci0gICAgICB2YXIgbGVuZ3Ro
ID0gdGltZXJRdWV1ZS5sZW5ndGg7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsg
aSsrKQorICAgICAgdmFyIGxlbiA9IHRpbWVyUXVldWUubGVuZ3RoOworICAgICAgZm9yICh2YXIg
aSA9IDA7IGkgPCBsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgLy8gSGF2ZSB3ZSByZWFjaGVk
IGEgbGF0ZXIgdGltZT8KICAgICAgICAgaWYgKHRpbWVyRGF0YVt0aW1lclF1ZXVlW2ldXS5leHBp
cmVBdCA+IGV4cGlyZUF0KQpAQCAtMjMzLDcgKzIzMiw3IEBACiAgICAgICB9CiAKICAgICAgIC8v
IERpZCB3ZSBmaW5kIHNvbWVwbGFjZSBpbiB0aGUgbWlkZGxlIG9mIHRoZSBxdWV1ZSBmb3IgaXQ/
Ci0gICAgICBpZiAodGltZXJRdWV1ZS5sZW5ndGggPT0gbGVuZ3RoKQorICAgICAgaWYgKHRpbWVy
UXVldWUubGVuZ3RoID09IGxlbikKICAgICAgIHsKICAgICAgICAgLy8gTm9wZS4gIEluc2VydCBp
dCBhdCB0aGUgZW5kLgogICAgICAgICB0aW1lclF1ZXVlLnB1c2godGltZXJJZCk7Cg==
</data>

          </attachment>
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>843</attachid>
            <date>2010-11-20 19:14:00 +0100</date>
            <delta_ts>2010-11-20 19:14:30 +0100</delta_ts>
            <desc>Loop optimizations</desc>
            <filename>diff.txt</filename>
            <type>text/plain</type>
            <size>197937</size>
            <attacher>dev</attacher>
            
              <data encoding="base64">SW5kZXg6IHRlc3QvUGFydC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L1BhcnQuanMJKHJldmlzaW9u
IDIzODg5KQorKysgdGVzdC9QYXJ0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC03MCw3ICs3MCw3IEBA
CiAgICAgICB2YXIgcGtnMiAgICAgPSBwYWNrYWdlc1sxXTsKICAgICAgIHZhciBwa2cyVXJscyA9
IHBrZzIuZ2V0VXJscygpOwogICAgICAgdmFyIHJlZlVybHMgID0gbG9hZGVyLnVyaXNbMl07Ci0g
ICAgICBmb3IgKHZhciBzPTA7IHM8cmVmVXJscy5sZW5ndGg7IHMrKyl7CisgICAgICBmb3IgKHZh
ciBzPTAsIGw9cmVmVXJscy5sZW5ndGg7IHM8bDsgcysrKXsKICAgICAgICAgdGhpcy5hc3NlcnRN
YXRjaChwa2cyVXJsc1tzXSwgbmV3IFJlZ0V4cChyZWZVcmxzW3NdICsgIi4qIikpOyAvLyBtYXRj
aGVzICI/bm9jYWNoZT0uLi4iIGlmIHByZXNlbnQKICAgICAgIH0KICAgICB9LApJbmRleDogdGVz
dC90eXBlL0Jhc2VBcnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3R5cGUvQmFzZUFycmF5Lmpz
CShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdHlwZS9CYXNlQXJyYXkuanMJKHdvcmtpbmcgY29w
eSkKQEAgLTg4LDEyICs4OCwxMiBAQAogICAgIHRlc3RBcnJheVB1c2ggOiBmdW5jdGlvbigpCiAg
ICAgewogICAgICAgdmFyIGxpc3QgPSBuZXcgcXgudGVzdC50eXBlLlRlc3RBcnJheSgxLCAyKTsK
LSAgICAgIHZhciBsZW5ndGggPSBsaXN0LnB1c2goMyk7Ci0gICAgICB0aGlzLmFzc2VydEVxdWFs
cygzLCBsZW5ndGgpOworICAgICAgdmFyIGxlbiA9IGxpc3QucHVzaCgzKTsKKyAgICAgIHRoaXMu
YXNzZXJ0RXF1YWxzKDMsIGxlbik7CiAgICAgICB0aGlzLmFzc2VydEFycmF5RXF1YWxzKFsxLCAy
LCAzXSwgbGlzdCk7CiAKLSAgICAgIHZhciBsZW5ndGggPSBsaXN0LnB1c2goNCwgNSk7Ci0gICAg
ICB0aGlzLmFzc2VydEVxdWFscyg1LCBsZW5ndGgpOworICAgICAgbGVuID0gbGlzdC5wdXNoKDQs
IDUpOworICAgICAgdGhpcy5hc3NlcnRFcXVhbHMoNSwgbGVuKTsKICAgICAgIHRoaXMuYXNzZXJ0
QXJyYXlFcXVhbHMoWzEsIDIsIDMsIDQsIDVdLCBsaXN0KTsKICAgICB9LAogCkBAIC0xMTcsNyAr
MTE3LDcgQEAKICAgICB0ZXN0QXJyYXlVbnNoaWZ0IDogZnVuY3Rpb24oKQogICAgIHsKICAgICAg
IHZhciBsaXN0ID0gbmV3IHF4LnRlc3QudHlwZS5UZXN0QXJyYXkoMiwgMywgNCwgNSk7Ci0gICAg
ICB2YXIgbGVuZ3RoID0gbGlzdC51bnNoaWZ0KDEpOworICAgICAgdmFyIGxlbiA9IGxpc3QudW5z
aGlmdCgxKTsKICAgICAgIHRoaXMuYXNzZXJ0QXJyYXlFcXVhbHMoWzEsIDIsIDMsIDQsIDVdLCBs
aXN0KTsKICAgICB9LAogCkluZGV4OiB0ZXN0L2xhbmcvSnNvblBhcnNlRVM1LmpzCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KLS0tIHRlc3QvbGFuZy9Kc29uUGFyc2VFUzUuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVz
dC9sYW5nL0pzb25QYXJzZUVTNS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTE3LDcgKzExNyw3IEBA
CiAgICAgICAgICIgIgogICAgICAgXTsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPHNwYWNlcy5s
ZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1zcGFjZXMubGVuZ3RoOyBpPGw7IGkr
KykKICAgICAgIHsKICAgICAgICAgdmFyIHNwYWNlID0gc3BhY2VzW2ldOwogICAgICAgICB0aGlz
LmFzc2VydEVxdWFscygxMjM0LCB0aGlzLkpTT04ucGFyc2Uoc3BhY2UgKyAiMTIzNCIpKTsKQEAg
LTE5MCw3ICsxOTAsNyBAQAogICAgICAgICAiXHUwMDE4LFx1MDAxOSxcdTAwMWEsXHUwMDFiLFx1
MDAxYyxcdTAwMWQsXHUwMDFlLFx1MDAxZiIKICAgICAgICkuc3BsaXQoIiwiKTsKIAotICAgICAg
Zm9yICh2YXIgaT0wOyBpPGNoYXJzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBs
PWNoYXJzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHRyeSB7CiAgICAgICAg
ICAgdGhpcy5KU09OLnBhcnNlKCciJyArIGNoYXJzW2ldICsgJyInKTsKSW5kZXg6IHRlc3QvcmVu
ZGVyZXIvQ29sb3IuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC9yZW5kZXJlci9Db2xvci5qcwkocmV2
aXNpb24gMjM4ODkpCisrKyB0ZXN0L3JlbmRlcmVyL0NvbG9yLmpzCSh3b3JraW5nIGNvcHkpCkBA
IC01MCw3ICs1MCw3IEBACiAgICAgICAgICJyZ2IoMTIsMTMpIgogICAgICAgXTsKIAotICAgICAg
Zm9yICh2YXIgaT0wOyBpPGludmFsaWRDb2xvcnMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZh
ciBpPTAsIGw9aW52YWxpZENvbG9ycy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAg
ICB0aGlzLmFzc2VydEV4Y2VwdGlvbigKICAgICAgICAgICBmdW5jdGlvbigpIHsKSW5kZXg6IHRl
c3QvaW8vcmVtb3RlL1JlcXVlc3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC9pby9yZW1vdGUvUmVx
dWVzdC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L2lvL3JlbW90ZS9SZXF1ZXN0LmpzCSh3
b3JraW5nIGNvcHkpCkBAIC05Niw3ICs5Niw3IEBACiAKICAgICAgIHZhciBjb21wbGV0ZWRDb3Vu
dCA9IDA7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX3JlcXVlc3RzLmxlbmd0
aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGw9dGhpcy5fX3JlcXVlc3RzLmxlbmd0aDsg
aTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciByZXF1ZXN0ID0gdGhpcy5fX3JlcXVlc3Rz
W2ldOwogCkBAIC0xMzIsNyArMTMyLDcgQEAKIAogICAgICAgdmFyIGNvbXBsZXRlZENvdW50ID0g
MDsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fcmVxdWVzdHMubGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpID0gMCwgbD10aGlzLl9fcmVxdWVzdHMubGVuZ3RoOyBpPGw7
IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHJlcXVlc3QgPSB0aGlzLl9fcmVxdWVzdHNbaV07
CiAKQEAgLTI0OSw0ICsyNDksNCBAQAogICAgICAgdGhpcy53YWl0KDIwMDApOwogICAgIH0KICAg
fQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L2lvL3Jl
bW90ZS9SZXF1ZXN0SWZyYW1lLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvaW8vcmVtb3RlL1JlcXVl
c3RJZnJhbWUuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC9pby9yZW1vdGUvUmVxdWVzdElm
cmFtZS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTAwLDcgKzEwMCw3IEBACiAKICAgICAgIHZhciBj
b21wbGV0ZWRDb3VudCA9IDA7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX3Jl
cXVlc3RzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGw9dGhpcy5fX3JlcXVl
c3RzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciByZXF1ZXN0ID0gdGhp
cy5fX3JlcXVlc3RzW2ldOwogCkBAIC0xNjMsNCArMTYzLDQgQEAKICAgICAgIHRoaXMud2FpdCgy
MDAwKTsKICAgICB9CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJ
bmRleDogdGVzdC9kYXRhL2NvbnRyb2xsZXIvTGlzdFJldmVyc2UuanMKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0g
dGVzdC9kYXRhL2NvbnRyb2xsZXIvTGlzdFJldmVyc2UuanMJKHJldmlzaW9uIDIzODg5KQorKysg
dGVzdC9kYXRhL2NvbnRyb2xsZXIvTGlzdFJldmVyc2UuanMJKHdvcmtpbmcgY29weSkKQEAgLTk3
LDE5ICs5NywxOSBAQAogCiAgICAgICAvLyBjaGVjayBmb3IgdGhlIGJpbmRpbmcgbW9kZWwgLS0+
IHRhcmdldAogICAgICAgdmFyIGl0ZW1zID0gdGhpcy5fX2xpc3QuZ2V0Q2hpbGRyZW4oKTsKLSAg
ICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAo
dmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHRoaXMu
X19tb2RlbC5zZXRJdGVtKGksICJhYmMiICsgaSk7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxz
KCJhYmMiICsgaSwgaXRlbXNbaV0uZ2V0TGFiZWwoKSk7CiAgICAgICB9OwogCiAgICAgICAvLyBj
aGVjayBmb3IgdGhlIGJpbmRpbmcgdGFyZ2V0KGxhYmVsKSAtLT4gbW9kZWwKLSAgICAgIGZvciAo
dmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAw
LCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIGl0ZW1zW2ldLnNldExh
YmVsKCJhZmZlIiArIGkpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFscyhpdGVtc1tpXS5nZXRM
YWJlbCgpLCB0aGlzLl9fbW9kZWwuZ2V0SXRlbShpKSk7CiAgICAgICB9CiAKICAgICAgIC8vIGNo
ZWNrIGZvciB0aGUgYmluZGluZyB0YXJnZXQoaWNvbikgLS0+IG1vZGVsCi0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwg
bCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICBpdGVtc1tpXS5zZXRJY29u
KCJBRkZFIiArIGkpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFscyhpdGVtc1tpXS5nZXRJY29u
KCksIHRoaXMuX19tb2RlbC5nZXRJdGVtKGkpKTsKICAgICAgIH0KQEAgLTEyMSw3ICsxMjEsNyBA
QAogICAgICAgdGhpcy5fX2NvbnRyb2xsZXIudXBkYXRlKCk7CiAKICAgICAgIC8vIGNoZWNrIGZv
ciB0aGUgcmVtb3ZlZCBiaW5kaW5nIHRhcmdldChpY29uKSAtLT4gbW9kZWwKLSAgICAgIGZvciAo
dmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAw
LCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIGl0ZW1zW2ldLnNldElj
b24oIjEyMy0iICsgaSk7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKCJBRkZFIiArIGksIHRo
aXMuX19tb2RlbC5nZXRJdGVtKGkpKTsKICAgICAgIH0KQEAgLTE0NCw3ICsxNDQsNyBAQAogCiAg
ICAgICAvLyBjaGVjayBmb3IgdGhlIGJpbmRpbmcgbW9kZWwgLS0+IHRhcmdldAogICAgICAgdmFy
IGl0ZW1zID0gdGhpcy5fX2xpc3QuZ2V0Q2hpbGRyZW4oKTsKLSAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaXRl
bXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKCJpdGVt
IiArIGksIGl0ZW1zW2ldLmdldEljb24oKSk7CiAgICAgICB9OwogICAgIH0sCkBAIC0xNjYsNyAr
MTY2LDcgQEAKIAogICAgICAgLy8gY2hlY2sgZm9yIHRoZSBiaW5kaW5nIG1vZGVsIC0tPiB0YXJn
ZXQKICAgICAgIHZhciBpdGVtcyA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKCk7Ci0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBp
ID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB0aGlzLmFzc2Vy
dEVxdWFscygiaWNvbiIsIGl0ZW1zW2ldLmdldEljb24oKSk7CiAgICAgICB9OwogICAgIH0sCkBA
IC0xOTIsMTkgKzE5MiwxOSBAQAogCiAgICAgICAvLyBjaGVjayBmb3IgdGhlIGJpbmRpbmcgbW9k
ZWwgLS0+IHRhcmdldAogICAgICAgdmFyIGl0ZW1zID0gdGhpcy5fX2xpc3QuZ2V0Q2hpbGRyZW4o
KTsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAg
IGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAg
IHRoaXMuX19tb2RlbC5zZXRJdGVtKGksICJhYmMiICsgaSk7CiAgICAgICAgIHRoaXMuYXNzZXJ0
RXF1YWxzKCJhYmMiICsgaSwgaXRlbXNbaV0uZ2V0Q2hpbGQoKS5nZXRMYWJlbCgpKTsKICAgICAg
IH07CiAKICAgICAgIC8vIGNoZWNrIGZvciB0aGUgYmluZGluZyB0YXJnZXQobGFiZWwpIC0tPiBt
b2RlbAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykgeworICAg
ICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAg
ICAgaXRlbXNbaV0uZ2V0Q2hpbGQoKS5zZXRMYWJlbCgiYWZmZSIgKyBpKTsKICAgICAgICAgdGhp
cy5hc3NlcnRFcXVhbHMoaXRlbXNbaV0uZ2V0Q2hpbGQoKS5nZXRMYWJlbCgpLCB0aGlzLl9fbW9k
ZWwuZ2V0SXRlbShpKSk7CiAgICAgICB9CiAKICAgICAgIC8vIGdldCByaWQgb2YgdGhlIGNyZWF0
ZWQgaXRlbXMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsK
KyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAg
ICAgICAgIGl0ZW1zW2ldLnNldENoaWxkKG51bGwpOwogICAgICAgfTsKICAgICB9LApAQCAtMjMw
LDI1ICsyMzAsMjUgQEAKIAogICAgICAgLy8gY2hlY2sgZm9yIHRoZSBiaW5kaW5nIG1vZGVsIC0t
PiB0YXJnZXQKICAgICAgIHZhciBpdGVtcyA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKCk7Ci0g
ICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB0aGlz
Ll9fbW9kZWwuc2V0SXRlbShpLCAiYWJjIiArIGkpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFs
cygiYWJjIiArIGksIGl0ZW1zW2ldLmdldENoaWxkcmVuKCkuZ2V0SXRlbSgwKS5nZXRMYWJlbCgp
KTsKICAgICAgIH07CiAKICAgICAgIC8vIGNoZWNrIGZvciB0aGUgYmluZGluZyB0YXJnZXQobGFi
ZWwpIC0tPiBtb2RlbAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkr
KykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKysp
IHsKICAgICAgICAgaXRlbXNbaV0uZ2V0Q2hpbGRyZW4oKS5nZXRJdGVtKDApLnNldExhYmVsKCJh
ZmZlIiArIGkpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFscyhpdGVtc1tpXS5nZXRDaGlsZHJl
bigpLmdldEl0ZW0oMCkuZ2V0TGFiZWwoKSwgdGhpcy5fX21vZGVsLmdldEl0ZW0oaSkpOwogICAg
ICAgfQogCiAgICAgICAvLyBjaGVjayBhIGNoYW5nZSBvZiB0aGUgYXJyYXkgb3JkZXIKLSAgICAg
IGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFy
IGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIGl0ZW1zW2ld
LmdldENoaWxkcmVuKCkucmV2ZXJzZSgpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFscyhpdGVt
c1tpXS5nZXRDaGlsZHJlbigpLmdldEl0ZW0oMCkuZ2V0TGFiZWwoKSwgdGhpcy5fX21vZGVsLmdl
dEl0ZW0oaSkpOwogICAgICAgfQogCiAgICAgICAvLyBnZXQgcmlkIG9mIHRoZSBjcmVhdGVkIGl0
ZW1zCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAg
ICBpdGVtc1tpXS5nZXRDaGlsZHJlbigpLnNldEl0ZW0oMCwgbnVsbCk7CiAgICAgICAgIGl0ZW1z
W2ldLmdldENoaWxkcmVuKCkuc2V0SXRlbSgxLCBudWxsKTsKICAgICAgICAgaXRlbXNbaV0uc2V0
Q2hpbGRyZW4obnVsbCk7CkluZGV4OiB0ZXN0L2RhdGEvY29udHJvbGxlci9MaXN0V2l0aE9iamVj
dHMuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0gdGVzdC9kYXRhL2NvbnRyb2xsZXIvTGlzdFdpdGhPYmplY3Rz
LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvZGF0YS9jb250cm9sbGVyL0xpc3RXaXRoT2Jq
ZWN0cy5qcwkod29ya2luZyBjb3B5KQpAQCAtODYsNyArODYsNyBAQAogICAgICAgdGhpcy5fX2Nv
bnRyb2xsZXIgPSBuZXcgcXguZGF0YS5jb250cm9sbGVyLkxpc3QodGhpcy5fX21vZGVsLCB0aGlz
Ll9fbGlzdCwgIm5hbWUiKTsKIAogICAgICAgLy8gY2hlY2sgdGhlIGJpbmRpbmcKLSAgICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAo
dmFyIGkgPSAwLCBsID0gdGhpcy5fX2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAg
IHZhciBsYWJlbCA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKClbaV0uZ2V0TGFiZWwoKTsKICAg
ICAgICAgdGhpcy5hc3NlcnRFcXVhbHModGhpcy5fX2RhdGFbaV0uZ2V0TmFtZSgpLCBsYWJlbCwg
IkJpbmRpbmcgIiArIGkgKyAiIGlzIHdyb25nISIpOwogICAgICAgfQpAQCAtOTgsNyArOTgsNyBA
QAogICAgICAgdGhpcy5fX2NvbnRyb2xsZXIgPSBuZXcgcXguZGF0YS5jb250cm9sbGVyLkxpc3Qo
dGhpcy5fX21vZGVsLCB0aGlzLl9fbGlzdCwgIm5hbWUiKTsKIAogICAgICAgLy8gY2hlY2sgdGhl
IGJpbmRpbmcKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBp
KyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCAgbCA9IHRoaXMuX19kYXRhLmxlbmd0aDsgaSA8
IGw7IGkrKykgewogICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLl9fbGlzdC5nZXRDaGlsZHJlbigp
W2ldLmdldExhYmVsKCk7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKHRoaXMuX19kYXRhW2ld
LmdldE5hbWUoKSwgbGFiZWwsICJCaW5kaW5nICIgKyBpICsgIiBpcyB3cm9uZyEiKTsKICAgICAg
IH0KQEAgLTEwNiw3ICsxMDYsNyBAQAogICAgICAgdGhpcy5fX2NvbnRyb2xsZXIuc2V0TGFiZWxQ
YXRoKCJpY29uIik7CiAKICAgICAgIC8vIGNoZWNrIHRoZSBiaW5kaW5nIGFnYWluCi0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19kYXRhLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IHRoaXMuX19kYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAg
ICB2YXIgbGFiZWwgPSB0aGlzLl9fbGlzdC5nZXRDaGlsZHJlbigpW2ldLmdldExhYmVsKCk7CiAg
ICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKHRoaXMuX19kYXRhW2ldLmdldEljb24oKSwgbGFiZWws
ICJCaW5kaW5nICIgKyBpICsgIiBpcyB3cm9uZyEiKTsKICAgICAgIH0KQEAgLTE2OCw3ICsxNjgs
NyBAQAogICAgICAgdGhpcy5fX2NvbnRyb2xsZXIuc2V0TW9kZWwodGhpcy5fX21vZGVsKTsKIAog
ICAgICAgLy8gY2hlY2sgdGhlIGJpbmRpbmcKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhp
cy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5f
X2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHZhciBsYWJlbCA9IHRoaXMuX19s
aXN0LmdldENoaWxkcmVuKClbaV0uZ2V0TGFiZWwoKTsKICAgICAgICAgdGhpcy5hc3NlcnRFcXVh
bHModGhpcy5fX2RhdGFbaV0uZ2V0TmFtZSgpLCBsYWJlbCwgIkJpbmRpbmcgIiArIGkgKyAiIGlz
IHdyb25nISIpOwogICAgICAgfQpAQCAtMTgzLDEyICsxODMsMTIgQEAKICAgICAgIHRoaXMuX19j
b250cm9sbGVyLnNldEljb25QYXRoKCJpY29uIik7CiAKICAgICAgIC8vIGNoZWNrIHRoZSBsYWJl
bCBiaW5kaW5nCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19kYXRhLmxlbmd0aDsg
aSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMuX19kYXRhLmxlbmd0aDsgaSA8
IGw7IGkrKykgewogICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLl9fbGlzdC5nZXRDaGlsZHJlbigp
W2ldLmdldExhYmVsKCk7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKHRoaXMuX19kYXRhW2ld
LmdldE5hbWUoKSwgbGFiZWwsICJCaW5kaW5nICIgKyBpICsgIiBpcyB3cm9uZyEiKTsKICAgICAg
IH0KICAgICAgIC8vIGNoZWNrIHRoZSBpY29uIGJpbmRpbmcKLSAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gdGhpcy5fX2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHZhciBpY29uID0g
dGhpcy5fX2xpc3QuZ2V0Q2hpbGRyZW4oKVtpXS5nZXRJY29uKCk7CiAgICAgICAgIHRoaXMuYXNz
ZXJ0RXF1YWxzKHRoaXMuX19kYXRhW2ldLmdldEljb24oKSwgaWNvbiwgIkJpbmRpbmcgIiArIGkg
KyAiIGlzIHdyb25nISIpOwogICAgICAgfQpAQCAtMjAxLDcgKzIwMSw3IEBACiAgICAgICB0aGlz
Ll9fY29udHJvbGxlci5zZXRJY29uUGF0aCgiaWNvbiIpOwogCiAgICAgICAvLyBjaGVjayB0aGUg
YmluZGluZwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fZGF0YS5sZW5ndGg7IGkr
KykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fZGF0YS5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKICAgICAgICAgdmFyIGljb24gPSB0aGlzLl9fbGlzdC5nZXRDaGlsZHJlbigpW2ld
LmdldEljb24oKTsKICAgICAgICAgdGhpcy5hc3NlcnRFcXVhbHModGhpcy5fX2RhdGFbaV0uZ2V0
SWNvbigpLCBpY29uLCAiQmluZGluZyAiICsgaSArICIgaXMgd3JvbmchIik7CiAgICAgICB9CkBA
IC0yMDksNyArMjA5LDcgQEAKICAgICAgIHRoaXMuX19jb250cm9sbGVyLnNldEljb25QYXRoKCJu
YW1lIik7CiAKICAgICAgIC8vIGNoZWNrIHRoZSBiaW5kaW5nIGFnYWluCi0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IHRoaXMuX19kYXRhLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBp
ID0gMCwgbCA9IHRoaXMuX19kYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIg
aWNvbiA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKClbaV0uZ2V0SWNvbigpOwogICAgICAgICB0
aGlzLmFzc2VydEVxdWFscyh0aGlzLl9fZGF0YVtpXS5nZXROYW1lKCksIGljb24sICJCaW5kaW5n
ICIgKyBpICsgIiBpcyB3cm9uZyEiKTsKICAgICAgIH0KQEAgLTIzOCwxMyArMjM4LDEzIEBACiAK
IAogICAgICAgLy8gY2hlY2sgdGhlIGxhYmVsIGJpbmRpbmcKLSAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gdGhpcy5fX2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHZhciBsYWJlbCA9
IHRoaXMuX19saXN0LmdldENoaWxkcmVuKClbaV0uZ2V0TGFiZWwoKTsKICAgICAgICAgdGhpcy5h
c3NlcnRFcXVhbHMoIkRyLiAiICsgdGhpcy5fX2RhdGFbaV0uZ2V0TmFtZSgpLCBsYWJlbCwgIkJp
bmRpbmcgIiArIGkgKyAiIGlzIHdyb25nISIpOwogICAgICAgfQogCiAgICAgICAvLyBjaGVjayB0
aGUgaWNvbiBiaW5kaW5nCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19kYXRhLmxl
bmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMuX19kYXRhLmxlbmd0
aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgaWNvbiA9IHRoaXMuX19saXN0LmdldENoaWxk
cmVuKClbaV0uZ2V0SWNvbigpOwogICAgICAgICB0aGlzLmFzc2VydEVxdWFscyh0aGlzLl9fZGF0
YVtpXS5nZXRJY29uKCkgKyAiLnBuZyIsIGljb24sICJCaW5kaW5nICIgKyBpICsgIiBpcyB3cm9u
ZyEiKTsKICAgICAgIH0KQEAgLTI1OCw3ICsyNTgsNyBAQAogICAgICAgdGhpcy5fX2NvbnRyb2xs
ZXIuc2V0TW9kZWwodGhpcy5fX21vZGVsKTsKIAogICAgICAgLy8gY2hlY2sgdGhlIGJpbmRpbmcK
LSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAg
ICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7
CiAgICAgICAgIHZhciBsYWJlbCA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKClbaV0uZ2V0TGFi
ZWwoKTsKICAgICAgICAgdGhpcy5hc3NlcnRFcXVhbHModGhpcy5fX2RhdGFbaV0uZ2V0TmFtZSgp
LCBsYWJlbCwgIkJpbmRpbmcgIiArIGkgKyAiIGlzIHdyb25nISIpOwogICAgICAgfQpAQCAtMjcy
LDcgKzI3Miw3IEBACiAgICAgICB0aGlzLl9fY29udHJvbGxlci5zZXRUYXJnZXQodGhpcy5fX2xp
c3QpOwogCiAgICAgICAvLyBjaGVjayB0aGUgYmluZGluZwotICAgICAgZm9yICh2YXIgaSA9IDA7
IGkgPCB0aGlzLl9fZGF0YS5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwg
PSB0aGlzLl9fZGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdmFyIGxhYmVsID0g
dGhpcy5fX2xpc3QuZ2V0Q2hpbGRyZW4oKVtpXS5nZXRMYWJlbCgpOwogICAgICAgICB0aGlzLmFz
c2VydEVxdWFscyh0aGlzLl9fZGF0YVtpXS5nZXROYW1lKCksIGxhYmVsLCAiQmluZGluZyAiICsg
aSArICIgaXMgd3JvbmchIik7CiAgICAgICB9CkBAIC0zMTksNyArMzE5LDcgQEAKICAgICAgIHRo
aXMuX19tb2RlbC5wb3AoKTsKIAogICAgICAgLy8gY2hlY2sgdGhlIGJpbmRpbmcKLSAgICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2RhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAo
dmFyIGkgPSAwLCBsID0gdGhpcy5fX2RhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAg
IHZhciBsYWJlbCA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKClbaV0uZ2V0TGFiZWwoKTsKICAg
ICAgICAgdGhpcy5hc3NlcnRFcXVhbHModGhpcy5fX2RhdGFbaV0uZ2V0TmFtZSgpLCBsYWJlbCwg
IkJpbmRpbmcgIiArIGkgKyAiIGlzIHdyb25nISIpOwogICAgICAgfQpAQCAtNDUwLDcgKzQ1MCw3
IEBACiAgICAgICB0aGlzLl9fY29udHJvbGxlci5zZXRNb2RlbCh0aGlzLl9fbW9kZWwpOwogICAg
ICAgCiAgICAgICAvLyB0ZXN0IHRoZSByaWdodCBzZXQgbW9kZWwgcHJvcGVydGllcwotICAgICAg
Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fbGlzdC5nZXRDaGlsZHJlbigpLmxlbmd0aDsgaSsr
KSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMuX19saXN0LmdldENoaWxkcmVuKCku
bGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHZhciBjaGlsZCA9IHRoaXMuX19saXN0Lmdl
dENoaWxkcmVuKClbaV07CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKCJpY29uIiArIGksIGNo
aWxkLmdldE1vZGVsKCkpOwogICAgICAgfTsKQEAgLTQ2MCw0ICs0NjAsNCBAQAogICAgICAgdGhp
cy5hc3NlcnRFcXVhbHMoImljb24xIiwgdGhpcy5fX2xpc3QuZ2V0U2VsZWN0aW9uKClbMF0uZ2V0
TW9kZWwoKSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9
KTsKSW5kZXg6IHRlc3QvWG1sLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvWG1sLmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIHRlc3QvWG1sLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0zMyw3ICszMyw3IEBA
CiAgICAgewogICAgICAgdmFyIHNlciA9IFtdOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8YXJy
Lmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9PGFyci5sZW5ndGg7IGk8bDsg
aSsrKSB7CiAgICAgICAgIHNlcltpXSA9IHF4LnhtbC5FbGVtZW50LnNlcmlhbGl6ZShhcnJbaV0p
OwogICAgICAgfQogCkluZGV4OiB0ZXN0L3V0aWwvcGxhY2VtZW50L1BsYWNlbWVudC5qcwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09Ci0tLSB0ZXN0L3V0aWwvcGxhY2VtZW50L1BsYWNlbWVudC5qcwkocmV2aXNpb24gMjM4
ODkpCisrKyB0ZXN0L3V0aWwvcGxhY2VtZW50L1BsYWNlbWVudC5qcwkod29ya2luZyBjb3B5KQpA
QCAtMzIsNyArMzIsNyBAQAogICAgICAgdmFyIG9mZnNldHMgPSB7dG9wOiAwLCBsZWZ0OiAwLCBi
b3R0b206IDAsIHJpZ2h0OiAwfTsKIAogICAgICAgdmFyIG1vZGVzID0gWyJkaXJlY3QiLCAia2Vl
cC1hbGlnbiIsICJiZXN0LWZpdCJdOwotICAgICAgZm9yICh2YXIgaT0wOyBpPG1vZGVzLmxlbmd0
aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPW1vZGVzLmxlbmd0aDsgaTxsOyBpKyspCiAg
ICAgICB7CiAgICAgICAgIHZhciBtb2RlID0gbW9kZXNbaV07CiAKSW5kZXg6IHRlc3QvdXRpbC9O
dW1iZXJGb3JtYXQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91dGlsL051bWJlckZvcm1hdC5qcwko
cmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3V0aWwvTnVtYmVyRm9ybWF0LmpzCSh3b3JraW5nIGNv
cHkpCkBAIC04Niw3ICs4Niw3IEBACiAKICAgICAgIHZhciBiYWROdW1iZXJTdHI7CiAKLSAgICAg
IGZvciAodmFyIGk9MDsgaTxiYWROdW1iZXJTdHJpbmdzLmxlbmd0aDsgaSsrKQorICAgICAgZm9y
ICh2YXIgaT0wLCBsPWJhZE51bWJlclN0cmluZ3MubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsK
ICAgICAgICAgYmFkTnVtYmVyU3RyID0gYmFkTnVtYmVyU3RyaW5nc1tpXTsKIApJbmRleDogdGVz
dC91dGlsL1N0cmluZ1NwbGl0LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdXRpbC9TdHJpbmdTcGxp
dC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3V0aWwvU3RyaW5nU3BsaXQuanMJKHdvcmtp
bmcgY29weSkKQEAgLTEwMCw3ICsxMDAsNyBAQAogICAgICAgICBbInF4LnV0aWwuU3RyaW5nU3Bs
aXQuc3BsaXQoJy4nLCAvKCgoKCguPz8pKSkpKS8pIiwgICAgIFsiLiJdXQogICAgICAgXTsKIAot
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0ZXN0Q29kZS5sZW5ndGg7IGkrKykKKyAgICAgIGZv
ciAodmFyIGkgPSAwLCBsPXRlc3RDb2RlLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAg
ICAgIHZhciByZXN1bHQgPSBldmFsKHRlc3RDb2RlW2ldWzBdKTsKICAgICAgICAgdGhpcy5hc3Nl
cnRBcnJheUVxdWFscyh0ZXN0Q29kZVtpXVsxXSwgcmVzdWx0KTsKSW5kZXg6IHRlc3QvdWkvV2lu
ZG93LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvV2luZG93LmpzCShyZXZpc2lvbiAyMzg4OSkK
KysrIHRlc3QvdWkvV2luZG93LmpzCSh3b3JraW5nIGNvcHkpCkBAIC05Miw3ICs5Miw3IEBACiAK
ICAgICB0ZXN0QWN0aXZlV2luZG93QWZ0ZXJBbGxXaW5kb3dzT3BlbmVkIDogZnVuY3Rpb24oKQog
ICAgIHsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fd2luLmxlbmd0aDsgaSsrKSB7
CisgICAgICBmb3IgKHZhciBpID0gMCwgbD10aGlzLl93aW4ubGVuZ3RoOyBpPGw7IGkrKykgewog
ICAgICAgICB0aGlzLl93aW5baV0ub3BlbigpOwogICAgICAgfQogICAgICAgdGhpcy5mbHVzaCgp
OwpAQCAtMTI2LDcgKzEyNiw3IEBACiAKICAgICB0ZXN0QWN0aXZlV2luZG93QWZ0ZXJSZW1vdmlu
Z0FsbFdpbmRvd3MgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgdGhpcy5fd2luLmxlbmd0aDsgaSsrKSB7CisgICAgICAgZm9yICh2YXIgaSA9IDAsIGw9dGhp
cy5fd2luLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdGhpcy5fd2luW2ldLm9wZW4oKTsK
ICAgICAgIH0KICAgICAgIHRoaXMuZmx1c2goKTsKSW5kZXg6IHRlc3QvdWkvTGF5b3V0VGVzdENh
c2UuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9MYXlvdXRUZXN0Q2FzZS5qcwkocmV2aXNpb24g
MjM4ODkpCisrKyB0ZXN0L3VpL0xheW91dFRlc3RDYXNlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0x
MzgsNyArMTM4LDcgQEAKICAgICAgICAgICAgIGxpc3RlbmVyc0NvcHlbaGFzaF1ba2V5XSA9IFtd
OwogICAgICAgICAgIH0KIAotICAgICAgICAgIGZvciAodmFyIGk9MDsgaTxsaXN0ZW5lcnNbaGFz
aF1ba2V5XS5sZW5ndGg7IGkrKykKKyAgICAgICAgICBmb3IgKHZhciBpPTAsIGw9bGlzdGVuZXJz
W2hhc2hdW2tleV0ubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgICAgICB7CiAgICAgICAgICAgICBp
ZiAobGlzdGVuZXJzQ29weVtoYXNoXVtrZXldLmluZGV4T2YobGlzdGVuZXJzW2hhc2hdW2tleV1b
aV0pID09IC0xKSB7CiAgICAgICAgICAgICAgIHRoaXMuZmFpbCgKQEAgLTE2NSw3ICsxNjUsNyBA
QAogICAgICAgdGhpcy5hc3NlcnREZXN0cm95KGZ1bmN0aW9uKCkKICAgICAgIHsKICAgICAgICAg
dmFyIGFyZ1N0ciA9IFtdOwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8YXJncy5sZW5ndGg7IGkr
KykgeworICAgICAgICBmb3IgKHZhciBpPTAsIGw9YXJncy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAg
ICAgICAgICAgYXJnU3RyLnB1c2goInF4LnRlc3QudWkuTGF5b3V0VGVzdENhc2UuJCRhcmdzIiAr
ICJbIiArIGkgKyAiXSIpOwogICAgICAgICB9CiAKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1N0
YWNrLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9uL1N0YWNrLmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIHRlc3QvdWkvc2VsZWN0aW9uL1N0YWNrLmpzCSh3b3JraW5nIGNvcHkpCkBA
IC0yNyw3ICsyNyw2IEBACiAKICAgICBzZXRVcCA6IGZ1bmN0aW9uKCkKICAgICB7Ci0gICAgICB2
YXIgbGVuZ3RoID0gMTA7CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IFtdOwogICAgICAg
dGhpcy5fbW9kZSA9ICIiOwogCkBAIC00Nyw3ICs0Niw3IEBACiAgICAgICB0aGlzLl93aWRnZXQg
PSBuZXcgcXgudWkuY29udGFpbmVyLlN0YWNrKCk7CiAgICAgICB0aGlzLmdldFJvb3QoKS5hZGQo
dGhpcy5fd2lkZ2V0KTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykg
eworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVt
ID0gdGhpcy5fX2NyZWF0ZUl0ZW0oIlBhZ2UiICsgaSwgY29sb3JzW2ldKTsKICAgICAgICAgdGhp
cy5fd2lkZ2V0LmFkZChpdGVtKTsKIApAQCAtOTksNCArOTgsNCBAQAogICAgICAgcmV0dXJuIGl0
ZW07CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5k
ZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1RyZWVTaW5nbGVTZWxlY3Rpb24uanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gdGVzdC91aS9zZWxlY3Rpb24vVHJlZVNpbmdsZVNlbGVjdGlvbi5qcwkocmV2aXNpb24gMjM4
ODkpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9UcmVlU2luZ2xlU2VsZWN0aW9uLmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0yNSw3ICsyNSw2IEBACiAgIHsKICAgICBzZXRVcCA6IGZ1bmN0aW9uKCkKICAg
ICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9
IFtdOwogICAgICAgdGhpcy5fbW9kZSA9ICJzaW5nbGUiOwogCkBAIC00MSw3ICs0MCw3IEBACiAg
ICAgICByb290LnNldE9wZW4odHJ1ZSk7CiAgICAgICB0aGlzLl93aWRnZXQuc2V0Um9vdChyb290
KTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworICAgICAgZm9y
ICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgIHZhciBmb2xkZXIgPSBuZXcgcXgu
dWkudHJlZS5UcmVlRm9sZGVyKCJGb2xkZXIiICsgaSk7CiAgICAgICAgIGZvbGRlci5zZXRPcGVu
KHRydWUpOwogICAgICAgICB2YXIgZmlsZSA9IG5ldyBxeC51aS50cmVlLlRyZWVGaWxlKCJGaWxl
IiArIGkpOwpAQCAtMTIyLDQgKzEyMSw0IEBACiAgICAgICB0cmVlLmRlc3Ryb3koKTsKICAgICB9
CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogdGVzdC91
aS9zZWxlY3Rpb24vU2VsZWN0Qm94LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9u
L1NlbGVjdEJveC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9TZWxl
Y3RCb3guanMJKHdvcmtpbmcgY29weSkKQEAgLTI1LDE0ICsyNSwxMyBAQAogICB7CiAgICAgc2V0
VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhp
cy5fbm90SW5TZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX21vZGUgPSAib25lIjsKIAogICAg
ICAgdGhpcy5fd2lkZ2V0ID0gbmV3IHF4LnVpLmZvcm0uU2VsZWN0Qm94KCk7CiAgICAgICB0aGlz
LmdldFJvb3QoKS5hZGQodGhpcy5fd2lkZ2V0KTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkg
PCBsZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAg
ICAgICAgIHZhciBpdGVtID0gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkp
OwogICAgICAgICB0aGlzLl93aWRnZXQuYWRkKGl0ZW0pOwogCkBAIC03Nyw0ICs3Niw0IEBACiAg
ICAgICByZXR1cm4gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19
KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0
aW9uL0Fic3RyYWN0TXVsdGlTZWxlY3RvblRlc3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9z
ZWxlY3Rpb24vQWJzdHJhY3RNdWx0aVNlbGVjdG9uVGVzdC5qcwkocmV2aXNpb24gMjM4ODkpCisr
KyB0ZXN0L3VpL3NlbGVjdGlvbi9BYnN0cmFjdE11bHRpU2VsZWN0b25UZXN0LmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0yMjYsNyArMjI2LDcgQEAKICAgICB7CiAgICAgICAvLyB0ZXN0IHNldHVwCiAg
ICAgICB2YXIgdGVtcE5vdEluU2VsZWN0aW9uID0gW107Ci0gICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IHRoaXMuX25vdEluU2VsZWN0aW9uLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBp
ID0gMCwgbCA9IHRoaXMuX25vdEluU2VsZWN0aW9uLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAg
ICAgICB0ZW1wTm90SW5TZWxlY3Rpb24ucHVzaCh0aGlzLl9ub3RJblNlbGVjdGlvbltpXSk7CiAg
ICAgICB9CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IHRlbXBOb3RJblNlbGVjdGlvbjsK
SW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1JhZGlvR3JvdXAuanMKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVz
dC91aS9zZWxlY3Rpb24vUmFkaW9Hcm91cC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3Vp
L3NlbGVjdGlvbi9SYWRpb0dyb3VwLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNyw3ICsyNyw2IEBA
CiAKICAgICBzZXRVcCA6IGZ1bmN0aW9uKCkKICAgICB7Ci0gICAgICB2YXIgbGVuZ3RoID0gMTA7
CiAgICAgICB0aGlzLl9tb2RlID0gIm9uZSI7CiAgICAgICB0aGlzLl9fcmFkaW9CdXR0b25zID0g
W107CiAgICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IFtdOwpAQCAtMzUsNyArMzQsNyBAQAog
ICAgICAgdGhpcy5fd2lkZ2V0ID0gbmV3IHF4LnVpLmZvcm0uUmFkaW9Hcm91cCgpOwogICAgICAg
dmFyIHJvb3QgPSB0aGlzLmdldFJvb3QoKTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBs
ZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAg
ICAgIHZhciBpdGVtID0gbmV3IHF4LnVpLmZvcm0uUmFkaW9CdXR0b24oIlJhZGlvQnV0dG9uIiAr
IGkpOwogICAgICAgICByb290LmFkZChpdGVtLCB7dG9wOiAyMCppfSk7CiAgICAgICAgIHRoaXMu
X3dpZGdldC5hZGQoaXRlbSk7CkBAIC01NSw3ICs1NCw3IEBACiAgICAgdGVhckRvd24gOiBmdW5j
dGlvbigpCiAgICAgewogICAgICAgdGhpcy5nZXRSb290KCkucmVtb3ZlQWxsKCk7Ci0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19yYWRpb0J1dHRvbnMubGVuZ3RoOyBpKyspIHsKKyAg
ICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX3JhZGlvQnV0dG9ucy5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKICAgICAgICAgdGhpcy5fX3JhZGlvQnV0dG9uc1tpXS5kZXN0cm95KCk7CiAgICAg
ICB9CiAgICAgICB0aGlzLl9fcmFkaW9CdXR0b25zID0gbnVsbDsKQEAgLTEzNiw0ICsxMzUsNCBA
QAogICAgICAgcmFkaW9CdXR0b24xLmRpc3Bvc2UoKTsKICAgICB9CiAgIH0KLX0pOwpcIE5vIG5l
d2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogdGVzdC91aS9zZWxlY3Rpb24vTGlzdE11
bHRpU2VsZWN0aW9uLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9uL0xpc3RNdWx0
aVNlbGVjdGlvbi5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9MaXN0
TXVsdGlTZWxlY3Rpb24uanMJKHdvcmtpbmcgY29weSkKQEAgLTI1LDcgKzI1LDYgQEAKICAgewog
ICAgIHNldFVwIDogZnVuY3Rpb24oKQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSAxMDsKICAg
ICAgIHRoaXMuX3NlbGVjdGlvbiA9IFtdOwogICAgICAgdGhpcy5fbm90SW5TZWxlY3Rpb24gPSBb
XTsKICAgICAgIHRoaXMuX21vZGUgPSAibXVsdGkiOwpAQCAtNDIsNyArNDEsNyBAQAogICAgICAg
dGhpcy5hc3NlcnRJZGVudGljYWwoc2VsZWN0aW9uLmxlbmd0aCwgMCwKICAgICAgICAgIkNvdWxk
bid0IHNldHVwIHRlc3QsIGJlY2F1c2Ugc2VsZWN0aW9uIGlzbid0IGVtcHR5Iik7CiAKLSAgICAg
IGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgMTA7IGkrKykgewogICAgICAgICB2YXIgaXRlbSA9IG5ldyBxeC51aS5mb3JtLkxpc3RJ
dGVtKCJMaXN0SXRlbSIgKyBpKTsKICAgICAgICAgdGhpcy5fd2lkZ2V0LmFkZChpdGVtKTsKIApA
QCAtODAsNCArNzksNCBAQAogICAgICAgcmV0dXJuIG5ldyBxeC51aS5mb3JtLkxpc3RJdGVtKG5h
bWUpOwogICAgIH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7Cklu
ZGV4OiB0ZXN0L3VpL3NlbGVjdGlvbi9UcmVlTXVsdGlTZWxlY3Rpb24uanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gdGVzdC91aS9zZWxlY3Rpb24vVHJlZU11bHRpU2VsZWN0aW9uLmpzCShyZXZpc2lvbiAyMzg4
OSkKKysrIHRlc3QvdWkvc2VsZWN0aW9uL1RyZWVNdWx0aVNlbGVjdGlvbi5qcwkod29ya2luZyBj
b3B5KQpAQCAtMjUsNyArMjUsNiBAQAogICB7CiAgICAgc2V0VXAgOiBmdW5jdGlvbigpCiAgICAg
ewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAgdGhpcy5fc2VsZWN0aW9uID0gW107CiAg
ICAgICB0aGlzLl9ub3RJblNlbGVjdGlvbiA9IFtdOwogICAgICAgdGhpcy5fbW9kZSA9ICJtdWx0
aSIKQEAgLTQzLDcgKzQyLDcgQEAKICAgICAgIHRoaXMuX3dpZGdldC5zZXRSb290KHJvb3QpOwog
ICAgICAgdGhpcy5fbm90SW5TZWxlY3Rpb24ucHVzaChyb290KTsKIAotICAgICAgZm9yICh2YXIg
aSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsg
aSsrKSB7CiAgICAgICAgIHZhciBmb2xkZXIgPSBuZXcgcXgudWkudHJlZS5UcmVlRm9sZGVyKCJG
b2xkZXIiICsgaSk7CiAgICAgICAgIGZvbGRlci5zZXRPcGVuKHRydWUpOwogICAgICAgICB0aGlz
Ll9ub3RJblNlbGVjdGlvbi5wdXNoKGZvbGRlcik7CkBAIC04NSw0ICs4NCw0IEBACiAgICAgICBy
ZXR1cm4gbmV3IHF4LnVpLnRyZWUuVHJlZUZpbGUobmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBO
byBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvc2VsZWN0aW9uL1Rh
YlZpZXcuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24vVGFiVmlldy5qcwkocmV2
aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3NlbGVjdGlvbi9UYWJWaWV3LmpzCSh3b3JraW5nIGNv
cHkpCkBAIC0yNywxNCArMjcsMTMgQEAKIAogICAgIHNldFVwIDogZnVuY3Rpb24oKQogICAgIHsK
LSAgICAgIHZhciBsZW5ndGggPSAxMDsKICAgICAgIHRoaXMuX25vdEluU2VsZWN0aW9uID0gW107
CiAgICAgICB0aGlzLl9tb2RlID0gIm9uZSI7CiAKICAgICAgIHRoaXMuX3dpZGdldCA9IG5ldyBx
eC51aS50YWJ2aWV3LlRhYlZpZXcoKTsKICAgICAgIHRoaXMuZ2V0Um9vdCgpLmFkZCh0aGlzLl93
aWRnZXQpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHsKICAgICAgICAgdmFyIGl0ZW0gPSBuZXcg
cXgudWkudGFidmlldy5QYWdlKCJQYWdlIiArIGkpOwogICAgICAgICB0aGlzLl93aWRnZXQuYWRk
KGl0ZW0pOwogCkBAIC03Miw0ICs3MSw0IEBACiAgICAgICByZXR1cm4gbmV3IHF4LnVpLnRhYnZp
ZXcuUGFnZShuYW1lKTsKICAgICB9CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZp
bGUKK30pOwpJbmRleDogdGVzdC91aS9zZWxlY3Rpb24vQWJzdHJhY3RTaW5nbGVTZWxlY3RvblRl
c3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9zZWxlY3Rpb24vQWJzdHJhY3RTaW5nbGVTZWxl
Y3RvblRlc3QuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS9zZWxlY3Rpb24vQWJzdHJh
Y3RTaW5nbGVTZWxlY3RvblRlc3QuanMJKHdvcmtpbmcgY29weSkKQEAgLTI2Nyw3ICsyNjcsNyBA
QAogICAgICAgdmFyIHNlbGVjdGFibGVzID0gW107CiAgICAgICB2YXIgaXRlbXMgPSB0aGlzLl9n
ZXRDaGlsZHJlbigpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsg
aSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKysp
CiAgICAgICB7CiAgICAgICAgIGlmIChpICUgMiA9PSAwKSB7CiAgICAgICAgICAgc2VsZWN0YWJs
ZXMucHVzaChpdGVtc1tpXSk7CkluZGV4OiB0ZXN0L3VpL3NlbGVjdGlvbi9MaXN0U2luZ2xlU2Vs
ZWN0aW9uLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvc2VsZWN0aW9uL0xpc3RTaW5nbGVTZWxl
Y3Rpb24uanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS9zZWxlY3Rpb24vTGlzdFNpbmds
ZVNlbGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpAQCAtMjUsNyArMjUsNiBAQAogICB7CiAgICAg
c2V0VXAgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgdmFyIGxlbmd0aCA9IDEwOwogICAgICAg
dGhpcy5fbm90SW5TZWxlY3Rpb24gPSBbXTsKICAgICAgIHRoaXMuX21vZGUgPSAic2luZ2xlIjsK
IApAQCAtMzcsNyArMzYsNyBAQAogICAgICAgfSk7CiAgICAgICB0aGlzLmdldFJvb3QoKS5hZGQo
dGhpcy5fd2lkZ2V0KTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykg
eworICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgIHZhciBpdGVt
ID0gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0oIkxpc3RJdGVtIiArIGkpOwogICAgICAgICB0aGlz
Ll93aWRnZXQuYWRkKGl0ZW0pOwogCkBAIC03OCw0ICs3Nyw0IEBACiAgICAgICByZXR1cm4gbmV3
IHF4LnVpLmZvcm0uTGlzdEl0ZW0obmFtZSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5l
IGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9BeGlzLmpzCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLS0tIHRlc3QvdWkvdmlydHVhbC9BeGlzLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRl
c3QvdWkvdmlydHVhbC9BeGlzLmpzCSh3b3JraW5nIGNvcHkpCkBAIC03MSwxMiArNzEsMTIgQEAK
ICAgICAgICAgdGhpcy5heGlzLnNldEl0ZW1TaXplKHBhcnNlSW50KGtleSksIHNpemVzW2tleV0p
OwogICAgICAgfQogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8dGhpcy5jb3VudDsgaSsrKSB7Cisg
ICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5jb3VudDsgaTxsOyBpKyspIHsKICAgICAgICAgdGhp
cy5hc3NlcnRFcXVhbHMoc2l6ZXNbaV0gfHwgdGhpcy5kZWZhdWx0U2l6ZSwgdGhpcy5heGlzLmdl
dEl0ZW1TaXplKGkpKTsKICAgICAgIH0KIAogICAgICAgdGhpcy5heGlzLnNldERlZmF1bHRJdGVt
U2l6ZSh0aGlzLmRlZmF1bHRTaXplICogMik7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8dGhpcy5j
b3VudDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5jb3VudDsgaTxsOyBpKysp
IHsKICAgICAgICAgdGhpcy5hc3NlcnRFcXVhbHMoc2l6ZXNbaV0gfHwgKHRoaXMuZGVmYXVsdFNp
emUqMiksIHRoaXMuYXhpcy5nZXRJdGVtU2l6ZShpKSk7CiAgICAgICB9CiAgICAgfSwKQEAgLTE1
MiwxMiArMTUyLDEyIEBACiAKICAgICB0ZXN0R2V0SXRlbUF0UG9zaXRpb25TdHJlc3MgOiBmdW5j
dGlvbigpCiAgICAgewotICAgICAgZm9yICh2YXIgaj0wOyBqPHRoaXMuSVRFTV9QT1NfSVRFUjsg
aisrKQorICAgICAgZm9yICh2YXIgaj0wLCBsPXRoaXMuSVRFTV9QT1NfSVRFUjsgajxsOyBqKysp
CiAgICAgICB7CiAgICAgICAgIHZhciB0b3RhbCA9IDA7CiAgICAgICAgIHRoaXMuYXhpcy5zZXRJ
dGVtQ291bnQodGhpcy5JVEVNX1BPU19DT1VOVCk7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBp
PHRoaXMuSVRFTV9QT1NfQ09VTlQ7IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMu
SVRFTV9QT1NfQ09VTlQ7IGk8bDsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgaWYgKGk9PXRo
aXMuSVRFTV9QT1NfQ09VTlQtMTApIHsKICAgICAgICAgICAgIHZhciBwb3MgPSB0b3RhbCArIDIw
OwpAQCAtMTk1LDEyICsxOTUsMTIgQEAKIAogICAgIHRlc3RHZXRUb3RhbFNpemVTdHJlc3MgOiBm
dW5jdGlvbigpCiAgICAgewotICAgICAgZm9yICh2YXIgaj0wOyBqPHRoaXMuVE9UQUxfU0laRV9J
VEVSOyBqKyspCisgICAgICBmb3IgKHZhciBqPTAsIGw9dGhpcy5UT1RBTF9TSVpFX0lURVI7IGo8
bDsgaisrKQogICAgICAgewogICAgICAgICB2YXIgdG90YWwgPSAwOwogICAgICAgICB0aGlzLmF4
aXMuc2V0SXRlbUNvdW50KHRoaXMuVE9UQUxfU0laRV9JVEVNUyk7CiAKLSAgICAgICAgZm9yICh2
YXIgaT0wOyBpPHRoaXMuVE9UQUxfU0laRV9JVEVNUzsgaSsrKQorICAgICAgICBmb3IgKHZhciBp
PTAsIGw9dGhpcy5UT1RBTF9TSVpFX0lURU1TOyBpPGw7IGkrKykKICAgICAgICAgewogICAgICAg
ICAgIHZhciBpdGVtU2l6ZSA9IDUwICsgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogODApOwog
ICAgICAgICAgIHRvdGFsICs9IGl0ZW1TaXplOwpAQCAtMzUzLDcgKzM1Myw3IEBACiAgICAgewog
ICAgICAgLy93aW5kb3cudG9wLmNvbnNvbGUucHJvZmlsZSgic2V0dXAgKGJlc3QgY2FzZSkiKTsK
ICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKCk7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8dGhp
cy5TRVRVUF9JVEVSOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5TRVRVUF9JVEVS
OyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdGhpcy5heGlzLl9fcmFuZ2VzID0gbnVsbDsK
ICAgICAgICAgdGhpcy5heGlzLmdldEl0ZW1BdFBvc2l0aW9uKDApOwpAQCAtMzY3LDEzICszNjcs
MTMgQEAKICAgICB0ZXN0UGVyZm9ybWFuY2VTZXR1cFdvcnN0Q2FzZSA6IGZ1bmN0aW9uKCkKICAg
ICB7CiAgICAgICAvLyBlYWNoIGNlbGwgaGFzIGEgY3VzdG9tIHNpemUKLSAgICAgIGZvciAodmFy
IGk9MDsgaTx0aGlzLmNvdW50OyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLmNv
dW50OyBpPGw7IGkrKykgewogICAgICAgICB0aGlzLmF4aXMuc2V0SXRlbVNpemUoaSwgdGhpcy5k
ZWZhdWx0U2l6ZSArIChpICUgMjApICsgMSk7CiAgICAgICB9CiAKICAgICAgIC8vd2luZG93LnRv
cC5jb25zb2xlLnByb2ZpbGUoInNldHVwICh3b3JzdCBjYXNlKSIpOwogICAgICAgdmFyIHN0YXJ0
ID0gbmV3IERhdGUoKTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLlNFVFVQX0lURVI7IGkr
KykKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLlNFVFVQX0lURVI7IGk8bDsgaSsrKQogICAg
ICAgewogICAgICAgICB0aGlzLmF4aXMuX19yYW5nZXMgPSBudWxsOwogICAgICAgICB0aGlzLmF4
aXMuZ2V0SXRlbUF0UG9zaXRpb24oMCk7CkBAIC0zOTMsNyArMzkzLDcgQEAKIAogICAgICAgLy93
aW5kb3cudG9wLmNvbnNvbGUucHJvZmlsZSgiZmluZCAoYmVzdCBjYXNlKSIpOwogICAgICAgdmFy
IHN0YXJ0ID0gbmV3IERhdGUoKTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLkZJTkRfSVRF
UjsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5GSU5EX0lURVI7IGk8bDsgaSsr
KSB7CiAgICAgICAgIHRoaXMuYXhpcy5nZXRJdGVtQXRQb3NpdGlvbigoaSoxNykgJSBtYXgpOwog
ICAgICAgfQogICAgICAgdmFyIGVuZCA9IG5ldyBEYXRlKCk7CkBAIC00MDYsNyArNDA2LDcgQEAK
ICAgICB0ZXN0UGVyZm9ybWFuY2VGaW5kV29yc3RDYXNlIDogZnVuY3Rpb24oKQogICAgIHsKICAg
ICAgIC8vIGVhY2ggY2VsbCBoYXMgYSBjdXN0b20gc2l6ZQotICAgICAgZm9yICh2YXIgaT0wOyBp
PHRoaXMuY291bnQ7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMuY291bnQ7IGk8
bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXhpcy5zZXRJdGVtU2l6ZShpLCB0aGlzLmRlZmF1bHRT
aXplICsgKGkgJSAyMCkgKyAxKTsKICAgICAgIH0KIApAQCAtNDE0LDcgKzQxNCw3IEBACiAKICAg
ICAgIC8vd2luZG93LnRvcC5jb25zb2xlLnByb2ZpbGUoImZpbmQgKHdvcnN0IGNhc2UpIik7CiAg
ICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpOwotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMu
RklORF9JVEVSOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLkZJTkRfSVRFUjsg
aTxsOyBpKyspIHsKICAgICAgICAgdGhpcy5heGlzLmdldEl0ZW1BdFBvc2l0aW9uKChpKjE3KSAl
IG1heCk7CiAgICAgICB9CiAgICAgICB2YXIgZW5kID0gbmV3IERhdGUoKTsKSW5kZXg6IHRlc3Qv
dWkvdmlydHVhbC9wZXJmb3JtYW5jZS9BYnN0cmFjdExheWVyVGVzdC5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB0ZXN0L3VpL3ZpcnR1YWwvcGVyZm9ybWFuY2UvQWJzdHJhY3RMYXllclRlc3QuanMJKHJldmlz
aW9uIDIzODg5KQorKysgdGVzdC91aS92aXJ0dWFsL3BlcmZvcm1hbmNlL0Fic3RyYWN0TGF5ZXJU
ZXN0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC00NywxMiArNDcsMTIgQEAKICAgICAgIHRoaXMuZmx1
c2goKTsKIAogICAgICAgdGhpcy5yb3dTaXplcyA9IFtdOwotICAgICAgZm9yICh2YXIgaT0wOyBp
PHRoaXMucm93Q291bnQ7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMucm93Q291
bnQ7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMucm93U2l6ZXMucHVzaCh0aGlzLnJvd0hlaWdo
dCk7CiAgICAgICB9CiAKICAgICAgIHRoaXMuY29sU2l6ZXMgPSBbXTsKLSAgICAgIGZvciAodmFy
IGk9MDsgaTx0aGlzLmNvbENvdW50OyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlz
LmNvbENvdW50OyBpPGw7IGkrKykgewogICAgICAgICB0aGlzLmNvbFNpemVzLnB1c2godGhpcy5j
b2xXaWR0aCk7CiAgICAgICB9CiAgICAgfSwKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9wZXJmb3Jt
YW5jZS9sYXllci9IdG1sVGFibGVDc3NDZWxsLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvdmly
dHVhbC9wZXJmb3JtYW5jZS9sYXllci9IdG1sVGFibGVDc3NDZWxsLmpzCShyZXZpc2lvbiAyMzg4
OSkKKysrIHRlc3QvdWkvdmlydHVhbC9wZXJmb3JtYW5jZS9sYXllci9IdG1sVGFibGVDc3NDZWxs
LmpzCSh3b3JraW5nIGNvcHkpCkBAIC04NSwxOSArODUsMTkgQEAKIAogICAgICAgaHRtbC5wdXNo
KCc8dGFibGUgY2xhc3M9InFvb3hkb28tdGFibGUiPicpOwogICAgICAgaHRtbC5wdXNoKCc8Y29s
Z3JvdXA+Jyk7Ci0gICAgICBmb3IodmFyIHk9MDsgeTxjb2x1bW5TaXplcy5sZW5ndGg7IHkrKykg
eworICAgICAgZm9yKHZhciB5PTAsIGw9Y29sdW1uU2l6ZXMubGVuZ3RoOyB5PGw7IHkrKykgewog
ICAgICAgIGh0bWwucHVzaCgnPGNvbCB3aWR0aD0nICsgY29sdW1uU2l6ZXNbeV0gKyAnPicpOwog
ICAgICAgfQogICAgICAgaHRtbC5wdXNoKCc8L2NvbGdyb3VwPicpOwogCi0gICAgICBmb3IgKHZh
ciB4PTA7IHg8cm93U2l6ZXMubGVuZ3RoOyB4KyspCisgICAgICBmb3IgKHZhciB4PTAsIGw9cm93
U2l6ZXMubGVuZ3RoOyB4PGw7IHgrKykKICAgICAgIHsKICAgICAgICAgdmFyIGxlZnQgPSAwOwog
ICAgICAgICB2YXIgY29sdW1uID0gZmlyc3RDb2x1bW47CiAgICAgICAgIHZhciBoZWlnaHQgPSBy
b3dTaXplc1t4XTsKIAogICAgICAgICBodG1sLnB1c2goJzx0ciBoZWlnaHQ9JyArIGhlaWdodCAr
ICc+Jyk7Ci0gICAgICAgIGZvcih2YXIgeT0wOyB5PGNvbHVtblNpemVzLmxlbmd0aDsgeSsrKQor
ICAgICAgICBmb3IodmFyIHk9MCwgbD1jb2x1bW5TaXplcy5sZW5ndGg7IHk8bDsgeSsrKQogICAg
ICAgICB7CiAgICAgICAgICAgdmFyIHdpZHRoID0gY29sdW1uU2l6ZXNbeV07CiAKQEAgLTEyMSw0
ICsxMjEsNCBAQAogICAgICAgdGhpcy5nZXRDb250ZW50RWxlbWVudCgpLnNldEF0dHJpYnV0ZSgi
aHRtbCIsIGh0bWwuam9pbigiIikpOwogICAgIH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBl
bmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L3VpL3ZpcnR1YWwvcGVyZm9ybWFuY2UvbGF5ZXIv
RG9tUG9vbENlbGwuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS92aXJ0dWFsL3BlcmZvcm1hbmNl
L2xheWVyL0RvbVBvb2xDZWxsLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvdmlydHVh
bC9wZXJmb3JtYW5jZS9sYXllci9Eb21Qb29sQ2VsbC5qcwkod29ya2luZyBjb3B5KQpAQCAtNTks
MTEgKzU5LDExIEBACiAgICAgICB2YXIgdG9wID0gMDsKICAgICAgIHZhciByb3cgPSBmaXJzdFJv
dzsKICAgICAgIHZhciBjb2wgPSBmaXJzdENvbHVtbjsKLSAgICAgIGZvciAodmFyIHg9MDsgeDxy
b3dTaXplcy5sZW5ndGg7IHgrKykKKyAgICAgIGZvciAodmFyIHg9MCwgbD1yb3dTaXplcy5sZW5n
dGg7IHg8bDsgeCsrKQogICAgICAgewogICAgICAgICB2YXIgbGVmdCA9IDA7CiAgICAgICAgIHZh
ciBjb2wgPSBmaXJzdENvbHVtbjsKLSAgICAgICAgZm9yKHZhciB5PTA7IHk8Y29sdW1uU2l6ZXMu
bGVuZ3RoOyB5KyspCisgICAgICAgIGZvcih2YXIgeT0wLCBsPWNvbHVtblNpemVzLmxlbmd0aDsg
eTxsOyB5KyspCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgY29udGVudCA9IGNvbCArICIgLyAi
ICsgcm93OwogCkBAIC05Miw3ICs5Miw3IEBACiAgICAgICAgIHJvdysrOwogICAgICAgfQogCi0g
ICAgICBmb3IgKHZhciBqPWk7IGo8Y2hpbGROb2Rlcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9y
ICh2YXIgaj1pLCBsPWNoaWxkTm9kZXMubGVuZ3RoOyBqPGw7IGkrKykgewogICAgICAgICBlbC5y
ZW1vdmVDaGlsZChjaGlsZE5vZGVzW2ldKTsKICAgICAgIH0KICAgICB9CkluZGV4OiB0ZXN0L3Vp
L3ZpcnR1YWwvcGVyZm9ybWFuY2UvbGF5ZXIvSHRtbFRhYmxlQ2VsbC5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB0ZXN0L3VpL3ZpcnR1YWwvcGVyZm9ybWFuY2UvbGF5ZXIvSHRtbFRhYmxlQ2VsbC5qcwkocmV2
aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3ZpcnR1YWwvcGVyZm9ybWFuY2UvbGF5ZXIvSHRtbFRh
YmxlQ2VsbC5qcwkod29ya2luZyBjb3B5KQpAQCAtNTAsMTkgKzUwLDE5IEBACiAKICAgICAgIGh0
bWwucHVzaCgnPHRhYmxlIHN0eWxlPSJ0YWJsZS1sYXlvdXQ6Zml4ZWQ7IGJvcmRlci1jb2xsYXBz
ZTogY29sbGFwc2U7IG1hcmdpbjogMHB4OyBwYWRkaW5nOiAwcHg7Ij4nKTsKICAgICAgIGh0bWwu
cHVzaCgnPGNvbGdyb3VwPicpOwotICAgICAgZm9yKHZhciB5PTA7IHk8Y29sdW1uU2l6ZXMubGVu
Z3RoOyB5KyspIHsKKyAgICAgIGZvcih2YXIgeT0wLCBsPWNvbHVtblNpemVzLmxlbmd0aDsgeTxs
OyB5KyspIHsKICAgICAgICBodG1sLnB1c2goJzxjb2wgd2lkdGg9IicgKyBjb2x1bW5TaXplc1t5
XSArICciPicpOwogICAgICAgfQogICAgICAgaHRtbC5wdXNoKCc8L2NvbGdyb3VwPicpOwogCi0g
ICAgICBmb3IgKHZhciB4PTA7IHg8cm93U2l6ZXMubGVuZ3RoOyB4KyspCisgICAgICBmb3IgKHZh
ciB4PTAsIGw9cm93U2l6ZXMubGVuZ3RoOyB4PGw7IHgrKykKICAgICAgIHsKICAgICAgICAgdmFy
IGxlZnQgPSAwOwogICAgICAgICB2YXIgY29sdW1uID0gZmlyc3RDb2x1bW47CiAgICAgICAgIHZh
ciBoZWlnaHQgPSByb3dTaXplc1t4XTsKIAogICAgICAgICBodG1sLnB1c2goJzx0ciBoZWlnaHQ9
IicgKyBoZWlnaHQgKyAnIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgbWFyZ2lu
OiAwcHg7IHBhZGRpbmc6IDBweDsiPicpOwotICAgICAgICBmb3IodmFyIHk9MDsgeTxjb2x1bW5T
aXplcy5sZW5ndGg7IHkrKykKKyAgICAgICAgZm9yKHZhciB5PTAsIGw9Y29sdW1uU2l6ZXMubGVu
Z3RoOyB5PGw7IHkrKykKICAgICAgICAgewogICAgICAgICAgIHZhciB3aWR0aCA9IGNvbHVtblNp
emVzW3ldOwogCkBAIC04Niw0ICs4Niw0IEBACiAgICAgICB0aGlzLmdldENvbnRlbnRFbGVtZW50
KCkuc2V0QXR0cmlidXRlKCJodG1sIiwgaHRtbC5qb2luKCIiKSk7CiAgICAgfQogICB9Ci19KTsK
XCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9w
ZXJmb3JtYW5jZS9sYXllci9Eb21DZWxsLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvdmlydHVh
bC9wZXJmb3JtYW5jZS9sYXllci9Eb21DZWxsLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3Qv
dWkvdmlydHVhbC9wZXJmb3JtYW5jZS9sYXllci9Eb21DZWxsLmpzCSh3b3JraW5nIGNvcHkpCkBA
IC00NCwxMSArNDQsMTEgQEAKIAogICAgICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRl
RG9jdW1lbnRGcmFnbWVudCgpOwogCi0gICAgICBmb3IgKHZhciB4PTA7IHg8cm93U2l6ZXMubGVu
Z3RoOyB4KyspCisgICAgICBmb3IgKHZhciB4PTAsIGw9cm93U2l6ZXMubGVuZ3RoOyB4PGw7IHgr
KykKICAgICAgIHsKICAgICAgICAgdmFyIGxlZnQgPSAwOwogICAgICAgICB2YXIgY29sID0gZmly
c3RDb2x1bW47Ci0gICAgICAgIGZvcih2YXIgeT0wOyB5PGNvbHVtblNpemVzLmxlbmd0aDsgeSsr
KQorICAgICAgICBmb3IodmFyIHk9MCwgbD1jb2x1bW5TaXplcy5sZW5ndGg7IHk8bDsgeSsrKQog
ICAgICAgICB7CiAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjb2wgKyAiIC8gIiArIHJvdzsKICAg
ICAgICAgICB2YXIgY2VsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwpJbmRleDog
dGVzdC91aS92aXJ0dWFsL3BlcmZvcm1hbmNlL2xheWVyL0h0bWxUYWJsZUNlbGxOYWl2ZS5qcwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0tLSB0ZXN0L3VpL3ZpcnR1YWwvcGVyZm9ybWFuY2UvbGF5ZXIvSHRtbFRhYmxl
Q2VsbE5haXZlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvdmlydHVhbC9wZXJmb3Jt
YW5jZS9sYXllci9IdG1sVGFibGVDZWxsTmFpdmUuanMJKHdvcmtpbmcgY29weSkKQEAgLTUwLDE0
ICs1MCwxNCBAQAogCiAgICAgICBodG1sLnB1c2goJzx0YWJsZSBzdHlsZT0iYm9yZGVyLWNvbGxh
cHNlOiBjb2xsYXBzZTsgbWFyZ2luOiAwcHg7IHBhZGRpbmc6IDBweDsiPicpOwogCi0gICAgICBm
b3IgKHZhciB4PTA7IHg8cm93U2l6ZXMubGVuZ3RoOyB4KyspCisgICAgICBmb3IgKHZhciB4PTAs
IGw9cm93U2l6ZXMubGVuZ3RoOyB4PGw7IHgrKykKICAgICAgIHsKICAgICAgICAgdmFyIGxlZnQg
PSAwOwogICAgICAgICB2YXIgY29sdW1uID0gZmlyc3RDb2x1bW47CiAgICAgICAgIHZhciBoZWln
aHQgPSByb3dTaXplc1t4XTsKIAogICAgICAgICBodG1sLnB1c2goJzx0ciBzdHlsZT0iYm9yZGVy
LWNvbGxhcHNlOiBjb2xsYXBzZTsgbWFyZ2luOiAwcHg7IHBhZGRpbmc6IDBweDsiPicpOwotICAg
ICAgICBmb3IodmFyIHk9MDsgeTxjb2x1bW5TaXplcy5sZW5ndGg7IHkrKykKKyAgICAgICAgZm9y
KHZhciB5PTAsIGw9Y29sdW1uU2l6ZXMubGVuZ3RoOyB5PGw7IHkrKykKICAgICAgICAgewogICAg
ICAgICAgIHZhciB3aWR0aCA9IGNvbHVtblNpemVzW3ldOwogCkBAIC04MSw0ICs4MSw0IEBACiAg
ICAgICB0aGlzLmdldENvbnRlbnRFbGVtZW50KCkuc2V0QXR0cmlidXRlKCJodG1sIiwgaHRtbC5q
b2luKCIiKSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9
KTsKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9wZXJmb3JtYW5jZS9sYXllci9IdG1sRGl2UmVsYXRp
dmUuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS92aXJ0dWFsL3BlcmZvcm1hbmNlL2xheWVyL0h0
bWxEaXZSZWxhdGl2ZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3ZpcnR1YWwvcGVy
Zm9ybWFuY2UvbGF5ZXIvSHRtbERpdlJlbGF0aXZlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC00MCwx
MSArNDAsMTEgQEAKICAgICAgIHZhciB0b3AgPSAwOwogICAgICAgdmFyIHJvdyA9IGZpcnN0Um93
OwogICAgICAgdmFyIGNvbCA9IGZpcnN0Q29sdW1uOwotICAgICAgZm9yICh2YXIgeD0wOyB4PHJv
d1NpemVzLmxlbmd0aDsgeCsrKQorICAgICAgZm9yICh2YXIgeD0wLCBsPXJvd1NpemVzLmxlbmd0
aDsgeDxsOyB4KyspCiAgICAgICB7CiAgICAgICAgIHZhciBsZWZ0ID0gMDsKICAgICAgICAgdmFy
IGNvbCA9IGZpcnN0Q29sdW1uOwotICAgICAgICBmb3IodmFyIHk9MDsgeTxjb2x1bW5TaXplcy5s
ZW5ndGg7IHkrKykKKyAgICAgICAgZm9yKHZhciB5PTAsIGw9Y29sdW1uU2l6ZXMubGVuZ3RoOyB5
PGw7IHkrKykKICAgICAgICAgewogICAgICAgICAgIHZhciBjb250ZW50ID0gY29sICsgIiAvICIg
KyByb3c7CiAKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9QYW5lVXBkYXRlLmpzCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
LS0tIHRlc3QvdWkvdmlydHVhbC9QYW5lVXBkYXRlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRl
c3QvdWkvdmlydHVhbC9QYW5lVXBkYXRlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC02OCw3ICs2OCw3
IEBACiAgICAgYXNzZXJ0Q2FsbHMgOiBmdW5jdGlvbihtZXRob2ROYW1lcywgY2FsbHMsIG1zZykK
ICAgICB7CiAgICAgICB0aGlzLmFzc2VydEVxdWFscyhtZXRob2ROYW1lcy5sZW5ndGgsIGNhbGxz
Lmxlbmd0aCk7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8bWV0aG9kTmFtZXMubGVuZ3RoOyBpKysp
IHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1tZXRob2ROYW1lcy5sZW5ndGg7IGk8bDsgaSsrKSB7
CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKG1ldGhvZE5hbWVzW2ldLCBjYWxsc1tpXVswXSk7
CiAgICAgICB9CiAgICAgfSwKSW5kZXg6IHRlc3QvdWkvdmlydHVhbC9sYXllci9MYXllclNpbXBs
ZS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3ZpcnR1YWwvbGF5ZXIvTGF5ZXJTaW1wbGUuanMJ
KHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS92aXJ0dWFsL2xheWVyL0xheWVyU2ltcGxlLmpz
CSh3b3JraW5nIGNvcHkpCkBAIC01NywxMiArNTcsMTIgQEAKICAgICAgIHZhciB0b3AgPSAwOwog
ICAgICAgdmFyIHJvdyA9IGZpcnN0Um93OwogICAgICAgdmFyIGNvbCA9IGZpcnN0Q29sdW1uOwot
ICAgICAgZm9yICh2YXIgeD0wOyB4PHJvd1NpemVzLmxlbmd0aDsgeCsrKQorICAgICAgZm9yICh2
YXIgeD0wLCBsPXJvd1NpemVzLmxlbmd0aDsgeDxsOyB4KyspCiAgICAgICB7CiAgICAgICAgIHZh
ciBsZWZ0ID0gMDsKICAgICAgICAgdmFyIGNvbCA9IGZpcnN0Q29sdW1uOwogICAgICAgICB2YXIg
aGVpZ2h0ID0gcm93U2l6ZXNbeF0KLSAgICAgICAgZm9yKHZhciB5PTA7IHk8Y29sdW1uU2l6ZXMu
bGVuZ3RoOyB5KyspCisgICAgICAgIGZvcih2YXIgeT0wLCBsPWNvbHVtblNpemVzLmxlbmd0aDsg
eTxsOyB5KyspCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgd2lkdGggPSBjb2x1bW5TaXplc1t5
XTsKIApAQCAtODIsNCArODIsNCBAQAogICAgICAgdGhpcy5nZXRDb250ZW50RWxlbWVudCgpLnNl
dEF0dHJpYnV0ZSgiaHRtbCIsIGh0bWwuam9pbigiIikpOwogICAgIH0KICAgfQotfSk7ClwgTm8g
bmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB0ZXN0L3VpL3ZpcnR1YWwvbGF5ZXIv
V2lkZ2V0Q2VsbC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL3ZpcnR1YWwvbGF5ZXIvV2lkZ2V0
Q2VsbC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL3ZpcnR1YWwvbGF5ZXIvV2lkZ2V0
Q2VsbC5qcwkod29ya2luZyBjb3B5KQpAQCAtMzQsNyArMzQsNyBAQAogCiAgICAgdGVhckRvd24g
OiBmdW5jdGlvbigpCiAgICAgewotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX3Bvb2wubGVu
Z3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLl9wb29sLmxlbmd0aDsgaTxs
OyBpKyspIHsKICAgICAgICAgdGhpcy5fcG9vbFtpXS5kZXN0cm95KCk7CiAgICAgICB9CiAgICAg
ICB0aGlzLmZsdXNoKCk7CkluZGV4OiB0ZXN0L3VpL3RhYmxlL1RhYmxlLmpzCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
LS0tIHRlc3QvdWkvdGFibGUvVGFibGUuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS90
YWJsZS9UYWJsZS5qcwkod29ya2luZyBjb3B5KQpAQCAtNTUsMTMgKzU1LDEzIEBACiAgICAgICAv
LyBzb3J0IGRlc2NlbmRpbmcKICAgICAgIG1vZGVsLnNvcnRCeUNvbHVtbigwKTsKICAgICAgIHZh
ciBkYXRhID0gbW9kZWwuZ2V0RGF0YSgpOwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRh
Lmxlbmd0aCAtIDE7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9ZGF0YS5sZW5ndGgg
LSAxOyBpPGw7IGkrKykgewogICAgICAgICB0aGlzLmFzc2VydFRydWUoZGF0YVtpXVswXSA+PSBk
YXRhW2krMV1bMF0pOwogICAgICAgfTsKIAogICAgICAgLy8gc29ydCBhc2NlbmRpbmcKICAgICAg
IG1vZGVsLnNvcnRCeUNvbHVtbigwLCB0cnVlKTsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwg
ZGF0YS5sZW5ndGggLSAxOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsPWRhdGEubGVu
Z3RoIC0gMTsgaTxsOyBpKyspIHsKICAgICAgICAgdGhpcy5hc3NlcnRUcnVlKGRhdGFbaV1bMF0g
PD0gZGF0YVtpKzFdWzBdKTsKICAgICAgIH07CiAKQEAgLTc5LDcgKzc5LDcgQEAKICAgICAgIC8v
IHNvcnQgZGVzY2VuZGluZwogICAgICAgbW9kZWwuc29ydEJ5Q29sdW1uKDEpOwogICAgICAgdmFy
IGRhdGEgPSBtb2RlbC5nZXREYXRhKCk7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEu
bGVuZ3RoIC0gMTsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbD1kYXRhLmxlbmd0aCAt
IDE7IGk8bDsgaSsrKSB7CiAgICAgICAgIGlmIChpc05hTihkYXRhW2ldWzFdKSkgewogICAgICAg
ICAgIC8vIGJvdGggc2hvdWxkIGJlIE5hTgogICAgICAgICAgIHRoaXMuYXNzZXJ0VHJ1ZShpc05h
TihkYXRhW2krMV1bMV0pKTsKQEAgLTk0LDcgKzk0LDcgQEAKICAgICAgIC8vIHNvcnQgYXNjZW5k
aW5nCiAgICAgICBtb2RlbC5zb3J0QnlDb2x1bW4oMSwgdHJ1ZSk7CiAgICAgICB2YXIgZGF0YSA9
IG1vZGVsLmdldERhdGEoKTsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGgg
LSAxOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsPWRhdGEubGVuZ3RoIC0gMTsgaTxs
OyBpKyspIHsKICAgICAgICAgaWYgKGlzTmFOKGRhdGFbaV1bMV0pKSB7CiAgICAgICAgICAgLy8g
Ym90aCBzaG91bGQgYmUgTmFOCiAgICAgICAgICAgdGhpcy5hc3NlcnRUcnVlKGlzTmFOKGRhdGFb
aSsxXVsxXSkpOwpAQCAtMTIxLDcgKzEyMSw3IEBACiAgICAgICAvLyBzb3J0IGRlc2NlbmRpbmcK
ICAgICAgIG1vZGVsLnNvcnRCeUNvbHVtbigxKTsKICAgICAgIHZhciBkYXRhID0gbW9kZWwuZ2V0
RGF0YSgpOwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aCAtIDE7IGkrKykg
eworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9ZGF0YS5sZW5ndGggLSAxOyBpPGw7IGkrKykgewog
ICAgICAgICBpZiAoaXNOYU4oZGF0YVtpXVsxXSkpIHsKICAgICAgICAgICAvLyBib3RoIHNob3Vs
ZCBiZSBOYU4KICAgICAgICAgICB0aGlzLmFzc2VydFRydWUoaXNOYU4oZGF0YVtpKzFdWzFdKSk7
CkBAIC0xMzYsNyArMTM2LDcgQEAKICAgICAgIC8vIHNvcnQgYXNjZW5kaW5nCiAgICAgICBtb2Rl
bC5zb3J0QnlDb2x1bW4oMSwgdHJ1ZSk7CiAgICAgICB2YXIgZGF0YSA9IG1vZGVsLmdldERhdGEo
KTsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGggLSAxOyBpKyspIHsKKyAg
ICAgIGZvciAodmFyIGkgPSAwLCBsPWRhdGEubGVuZ3RoIC0gMTsgaTxsOyBpKyspIHsKICAgICAg
ICAgaWYgKGlzTmFOKGRhdGFbaV1bMV0pKSB7CiAgICAgICAgICAgLy8gYm90aCBzaG91bGQgYmUg
TmFOCiAgICAgICAgICAgdGhpcy5hc3NlcnRUcnVlKGlzTmFOKGRhdGFbaSsxXVsxXSkpOwpAQCAt
MTYzLDEzICsxNjMsMTMgQEAKICAgICAgIC8vIHNvcnQgZGVzY2VuZGluZwogICAgICAgbW9kZWwu
c29ydEJ5Q29sdW1uKDIpOwogICAgICAgdmFyIGRhdGEgPSBtb2RlbC5nZXREYXRhKCk7Ci0gICAg
ICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoIC0gMTsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMCwgbD1kYXRhLmxlbmd0aCAtIDE7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMu
YXNzZXJ0VHJ1ZShkYXRhW2ldWzJdID49IGRhdGFbaSsxXVsyXSk7CiAgICAgICB9OwogCiAgICAg
ICAvLyBzb3J0IGFzY2VuZGluZwogICAgICAgbW9kZWwuc29ydEJ5Q29sdW1uKDIsIHRydWUpOwot
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aCAtIDE7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaSA9IDAsIGw9ZGF0YS5sZW5ndGggLSAxOyBpPGw7IGkrKykgewogICAgICAgICB0
aGlzLmFzc2VydFRydWUoZGF0YVtpXVsyXSA8PSBkYXRhW2krMV1bMl0pOwogICAgICAgfTsKIApA
QCAtMTg3LDEzICsxODcsMTMgQEAKICAgICAgIC8vIHNvcnQgZGVzY2VuZGluZwogICAgICAgbW9k
ZWwuc29ydEJ5Q29sdW1uKDIpOwogICAgICAgdmFyIGRhdGEgPSBtb2RlbC5nZXREYXRhKCk7Ci0g
ICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoIC0gMTsgaSsrKSB7CisgICAgICBm
b3IgKHZhciBpID0gMCwgbD1kYXRhLmxlbmd0aCAtIDE7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRo
aXMuYXNzZXJ0VHJ1ZShkYXRhW2ldWzJdID49IGRhdGFbaSsxXVsyXSk7CiAgICAgICB9OwogCiAg
ICAgICAvLyBzb3J0IGFzY2VuZGluZwogICAgICAgbW9kZWwuc29ydEJ5Q29sdW1uKDIsIHRydWUp
OwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aCAtIDE7IGkrKykgeworICAg
ICAgZm9yICh2YXIgaSA9IDAsIGw9ZGF0YS5sZW5ndGggLSAxOyBpPGw7IGkrKykgewogICAgICAg
ICB0aGlzLmFzc2VydFRydWUoZGF0YVtpXVsyXSA8PSBkYXRhW2krMV1bMl0pOwogICAgICAgfTsK
IApJbmRleDogdGVzdC91aS90cmVlL1RyZWUuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS90cmVl
L1RyZWUuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS90cmVlL1RyZWUuanMJKHdvcmtp
bmcgY29weSkKQEAgLTI2Myw3ICsyNjMsNyBAQAogICAgIF9fcHJpbnRDaGlsZHJlbiA6IGZ1bmN0
aW9uKGNoaWxkcmVuKSAKICAgICB7CiAgICAgICB2YXIgcmVzdWx0ID0gIiI7Ci0gICAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBp
ID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICByZXN1bHQg
Kz0gY2hpbGRyZW5baV0uZ2V0TGFiZWwoKTsKICAgICAgICAgCiAgICAgICAgIGlmIChpIDwgY2hp
bGRyZW4ubGVuZ3RoIC0gMSkgewpAQCAtMjczLDQgKzI3Myw0IEBACiAgICAgICByZXR1cm4gcmVz
dWx0OwogICAgIH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7Cklu
ZGV4OiB0ZXN0L3VpL2Zvcm0vTW9kZWxTZWxlY3Rpb24uanMKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91
aS9mb3JtL01vZGVsU2VsZWN0aW9uLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvZm9y
bS9Nb2RlbFNlbGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpAQCAtMTUwLDcgKzE1MCw3IEBACiAg
ICAgX19nZXRSaWRPZiA6IGZ1bmN0aW9uIChib3gpCiAgICAgewogICAgICAgdmFyIGNoaWxkcmVu
ID0gYm94LmdldENoaWxkcmVuKCk7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVu
Lmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbD1jaGlsZHJlbi5sZW5ndGg7
IGk8bDsgaSsrKSB7CiAgICAgICAgIGNoaWxkcmVuW2ldLmRpc3Bvc2UoKTsKICAgICAgIH0KICAg
ICAgIGJveC5kaXNwb3NlKCk7CkluZGV4OiB0ZXN0L3VpL2Zvcm0vRm9ybU1hbmFnZXIuanMKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQotLS0gdGVzdC91aS9mb3JtL0Zvcm1NYW5hZ2VyLmpzCShyZXZpc2lvbiAyMzg4OSkK
KysrIHRlc3QvdWkvZm9ybS9Gb3JtTWFuYWdlci5qcwkod29ya2luZyBjb3B5KQpAQCAtMzIyLDcg
KzMyMiw3IEBACiAgICAgICB3aWRnZXRzLnB1c2gobmV3IHF4LnVpLmdyb3VwYm94LlJhZGlvR3Jv
dXBCb3goKSk7CiAKICAgICAgIC8vIGFkZCBhbGwKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwg
d2lkZ2V0cy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9d2lkZ2V0cy5s
ZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuX19mb3JtLmFkZCh3aWRnZXRzW2ldLCAi
bmFtZSIgKyBpKTsKICAgICAgIH0KIApAQCAtMzMzLDcgKzMzMyw3IEBACiAgICAgICB0aGlzLmFz
c2VydFRydWUodGhpcy5fX2Zvcm0udmFsaWRhdGUoKSk7CiAKICAgICAgIC8vIGdldCByaWQgb2Yg
dGhlIHdpZGdldHMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgd2lkZ2V0cy5sZW5ndGg7IGkr
KykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9d2lkZ2V0cy5sZW5ndGg7IGk8bDsgaSsrKSB7
CiAgICAgICAgIHdpZGdldHNbaV0uZGlzcG9zZSgpOwogICAgICAgfQogICAgIH0sCkluZGV4OiB0
ZXN0L3VpL2Zvcm0vTWVudUJ1dHRvbi5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL2Zvcm0vTWVu
dUJ1dHRvbi5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB0ZXN0L3VpL2Zvcm0vTWVudUJ1dHRvbi5q
cwkod29ya2luZyBjb3B5KQpAQCAtNDYsNyArNDYsNyBAQAogICAgICAgdGhpcy5iYXNlKGFyZ3Vt
ZW50cyk7CiAKICAgICAgIHZhciBidXR0b25zID0gdGhpcy5fX21lbnUuZ2V0Q2hpbGRyZW4oKTsK
LSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnV0dG9ucy5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaSA9IDAsIGw9YnV0dG9ucy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIGJ1
dHRvbnNbaV0uZGlzcG9zZSgpOwogICAgICAgfQogICAgICAgdGhpcy5fX21lbnUuZGlzcG9zZSgp
OwpAQCAtODQsNCArODQsNCBAQAogICAgICAgdGhpcy5hc3NlcnRGYWxzZSh0aGlzLl9fbWVudS5p
c1Zpc2libGUoKSk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
Cit9KTsKSW5kZXg6IHRlc3QvdWkvRGVzdHJveS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL0Rl
c3Ryb3kuanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS9EZXN0cm95LmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0zNCw3ICszNCw3IEBACiAgICAgICB0aGlzLmFzc2VydERlc3Ryb3koZnVuY3Rp
b24oKQogICAgICAgewogICAgICAgICB2YXIgYXJnU3RyID0gW107Ci0gICAgICAgIGZvciAodmFy
IGk9MDsgaTxhcmdzLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9MCwgbD1hcmdz
Lmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgICBhcmdTdHIucHVzaCgicXgudGVzdC51aS5E
ZXN0cm95LiQkYXJnc1siICsgaSArICJdIik7CiAgICAgICAgIH0KIApAQCAtNDYsNyArNDYsNyBA
QAogICAgICAgICB2YXIgd2lkZ2V0ID0gbmV3IHF4LnVpLmNvbnRhaW5lci5Db21wb3NpdGUoKTsK
ICAgICAgICAgd2lkZ2V0LnNldExheW91dChsYXlvdXQpOwogCi0gICAgICAgIGZvciAodmFyIGk9
MDsgaTxsYXlvdXRBcmdzQXJyLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9MCwg
bD1sYXlvdXRBcmdzQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgICB3aWRnZXQuYWRk
KG5ldyBxeC51aS5jb3JlLldpZGdldCgpLCBsYXlvdXRBcmdzQXJyW2ldKTsKICAgICAgICAgfQog
CkBAIC03MCw3ICs3MCw3IEBACiAgICAgICAgIFtxeC51aS5sYXlvdXQuR3JpZCwgW10sIFt7cm93
OiAwLCBjb2x1bW46IDB9LCB7cm93OiA0LCBjb2x1bW46IDN9LCB7cm93OiAyLCBjb2x1bW46IDAs
IGNvbFNwYW46IDN9XV0KICAgICAgIF07CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxsYXlvdXRz
Lmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9bGF5b3V0cy5sZW5ndGg7IGk8
bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXNzZXJ0TGF5b3V0RGlzcG9zZShsYXlvdXRzW2ldWzBd
LCBsYXlvdXRzW2ldWzFdLCBsYXlvdXRzW2ldWzJdKQogICAgICAgfQogICAgIH0sCkBAIC05Miw3
ICs5Miw3IEBACiAgICAgICAgIFtxeC51aS5mb3JtLlRleHRGaWVsZCwgW11dLAogICAgICAgICBb
cXgudWkuZm9ybS5Ub2dnbGVCdXR0b24sIFtdXQogICAgICAgXTsKLSAgICAgIGZvciAodmFyIGk9
MDsgaTxmb3Jtcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPWZvcm1zLmxl
bmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdGhpcy5hc3NlcnRXaWRnZXREaXNwb3NlKGZvcm1z
W2ldWzBdLCBmb3Jtc1tpXVsxXSwgIkRpc3Bvc2luZyAiICsgZm9ybXNbaV1bMF0uY2xhc3NuYW1l
KTsKICAgICAgIH0KIApAQCAtMTE2LDcgKzExNiw3IEBACiAgICAgICAgIFtxeC51aS5iYXNpYy5M
YWJlbCwgWyJKdWh1Il1dLAogICAgICAgICBbcXgudWkuYmFzaWMuSW1hZ2UsIFtdXQogICAgICAg
XTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxmb3Jtcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9y
ICh2YXIgaT0wLCBsPWZvcm1zLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdGhpcy5hc3Nl
cnRXaWRnZXREaXNwb3NlKGZvcm1zW2ldWzBdLCBmb3Jtc1tpXVsxXSwgIkRpc3Bvc2luZyAiICsg
Zm9ybXNbaV1bMF0uY2xhc3NuYW1lKTsKICAgICAgIH0KICAgICB9LApAQCAtMTM4LDcgKzEzOCw3
IEBACiAgICAgICAgICAgW3F4LnVpLmNvbnRhaW5lci5TbGlkZUJhciwgW11dLAogICAgICAgICAg
IFtxeC51aS5jb250YWluZXIuU3RhY2ssIFtdXQogICAgICAgICBdOwotICAgICAgICBmb3IgKHZh
ciBpPTA7IGk8Zm9ybXMubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaT0wLCBsPWZv
cm1zLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgICB0aGlzLmFzc2VydFdpZGdldERpc3Bv
c2UoZm9ybXNbaV1bMF0sIGZvcm1zW2ldWzFdLCAiRGlzcG9zaW5nICIgKyBmb3Jtc1tpXVswXS5j
bGFzc25hbWUpOwogICAgICAgICB9CiAgICAgICB9CkBAIC0xNTgsNyArMTU4LDcgQEAKICAgICAg
ICAgICBbcXgudWkuY29udHJvbC5Db2xvclNlbGVjdG9yLCBbXV0sCiAgICAgICAgICAgW3F4LnVp
LmNvbnRyb2wuRGF0ZUNob29zZXIsIFtdXQogICAgICAgICBdOwotICAgICAgICBmb3IgKHZhciBp
PTA7IGk8Zm9ybXMubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaT0wLCBsPWZvcm1z
Lmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgICB0aGlzLmFzc2VydFdpZGdldERpc3Bvc2Uo
Zm9ybXNbaV1bMF0sIGZvcm1zW2ldWzFdLCAiRGlzcG9zaW5nICIgKyBmb3Jtc1tpXVswXS5jbGFz
c25hbWUpOwogICAgICAgICB9CiAKQEAgLTE4Myw3ICsxODMsNyBAQAogICAgICAgICBbcXgudWku
Y29yZS5zY3JvbGwuU2Nyb2xsU2xpZGVyLCBbXV0sCiAgICAgICAgIFtxeC51aS5jb3JlLldpZGdl
dCwgW11dCiAgICAgICBdOwotICAgICAgZm9yICh2YXIgaT0wOyBpPGZvcm1zLmxlbmd0aDsgaSsr
KSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9Zm9ybXMubGVuZ3RoOyBpPGw7IGkrKykgewogICAg
ICAgICB0aGlzLmFzc2VydFdpZGdldERpc3Bvc2UoZm9ybXNbaV1bMF0sIGZvcm1zW2ldWzFdLCAi
RGlzcG9zaW5nICIgKyBmb3Jtc1tpXVswXS5jbGFzc25hbWUpOwogICAgICAgfQogICAgIH0sCkBA
IC0xOTYsNyArMTk2LDcgQEAKICAgICAgICAgW3F4LnVpLmVtYmVkLkNhbnZhcywgW11dLAogICAg
ICAgICBbcXgudWkuZW1iZWQuSWZyYW1lLCBbXV0KICAgICAgIF07Ci0gICAgICBmb3IgKHZhciBp
PTA7IGk8Zm9ybXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1mb3Jtcy5s
ZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXNzZXJ0V2lkZ2V0RGlzcG9zZShmb3Jt
c1tpXVswXSwgZm9ybXNbaV1bMV0sICJEaXNwb3NpbmcgIiArIGZvcm1zW2ldWzBdLmNsYXNzbmFt
ZSk7CiAgICAgICB9CiAgICAgfSwKQEAgLTIwOSw3ICsyMDksNyBAQAogICAgICAgICBbcXgudWku
Z3JvdXBib3guR3JvdXBCb3gsIFtdXSwKICAgICAgICAgW3F4LnVpLmdyb3VwYm94LlJhZGlvR3Jv
dXBCb3gsIFtdXQogICAgICAgXTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxmb3Jtcy5sZW5ndGg7
IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPWZvcm1zLmxlbmd0aDsgaTxsOyBpKyspIHsK
ICAgICAgICAgdGhpcy5hc3NlcnRXaWRnZXREaXNwb3NlKGZvcm1zW2ldWzBdLCBmb3Jtc1tpXVsx
XSwgIkRpc3Bvc2luZyAiICsgZm9ybXNbaV1bMF0uY2xhc3NuYW1lKTsKICAgICAgIH0KICAgICB9
LApAQCAtMzAxLDcgKzMwMSw3IEBACiAgICAgICAgIFtxeC51aS50b29sYmFyLlNlcGFyYXRvciwg
W11dLAogICAgICAgICBbcXgudWkudG9vbGJhci5Ub29sQmFyLCBbXV0KICAgICAgIF07Ci0gICAg
ICBmb3IgKHZhciBpPTA7IGk8Zm9ybXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9
MCwgbD1mb3Jtcy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXNzZXJ0V2lkZ2V0
RGlzcG9zZShmb3Jtc1tpXVswXSwgZm9ybXNbaV1bMV0sICJEaXNwb3NpbmcgIiArIGZvcm1zW2ld
WzBdLmNsYXNzbmFtZSk7CiAgICAgICB9CiAKSW5kZXg6IHRlc3QvdWkvQ2hpbGRyZW5IYW5kbGlu
Zy5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL0NoaWxkcmVuSGFuZGxpbmcuanMJKHJldmlzaW9u
IDIzODg5KQorKysgdGVzdC91aS9DaGlsZHJlbkhhbmRsaW5nLmpzCSh3b3JraW5nIGNvcHkpCkBA
IC0zMiw3ICszMiw3IEBACiAgICAgICB0aGlzLmFzc2VydEFycmF5KGZvdW5kLCBtc2cpOwogCiAg
ICAgICB0aGlzLmFzc2VydEVxdWFscyhleHBlY3RlZC5sZW5ndGgsIGZvdW5kLmxlbmd0aCwgbXNn
KTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxleHBlY3RlZC5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaT0wLCBsPWV4cGVjdGVkLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdGhp
cy5hc3NlcnRJZGVudGljYWwoZXhwZWN0ZWRbaV0sIGZvdW5kW2ldLCBtc2cpOwogICAgICAgfQog
ICAgIH0sCkBAIC00Miw3ICs0Miw3IEBACiAgICAgewogICAgICAgcGFyZW50LnJlbW92ZUFsbCgp
OwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8Y2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsKKyAgICAg
IGZvciAodmFyIGk9MCwgbD1jaGlsZHJlbi5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHBh
cmVudC5hZGQoY2hpbGRyZW5baV0pOwogICAgICAgfQogCkBAIC0yOTEsNCArMjkxLDQgQEAKICAg
ICAgIHBhcmVudC5kZXN0cm95KCk7CiAgICAgfQogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVu
ZCBvZiBmaWxlCit9KTsKSW5kZXg6IHRlc3QvdWkvbGlzdC9jb3JlL011bHRpU2VsZWN0aW9uLmpz
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KLS0tIHRlc3QvdWkvbGlzdC9jb3JlL011bHRpU2VsZWN0aW9uLmpzCShyZXZp
c2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvbGlzdC9jb3JlL011bHRpU2VsZWN0aW9uLmpzCSh3b3Jr
aW5nIGNvcHkpCkBAIC00OCw3ICs0OCw3IEBACiAKICAgICAgIC8vIGNoZWNrIHNlbGVjdGlvbiBv
biBtYW5hZ2VyCiAgICAgICB2YXIgc2VsZWN0aW9uRnJvbU1hbmFnZXIgPSB0aGlzLl9saXN0Ll9t
YW5hZ2VyLmdldFNlbGVjdGlvbigpOwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxlY3Rp
b25Gcm9tTWFuYWdlci5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9c2Vs
ZWN0aW9uRnJvbU1hbmFnZXIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICBzZWxlY3Rpb25G
cm9tTWFuYWdlcltpXSA9IHRoaXMuX2xpc3QuX2dldERhdGFGcm9tUm93KHNlbGVjdGlvbkZyb21N
YW5hZ2VyW2ldKTsKICAgICAgIH0KICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKDMsIHNlbGVjdGlv
bkZyb21NYW5hZ2VyLmxlbmd0aCwgIk9uIHNlbGVjdGlvbiBtYW5hZ2VyIik7CkBAIC02Myw3ICs2
Myw3IEBACiAKICAgICAgIC8vIGNoZWNrIHNlbGVjdGlvbiBvbiBtYW5hZ2VyCiAgICAgICB2YXIg
c2VsZWN0aW9uRnJvbU1hbmFnZXIgPSB0aGlzLl9saXN0Ll9tYW5hZ2VyLmdldFNlbGVjdGlvbigp
OwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxlY3Rpb25Gcm9tTWFuYWdlci5sZW5ndGg7
IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9c2VsZWN0aW9uRnJvbU1hbmFnZXIubGVu
Z3RoOyBpPGw7IGkrKykgewogICAgICAgICBzZWxlY3Rpb25Gcm9tTWFuYWdlcltpXSA9IHRoaXMu
X2xpc3QuX2dldERhdGFGcm9tUm93KHNlbGVjdGlvbkZyb21NYW5hZ2VyW2ldKTsKICAgICAgIH0K
ICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKDYsIHNlbGVjdGlvbkZyb21NYW5hZ2VyLmxlbmd0aCwg
Ik9uIHNlbGVjdGlvbiBtYW5hZ2VyIik7CkBAIC05Nyw3ICs5Nyw3IEBACiAgICAgICAgIHsKICAg
ICAgICAgICAvLyBjaGVjayBzZWxlY3Rpb24gb24gbWFuYWdlcgogICAgICAgICAgIHZhciBzZWxl
Y3Rpb25Gcm9tTWFuYWdlciA9IHNlbGYuX2xpc3QuX21hbmFnZXIuZ2V0U2VsZWN0aW9uKCk7Ci0g
ICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxlY3Rpb25Gcm9tTWFuYWdlci5sZW5ndGg7
IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsPXNlbGVjdGlvbkZyb21NYW5hZ2Vy
Lmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgICAgIHNlbGVjdGlvbkZyb21NYW5hZ2VyW2ld
ID0gc2VsZi5fbGlzdC5fZ2V0RGF0YUZyb21Sb3coc2VsZWN0aW9uRnJvbU1hbmFnZXJbaV0pOwog
ICAgICAgICAgIH0KICAgICAgICAgICBzZWxmLmFzc2VydEVxdWFscyg2LCBzZWxlY3Rpb25Gcm9t
TWFuYWdlci5sZW5ndGgsICJPbiBzZWxlY3Rpb24gbWFuYWdlciIpOwpJbmRleDogdGVzdC91aS9s
aXN0L01Bc3NlcnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdGVzdC91aS9saXN0L01Bc3NlcnQuanMJKHJl
dmlzaW9uIDIzODg5KQorKysgdGVzdC91aS9saXN0L01Bc3NlcnQuanMJKHdvcmtpbmcgY29weSkK
QEAgLTIzLDcgKzIzLDcgQEAKICAgewogICAgIGFzc2VydE1vZGVsRXF1YWxzUm93RGF0YSA6IGZ1
bmN0aW9uKG1vZGVsLCBsaXN0KQogICAgIHsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW9k
ZWwuZ2V0TGVuZ3RoKCk7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9bW9kZWwuZ2V0
TGVuZ3RoKCk7IGk8bDsgaSsrKSB7CiAgICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKG1vZGVsLmdl
dEl0ZW0oaSksIGxpc3QuX2dldERhdGFGcm9tUm93KGkpKTsKICAgICAgIH0KICAgICB9CkluZGV4
OiB0ZXN0L3VpL2VtYmVkL0ZsYXNoLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHRlc3QvdWkvZW1iZWQvRmxh
c2guanMJKHJldmlzaW9uIDIzODg5KQorKysgdGVzdC91aS9lbWJlZC9GbGFzaC5qcwkod29ya2lu
ZyBjb3B5KQpAQCAtMTE5LDcgKzExOSw3IEBACiAgICAgICAgIGZvcih2YXIgbmFtZSBpbiBwYXJh
bXMpCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgdGVzdFN1Y2Nlc3NmdWwgPSBmYWxzZTsKLSAg
ICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspCisgICAgICAg
ICAgZm9yKHZhciBpID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykKICAgICAg
ICAgICB7CiAgICAgICAgICAgICB0aGF0LmFzc2VydElkZW50aWNhbCgicGFyYW0iLCBjaGlsZHJl
bltpXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKTsKIApJbmRleDogdGVzdC91aS9sYXlvdXQvTGF5
b3V0SXRlbS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3VpL2xheW91dC9MYXlvdXRJdGVtLmpzCShy
ZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvbGF5b3V0L0xheW91dEl0ZW0uanMJKHdvcmtpbmcg
Y29weSkKQEAgLTI1Miw3ICsyNTIsNyBAQAogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fX2No
aWxkcmVuIHx8IFtdOwogICAgICAgdmFyIGxheW91dENoaWxkcmVuID0gW107CiAKLSAgICAgIGZv
ciAodmFyIGk9MDsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwg
bD1jaGlsZHJlbi5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgY2hpbGQg
PSBjaGlsZHJlbltpXTsKICAgICAgICAgaWYgKGNoaWxkLmdldFZpc2liaWxpdHkoKSAhPT0gImV4
Y2x1ZGVkIikgewpJbmRleDogdGVzdC91aS9sYXlvdXQvVXRpbC5qcwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0
ZXN0L3VpL2xheW91dC9VdGlsLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHRlc3QvdWkvbGF5b3V0
L1V0aWwuanMJKHdvcmtpbmcgY29weSkKQEAgLTI5LDEzICsyOSwxMiBAQAogCiAgICAgICBmb3Ig
KHZhciBydW49MDsgcnVuPG51bVJ1bnM7IHJ1bisrKQogICAgICAgewotICAgICAgICB2YXIgbGVu
ID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjApICsgMTsKICAgICAgICAgdmFyIHN1bU1p
biA9IDA7CiAgICAgICAgIHZhciBzdW1NYXggPSAwOwogICAgICAgICB2YXIgc3VtVmFsdWUgPSAw
OwogICAgICAgICB2YXIgZmxleGlibGVzID0ge307CiAKLSAgICAgICAgZm9yICh2YXIgaj0wOyBq
PGxlbjsgaisrKQorICAgICAgICBmb3IgKHZhciBqPTAsIGxlbiA9IE1hdGgucm91bmQoTWF0aC5y
YW5kb20oKSAqIDIwKSArIDE7IGo8bGVuOyBqKyspCiAgICAgICAgIHsKICAgICAgICAgICB2YXIg
bWluID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjApOwogICAgICAgICAgIHZhciBtYXgg
PSBtaW4gKyBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiA1MCkgKyAxOwpAQCAtODYsMTQgKzg1
LDEzIEBACiAKICAgICAgIGZvciAodmFyIHJ1bj0wOyBydW48bnVtUnVuczsgcnVuKyspCiAgICAg
ICB7Ci0gICAgICAgIHZhciBsZW4gPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAyMCkgKyAx
OwogICAgICAgICB2YXIgc3VtTWluID0gMDsKICAgICAgICAgdmFyIHN1bU1heCA9IDA7CiAgICAg
ICAgIHZhciBzdW1WYWx1ZSA9IDA7CiAgICAgICAgIHZhciBzdW1XZWlnaHRzID0gMDsKICAgICAg
ICAgdmFyIGZsZXhpYmxlcyA9IHt9OwogCi0gICAgICAgIGZvciAodmFyIGo9MDsgajxsZW47IGor
KykKKyAgICAgICAgZm9yICh2YXIgaj0wLCBsZW4gPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkg
KiAyMCkgKyAxOyBqPGxlbjsgaisrKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIG1pbiA9IDA7
CiAgICAgICAgICAgdmFyIG1heCA9IDMyMDAwOwpJbmRleDogZG9tL05vZGUuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gZG9tL05vZGUuanMJKHJldmlzaW9uIDIzODg5KQorKysgZG9tL05vZGUuanMJKHdvcmtp
bmcgY29weSkKQEAgLTI4NSw4ICsyODUsOCBAQAogICAgICAgc3dpdGNoKG5vZGUubm9kZVR5cGUp
CiAgICAgICB7CiAgICAgICAgIGNhc2UgMTogLy8gTk9ERV9FTEVNRU5UCi0gICAgICAgICAgdmFy
IGksIGE9W10sIG5vZGVzPW5vZGUuY2hpbGROb2RlcywgbGVuZ3RoPW5vZGVzLmxlbmd0aDsKLSAg
ICAgICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrKykgeworICAgICAgICAgIHZhciBhPVtdLCBu
b2Rlcz1ub2RlLmNoaWxkTm9kZXM7CisgICAgICAgICAgZm9yICh2YXIgaT0wLCBsZW49bm9kZXMu
bGVuZ3RoOyBpPGxlbjsgaSsrKSB7CiAgICAgICAgICAgICBhW2ldID0gdGhpcy5nZXRUZXh0KG5v
ZGVzW2ldKTsKICAgICAgICAgICB9OwogCkluZGV4OiBDbGFzcy5qcwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBD
bGFzcy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBDbGFzcy5qcwkod29ya2luZyBjb3B5KQpAQCAt
MjgwLDcgKzI4MCw3IEBACiAgICAgICB2YXIgbnMgPSBuYW1lLnNwbGl0KCIuIik7CiAgICAgICAv
LyBidWlsZCB1cCBhbiBhcnJheSBjb250YWluaW5nIGFsbCBuYW1lc3BhY2Ugb2JqZWN0cyBpbmNs
dWRpbmcgd2luZG93CiAgICAgICB2YXIgb2JqZWN0cyA9IFt3aW5kb3ddOwotICAgICAgZm9yICh2
YXIgaSA9IDA7IGkgPCBucy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwg
PSBucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgb2JqZWN0cy5wdXNoKG9iamVjdHNb
aV1bbnNbaV1dKTsKICAgICAgIH0KIApAQCAtODk5LDcgKzg5OSw3IEBACiAgICAgICAgICAgdmFy
IGludGVyZmFjZXMgPSBzdXBlcmNsYXNzLiQkaW1wbGVtZW50czsKICAgICAgICAgICBpZiAoaW50
ZXJmYWNlcykKICAgICAgICAgICB7Ci0gICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8aW50ZXJm
YWNlcy5sZW5ndGg7IGkrKykgeworICAgICAgICAgICAgZm9yICh2YXIgaT0wLCBsID0gaW50ZXJm
YWNlcy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgICAgICAgIHF4LkludGVyZmFjZS5hc3Nl
cnQoY2xhenosIGludGVyZmFjZXNbaV0sIHRydWUpOwogICAgICAgICAgICAgfQogICAgICAgICAg
IH0KSW5kZXg6IFBhcnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gUGFydC5qcwkocmV2aXNpb24gMjM4ODkp
CisrKyBQYXJ0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC01Miw3ICs1Miw3IEBACiAgICAgLy8gY3Jl
YXRlIHRoZSBwYWNrYWdlcwogICAgIHRoaXMuX19wYWNrYWdlcyA9IFtdOwogICAgIHZhciB1cmlz
ID0gdGhpcy5fX2dldFVyaXMoKTsKLSAgICBmb3IgKHZhciBpPTA7IGk8dXJpcy5sZW5ndGg7IGkr
KykKKyAgICBmb3IgKHZhciBpPTAsIGw9dXJpcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgIHsKICAg
ICAgIHZhciBoYXNoID0gbG9hZGVyLnBhY2thZ2VIYXNoZXNbaV07CiAgICAgICB2YXIgcGtnID0g
bmV3IHF4LmlvLnBhcnQuUGFja2FnZSh1cmlzW2ldLCBoYXNoLCBpPT1ib290UGFja2FnZUluZGV4
KTsKQEAgLTY4LDcgKzY4LDcgQEAKICAgICB7CiAgICAgICB2YXIgcGtnSW5kZXhlcyA9IHBhcnRz
W25hbWVdOwogICAgICAgdmFyIHBhY2thZ2VzID0gW107Ci0gICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IHBrZ0luZGV4ZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsPXBr
Z0luZGV4ZXMubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICBwYWNrYWdlcy5wdXNoKHRoaXMu
X19wYWNrYWdlc1twa2dJbmRleGVzW2ldXSk7CiAgICAgICB9CiAKQEAgLTE5OCw3ICsxOTgsNyBA
QAogICAgIHsKICAgICAgIC8vIHNlYXJjaCBmb3IgdGhlIHBhY2thZ2UKICAgICAgIHZhciBwa2c7
Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19wYWNrYWdlcy5sZW5ndGg7IGkrKykg
eworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fcGFja2FnZXMubGVuZ3RoOyBpIDwg
bDsgaSsrKSB7CiAgICAgICAgIGlmICh0aGlzLl9fcGFja2FnZXNbaV0uZ2V0SWQoKSA9PSBpZCkg
ewogICAgICAgICAgIHBrZyA9IHRoaXMuX19wYWNrYWdlc1tpXTsKICAgICAgICAgICBicmVhazsK
QEAgLTIxOCw3ICsyMTgsNyBAQAogICAgICAgaWYgKCFsaXN0ZW5lcnMpIHsKICAgICAgICAgcmV0
dXJuOwogICAgICAgfQotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3Ro
OyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gbGlzdGVuZXJzLmxlbmd0aDsgaSA8
IGw7IGkrKykgewogICAgICAgICBsaXN0ZW5lcnNbaV0oImNvbXBsZXRlIiwgaWQpOwogICAgICAg
fQogICAgICAgLy8gZ2V0IHJpZCBvZiBhbGwgY29sc3VyZSBwYWNrYWdlIGxpc3RlbmVycyBmb3Ig
dGhhdCBwYWNrYWdlCkBAIC0yNjEsNyArMjYxLDcgQEAKICAgICAgIH0KIAogICAgICAgdmFyIHBh
cnRzID0gW107Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8cGFydE5hbWVzLmxlbmd0aDsgaSsrKSB7
CisgICAgICBmb3IgKHZhciBpPTAsIGw9cGFydE5hbWVzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAg
ICAgICAgcGFydHMucHVzaCh0aGlzLl9fcGFydHNbcGFydE5hbWVzW2ldXSk7CiAgICAgICB9CiAK
QEAgLTI3MiwxNCArMjcyLDE0IEBACiAgICAgICAgIGlmIChwYXJ0c0xvYWRlZCA+PSBwYXJ0cy5s
ZW5ndGgpIHsKICAgICAgICAgICAvLyBnYXRoZXIgdGhlIHJlYWR5IHN0YXRlcyBvZiB0aGUgcGFy
dHMKICAgICAgICAgICB2YXIgc3RhdGVzID0gW107Ci0gICAgICAgICAgZm9yICh2YXIgaSA9IDA7
IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0g
cGFydHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgICBzdGF0ZXMucHVzaChwYXJ0
c1tpXS5nZXRSZWFkeVN0YXRlKCkpOwogICAgICAgICAgIH07CiAgICAgICAgICAgY2FsbGJhY2su
Y2FsbChzZWxmLCBzdGF0ZXMpOwogICAgICAgICB9CiAgICAgICB9CiAKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxwYXJ0cy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXBhcnRz
Lmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgcGFydHNbaV0ubG9hZChvbkxvYWQsIHRoaXMp
OwogICAgICAgfQogICAgIH0sCkBAIC0zMDEsNyArMzAxLDcgQEAKICAgICAgIH0KIAogICAgICAg
dmFyIHBhcnRzUHJlbG9hZGVkID0gMDsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxwYXJ0TmFtZXMu
bGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1wYXJ0TmFtZXMubGVuZ3RoOyBp
PGw7IGkrKykgewogCiAgICAgICAgIHRoaXMuX19wYXJ0c1twYXJ0TmFtZXNbaV1dLnByZWxvYWQo
ZnVuY3Rpb24oKSB7CiAgICAgICAgICAgcGFydHNQcmVsb2FkZWQrKzsKQEAgLTMwOSw3ICszMDks
NyBAQAogICAgICAgICAgIGlmIChwYXJ0c1ByZWxvYWRlZCA+PSBwYXJ0TmFtZXMubGVuZ3RoKSB7
CiAgICAgICAgICAgICAvLyBnYXRoZXIgdGhlIHJlYWR5IHN0YXRlcyBvZiB0aGUgcGFydHMKICAg
ICAgICAgICAgIHZhciBzdGF0ZXMgPSBbXTsKLSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgcGFydE5hbWVzLmxlbmd0aDsgaSsrKSB7CisgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwg
bCA9IHBhcnROYW1lcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgICAgICAgc3RhdGVz
LnB1c2godGhpcy5fX3BhcnRzW3BhcnROYW1lc1tpXV0uZ2V0UmVhZHlTdGF0ZSgpKTsKICAgICAg
ICAgICAgIH07CiAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHsKQEAgLTMzMCw3ICszMzAsNyBA
QAogICAgIHsKICAgICAgIHZhciBwYWNrYWdlcyA9IHRoaXMuX19sb2FkZXIudXJpczsKICAgICAg
IHZhciB1cmlzID0gW107Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8cGFja2FnZXMubGVuZ3RoOyBp
KyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1wYWNrYWdlcy5sZW5ndGg7IGk8bDsgaSsrKSB7
CiAgICAgICAgIHVyaXMucHVzaCh0aGlzLl9fZGVjb2RlVXJpcyhwYWNrYWdlc1tpXSkpOwogICAg
ICAgfQogICAgICAgcmV0dXJuIHVyaXM7CkBAIC0zOTYsNyArMzk2LDcgQEAKICAgICAgIHZhciBs
aXN0ZW5lcnMgPSB0aGlzLl9fcGFydExpc3RuZXJzW2tleV07CiAgICAgICBpZiAobGlzdGVuZXJz
KQogICAgICAgewotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7
IGkrKykgeworICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGxpc3RlbmVycy5sZW5ndGg7IGkg
PCBsOyBpKyspIHsKICAgICAgICAgICBsaXN0ZW5lcnNbaV0ocGFydC5nZXRSZWFkeVN0YXRlKCkp
OwogICAgICAgICB9CiAgICAgICAgIHRoaXMuX19wYXJ0TGlzdG5lcnNba2V5XSA9IFtdOwpAQCAt
NDUxLDcgKzQ1MSw3IEBACiAgICAgICBpZiAoIWxpc3RlbmVycykgewogICAgICAgICByZXR1cm47
CiAgICAgICB9Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8bGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7
CisgICAgICBmb3IgKHZhciBpPTAsIGw9bGlzdGVuZXJzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAg
ICAgICAgbGlzdGVuZXJzW2ldKHBrZy5nZXRSZWFkeVN0YXRlKCkpOwogICAgICAgfQogICAgICAg
dGhpcy5fX3BhY2thZ2VMaXN0ZW5lcnNba2V5XSA9IFtdOwpJbmRleDogdHlwZS9CYXNlQXJyYXku
anMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQotLS0gdHlwZS9CYXNlQXJyYXkuanMJKHJldmlzaW9uIDIzODg5KQorKysg
dHlwZS9CYXNlQXJyYXkuanMJKHdvcmtpbmcgY29weSkKQEAgLTQ0OCw4ICs0NDgsOCBAQAogCiAg
ICAgdmFyIGFyZ3MgPSAicG9wLnB1c2gucmV2ZXJzZS5zaGlmdC5zb3J0LnNwbGljZS51bnNoaWZ0
LmpvaW4uc2xpY2UiLnNwbGl0KCIuIik7CiAKLSAgICBmb3IgKHZhciBsZW5ndGggPSBhcmdzLmxl
bmd0aDsgbGVuZ3RoOykgewotICAgICAgU3RhY2sucHJvdG90eXBlW2FyZ3NbLS1sZW5ndGhdXSA9
IEFycmF5LnByb3RvdHlwZVthcmdzW2xlbmd0aF1dOworICAgIGZvciAodmFyIGxlbiA9IGFyZ3Mu
bGVuZ3RoOyBsZW47KSB7CisgICAgICBTdGFjay5wcm90b3R5cGVbYXJnc1stLWxlbl1dID0gQXJy
YXkucHJvdG90eXBlW2FyZ3NbbGVuXV07CiAgICAgfQogICB9OwogCkBAIC00NjEsNyArNDYxLDcg
QEAKICAgewogICAgIHZhciBjb25zdHJ1Y3RvciA9IHRoaXMuc2xpY2UoMCk7CiAKLSAgICBmb3Ig
KHZhciBpPTAsIGxlbmd0aD1hcmd1bWVudHMubGVuZ3RoOyBpPGxlbmd0aDsgaSsrKQorICAgIGZv
ciAodmFyIGk9MCwgbGVuPWFyZ3VtZW50cy5sZW5ndGg7IGk8bGVuOyBpKyspCiAgICAgewogICAg
ICAgdmFyIGNvcHk7CiAKQEAgLTU0OSwxMCArNTQ5LDEwIEBACiB9CiAKIAotZnVuY3Rpb24gU3Rh
Y2sobGVuZ3RoKQorZnVuY3Rpb24gU3RhY2sobGVuKQogewogICBpZihhcmd1bWVudHMubGVuZ3Ro
ID09PSAxICYmIHR5cGVvZiBsZW5ndGggPT09ICJudW1iZXIiKSB7Ci0gICAgdGhpcy5sZW5ndGgg
PSAtMSA8IGxlbmd0aCAmJiBsZW5ndGggPT09IGxlbmd0aCA+PiAuNSA/IGxlbmd0aCA6IHRoaXMu
cHVzaChsZW5ndGgpOworICAgIHRoaXMubGVuZ3RoID0gLTEgPCBsZW4gJiYgbGVuID09PSBsZW4g
Pj4gLjUgPyBsZW4gOiB0aGlzLnB1c2gobGVuKTsKICAgfSBlbHNlIGlmKGFyZ3VtZW50cy5sZW5n
dGgpIHsKICAgICB0aGlzLnB1c2guYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgfQpJbmRleDog
bG9nL0xvZ2dlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsb2cvTG9nZ2VyLmpzCShyZXZpc2lvbiAyMzg4
OSkKKysrIGxvZy9Mb2dnZXIuanMJKHdvcmtpbmcgY29weSkKQEAgLTY2NSw3ICs2NjUsNyBAQAog
ICBkZWZlciA6IGZ1bmN0aW9uKHN0YXRpY3MpCiAgIHsKICAgICB2YXIgbG9ncyA9IHF4LkJvb3Rz
dHJhcC4kJGxvZ3M7Ci0gICAgZm9yICh2YXIgaT0wOyBpPGxvZ3MubGVuZ3RoOyBpKyspIHsKKyAg
ICBmb3IgKHZhciBpPTAsIGw9bG9ncy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICBzdGF0aWNz
Ll9fbG9nKGxvZ3NbaV1bMF0sIGxvZ3NbaV1bMV0pOwogICAgIH0KIApJbmRleDogbGFuZy9GdW5j
dGlvbi5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSBsYW5nL0Z1bmN0aW9uLmpzCShyZXZpc2lvbiAyMzg4OSkK
KysrIGxhbmcvRnVuY3Rpb24uanMJKHdvcmtpbmcgY29weSkKQEAgLTQxNyw3ICs0MTcsNyBAQAog
ICAgICAqCiAgICAgICogdmFyIG15RnVuY3Rpb24gPSBmdW5jdGlvbigpCiAgICAgICogewotICAg
ICAqICAgZm9yKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeworICAgICAq
ICAgZm9yKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAg
ICAgKiAgICAgaWYoIXRoaXNbYXJndW1lbnRzW2ldXSkgdGhyb3coJ2RvaCEnKTsKICAgICAgKiAg
IH0KICAgICAgKiB9OwpJbmRleDogbGFuZy9PYmplY3QuanMKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gbGFuZy9P
YmplY3QuanMJKHJldmlzaW9uIDIzODg5KQorKysgbGFuZy9PYmplY3QuanMJKHdvcmtpbmcgY29w
eSkKQEAgLTEwNiwxMSArMTA2LDExIEBACiAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAg
IH0KIAotICAgICAgICB2YXIgbGVuZ3RoID0gMDsKKyAgICAgICAgdmFyIGxlbiA9IDA7CiAKICAg
ICAgICAgZm9yICh2YXIga2V5IGluIG1hcCkKICAgICAgICAgewotICAgICAgICAgIGlmICgoKyts
ZW5ndGgpID49IG1pbkxlbmd0aCkgeworICAgICAgICAgIGlmICgoKytsZW4pID49IG1pbkxlbmd0
aCkgewogICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgfQogICAgICAgICB9CkBA
IC0yMTksOSArMjE5LDcgQEAKICAgICAgICAgcXguY29yZS5Bc3NlcnQgJiYgcXguY29yZS5Bc3Nl
cnQuYXNzZXJ0TWFwKHRhcmdldCwgIkludmFsaWQgYXJndW1lbnQgJ3RhcmdldCciKTsKICAgICAg
IH0KIAotICAgICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7Ci0KLSAgICAgIGZvciAodmFy
IGk9MTsgaTxsZW47IGkrKykgeworICAgICAgZm9yICh2YXIgaT0xLCBsZW4gPSBhcmd1bWVudHMu
bGVuZ3RoOyBpPGxlbjsgaSsrKSB7CiAgICAgICAgIHF4LmxhbmcuT2JqZWN0Lm1lcmdlV2l0aCh0
YXJnZXQsIGFyZ3VtZW50c1tpXSk7CiAgICAgICB9CiAKSW5kZXg6IGxhbmcvU3RyaW5nLmpzCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0KLS0tIGxhbmcvU3RyaW5nLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGxhbmcvU3Ry
aW5nLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNTUsNyArMjU1LDcgQEAKICAgICB7CiAgICAgICB2
YXIgc3RyID0gcGF0dGVybjsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGFyZ3MubGVuZ3RoOyBp
KyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbCA9IGFyZ3MubGVuZ3RoOyBpPGw7IGkrKykgewog
ICAgICAgICAvLyBiZSBzdXJlIHRvIGFsd2F5cyB1c2UgYSBzdHJpbmcgZm9yIHJlcGxhY2VtZW50
LgogICAgICAgICBzdHIgPSBzdHIucmVwbGFjZShuZXcgUmVnRXhwKCIlIiArIChpICsgMSksICJn
IiksIGFyZ3NbaV0gKyAiIik7CiAgICAgICB9CkluZGV4OiBsYW5nL0NvcmUuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gbGFuZy9Db3JlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGxhbmcvQ29yZS5qcwkod29y
a2luZyBjb3B5KQpAQCAtMTAwLDcgKzEwMCw3IEBACiAgICAgICAgICAgZnJvbUluZGV4ID0gTWF0
aC5tYXgoMCwgdGhpcy5sZW5ndGggKyBmcm9tSW5kZXgpOwogICAgICAgICB9CiAKLSAgICAgICAg
Zm9yICh2YXIgaT1mcm9tSW5kZXg7IGk8dGhpcy5sZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2
YXIgaT1mcm9tSW5kZXgsIGwgPSB0aGlzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICAgIHsKICAg
ICAgICAgICBpZiAodGhpc1tpXSA9PT0gc2VhcmNoRWxlbWVudCkgewogICAgICAgICAgICAgcmV0
dXJuIGk7CkluZGV4OiBsYW5nL0pzb25JbXBsLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGxhbmcvSnNvbklt
cGwuanMJKHJldmlzaW9uIDIzODg5KQorKysgbGFuZy9Kc29uSW1wbC5qcwkod29ya2luZyBjb3B5
KQpAQCAtMTc0LDggKzE3NCw3IEBACiAKICAgICAgICAgICAvLyBUaGUgdmFsdWUgaXMgYW4gYXJy
YXkuIFN0cmluZ2lmeSBldmVyeSBlbGVtZW50LiBVc2UgbnVsbCBhcyBhIHBsYWNlaG9sZGVyCiAg
ICAgICAgICAgLy8gZm9yIG5vbi1KU09OIHZhbHVlcy4KLSAgICAgICAgICB2YXIgbGVuZ3RoID0g
dmFsdWUubGVuZ3RoOwotICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9
IDEpIHsKKyAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsdWUubGVuZ3RoOyBpIDwg
bGVuOyBpICs9IDEpIHsKICAgICAgICAgICAgIHBhcnRpYWxbaV0gPSB0aGlzLl9fc3RyKGksIHZh
bHVlKSB8fCAnbnVsbCc7CiAgICAgICAgICAgfQogCkBAIC0xODMsNyArMTgyLDcgQEAKIAogICAg
ICAgICAgIC8vIEpvaW4gYWxsIG9mIHRoZSBlbGVtZW50cyB0b2dldGhlciwgc2VwYXJhdGVkIHdp
dGggY29tbWFzLCBhbmQgd3JhcCB0aGVtIGluCiAgICAgICAgICAgLy8gYnJhY2tldHMuCi0gICAg
ICAgICAgaWYgKHBhcnRpYWwubGVuZ3RoID09PSAwKSB7CisgICAgICAgICAgaWYgKHBhcnRpYWwu
bGVuID09PSAwKSB7CiAgICAgICAgICAgICB2YXIgc3RyaW5nID0gJ1tdJzsKICAgICAgICAgICB9
IGVsc2UgaWYgKHRoaXMuX19nYXApIHsKICAgICAgICAgICAgIHN0cmluZyA9ICdbXG4nICsgdGhp
cy5fX2dhcCArIHBhcnRpYWwuam9pbignLFxuJyArIHRoaXMuX19nYXApICsgJ1xuJyArIG1pbmQg
KyAnXScKQEAgLTIwNiw4ICsyMDUsNyBAQAogICAgICAgICAgIC8vIElmIHRoZSByZXBsYWNlciBp
cyBhbiBhcnJheSwgdXNlIGl0IHRvIHNlbGVjdCB0aGUgbWVtYmVycyB0byBiZSBzdHJpbmdpZmll
ZC4KICAgICAgICAgICBpZiAodGhpcy5fX3JlcCAmJiB0eXBlb2YgdGhpcy5fX3JlcCA9PT0gJ29i
amVjdCcpCiAgICAgICAgICAgewotICAgICAgICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuX19yZXAu
bGVuZ3RoOwotICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkK
KyAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLl9fcmVwLmxlbmd0aDsgaSA8
IGxlbjsgaSArPSAxKQogICAgICAgICAgICAgewogICAgICAgICAgICAgICB2YXIgayA9IHRoaXMu
X19yZXBbaV07CiAgICAgICAgICAgICAgIGlmICh0eXBlb2YgayA9PT0gJ3N0cmluZycpCkBAIC00
MDksNCArNDA3LDQgQEAKICAgICAgIHJldHVybiByZXZpdmVyLmNhbGwoaG9sZGVyLCBrZXksIHZh
bHVlKTsKICAgICB9CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJ
bmRleDogbGFuZy9BcnJheS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsYW5nL0FycmF5LmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIGxhbmcvQXJyYXkuanMJKHdvcmtpbmcgY29weSkKQEAgLTM3NCwxMyArMzc0
LDEzIEBACiAgICAgICovCiAgICAgZXF1YWxzIDogZnVuY3Rpb24oYXJyMSwgYXJyMikKICAgICB7
Ci0gICAgICB2YXIgbGVuZ3RoID0gYXJyMS5sZW5ndGg7CisgICAgICB2YXIgbGVuID0gYXJyMS5s
ZW5ndGg7CiAKLSAgICAgIGlmIChsZW5ndGggIT09IGFycjIubGVuZ3RoKSB7CisgICAgICBpZiAo
bGVuICE9PSBhcnIyLmxlbmd0aCkgewogICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICB9CiAK
LSAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsg
aTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgaWYgKGFycjFbaV0gIT09IGFycjJbaV0pIHsK
ICAgICAgICAgICByZXR1cm4gZmFsc2U7CkBAIC00MjIsOSArNDIyLDkgQEAKICAgICAgICAgcXgu
Y29yZS5Bc3NlcnQgJiYgcXguY29yZS5Bc3NlcnQuYXNzZXJ0QXJyYXkoYXJyLCAiUGFyYW1ldGVy
IG11c3QgYmUgYW4gYXJyYXkuIik7CiAgICAgICB9CiAKLSAgICAgIHZhciBpLCBsZW49YXJyLmxl
bmd0aCwgcmVzdWx0ID0gYXJyWzBdOworICAgICAgdmFyIHJlc3VsdCA9IGFyclswXTsKIAotICAg
ICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDEsIGxlbj1h
cnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChhcnJbaV0gPiBy
ZXN1bHQpIHsKICAgICAgICAgICByZXN1bHQgPSBhcnJbaV07CkBAIC00NDgsOSArNDQ4LDkgQEAK
ICAgICAgICAgcXguY29yZS5Bc3NlcnQgJiYgcXguY29yZS5Bc3NlcnQuYXNzZXJ0QXJyYXkoYXJy
LCAiUGFyYW1ldGVyIG11c3QgYmUgYW4gYXJyYXkuIik7CiAgICAgICB9CiAKLSAgICAgIHZhciBp
LCBsZW49YXJyLmxlbmd0aCwgcmVzdWx0ID0gYXJyWzBdOworICAgICAgdmFyIHJlc3VsdCA9IGFy
clswXTsKIAotICAgICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIg
aSA9IDEsIGxlbj1hcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlm
IChhcnJbaV0gPCByZXN1bHQpIHsKICAgICAgICAgICByZXN1bHQgPSBhcnJbaV07CkluZGV4OiBl
dmVudC90eXBlL1RvdWNoLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGV2ZW50L3R5cGUvVG91Y2guanMJKHJl
dmlzaW9uIDIzODg5KQorKysgZXZlbnQvdHlwZS9Ub3VjaC5qcwkod29ya2luZyBjb3B5KQpAQCAt
NTQsMTcgKzU0LDE3IEBACiAgICAgICAgIGNsb25lLnNyY0VsZW1lbnQgPSBuYXRpdmVFdmVudC5z
cmNFbGVtZW50Ow0KIA0KICAgICAgICAgY2xvbmUudGFyZ2V0VG91Y2hlcyA9IFtdOw0KLSAgICAg
ICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYXRpdmVFdmVudC50YXJnZXRUb3VjaGVzLmxlbmd0aDsg
aSsrKSB7DQorICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IG5hdGl2ZUV2ZW50LnRhcmdldFRv
dWNoZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQogICAgICAgICAgIGNsb25lLnRhcmdldFRvdWNo
ZXNbaV0gPSBuYXRpdmVFdmVudC50YXJnZXRUb3VjaGVzW2ldOw0KICAgICAgICAgfTsNCiANCiAg
ICAgICAgIGNsb25lLmNoYW5nZWRUb3VjaGVzID0gW107DQotICAgICAgICBmb3IgKHZhciBpID0g
MDsgaSA8IG5hdGl2ZUV2ZW50LmNoYW5nZWRUb3VjaGVzLmxlbmd0aDsgaSsrKSB7DQorICAgICAg
ICBmb3IgKHZhciBpID0gMCwgbCA9ICBuYXRpdmVFdmVudC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7
IGkgPCBsOyBpKyspIHsNCiAgICAgICAgICAgY2xvbmUuY2hhbmdlZFRvdWNoZXNbaV0gPSBuYXRp
dmVFdmVudC5jaGFuZ2VkVG91Y2hlc1tpXTsNCiAgICAgICAgIH07DQogDQogICAgICAgICBjbG9u
ZS50b3VjaGVzID0gW107DQotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hdGl2ZUV2ZW50
LnRvdWNoZXMubGVuZ3RoOyBpKyspIHsNCisgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gbmF0
aXZlRXZlbnQudG91Y2hlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCiAgICAgICAgICAgY2xvbmUu
dG91Y2hlc1tpXSA9IG5hdGl2ZUV2ZW50LnRvdWNoZXNbaV07DQogICAgICAgICB9Ow0KIA0KSW5k
ZXg6IGV2ZW50L21lc3NhZ2UvQnVzLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGV2ZW50L21lc3NhZ2UvQnVz
LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGV2ZW50L21lc3NhZ2UvQnVzLmpzCSh3b3JraW5nIGNv
cHkpCkBAIC0yMTMsNyArMjEzLDcgQEAKIAogICAgICAgaWYgKHN1YnNjcmliZXIpCiAgICAgICB7
Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxzdWJbbWVzc2FnZV0ubGVuZ3RoOyBpKyspCisgICAg
ICAgIGZvciAodmFyIGk9MCwgbD1zdWJbbWVzc2FnZV0ubGVuZ3RoOyBpPGw7IGkrKykKICAgICAg
ICAgewogICAgICAgICAgIGlmIChzdWJbbWVzc2FnZV1baV0uc3Vic2NyaWJlciA9PT0gc3Vic2Ny
aWJlciAmJiBzdWJbbWVzc2FnZV1baV0uY29udGV4dCA9PT0gKGNvbnRleHQgfHwgbnVsbCkpIHsK
ICAgICAgICAgICAgIHJldHVybiB0cnVlOwpAQCAtMzI4LDcgKzMyOCw3IEBACiAgICAgICovCiAg
ICAgX19jYWxsU3Vic2NyaWJlcnMgOiBmdW5jdGlvbihzdWJzY3JpYmVycywgbXNnKQogICAgIHsK
LSAgICAgIGZvciAodmFyIGk9MDsgaTxzdWJzY3JpYmVycy5sZW5ndGg7IGkrKykKKyAgICAgIGZv
ciAodmFyIGk9MCwgbD1zdWJzY3JpYmVycy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAg
ICAgICB2YXIgc3Vic2NyaWJlciA9IHN1YnNjcmliZXJzW2ldLnN1YnNjcmliZXI7CiAgICAgICAg
IHZhciBjb250ZXh0ID0gc3Vic2NyaWJlcnNbaV0uY29udGV4dDsKSW5kZXg6IGV2ZW50L2hhbmRs
ZXIvTW91c2UuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gZXZlbnQvaGFuZGxlci9Nb3VzZS5qcwkocmV2aXNp
b24gMjM4ODkpCisrKyBldmVudC9oYW5kbGVyL01vdXNlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0y
MDMsNyArMjAzLDcgQEAKICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLl9fd2luZG93OwogICAgICAg
dmFyIHR5cGUgPSAiRE9NTW91c2VTY3JvbGwiOwogICAgICAgCi0gICAgICBmb3IgKHZhciBpID0g
MDsgaSA8IHRhcmdldHMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0g
dGFyZ2V0cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgaWYgKHF4LmJvbS5FdmVudC5z
dXBwb3J0c0V2ZW50KHRhcmdldHNbaV0sICJtb3VzZXdoZWVsIikpIHsKICAgICAgICAgICB0eXBl
ID0gIm1vdXNld2hlZWwiOwogICAgICAgICAgIHRhcmdldCA9IHRhcmdldHNbaV07CkluZGV4OiBC
b290c3RyYXAuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gQm9vdHN0cmFwLmpzCShyZXZpc2lvbiAyMzg4OSkK
KysrIEJvb3RzdHJhcC5qcwkod29ya2luZyBjb3B5KQpAQCAtMzIwLDEzICszMjAsMTMgQEAKIAog
ICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbihtYXApCiAgICAgICB7Ci0gICAgICAgIHZhciBsZW5n
dGggPSAwOworICAgICAgICB2YXIgbGVuID0gMDsKIAogICAgICAgICBmb3IgKHZhciBrZXkgaW4g
bWFwKSB7Ci0gICAgICAgICAgbGVuZ3RoKys7CisgICAgICAgICAgbGVuKys7CiAgICAgICAgIH0K
IAotICAgICAgICByZXR1cm4gbGVuZ3RoOworICAgICAgICByZXR1cm4gbGVuOwogICAgICAgfQog
ICAgIH0pWygoe30pLl9fY291bnRfXyA9PSAwKSA/ICJjb3VudCIgOiAiZGVmYXVsdCJdLAogCklu
ZGV4OiBjb3JlL1ZhcmlhbnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gY29yZS9WYXJpYW50LmpzCShyZXZp
c2lvbiAyMzg4OSkKKysrIGNvcmUvVmFyaWFudC5qcwkod29ya2luZyBjb3B5KQpAQCAtMTk4LDcg
KzE5OCw3IEBACiAKICAgICAgIHZhciB1cmxWYXJpYW50cyA9IGRvY3VtZW50LmxvY2F0aW9uLnNl
YXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8dXJsVmFy
aWFudHMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dXJsVmFyaWFudHMubGVu
Z3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHZhcmlhbnQgPSB1cmxWYXJpYW50
c1tpXS5zcGxpdCgiOiIpOwogICAgICAgICBpZiAodmFyaWFudC5sZW5ndGggIT0gMyB8fCB2YXJp
YW50WzBdICE9ICJxeHZhcmlhbnQiKSB7CkluZGV4OiBjb3JlL1NldHRpbmcuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gY29yZS9TZXR0aW5nLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGNvcmUvU2V0dGluZy5q
cwkod29ya2luZyBjb3B5KQpAQCAtMTc2LDcgKzE3Niw3IEBACiAKICAgICAgIHZhciB1cmxTZXR0
aW5ncyA9IGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpOwogCi0g
ICAgICBmb3IgKHZhciBpPTA7IGk8dXJsU2V0dGluZ3MubGVuZ3RoOyBpKyspCisgICAgICBmb3Ig
KHZhciBpPTAsIGw9dXJsU2V0dGluZ3MubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAg
ICAgdmFyIHNldHRpbmcgPSB1cmxTZXR0aW5nc1tpXS5zcGxpdCgiOiIpOwogICAgICAgICBpZiAo
c2V0dGluZy5sZW5ndGggIT0gMyB8fCBzZXR0aW5nWzBdICE9ICJxeHNldHRpbmciKSB7CkluZGV4
OiBjb3JlL0FzcGVjdC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBjb3JlL0FzcGVjdC5qcwkocmV2aXNpb24g
MjM4ODkpCisrKyBjb3JlL0FzcGVjdC5qcwkod29ya2luZyBjb3B5KQpAQCAtNjAsNyArNjAsNyBA
QAogICAgICAgdmFyIHJlZyA9IHRoaXMuX19yZWdpc3RyeTsKICAgICAgIHZhciBlbnRyeTsKIAot
ICAgICAgZm9yICh2YXIgaT0wOyBpPHJlZy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9
MCwgbD1yZWcubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgZW50cnkgPSByZWdb
aV07CiAKQEAgLTc1LDEzICs3NSwxMyBAQAogCiAgICAgICB2YXIgd3JhcHBlciA9IGZ1bmN0aW9u
KCkKICAgICAgIHsKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGJlZm9yZS5sZW5ndGg7IGkrKykg
eworICAgICAgICBmb3IgKHZhciBpPTAsIGw9YmVmb3JlLmxlbmd0aDsgaTxsOyBpKyspIHsKICAg
ICAgICAgICBiZWZvcmVbaV0uY2FsbCh0aGlzLCBmdWxsTmFtZSwgZmNuLCB0eXBlLCBhcmd1bWVu
dHMpOwogICAgICAgICB9CiAKICAgICAgICAgdmFyIHJldCA9IGZjbi5hcHBseSh0aGlzLCBhcmd1
bWVudHMpOwogCi0gICAgICAgIGZvciAodmFyIGk9MDsgaTxhZnRlci5sZW5ndGg7IGkrKykgewor
ICAgICAgICBmb3IgKHZhciBpPTAsIGw9YWZ0ZXIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAg
ICAgIGFmdGVyW2ldLmNhbGwodGhpcywgZnVsbE5hbWUsIGZjbiwgdHlwZSwgYXJndW1lbnRzLCBy
ZXQpOwogICAgICAgICB9CiAKSW5kZXg6IGNvcmUvQXNzZXJ0LmpzCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGNv
cmUvQXNzZXJ0LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGNvcmUvQXNzZXJ0LmpzCSh3b3JraW5n
IGNvcHkpCkBAIC00NzgsNyArNDc4LDcgQEAKICAgICAgIHRoaXMuYXNzZXJ0QXJyYXkoZm91bmQs
IG1zZyk7CiAKICAgICAgIHRoaXMuYXNzZXJ0RXF1YWxzKGV4cGVjdGVkLmxlbmd0aCwgZm91bmQu
bGVuZ3RoLCBtc2cpOwotICAgICAgZm9yICh2YXIgaT0wOyBpPGV4cGVjdGVkLmxlbmd0aDsgaSsr
KSB7CisgICAgICBmb3IgKHZhciBpPTAsIGwgPSBleHBlY3RlZC5sZW5ndGg7IGk8bDsgaSsrKSB7
CiAgICAgICAgIHRoaXMuYXNzZXJ0SWRlbnRpY2FsKGV4cGVjdGVkW2ldLCBmb3VuZFtpXSwgbXNn
KTsKICAgICAgIH0KICAgICB9LApJbmRleDogbG9jYWxlL01hbmFnZXIuanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gbG9jYWxlL01hbmFnZXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgbG9jYWxlL01hbmFnZXIu
anMJKHdvcmtpbmcgY29weSkKQEAgLTQxOSw3ICs0MTksNyBAQAogICAgICAgaWYgKGFyZ3MubGVu
Z3RoID4gMCkKICAgICAgIHsKICAgICAgICAgdmFyIHRyYW5zbGF0ZWRBcmdzID0gW107Ci0gICAg
ICAgIGZvciAoIHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAo
IHZhciBpID0gMCwgbCA9IGFyZ3MubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgICB7CiAgICAg
ICAgICAgdmFyIGFyZyA9IGFyZ3NbaV07CiAgICAgICAgICAgaWYgKGFyZyAmJiBhcmcudHJhbnNs
YXRlKSB7CkluZGV4OiBsb2NhbGUvRGF0ZS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBsb2NhbGUvRGF0ZS5q
cwkocmV2aXNpb24gMjM4ODkpCisrKyBsb2NhbGUvRGF0ZS5qcwkod29ya2luZyBjb3B5KQpAQCAt
NzksNyArNzksNyBAQAogCiAgICAgICB2YXIgbmFtZXMgPSBbXTsKIAotICAgICAgZm9yICh2YXIg
aT0wOyBpPGRheXMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9ZGF5cy5sZW5n
dGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIga2V5ID0gImNsZHJfZGF5XyIgKyBj
b250ZXh0ICsgIl8iICsgbGVuZ3RoICsgIl8iICsgZGF5c1tpXTsKICAgICAgICAgbmFtZXMucHVz
aCh0aGlzLl9fbWdyLmxvY2FsaXplKGtleSwgW10sIGxvY2FsZSkpOwpJbmRleDogeG1sL0VsZW1l
bnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQotLS0geG1sL0VsZW1lbnQuanMJKHJldmlzaW9uIDIzODg5KQorKysg
eG1sL0VsZW1lbnQuanMJKHdvcmtpbmcgY29weSkKQEAgLTE4Nyw3ICsxODcsNyBAQAogICAgICAg
ICB9CiAKICAgICAgICAgdmFyIG5vZGVzID0gW107Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxy
ZXN1bHQuc25hcHNob3RMZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBpPTAsIGwgPSBy
ZXN1bHQuc25hcHNob3RMZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgICAgbm9kZXNbaV0gPSBy
ZXN1bHQuc25hcHNob3RJdGVtKGkpOwogICAgICAgICB9CiAKSW5kZXg6IGh0bWwvRWxlbWVudC5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSBodG1sL0VsZW1lbnQuanMJKHJldmlzaW9uIDIzODg5KQorKysgaHRt
bC9FbGVtZW50LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0zMjksNyArMzI5LDcgQEAKICAgICAgIH0K
IAogICAgICAgLy8gUHJvY2VzcyBhY3Rpb24gbGlzdAotICAgICAgZm9yICh2YXIgaT0wOyBpPHRo
aXMuX2FjdGlvbnMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5fYWN0
aW9ucy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgYWN0aW9uID0gdGhp
cy5fYWN0aW9uc1tpXTsKICAgICAgICAgdmFyIGVsZW1lbnQgPSBhY3Rpb24uZWxlbWVudC5fX2Vs
ZW1lbnQ7CkBAIC01MDgsMTMgKzUwOCwxMyBAQAogICAgICAgICB9CiAgICAgICB9CiAKLSAgICAg
IHZhciBsZW5ndGg7CisgICAgICB2YXIgbGVuOwogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5f
X2NoaWxkcmVuOwogICAgICAgaWYgKGNoaWxkcmVuKQogICAgICAgewotICAgICAgICBsZW5ndGgg
PSBjaGlsZHJlbi5sZW5ndGg7CisgICAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAg
ICAgICAgIHZhciBjaGlsZDsKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQor
ICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBj
aGlsZCA9IGNoaWxkcmVuW2ldOwogCkBAIC01MzEsNyArNTMxLDcgQEAKIAogICAgICAgICB0aGlz
Ll9jb3B5RGF0YShmYWxzZSk7CiAKLSAgICAgICAgaWYgKGNoaWxkcmVuICYmIGxlbmd0aCA+IDAp
IHsKKyAgICAgICAgaWYgKGNoaWxkcmVuICYmIGxlbiA+IDApIHsKICAgICAgICAgICB0aGlzLl9p
bnNlcnRDaGlsZHJlbigpOwogICAgICAgICB9CiAgICAgICB9CkBAIC01NjgsMTMgKzU2OCwxMyBA
QAogICAgIF9pbnNlcnRDaGlsZHJlbiA6IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIgY2hp
bGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVu
Z3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZDsK
IAotICAgICAgaWYgKGxlbmd0aCA+IDIpCisgICAgICBpZiAobGVuID4gMikKICAgICAgIHsKICAg
ICAgICAgdmFyIGRvbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7
Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2YXIg
aT0wOyBpPGxlbjsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltp
XTsKICAgICAgICAgICBpZiAoY2hpbGQuX19lbGVtZW50ICYmIGNoaWxkLl9faW5jbHVkZWQpIHsK
QEAgLTU4Nyw3ICs1ODcsNyBAQAogICAgICAgZWxzZQogICAgICAgewogICAgICAgICB2YXIgZG9t
RWxlbWVudCA9IHRoaXMuX19lbGVtZW50OwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3Ro
OyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgewogICAg
ICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgICAgaWYgKGNoaWxkLl9fZWxlbWVu
dCAmJiBjaGlsZC5fX2luY2x1ZGVkKSB7CkBAIC0yNjg5LDQgKzI2ODksNCBAQAogICAgICAgdGhp
cy5fX3Byb3BlcnR5Sm9icyA9IHRoaXMuX19lbGVtZW50ID0gdGhpcy5fX3BhcmVudCA9CiAgICAg
ICB0aGlzLl9fbGF6eVNjcm9sbEludG9WaWV3WCA9IHRoaXMuX19sYXp5U2Nyb2xsSW50b1ZpZXdZ
ID0gbnVsbDsKICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4
OiBpby9wYXJ0L1BhcnQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gaW8vcGFydC9QYXJ0LmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIGlvL3BhcnQvUGFydC5qcwkod29ya2luZyBjb3B5KQpAQCAtMzksNyArMzks
NyBAQAogICAgIHRoaXMuX3BhY2thZ2VzID0gcGFja2FnZXM7CiAgICAgdGhpcy5fbG9hZGVyID0g
bG9hZGVyOwogCi0gICAgZm9yICh2YXIgaT0wOyBpPHBhY2thZ2VzLmxlbmd0aDsgaSsrKQorICAg
IGZvciAodmFyIGk9MCwgbD1wYWNrYWdlcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgIHsKICAgICAg
IGlmIChwYWNrYWdlc1tpXS5nZXRSZWFkeVN0YXRlKCkgIT09ICJjb21wbGV0ZSIpCiAgICAgICB7
CkBAIC0xNDQsNyArMTQ0LDcgQEAKICAgICAgICAgcGFydC5sb2FkKCk7CiAgICAgICB9CiAKLSAg
ICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLl9wYWNrYWdlcy5sZW5ndGg7IGkrKykKKyAgICAgIGZv
ciAodmFyIGk9MCwgbD10aGlzLl9wYWNrYWdlcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewog
ICAgICAgICB2YXIgcGtnID0gdGhpcy5fcGFja2FnZXNbaV07CiAgICAgICAgIHN3aXRjaCAocGtn
LmdldFJlYWR5U3RhdGUoKSkKQEAgLTI0Nyw0ICsyNDcsNCBAQAogICAgICAgfQogICAgIH0KICAg
fQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiBpby9wYXJ0L0Ns
b3N1cmVQYXJ0LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGlvL3BhcnQvQ2xvc3VyZVBhcnQuanMJKHJldmlz
aW9uIDIzODg5KQorKysgaW8vcGFydC9DbG9zdXJlUGFydC5qcwkod29ya2luZyBjb3B5KQpAQCAt
NTIsNyArNTIsNyBAQAogICAgICAgdmFyIHBhY2thZ2VzTG9hZGVkID0gMDsKICAgICAgIHZhciB0
aGF0ID0gdGhpczsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9wYWNrYWdlcy5s
ZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fcGFja2FnZXMubGVu
Z3RoOyBpIDwgbDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgcGtnID0gdGhpcy5fcGFja2Fn
ZXNbaV07CiAgICAgICAgIGlmIChwa2cuZ2V0UmVhZHlTdGF0ZSgpID09ICJpbml0aWFsaXplZCIp
IHsKQEAgLTkyLDcgKzkyLDcgQEAKIAogICAgICAgdGhpcy5fX3BhY2thZ2VzVG9Mb2FkID0gdGhp
cy5fcGFja2FnZXMubGVuZ3RoOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX3Bh
Y2thZ2VzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9wYWNr
YWdlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciBwa2cgPSB0aGlz
Ll9wYWNrYWdlc1tpXTsKICAgICAgICAgdmFyIHBrZ1JlYWR5U3RhdGUgPSBwa2cuZ2V0UmVhZHlT
dGF0ZSgpOwpAQCAtMTM0LDcgKzEzNCw3IEBACiAgICAgICovCiAgICAgX19leGVjdXRlUGFja2Fn
ZXMgOiBmdW5jdGlvbigpCiAgICAgewotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9w
YWNrYWdlcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9w
YWNrYWdlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fcGFja2FnZXNbaV0u
ZXhlY3V0ZSgpOwogICAgICAgfQogICAgICAgdGhpcy5fbWFya0FzQ29tcGxldGVkKCJjb21wbGV0
ZSIpOwpAQCAtMTY4LDQgKzE2OCw0IEBACiAgICAgICB9CiAgICAgfQogICB9Ci19KTsKXCBObyBu
ZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IGlvL3JlbW90ZS9ScGMuanMKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQotLS0gaW8vcmVtb3RlL1JwYy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBpby9yZW1vdGUv
UnBjLmpzCSh3b3JraW5nIGNvcHkpCkBAIC00NDQsNyArNDQ0LDcgQEAKICAgICAgIHZhciBhcmdz
QXJyYXkgPSBbXTsKICAgICAgIHZhciBldmVudFRhcmdldCA9IHRoaXM7CiAKLSAgICAgIGZvciAo
dmFyIGk9b2Zmc2V0KzE7IGk8YXJncy5sZW5ndGg7ICsraSkKKyAgICAgIGZvciAodmFyIGk9b2Zm
c2V0KzEsIGw9YXJncy5sZW5ndGg7IGk8bDsgKytpKQogICAgICAgewogICAgICAgICBhcmdzQXJy
YXkucHVzaChhcmdzW2ldKTsKICAgICAgIH0KSW5kZXg6IGlvL3JlbW90ZS90cmFuc3BvcnQvU2Ny
aXB0LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIGlvL3JlbW90ZS90cmFuc3BvcnQvU2NyaXB0LmpzCShyZXZp
c2lvbiAyMzg4OSkKKysrIGlvL3JlbW90ZS90cmFuc3BvcnQvU2NyaXB0LmpzCSh3b3JraW5nIGNv
cHkpCkBAIC0xOTIsNyArMTkyLDcgQEAKIAogICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBB
cnJheSkKICAgICAgICAgewotICAgICAgICAgIGZvciAodmFyIGk9MDsgaTx2YWx1ZS5sZW5ndGg7
IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGk9MCwgbD12YWx1ZS5sZW5ndGg7IGk8bDsgaSsr
KSB7CiAgICAgICAgICAgICB2UGFyYW1ldGVyc0xpc3QucHVzaChlbmNvZGVVUklDb21wb25lbnQo
dklkKSArICI9IiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZVtpXSkpOwogICAgICAgICAgIH0K
ICAgICAgICAgfQpJbmRleDogaW8vcmVtb3RlL3RyYW5zcG9ydC9YbWxIdHRwLmpzCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KLS0tIGlvL3JlbW90ZS90cmFuc3BvcnQvWG1sSHR0cC5qcwkocmV2aXNpb24gMjM4ODkpCisr
KyBpby9yZW1vdGUvdHJhbnNwb3J0L1htbEh0dHAuanMJKHdvcmtpbmcgY29weSkKQEAgLTE5Nyw3
ICsxOTcsNyBAQAogCiAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KQogICAgICAg
ICB7Ci0gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPHZhbHVlLmxlbmd0aDsgaSsrKSB7CisgICAg
ICAgICAgZm9yICh2YXIgaT0wLCBsPXZhbHVlLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
ICAgIHZQYXJhbWV0ZXJzTGlzdC5wdXNoKGVuY29kZVVSSUNvbXBvbmVudCh2SWQpICsgIj0iICsg
ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlW2ldKSk7CiAgICAgICAgICAgfQogICAgICAgICB9CkBA
IC0yMjUsNyArMjI1LDcgQEAKIAogICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5
KQogICAgICAgICAgIHsKLSAgICAgICAgICAgIGZvciAodmFyIGk9MDsgaTx2YWx1ZS5sZW5ndGg7
IGkrKykKKyAgICAgICAgICAgIGZvciAodmFyIGk9MCwgbD12YWx1ZS5sZW5ndGg7IGk8bDsgaSsr
KQogICAgICAgICAgICAgewogICAgICAgICAgICAgICB2UGFyYW1ldGVyc0xpc3QucHVzaChlbmNv
ZGVVUklDb21wb25lbnQodklkKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICI9IiArCkluZGV4OiBpby9yZW1vdGUvdHJhbnNwb3J0L0lmcmFtZS5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSBpby9yZW1vdGUvdHJhbnNwb3J0L0lmcmFtZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBpby9y
ZW1vdGUvdHJhbnNwb3J0L0lmcmFtZS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTg0LDcgKzE4NCw3
IEBACiAKICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpCiAgICAgICAgIHsKLSAg
ICAgICAgICBmb3IgKHZhciBpPTA7IGk8dmFsdWUubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgICBm
b3IgKHZhciBpPTAsIGw9dmFsdWUubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICAgICAgdlBh
cmFtZXRlcnNMaXN0LnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KHZJZCkgKyAiPSIgKyBlbmNvZGVV
UklDb21wb25lbnQodmFsdWVbaV0pKTsKICAgICAgICAgICB9CiAgICAgICAgIH0KQEAgLTIxMiw3
ICsyMTIsNyBAQAogCiAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpCiAgICAg
ICAgICAgewotICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPHZhbHVlLmxlbmd0aDsgaSsrKQor
ICAgICAgICAgICAgZm9yICh2YXIgaT0wLCBsPXZhbHVlLmxlbmd0aDsgaTxsOyBpKyspCiAgICAg
ICAgICAgICB7CiAgICAgICAgICAgICAgIHZQYXJhbWV0ZXJzTGlzdC5wdXNoKGVuY29kZVVSSUNv
bXBvbmVudCh2SWQpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIj0iICsK
SW5kZXg6IGlvL3JlbW90ZS9FeGNoYW5nZS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBpby9yZW1vdGUvRXhj
aGFuZ2UuanMJKHJldmlzaW9uIDIzODg5KQorKysgaW8vcmVtb3RlL0V4Y2hhbmdlLmpzCSh3b3Jr
aW5nIGNvcHkpCkBAIC04ODYsNyArODg2LDcgQEAKIAogICAgICAgICAgICAgaWYgKHBhcmFtVmFs
dWUgaW5zdGFuY2VvZiBBcnJheSkKICAgICAgICAgICAgIHsKLSAgICAgICAgICAgICAgZm9yICh2
YXIgaT0wOyBpPHBhcmFtVmFsdWUubGVuZ3RoOyBpKyspCisgICAgICAgICAgICAgIGZvciAodmFy
IGk9MCwgbD1wYXJhbVZhbHVlLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICAgICAgICAgIHsKICAg
ICAgICAgICAgICAgICB2UGFyYW1ldGVyc0xpc3QucHVzaChlbmNvZGVVUklDb21wb25lbnQodklk
KSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIj0iICsKSW5kZXg6IGRh
dGEvY29udHJvbGxlci9PYmplY3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gZGF0YS9jb250cm9sbGVyL09i
amVjdC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBkYXRhL2NvbnRyb2xsZXIvT2JqZWN0LmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0xMTgsNyArMTE4LDcgQEAKICAgICAgKi8KICAgICBfYXBwbHlNb2Rl
bDogZnVuY3Rpb24odmFsdWUsIG9sZCkgewogICAgICAgLy8gZm9yIGV2ZXJ5IHRhcmdldAotICAg
ICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fdGFyZ2V0cy5sZW5ndGg7IGkrKykgeworICAg
ICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fdGFyZ2V0cy5sZW5ndGg7IGkgPCBsOyBpKysp
IHsKICAgICAgICAgLy8gZ2V0IHRoZSBwcm9wZXJ0aWVzCiAgICAgICAgIHZhciB0YXJnZXRPYmpl
Y3QgPSB0aGlzLl9fdGFyZ2V0c1tpXVswXTsKICAgICAgICAgdmFyIHRhcmdldFByb3BlcnR5ID0g
dGhpcy5fX3RhcmdldHNbaV1bMV07CkBAIC0yNzksNyArMjc5LDcgQEAKICAgICAgICk7CiAKICAg
ICAgIC8vIGRlbGV0ZSB0aGUgdGFyZ2V0IGluIHRoZSB0YXJnZXRzIHJlZmVyZW5jZQotICAgICAg
Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fdGFyZ2V0cy5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fdGFyZ2V0cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsK
ICAgICAgICAgaWYgKAogICAgICAgICAgIHRoaXMuX190YXJnZXRzW2ldWzBdID09IHRhcmdldE9i
amVjdAogICAgICAgICAgICYmIHRoaXMuX190YXJnZXRzW2ldWzFdID09IHRhcmdldFByb3BlcnR5
CkBAIC0zMTcsMTIgKzMxNywxMyBAQAogCiAgICAgICB2YXIgY3VycmVudExpc3RpbmcgPSB0aGlz
Ll9fYmluZGluZ3NbdGFyZ2V0T2JqZWN0LnRvSGFzaENvZGUoKV07CiAgICAgICAvLyBpZiBubyBi
aW5kaW5nIGlzIHN0b3JlZAotICAgICAgaWYgKGN1cnJlbnRMaXN0aW5nID09IHVuZGVmaW5lZCB8
fCBjdXJyZW50TGlzdGluZy5sZW5ndGggPT0gMCkgeworICAgICAgdmFyIGxlbiA9IGN1cnJlbnRM
aXN0aW5nLmxlbmd0aDsKKyAgICAgIGlmIChjdXJyZW50TGlzdGluZyA9PSB1bmRlZmluZWQgfHwg
bGVuID09IDApIHsKICAgICAgICAgcmV0dXJuOwogICAgICAgfQogCiAgICAgICAvLyBnbyB0aHJl
dyBhbGwgbGlzdGluZ3MgZm9yIHRoZSBvYmplY3QKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwg
Y3VycmVudExpc3RpbmcubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwg
bGVuOyBpKyspIHsKICAgICAgICAgLy8gaWYgaXQgaXMgdGhlIGxpc3RpbmcKICAgICAgICAgaWYg
KAogICAgICAgICAgIGN1cnJlbnRMaXN0aW5nW2ldWzJdID09IHRhcmdldFByb3BlcnR5ICYmCklu
ZGV4OiBkYXRhL2NvbnRyb2xsZXIvTGlzdC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkYXRhL2NvbnRyb2xs
ZXIvTGlzdC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBkYXRhL2NvbnRyb2xsZXIvTGlzdC5qcwko
d29ya2luZyBjb3B5KQpAQCAtMzE5LDggKzMxOSw5IEBACiAgICAgICB9CiAKICAgICAgIC8vIGVy
YXNlIHRoZSBzZWxlY3Rpb24gaWYgdGhlcmUgaXMgc29tZXRoaW5nIHNlbGVjdGVkCi0gICAgICBp
ZiAodGhpcy5nZXRTZWxlY3Rpb24oKSAhPSB1bmRlZmluZWQgJiYgdGhpcy5nZXRTZWxlY3Rpb24o
KS5sZW5ndGggPiAwKSB7Ci0gICAgICAgIHRoaXMuZ2V0U2VsZWN0aW9uKCkuc3BsaWNlKDAsIHRo
aXMuZ2V0U2VsZWN0aW9uKCkubGVuZ3RoKTsKKyAgICAgIHZhciBzZWxlY3Rpb24gPSB0aGlzLmdl
dFNlbGVjdGlvbigpOworICAgICAgaWYgKHNlbGVjdGlvbiAhPSB1bmRlZmluZWQgJiYgc2VsZWN0
aW9uLmxlbmd0aCA+IDApIHsKKyAgICAgICAgc2VsZWN0aW9uLnNwbGljZSgwLCBzZWxlY3Rpb24u
bGVuZ3RoKTsKICAgICAgIH0KIAogICAgICAgLy8gaWYgYSBtb2RlbCBpcyBzZXQKQEAgLTM1MSw4
ICszNTIsNyBAQAogICAgICAgICBpZiAodGFyZ2V0ICE9IG51bGwpIHsKICAgICAgICAgICAvLyB3
ZSBuZWVkIHRvIHJlbW92ZSB0aGUgYmlkbmluZ3MgdG9vIHNvIHVzZSB0aGUgY29udHJvbGxlciBt
ZXRob2QKICAgICAgICAgICAvLyBmb3IgcmVtdmluZyBpdGVtcwotICAgICAgICAgIHZhciBsZW5n
dGggPSB0YXJnZXQuZ2V0Q2hpbGRyZW4oKS5sZW5ndGg7Ci0gICAgICAgICAgZm9yICh2YXIgaSA9
IDA7IGkgPCBsZW5ndGg7IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0
YXJnZXQuZ2V0Q2hpbGRyZW4oKS5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAg
dGhpcy5fX3JlbW92ZUl0ZW0oKTsKICAgICAgICAgICB9OwogICAgICAgICB9CkBAIC0zODQsNyAr
Mzg0LDcgQEAKICAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7CiAgICAgICAgIGlmICh0aGlzLmdl
dE1vZGVsKCkgIT0gbnVsbCkgewogICAgICAgICAgIC8vIGFkZCBhIGJpbmRpbmcgZm9yIGFsbCBl
bGVtZW50cyBpbiB0aGUgbW9kZWwKLSAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMu
X19sb29rdXBUYWJsZS5sZW5ndGg7IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gdGhpcy5fX2xvb2t1cFRhYmxlLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAgICAg
dGhpcy5fX2FkZEl0ZW0odGhpcy5fX2xvb2t1cChpKSk7CiAgICAgICAgICAgfQogICAgICAgICB9
CkBAIC01NjIsNyArNTYyLDcgQEAKICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLmdldFRhcmdldCgp
OwogICAgICAgaWYgKHRhcmdldCAhPSBudWxsKSB7CiAgICAgICAgIHZhciBpdGVtcyA9IHRhcmdl
dC5nZXRDaGlsZHJlbigpOwotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0
aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaSA8IGl0ZW1zLmxlbmd0aDsg
aSA8IGw7IGkrKykgewogICAgICAgICAgIHZpc2libGVNb2RlbHMucHVzaChpdGVtc1tpXS5nZXRN
b2RlbCgpKTsKICAgICAgICAgfTsKICAgICAgIH0KQEAgLTcxOCw3ICs3MTgsNyBAQAogICAgICAg
fQogCiAgICAgICAvLyBnbyB0aHJvdWdoIGFsbCBib3VuZCB0YXJnZXQgcHJvcGVydGllcwotICAg
ICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzLmxlbmd0aDsgaSsr
KSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMuX19ib3VuZFByb3BlcnRpZXMubGVu
Z3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIC8vIGlmIHRoZXJlIGlzIGFuIG9uVXBkYXRlIGZv
ciBvbmUgb2YgaXQsIGludm9rZSBpdAogICAgICAgICBpZiAodGhpcy5fX29uVXBkYXRlW3RoaXMu
X19ib3VuZFByb3BlcnRpZXNbaV1dICE9IG51bGwpIHsKICAgICAgICAgICB0aGlzLl9fb25VcGRh
dGVbdGhpcy5fX2JvdW5kUHJvcGVydGllc1tpXV0oKTsKQEAgLTczNSw3ICs3MzUsNyBAQAogICAg
ICAqLwogICAgIF9yZW1vdmVCaW5kaW5nc0Zyb206IGZ1bmN0aW9uKGl0ZW0pIHsKICAgICAgIC8v
IGdvIHRocm91Z2ggYWxsIGJvdW5kIHRhcmdldCBwcm9wZXJ0aWVzCi0gICAgICBmb3IgKHZhciAg
aSA9IDA7IGkgPCB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7CisgICAgICBm
b3IgKHZhciAgaSA9IDAsIGwgPSB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzLmxlbmd0aDsgaSA8IGw7
IGkrKykgewogICAgICAgICAvLyBnZXQgdGhlIGJpbmRpbmcgaWQgYW5kIHJlbW92ZSBpdCwgaWYg
cG9zc2libGUKICAgICAgICAgdmFyIGlkID0gaXRlbS5nZXRVc2VyRGF0YSh0aGlzLl9fYm91bmRQ
cm9wZXJ0aWVzW2ldICsgIkJpbmRpbmdJZCIpOwogICAgICAgICBpZiAoaWQgIT0gbnVsbCkgewpA
QCAtNzQzLDcgKzc0Myw3IEBACiAgICAgICAgIH0KICAgICAgIH0KICAgICAgIC8vIGdvIHRocm91
Z2ggYWxsIHJldmVyc2UgYm91bmQgcHJvcGVydGllcwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkg
PCB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzUmV2ZXJzZS5sZW5ndGg7IGkrKykgeworICAgICAgZm9y
ICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzUmV2ZXJzZS5sZW5ndGg7IGkg
PCBsOyBpKyspIHsKICAgICAgICAgLy8gZ2V0IHRoZSBiaW5kaW5nIGlkIGFuZCByZW1vdmUgaXQs
IGlmIHBvc3NpYmxlCiAgICAgICAgIHZhciBpZCA9IGl0ZW0uZ2V0VXNlckRhdGEoCiAgICAgICAg
ICAgdGhpcy5fX2JvdW5kUHJvcGVydGllc1JldmVyc2VbaV0gKyAiUmV2ZXJzZUJpbmRpbmdJZCIK
QEAgLTc2Nyw3ICs3NjcsNyBAQAogICAgICAgLy8gZ2V0IGFsbCBjaGlsZHJlbiBvZiB0aGUgdGFy
Z2V0CiAgICAgICB2YXIgaXRlbXMgPSB0aGlzLmdldFRhcmdldCgpLmdldENoaWxkcmVuKCk7CiAg
ICAgICAvLyBnbyB0aHJvdWdoIGFsbCBpdGVtcwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBp
dGVtcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5n
dGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fcmVtb3ZlQmluZGluZ3NGcm9tKGl0ZW1z
W2ldKTsKICAgICAgICAgLy8gYWRkIHRoZSBuZXcgYmluZGluZwogICAgICAgICB0aGlzLl9iaW5k
TGlzdEl0ZW0oaXRlbXNbaV0sIHRoaXMuX19sb29rdXAoaSkpOwpAQCAtNzk0LDcgKzc5NCw3IEBA
CiAgICAgX3NldENvbmZpZ3VyZUl0ZW06IGZ1bmN0aW9uKHZhbHVlLCBvbGQpIHsKICAgICAgIGlm
ICh2YWx1ZSAhPSBudWxsICYmIHZhbHVlLmNvbmZpZ3VyZUl0ZW0gIT0gbnVsbCAmJiB0aGlzLmdl
dFRhcmdldCgpICE9IG51bGwpIHsKICAgICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5nZXRUYXJn
ZXQoKS5nZXRDaGlsZHJlbigpOwotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVu
Lmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gY2hpbGRyZW4ubGVu
Z3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgdmFsdWUuY29uZmlndXJlSXRlbShjaGlsZHJl
bltpXSk7CiAgICAgICAgIH0KICAgICAgIH0KQEAgLTg5NiwxNSArODk2LDE2IEBACiAgICAgICB0
aGlzLl9fYnVpbGRVcExvb2t1cFRhYmxlKCk7CiAKICAgICAgIC8vIGlmIHRoZXJlIGFyZSBsZXNz
ZXIgaXRlbXMKLSAgICAgIGlmIChvbGRUYWJsZS5sZW5ndGggPiB0aGlzLl9fbG9va3VwVGFibGUu
bGVuZ3RoKSB7CisgICAgICB2YXIgbGVuID0gdGhpcy5fX2xvb2t1cFRhYmxlLmxlbmd0aDsKKyAg
ICAgIGlmIChvbGRUYWJsZS5sZW5ndGggPiBsZW4pIHsKICAgICAgICAgLy8gcmVtb3ZlIHRoZSB1
bm5lY2Vzc2FyeSDDrXRlbXMKLSAgICAgICAgZm9yICh2YXIgaiA9IG9sZFRhYmxlLmxlbmd0aDsg
aiA+IHRoaXMuX19sb29rdXBUYWJsZS5sZW5ndGg7IGotLSkgeworICAgICAgICBmb3IgKHZhciBq
ID0gb2xkVGFibGUubGVuZ3RoOyBqID4gbGVuOyBqLS0pIHsKICAgICAgICAgICB0aGlzLmdldFRh
cmdldCgpLnJlbW92ZUF0KGogLSAxKTsKICAgICAgICAgfQogICAgICAgLy8gaWYgdGhlcmUgYXJl
IG1vcmUgaXRlbXMKLSAgICAgIH0gZWxzZSBpZiAob2xkVGFibGUubGVuZ3RoIDwgdGhpcy5fX2xv
b2t1cFRhYmxlLmxlbmd0aCkgeworICAgICAgfSBlbHNlIGlmIChvbGRUYWJsZS5sZW5ndGggPCBs
ZW4pIHsKICAgICAgICAgLy8gYWRkIHRoZSBuZXcgZWxlbWVudHMKLSAgICAgICAgZm9yICh2YXIg
aiA9IG9sZFRhYmxlLmxlbmd0aDsgaiA8IHRoaXMuX19sb29rdXBUYWJsZS5sZW5ndGg7IGorKykg
eworICAgICAgICBmb3IgKHZhciBqID0gb2xkVGFibGUubGVuZ3RoOyBqIDwgbGVuOyBqKyspIHsK
ICAgICAgICAgICB2YXIgdGVtcEl0ZW0gPSB0aGlzLl9jcmVhdGVJdGVtKCk7CiAgICAgICAgICAg
dGhpcy5nZXRUYXJnZXQoKS5hZGQodGVtcEl0ZW0pOwogICAgICAgICB9CkBAIC05MTIsNyArOTEz
LDcgQEAKIAogICAgICAgLy8gYmluZCBldmVyeSBsaXN0IGl0ZW0gYWdhaW4KICAgICAgIHZhciBs
aXN0SXRlbXMgPSB0aGlzLmdldFRhcmdldCgpLmdldENoaWxkcmVuKCk7Ci0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IGxpc3RJdGVtcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9
IDAsIGwgPSBsaXN0SXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHRoaXMuX2Jp
bmRMaXN0SXRlbShsaXN0SXRlbXNbaV0sIHRoaXMuX19sb29rdXAoaSkpOwogICAgICAgfQogCkBA
IC05NjUsNyArOTY2LDcgQEAKICAgICAgIH0KIAogICAgICAgdGhpcy5fX2xvb2t1cFRhYmxlID0g
W107Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1vZGVsLmdldExlbmd0aCgpOyBpKyspIHsK
KyAgICAgIGZvciAodmFyIGkgPSAwLCBsPW1vZGVsLmdldExlbmd0aCgpOyBpPGw7IGkrKykgewog
ICAgICAgICBpZiAoZmlsdGVyID09IG51bGwgfHwgZmlsdGVyKG1vZGVsLmdldEl0ZW0oaSkpKSB7
CiAgICAgICAgICAgdGhpcy5fX2xvb2t1cFRhYmxlLnB1c2goaSk7CiAgICAgICAgIH0KSW5kZXg6
IGRhdGEvY29udHJvbGxlci9UcmVlLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGRhdGEvY29udHJvbGxlci9U
cmVlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGRhdGEvY29udHJvbGxlci9UcmVlLmpzCSh3b3Jr
aW5nIGNvcHkpCkBAIC01MDcsMTIgKzUwNywxMiBAQAogICAgICAgfQogCiAgICAgICAvLyBnbyB0
aHJldyBhbGwgY2hpbGRyZW4gaW4gdGhlIG1vZGVsCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8
IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGNoaWxk
cmVuLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyBub2Rl
IGluIHRoZSB0cmVlIG9yIHRoZSBjdXJyZW50IG5vZGUgZG9lcyBub3QgZml0CiAgICAgICAgIGlm
IChyb290Tm9kZS5nZXRDaGlsZHJlbigpW2ldID09IG51bGwgfHwgY2hpbGRyZW4uZ2V0SXRlbShp
KSAhPSByb290Tm9kZS5nZXRDaGlsZHJlbigpW2ldLmdldE1vZGVsKCkpCiAgICAgICAgIHsKICAg
ICAgICAgICAvL2NoZWNrIGlmIHRoZSBub2RlIHdhcyBqdXN0IG1vdmVkCi0gICAgICAgICAgZm9y
ICh2YXIgaiA9IGk7IGogPCByb290Tm9kZS5nZXRDaGlsZHJlbigpLmxlbmd0aDsgaisrKSB7Cisg
ICAgICAgICAgZm9yICh2YXIgaiA9IGksIGwgPSByb290Tm9kZS5nZXRDaGlsZHJlbigpLmxlbmd0
aDsgaiA8IGw7IGorKykgewogICAgICAgICAgICAgaWYgKHJvb3ROb2RlLmdldENoaWxkcmVuKClb
al0uZ2V0TW9kZWwoKSA9PT0gY2hpbGRyZW4uZ2V0SXRlbShpKSkgewogICAgICAgICAgICAgICB2
YXIgb2xkSW5kZXggPSBqOwogICAgICAgICAgICAgICBicmVhazsKQEAgLTU0OSw3ICs1NDksNyBA
QAogICAgICAgICB9CiAgICAgICB9CiAgICAgICAvLyByZW1vdmUgdGhlIHJlc3Qgb2YgdGhlIHRy
ZWUgaXRlbXMgaWYgdGhleSBleGlzdAotICAgICAgZm9yICh2YXIgaSA9IHJvb3ROb2RlLmdldENo
aWxkcmVuKCkubGVuZ3RoIC0xOyBpID49IGNoaWxkcmVuLmxlbmd0aDsgaS0tKSB7CisgICAgICBm
b3IgKHZhciBpID0gcm9vdE5vZGUuZ2V0Q2hpbGRyZW4oKS5sZW5ndGggLTEsIGwgPSBjaGlsZHJl
bi5sZW5ndGg7IGkgPj0gbDsgaS0tKSB7CiAgICAgICAgIHZhciB0cmVlRm9sZGVyID0gcm9vdE5v
ZGUuZ2V0Q2hpbGRyZW4oKVtpXTsKICAgICAgICAgdGhpcy5fX3JlbW92ZUZvbGRlcih0cmVlRm9s
ZGVyLCByb290Tm9kZSk7CiAgICAgICB9CkBAIC03OTcsNyArNzk3LDcgQEAKICAgICAgKiAgIHNo
b3VsZCBiZSByZW1vdmVkLgogICAgICAqLwogICAgIF9fcmVtb3ZlQmluZGluZzogZnVuY3Rpb24o
bW9kZWxOb2RlKSB7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19ib3VuZFByb3Bl
cnRpZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2Jv
dW5kUHJvcGVydGllcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdmFyIHByb3BlcnR5
ID0gdGhpcy5fX2JvdW5kUHJvcGVydGllc1tpXTsKICAgICAgICAgdmFyIGJpbmRpbmdzTWFwID0g
dGhpcy5fX2JpbmRpbmdzW3Byb3BlcnR5XVttb2RlbE5vZGUudG9IYXNoQ29kZSgpXTsKICAgICAg
ICAgaWYgKGJpbmRpbmdzTWFwICE9IG51bGwpIHsKQEAgLTgzMSw3ICs4MzEsNyBAQAogICAgICAg
ICB0aGlzLmdldFRhcmdldCgpICE9IG51bGwgJiYgdGhpcy5nZXRNb2RlbCgpICE9IG51bGwKICAg
ICAgICkgewogICAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLmdldFRhcmdldCgpLmdldFJvb3Qo
KS5nZXRJdGVtcyh0cnVlLCB0cnVlLCBmYWxzZSk7Ci0gICAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBj
aGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgICB2YWx1ZS5jb25maWd1cmVJ
dGVtKGNoaWxkcmVuW2ldKTsKICAgICAgICAgfQogICAgICAgfQpAQCAtODk4LDQgKzg5OCw0IEBA
CiAgICBkZXN0cnVjdCA6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLl9fYmluZGluZ3MgPSB0aGlz
Ll9fY2hpbGRyZW5SZWYgPSB0aGlzLl9fYm91bmRQcm9wZXJ0aWVzID0gbnVsbDsKICAgIH0KLX0p
OwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRleDogZGF0YS9jb250cm9sbGVy
L01TZWxlY3Rpb24uanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gZGF0YS9jb250cm9sbGVyL01TZWxlY3Rpb24u
anMJKHJldmlzaW9uIDIzODg5KQorKysgZGF0YS9jb250cm9sbGVyL01TZWxlY3Rpb24uanMJKHdv
cmtpbmcgY29weSkKQEAgLTE1OCw3ICsxNTgsOCBAQAogICAgICAgICB0aGlzLnNldFNlbGVjdGlv
bihzZWxlY3Rpb24pOwogICAgICAgfQogICAgICAgLy8gaWYgdGhlIHNlbGVjdGlvbiBpcyBub3Qg
ZW1wdHkKLSAgICAgIGlmICh0YXJnZXRTZWxlY3Rpb24ubGVuZ3RoID4gMCkgeworICAgICAgdmFy
IGxlbiA9IHRhcmdldFNlbGVjdGlvbi5sZW5ndGg7CisgICAgICBpZiAobGVuID4gMCkgewogICAg
ICAgICAvLyByZW1vdmUgYWxsIGl0ZW1zIHdpdGhvdXQgZmlyaW5nIGFuIGV2ZW50CiAgICAgICAg
IHNlbGVjdGlvbi50b0FycmF5KCkuc3BsaWNlKDAsIHNlbGVjdGlvbi5nZXRMZW5ndGgoKSk7CiAg
ICAgICB9IGVsc2UgewpAQCAtMTY3LDEwICsxNjgsMTAgQEAKICAgICAgIH0KIAogICAgICAgLy8g
Z28gdGhyb3VnaCB0aGUgdGFyZ2V0IHNlbGVjdGlvbgotICAgICAgZm9yICh2YXIgaSA9IDA7IGkg
PCB0YXJnZXRTZWxlY3Rpb24ubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgbGVuOyBpKyspIHsKICAgICAgICAgLy8gZ2V0IHRoZSBmaXR0aW5nIGl0ZW0KICAgICAgICAg
dmFyIGl0ZW0gPSB0YXJnZXRTZWxlY3Rpb25baV0uZ2V0TW9kZWwoKTsKLSAgICAgICAgaWYgKGkg
KyAxID09IHRhcmdldFNlbGVjdGlvbi5sZW5ndGgpIHsKKyAgICAgICAgaWYgKGkgKyAxID09IGxl
bikgewogICAgICAgICAgIHNlbGVjdGlvbi5wdXNoKGl0ZW0pOwogICAgICAgICB9IGVsc2Ugewog
ICAgICAgICAgIHNlbGVjdGlvbi50b0FycmF5KCkucHVzaChpdGVtKTsKQEAgLTIzMiw4ICsyMzMs
OSBAQAogICAgICAgaWYgKHRoaXMuX190YXJnZXRTdXBwb3J0c011bHRpU2VsZWN0aW9uKCkpIHsK
IAogICAgICAgICB2YXIgdGFyZ2V0U2VsZWN0aW9uID0gW107CisgICAgICAgIHZhciBsZW4gPSB0
aGlzLmdldFNlbGVjdGlvbigpLmxlbmd0aDsKICAgICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgc2Vs
ZWN0aW9uIGFycmF5Ci0gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5nZXRTZWxlY3Rp
b24oKS5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsr
KSB7CiAgICAgICAgICAgLy8gc3RvcmUgZWFjaCBpdGVtCiAgICAgICAgICAgdmFyIG1vZGVsID0g
dGhpcy5nZXRTZWxlY3Rpb24oKS5nZXRJdGVtKGkpOwogICAgICAgICAgIHZhciBzZWxlY3RhYmxl
ID0gdGhpcy5fX2dldFNlbGVjdGFibGVGb3JNb2RlbChtb2RlbCk7CkBAIC0yNDcsMTIgKzI0OSwx
MiBAQAogICAgICAgICB0YXJnZXRTZWxlY3Rpb24gPSB0aGlzLmdldFRhcmdldCgpLmdldFNlbGVj
dGlvbigpOwogICAgICAgICAvLyBnZXQgYWxsIGl0ZW1zIHNlbGVjdGVkIGluIHRoZSBsaXN0CiAg
ICAgICAgIHZhciB0YXJnZXRTZWxlY3Rpb25JdGVtcyA9IFtdOwotICAgICAgICBmb3IgKHZhciBp
ID0gMDsgaSA8IHRhcmdldFNlbGVjdGlvbi5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZh
ciBpID0gMCwgbCA9IHRhcmdldFNlbGVjdGlvbi5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAg
ICAgICB0YXJnZXRTZWxlY3Rpb25JdGVtc1tpXSA9IHRhcmdldFNlbGVjdGlvbltpXS5nZXRNb2Rl
bCgpOwogICAgICAgICB9CiAKICAgICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgY29udHJvbGxlciBz
ZWxlY3Rpb24KLSAgICAgICAgZm9yICh2YXIgaSA9IHRoaXMuZ2V0U2VsZWN0aW9uKCkubGVuZ3Ro
IC0gMTsgaSA+PSAwOyBpLS0pIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IGxlbiAtIDE7IGkgPj0g
MDsgaS0tKSB7CiAgICAgICAgICAgLy8gaWYgdGhlIGl0ZW0gaW4gdGhlIGNvbnRyb2xsZXIgc2Vs
ZWN0aW9uIGlzIG5vdCBzZWxlY3RlZCBpbiB0aGUgbGlzdAogICAgICAgICAgIGlmICghcXgubGFu
Zy5BcnJheS5jb250YWlucygKICAgICAgICAgICAgIHRhcmdldFNlbGVjdGlvbkl0ZW1zLCB0aGlz
LmdldFNlbGVjdGlvbigpLmdldEl0ZW0oaSkKQEAgLTI2Niw3ICsyNjgsNyBAQAogICAgICAgfSBl
bHNlIGlmICh0aGlzLl9fdGFyZ2V0U3VwcG9ydHNTaW5nbGVTZWxlY3Rpb24oKSkgewogICAgICAg
ICAvLyBzZWxlY3QgdGhlIGxhc3Qgc2VsZWN0ZWQgaXRlbSAob2xkIHNlbGVjdGlvbiB3aWxsIGJl
IHJlbW92ZWQgYW55d2F5KQogICAgICAgICB0aGlzLl9fc2VsZWN0SXRlbSgKLSAgICAgICAgICB0
aGlzLmdldFNlbGVjdGlvbigpLmdldEl0ZW0odGhpcy5nZXRTZWxlY3Rpb24oKS5sZW5ndGggLSAx
KQorICAgICAgICAgIHRoaXMuZ2V0U2VsZWN0aW9uKCkuZ2V0SXRlbShsZW4gLSAxKQogICAgICAg
ICApOwogICAgICAgICAvLyByZW1vdmUgdGhlIG90aGVyIGl0ZW1zIGZyb20gdGhlIHNlbGVjdGlv
biBkYXRhIGFycmF5IGFuZCBnZXQgCiAgICAgICAgIC8vIHJpZCBvZiB0aGUgcmV0dXJuIGFycmF5
CkBAIC0zMzQsNyArMzM2LDcgQEAKICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuZ2V0VGFyZ2V0
KCkuZ2V0U2VsZWN0YWJsZXModHJ1ZSk7CiAKICAgICAgIC8vIGdvIHRocm91Z2ggYWxsIGNoaWxk
cmVuIGFuZCBzZWFyY2ggZm9yIHRoZSBjaGlsZCB0byBzZWxlY3QKLSAgICAgIGZvciAodmFyIGkg
PSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIGlmIChjaGlsZHJlbltp
XS5nZXRNb2RlbCgpID09IG1vZGVsKSB7CiAgICAgICAgICAgcmV0dXJuIGNoaWxkcmVuW2ldOwog
ICAgICAgICB9CkluZGV4OiBkYXRhL2NvbnRyb2xsZXIvRm9ybS5qcwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBk
YXRhL2NvbnRyb2xsZXIvRm9ybS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBkYXRhL2NvbnRyb2xs
ZXIvRm9ybS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTYwLDkgKzE2MCw5IEBACiAgICAgICBmb3Ig
KHZhciBuYW1lIGluIGl0ZW1zKSB7CiAgICAgICAgIHZhciBuYW1lcyA9IG5hbWUuc3BsaXQoIi4i
KTsKICAgICAgICAgdmFyIGN1cnJlbnREYXRhID0gZGF0YTsKLSAgICAgICAgZm9yICh2YXIgaSA9
IDA7IGkgPCBuYW1lcy5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9
IG5hbWVzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAgIC8vIGlmIGl0cyB0aGUgbGFz
dCBpdGVtCi0gICAgICAgICAgaWYgKGkgKyAxID09IG5hbWVzLmxlbmd0aCkgeworICAgICAgICAg
IGlmIChpICsgMSA9PSBsKSB7CiAgICAgICAgICAgICAvLyBjaGVjayBpZiB0aGUgdGFyZ2V0IGlz
IGEgc2VsZWN0aW9uCiAgICAgICAgICAgICB2YXIgY2xhenogPSBpdGVtc1tuYW1lXS5jb25zdHJ1
Y3RvcjsKICAgICAgICAgICAgIGlmIChxeC5DbGFzcy5oYXNJbnRlcmZhY2UoY2xhenosIHF4LnVp
LmNvcmUuSVNpbmdsZVNlbGVjdGlvbikpIHsKSW5kZXg6IGRhdGEvU2luZ2xlVmFsdWVCaW5kaW5n
LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KLS0tIGRhdGEvU2luZ2xlVmFsdWVCaW5kaW5nLmpzCShyZXZpc2lvbiAy
Mzg4OSkKKysrIGRhdGEvU2luZ2xlVmFsdWVCaW5kaW5nLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0x
MjQsNyArMTI0LDcgQEAKICAgICAgIHZhciBzb3VyY2UgPSBzb3VyY2VPYmplY3Q7CiAKICAgICAg
IC8vIGdvIHRocm91Z2ggYWxsIHByb3BlcnR5IG5hbWVzCi0gICAgICBmb3IgKHZhciBpID0gMDsg
aSA8IHByb3BlcnR5TmFtZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gcHJvcGVydHlOYW1lcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgLy8gY2hlY2sg
Zm9yIHRoZSBhcnJheQogICAgICAgICBpZiAoYXJyYXlJbmRleFZhbHVlc1tpXSAhPT0gIiIpIHsK
ICAgICAgICAgICAvLyBwdXNoIHRoZSBhcnJheSBjaGFuZ2UgZXZlbnQKQEAgLTIzNiw3ICsyMzYs
NyBAQAogICAgICAgfQogCiAgICAgICAvLyBkZWxldGUgYWxsIGxpc3RlbmVyIGFmdGVyIHRoZSBj
dXJyZW50IG9uZQotICAgICAgZm9yICh2YXIgaiA9IGNvbnRleHQuaW5kZXggKyAxOyBqIDwgY29u
dGV4dC5wcm9wZXJ0eU5hbWVzLmxlbmd0aDsgaisrKSB7CisgICAgICBmb3IgKHZhciBqID0gY29u
dGV4dC5pbmRleCArIDEsIGwgPSBjb250ZXh0LnByb3BlcnR5TmFtZXMubGVuZ3RoOyBqIDwgbDsg
aisrKSB7CiAgICAgICAgIC8vIHJlbW92ZSB0aGUgb2xkIHNvdXJjZXMKICAgICAgICAgdmFyIHNv
dXJjZSA9IGNvbnRleHQuc291cmNlc1tqXTsKICAgICAgICAgY29udGV4dC5zb3VyY2VzW2pdID0g
bnVsbDsKQEAgLTI1MSw3ICsyNTEsNyBAQAogICAgICAgLy8gZ2V0IHRoZSBjdXJyZW50IHNvdXJj
ZQogICAgICAgdmFyIHNvdXJjZSA9IGNvbnRleHQuc291cmNlc1tjb250ZXh0LmluZGV4XTsKICAg
ICAgIC8vIGFkZCBuZXcgb25jZSBhZnRlciB0aGUgY3VycmVudCBvbmUKLSAgICAgIGZvciAodmFy
IGogPSBjb250ZXh0LmluZGV4ICsgMTsgaiA8IGNvbnRleHQucHJvcGVydHlOYW1lcy5sZW5ndGg7
IGorKykgeworICAgICAgZm9yICh2YXIgaiA9IGNvbnRleHQuaW5kZXggKyAxLCBsID0gY29udGV4
dC5wcm9wZXJ0eU5hbWVzLmxlbmd0aDsgaiA8IGw7IGorKykgewogICAgICAgICAvLyBnZXQgYW5k
IHN0b3JlIHRoZSBuZXcgc291cmNlCiAgICAgICAgIGlmIChjb250ZXh0LmFycmF5SW5kZXhWYWx1
ZXNbaiAtIDFdICE9PSAiIikgewogICAgICAgICAgIHNvdXJjZSA9IHNvdXJjZVsiZ2V0IiArIHF4
LmxhbmcuU3RyaW5nLmZpcnN0VXAoY29udGV4dC5wcm9wZXJ0eU5hbWVzW2ogLSAxXSldKGNvbnRl
eHQuYXJyYXlJbmRleFZhbHVlc1tqIC0gMV0pOwpAQCAtMzQzLDcgKzM0Myw3IEBACiAgICAgICB2
YXIgdGFyZ2V0ID0gdGFyZ2V0T2JqZWN0OwogCiAgICAgICAvLyBnbyB0aHJvdWdoIGFsbCBwcm9w
ZXJ0eSBuYW1lcwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0eU5hbWVzLmxlbmd0
aCAtIDE7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGw9IHByb3BlcnR5TmFtZXMubGVu
Z3RoOyBpIDwgbCAtIDE7IGkrKykgewogICAgICAgICAvLyBjaGVjayBmb3IgdGhlIGFycmF5CiAg
ICAgICAgIGlmIChhcnJheUluZGV4VmFsdWVzW2ldICE9PSAiIikgewogICAgICAgICAgIC8vIHB1
c2ggdGhlIGFycmF5IGNoYW5nZSBldmVudApAQCAtMzY2LDcgKzM2Niw3IEBACiAgICAgICAgIC8v
IGNyZWF0ZSBhIGxpc3RlbmVyCiAgICAgICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uKCkgewog
ICAgICAgICAgIC8vIGRlbGV0ZSBhbGwgbGlzdGVuZXIgYWZ0ZXIgdGhlIGN1cnJlbnQgb25lCi0g
ICAgICAgICAgZm9yICh2YXIgaiA9IGkgKyAxOyBqIDwgcHJvcGVydHlOYW1lcy5sZW5ndGggLSAx
OyBqKyspIHsKKyAgICAgICAgICBmb3IgKHZhciBqID0gaSArIDEsIGwgPSBwcm9wZXJ0eU5hbWVz
Lmxlbmd0aDsgaiA8IGwgLSAxOyBqKyspIHsKICAgICAgICAgICAgIC8vIHJlbW92ZSB0aGUgb2xk
IHNvdXJjZXMKICAgICAgICAgICAgIHZhciB0YXJnZXQgPSB0YXJnZXRzW2pdOwogICAgICAgICAg
ICAgdGFyZ2V0c1tqXSA9IG51bGw7CkBAIC0zODEsNyArMzgxLDcgQEAKICAgICAgICAgICAvLyBn
ZXQgdGhlIGN1cnJlbnQgdGFyZ2V0CiAgICAgICAgICAgdmFyIHRhcmdldCA9IHRhcmdldHNbaV07
CiAgICAgICAgICAgLy8gYWRkIG5ldyBvbmNlIGFmdGVyIHRoZSBjdXJyZW50IG9uZQotICAgICAg
ICAgIGZvciAodmFyIGogPSBpICsgMTsgaiA8IHByb3BlcnR5TmFtZXMubGVuZ3RoIC0gMTsgaisr
KSB7CisgICAgICAgICAgZm9yICh2YXIgaiA9IGkgKyAxLCBsID0gcHJvcGVydHlOYW1lcy5sZW5n
dGg7IGogPCBsIC0gMTsgaisrKSB7CiAKICAgICAgICAgICAgIHZhciBmaXJzdFVwUHJvcE5hbWUg
PSBxeC5sYW5nLlN0cmluZy5maXJzdFVwKHByb3BlcnR5TmFtZXNbaiAtIDFdKTsKICAgICAgICAg
ICAgIC8vIGdldCBhbmQgc3RvcmUgdGhlIG5ldyB0YXJnZXQKQEAgLTYzNyw3ICs2MzcsNyBAQAog
ICAgICAgdmFyIHByb3BlcnRpZXMgPSB0YXJnZXRQcm9wZXJ0eUNoYWluLnNwbGl0KCIuIik7CiAg
ICAgICB2YXIgdGFyZ2V0ID0gdGFyZ2V0T2JqZWN0OwogICAgICAgLy8gaWdub3JlIHRoZSBsYXN0
IHByb3BlcnR5Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BlcnRpZXMubGVuZ3RoIC0g
MTsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHByb3BlcnRpZXMubGVuZ3RoOyBp
IDwgbCAtIDE7IGkrKykgewogICAgICAgICB0cnkgewogICAgICAgICAgIHZhciBwcm9wZXJ0eSA9
IHByb3BlcnRpZXNbaV07CiAgICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYSBhcnJheSBub3RhaW9u
CkBAIC03MzAsNyArNzMwLDcgQEAKICAgICAgIHZhciBhcnJheUluZGV4VmFsdWVzID0gW107CiAK
ICAgICAgIC8vIGdvIHRocm91Z2ggYWxsIHByb3BlcnRpZXMgYW5kIGNoZWNrIGZvciBhcnJheSBu
b3RhdGlvbnMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcGVydHlOYW1lcy5sZW5ndGg7
IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBwcm9wZXJ0eU5hbWVzLmxlbmd0aDsg
aSA8IGw7IGkrKykgewogICAgICAgICB2YXIgbmFtZSA9IHByb3BlcnR5TmFtZXNbaV07CiAgICAg
ICAgIC8vIGlmIGl0cyBhbiBhcnJheSBwcm9wZXJ0eSBpbiB0aGUgY2hhaW4KICAgICAgICAgaWYg
KHF4LmxhbmcuU3RyaW5nLmVuZHNXaXRoKG5hbWUsICJdIikpIHsKQEAgLTEwNDcsMTQgKzEwNDcs
MTQgQEAKICAgICAgIC8vIGNoZWNrIGZvciBhIGRlZXAgYmluZGluZwogICAgICAgaWYgKGlkLnR5
cGUgPT0gImRlZXBCaW5kaW5nIikgewogICAgICAgICAvLyBnbyB0aHJldyBhbGwgYWRkZWQgbGlz
dGVuZXJzIChzb3VyY2UpCi0gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWQuc291cmNlcy5s
ZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGlkLnNvdXJjZXMubGVu
Z3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgLy8gY2hlY2sgaWYgYSBzb3VyY2UgaXMgYXZh
aWxhYmxlCiAgICAgICAgICAgaWYgKGlkLnNvdXJjZXNbaV0pIHsKICAgICAgICAgICAgIGlkLnNv
dXJjZXNbaV0ucmVtb3ZlTGlzdGVuZXJCeUlkKGlkLmxpc3RlbmVySWRzW2ldKTsKICAgICAgICAg
ICB9CiAgICAgICAgIH0KICAgICAgICAgLy8gZ28gdGhyZXcgYWxsIGFkZGVkIGxpc3RlbmVycyAo
dGFyZ2V0KQotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlkLnRhcmdldHMubGVuZ3RoOyBp
KyspIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpZC50YXJnZXRzLmxlbmd0aDsgaSA8
IGw7IGkrKykgewogICAgICAgICAgIC8vIGNoZWNrIGlmIGEgdGFyZ2V0IGlzIGF2YWlsYWJsZQog
ICAgICAgICAgIGlmIChpZC50YXJnZXRzW2ldKSB7CiAgICAgICAgICAgICBpZC50YXJnZXRzW2ld
LnJlbW92ZUxpc3RlbmVyQnlJZChpZC50YXJnZXRMaXN0ZW5lcklkc1tpXSk7CkBAIC0xMDY5LDcg
KzEwNjksNyBAQAogICAgICAgdmFyIGJpbmRpbmdzID0gdGhpcy5fX2JpbmRpbmdzW3NvdXJjZU9i
amVjdC50b0hhc2hDb2RlKCldOwogICAgICAgLy8gY2hlY2sgaWYgdGhlIGJpbmRpbmcgZXhpc3Rz
CiAgICAgICBpZiAoYmluZGluZ3MgIT0gdW5kZWZpbmVkKSB7Ci0gICAgICAgIGZvciAodmFyIGkg
PSAwOyBpIDwgYmluZGluZ3MubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IDAs
IGwgPSBiaW5kaW5ncy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgICBpZiAoYmluZGlu
Z3NbaV1bMF0gPT0gaWQpIHsKICAgICAgICAgICAgIHF4LmxhbmcuQXJyYXkucmVtb3ZlKGJpbmRp
bmdzLCBiaW5kaW5nc1tpXSk7CiAgICAgICAgICAgICByZXR1cm47CkBAIC0xMTczLDcgKzExNzMs
NyBAQAogICAgIHNob3dCaW5kaW5nSW5Mb2cgOiBmdW5jdGlvbihvYmplY3QsIGlkKSB7CiAgICAg
ICB2YXIgYmluZGluZzsKICAgICAgIC8vIGdvIHRocmV3IGFsbCBiaW5kaW5ncyBvZiB0aGUgZ2l2
ZW4gb2JqZWN0Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19iaW5kaW5nc1tvYmpl
Y3QudG9IYXNoQ29kZSgpXS5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwg
PSB0aGlzLl9fYmluZGluZ3Nbb2JqZWN0LnRvSGFzaENvZGUoKV0ubGVuZ3RoOyBpIDwgbDsgaSsr
KSB7CiAgICAgICAgIC8vIHRoZSBmaXJzdCBhcnJheSBpdGVtIGlzIHRoZSBpZAogICAgICAgICBp
ZiAodGhpcy5fX2JpbmRpbmdzW29iamVjdC50b0hhc2hDb2RlKCldW2ldWzBdID09IGlkKSB7CiAg
ICAgICAgICAgYmluZGluZyA9IHRoaXMuX19iaW5kaW5nc1tvYmplY3QudG9IYXNoQ29kZSgpXVtp
XTsKQEAgLTEyMDAsNyArMTIwMCw3IEBACiAgICAgICAvLyBnbyB0aHJldyBhbGwgb2JqZWN0cyBp
biB0aGUgcmVnaXN0cnkKICAgICAgIGZvciAodmFyIGhhc2ggaW4gdGhpcy5fX2JpbmRpbmdzKSB7
CiAgICAgICAgIHZhciBvYmplY3QgPSBxeC5jb3JlLk9iamVjdFJlZ2lzdHJ5LmZyb21IYXNoQ29k
ZShoYXNoKTsKLSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9fYmluZGluZ3NbaGFz
aF0ubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fYmlu
ZGluZ3NbaGFzaF0ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgdGhpcy5zaG93Qmlu
ZGluZ0luTG9nKG9iamVjdCwgdGhpcy5fX2JpbmRpbmdzW2hhc2hdW2ldWzBdKTsKICAgICAgICAg
fQogICAgICAgfQpJbmRleDogZGF0YS9tYXJzaGFsL0pzb24uanMKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gZGF0
YS9tYXJzaGFsL0pzb24uanMJKHJldmlzaW9uIDIzODg5KQorKysgZGF0YS9tYXJzaGFsL0pzb24u
anMJKHdvcmtpbmcgY29weSkKQEAgLTExNSw3ICsxMTUsNyBAQAogCiAgICAgICAvLyBjaGVjayBm
b3IgYXJyYXlzCiAgICAgICBpZiAocXgubGFuZy5UeXBlLmlzQXJyYXkoZGF0YSkpIHsKLSAgICAg
ICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAo
dmFyIGkgPSAwLCBsID0gZGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgICB0aGlz
LnRvQ2xhc3MoZGF0YVtpXSwgaW5jbHVkZUJ1YmJsZUV2ZW50cyk7CiAgICAgICAgIH0KICAgICAg
ICAgLy8gZG9udCBjcmVhdGUgYW4gY2xhc3MgZm9yIGFuIGFycmF5CkBAIC0yMzQsNyArMjM0LDcg
QEAKICAgICAgIC8vIGRpc3Bvc2UgYWxsIGVudGlyZXMgb2YgYW4gYXJyYXkKICAgICAgIGlmIChx
eC5DbGFzcy5pbXBsZW1lbnRzSW50ZXJmYWNlKGl0ZW0sIHF4LmRhdGEuSUxpc3REYXRhKSkgewog
ICAgICAgICAvLyBkaXNwb3NlIGFsbCBpdGVtcyBvZiB0aGUgYXJyYXkKLSAgICAgICAgZm9yICh2
YXIgaT0wOyBpIDwgaXRlbS5nZXRMZW5ndGgoKTsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9
MCwgbCA9IGl0ZW0uZ2V0TGVuZ3RoKCk7IGkgPCBsOyBpKyspIHsKICAgICAgICAgICB0aGlzLl9f
ZGlzcG9zZUl0ZW0oaXRlbS5nZXRJdGVtKGkpKTsKICAgICAgICAgfTsKICAgICAgIH0KQEAgLTI4
OSw3ICsyODksNyBAQAogCiAgICAgICB9IGVsc2UgaWYgKHF4LmxhbmcuVHlwZS5pc0FycmF5KGRh
dGEpKSB7CiAgICAgICAgIHZhciBhcnJheSA9IG5ldyBxeC5kYXRhLkFycmF5KCk7Ci0gICAgICAg
IGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZh
ciBpID0gMCwgbCA9IGRhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgYXJyYXku
cHVzaCh0aGlzLnRvTW9kZWwoZGF0YVtpXSkpOwogICAgICAgICB9CiAgICAgICAgIHJldHVybiBh
cnJheTsKSW5kZXg6IGRhdGEvQXJyYXkuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gZGF0YS9BcnJheS5qcwko
cmV2aXNpb24gMjM4ODkpCisrKyBkYXRhL0FycmF5LmpzCSh3b3JraW5nIGNvcHkpCkBAIC01Myw3
ICs1Myw3IEBACiAgICAgfSBlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkgewogICAgICAg
Ly8gY3JlYXRlIGFuIGVtcHR5IGFycmF5IGFuZCBnbyB0aHJvdWdoIGV2ZXJ5IGFyZ3VtZW50IGFu
ZCBwdXNoIGl0CiAgICAgICB0aGlzLl9fYXJyYXkgPSBbXTsKLSAgICAgIGZvciAodmFyIGkgPSAw
OyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9
IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fX2FycmF5LnB1
c2goYXJndW1lbnRzW2ldKTsKICAgICAgIH0KIApAQCAtNzEsNyArNzEsNyBAQAogICAgIH0KIAog
ICAgIC8vIHByb3BhZ2F0ZSBjaGFuZ2VzCi0gICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX19hcnJh
eS5sZW5ndGg7IGkrKykgeworICAgIGZvciAodmFyIGk9MCwgbCA9IHRoaXMuX19hcnJheS5sZW5n
dGg7IGk8bDsgaSsrKSB7CiAgICAgICB0aGlzLl9hcHBseUV2ZW50UHJvcGFnYXRpb24odGhpcy5f
X2FycmF5W2ldLCBudWxsLCBpKTsKICAgICB9CiAKQEAgLTE3OSw3ICsxNzksNyBAQAogICAgICAq
IEByZXR1cm4ge051bWJlcn0gVGhlIG5ldyBsZW5ndGggb2YgdGhlIGFycmF5LgogICAgICAqLwog
ICAgIHB1c2g6IGZ1bmN0aW9uKHZhcmFyZ3MpIHsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwg
YXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3Vt
ZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fX2FycmF5LnB1c2goYXJn
dW1lbnRzW2ldKTsKICAgICAgICAgdGhpcy5fX3VwZGF0ZUxlbmd0aCgpOwogICAgICAgICAvLyBh
cHBseSB0byBldmVyeSBwdXNoZWQgaXRlbSBhbiBldmVudCBsaXN0ZW5lciBmb3IgdGhlIGJ1YmJs
aW5nCkBAIC0yOTEsNyArMjkxLDcgQEAKICAgICAgICAgKTsKICAgICAgIH0KICAgICAgIC8vIGFk
ZCBsaXN0ZW5lcnMKLSAgICAgIGZvciAodmFyIGkgPSAyOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsg
aSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMiwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKICAgICAgICAgdGhpcy5fcmVnaXN0ZXJFdmVudENoYWluaW5nKGFyZ3VtZW50c1tp
XSwgbnVsbCwgc3RhcnRJbmRleCArIGkpOwogICAgICAgfQogICAgICAgdGhpcy5maXJlRGF0YUV2
ZW50KCJjaGFuZ2VCdWJibGUiLCB7CkBAIC0yOTksNyArMjk5LDcgQEAKICAgICAgIH0pOwogCiAg
ICAgICAvLyByZW1vdmUgdGhlIGxpc3RlbmVycwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBy
ZXR1cm5BcnJheS5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSByZXR1
cm5BcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fYXBwbHlFdmVudFBy
b3BhZ2F0aW9uKG51bGwsIHJldHVybkFycmF5W2ldLCBpKTsKICAgICAgIH0KICAgICAgIHJldHVy
biAobmV3IHF4LmRhdGEuQXJyYXkocmV0dXJuQXJyYXkpKTsKQEAgLTUyMyw3ICs1MjMsNyBAQAog
ICAgICAqLwogICAgIHJlbW92ZUFsbCA6IGZ1bmN0aW9uKCkgewogICAgICAgLy8gcmVtb3ZlIGFs
bCBwb3NzaWJsZSBhZGRlZCBldmVudCBsaXN0ZW5lcnMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgdGhpcy5fX2FycmF5Lmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9
IHRoaXMuX19hcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fYXBwbHlF
dmVudFByb3BhZ2F0aW9uKG51bGwsIHRoaXMuX19hcnJheVtpXSwgaSk7CiAgICAgICB9CiAKQEAg
LTU2OCw3ICs1NjgsNyBAQAogICAgICAgfQogCiAgICAgICAvLyBhZGQgYSBsaXN0ZW5lciB0byB0
aGUgbmV3IGl0ZW1zCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsr
KSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbD1hcnJheS5sZW5ndGg7IGk8bDsgaSsrKSB7CiAg
ICAgICAgIHRoaXMuX2FwcGx5RXZlbnRQcm9wYWdhdGlvbihhcnJheVtpXSwgbnVsbCwgdGhpcy5f
X2FycmF5Lmxlbmd0aCArIGkpOwogICAgICAgfQogICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2gu
YXBwbHkodGhpcy5fX2FycmF5LCBhcnJheSk7CkBAIC02MTksNyArNjE5LDcgQEAKICAgICAgICAg
cmV0dXJuIGZhbHNlOwogICAgICAgfQogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMu
bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwg
bDsgaSsrKQogICAgICAgewogICAgICAgICBpZiAodGhpcy5nZXRJdGVtKGkpICE9PSBhcnJheS5n
ZXRJdGVtKGkpKSB7CiAgICAgICAgICAgcmV0dXJuIGZhbHNlOwpAQCAtNjM5LDcgKzYzOSw3IEBA
CiAgICAgc3VtIDogZnVuY3Rpb24oKQogICAgIHsKICAgICAgIHZhciByZXN1bHQgPSAwOwotICAg
ICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZh
ciBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgIHJlc3VsdCAr
PSB0aGlzLmdldEl0ZW0oaSk7CiAgICAgICB9CiAKQEAgLTY1OCw3ICs2NTgsNyBAQAogICAgIHsK
ICAgICAgIHZhciByZXN1bHQgPSB0aGlzLmdldEl0ZW0oMCk7CiAKLSAgICAgIGZvciAodmFyIGkg
PSAxOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGkgPSAxLCBsID0gdGhp
cy5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmICh0aGlzLmdldEl0ZW0o
aSkgPiByZXN1bHQpIHsKICAgICAgICAgICByZXN1bHQgPSB0aGlzLmdldEl0ZW0oaSk7CkBAIC02
ODAsNyArNjgwLDcgQEAKICAgICB7CiAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5nZXRJdGVtKDAp
OwogCi0gICAgICBmb3IgKHZhciBpID0gMTsgaSA8IHRoaXMubGVuZ3RoOyBpKyspCisgICAgICBm
b3IgKHZhciBpID0gMSwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgewogICAg
ICAgICBpZiAodGhpcy5nZXRJdGVtKGkpIDwgcmVzdWx0KSB7CiAgICAgICAgICAgcmVzdWx0ID0g
dGhpcy5nZXRJdGVtKGkpOwpAQCAtNzAwLDcgKzcwMCw3IEBACiAgICAgICovCiAgICAgZm9yRWFj
aCA6IGZ1bmN0aW9uKGNhbGxiYWNrLCBjb250ZXh0KQogICAgIHsKLSAgICAgIGZvciAodmFyIGkg
PSAwOyBpIDwgdGhpcy5fX2FycmF5Lmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0g
MCwgbCA9IHRoaXMuX19hcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgY2FsbGJh
Y2suY2FsbChjb250ZXh0LCB0aGlzLl9fYXJyYXlbaV0pOwogICAgICAgfQogICAgIH0sCkBAIC03
MzIsNyArNzMyLDcgQEAKICAgKi8KIAogICBkZXN0cnVjdCA6IGZ1bmN0aW9uKCkgewotICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2FycmF5Lmxlbmd0aDsgaSsrKSB7CisgICAgZm9yICh2
YXIgaSA9IDAsIGwgPSB0aGlzLl9fYXJyYXkubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICB0
aGlzLl9hcHBseUV2ZW50UHJvcGFnYXRpb24obnVsbCwgdGhpcy5fX2FycmF5W2ldLCBpKTsKICAg
ICB9CiAKSW5kZXg6IGZ4L2VmZmVjdC9jb3JlL1BhcmFsbGVsLmpzCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGZ4
L2VmZmVjdC9jb3JlL1BhcmFsbGVsLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGZ4L2VmZmVjdC9j
b3JlL1BhcmFsbGVsLmpzCSh3b3JraW5nIGNvcHkpCkBAIC04MSw3ICs4MSw3IEBACiAKICAgICAg
IHZhciBlZmZlY3RzID0gdGhpcy5fX2VmZmVjdHM7CiAKLSAgICAgIGZvcih2YXIgaT0wOyBpPGVm
ZmVjdHMubGVuZ3RoOyBpKyspCisgICAgICBmb3IodmFyIGk9MDsgbD1lZmZlY3RzLmxlbmd0aDsg
aTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGVmZmVjdHNbaV0ucmVuZGVyKDEuMCk7CiAgICAg
ICAgIGVmZmVjdHNbaV0uY2FuY2VsKCk7CkBAIC0xMDgsNyArMTA4LDcgQEAKIAogICAgICAgdmFy
IGVmZmVjdHMgPSB0aGlzLl9fZWZmZWN0czsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGVmZmVj
dHMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1lZmZlY3RzLmxlbmd0aDsg
aTxsOyBpKyspIHsKICAgICAgICAgZWZmZWN0c1tpXS5yZW5kZXIocG9zaXRpb24pOwogICAgICAg
fQogICAgIH0sCkBAIC0xMjIsNyArMTIyLDcgQEAKIAogICAgICAgdmFyIGVmZmVjdHMgPSB0aGlz
Ll9fZWZmZWN0czsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGVmZmVjdHMubGVuZ3RoOyBpKysp
IHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1lZmZlY3RzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAg
ICAgICAgZWZmZWN0c1tpXS5zdGFydCgpOwogICAgICAgfQogICAgIH0KSW5kZXg6IGJvbS9Gb250
LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KLS0tIGJvbS9Gb250LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGJvbS9G
b250LmpzCSh3b3JraW5nIGNvcHkpCkBAIC03Nyw3ICs3Nyw3IEBACiAgICAgICB2YXIgbmFtZSA9
IFtdOwogICAgICAgdmFyIHBhcnQ7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxwYXJ0cy5sZW5n
dGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbCA9IHBhcnRzLmxlbmd0aDsgaTxsOyBpKysp
CiAgICAgICB7CiAgICAgICAgIHN3aXRjaChwYXJ0ID0gcGFydHNbaV0pCiAgICAgICAgIHsKSW5k
ZXg6IGJvbS9lbGVtZW50L0NsYXNzLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGJvbS9lbGVtZW50L0NsYXNz
LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGJvbS9lbGVtZW50L0NsYXNzLmpzCSh3b3JraW5nIGNv
cHkpCkBAIC05NSw3ICs5NSw3IEBACiAgICAgewogICAgICAgIm5hdGl2ZSIgOiBmdW5jdGlvbihl
bGVtZW50LCBjbGFzc2VzKQogICAgICAgewotICAgICAgICBmb3IgKHZhciBpPTA7IGk8Y2xhc3Nl
cy5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBpPTAsIGwgPSBjbGFzc2VzLmxlbmd0
aDsgaTxsOyBpKyspIHsKICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3Nlc1tp
XSkKICAgICAgICAgfQogICAgICAgICByZXR1cm4gZWxlbWVudC5jbGFzc05hbWU7CkBAIC0yMDEs
NyArMjAxLDcgQEAKICAgICB7CiAgICAgICAibmF0aXZlIiA6IGZ1bmN0aW9uKGVsZW1lbnQsIGNs
YXNzZXMpCiAgICAgICB7Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxjbGFzc2VzLmxlbmd0aDsg
aSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9MCwgbCA9IGNsYXNzZXMubGVuZ3RoOyBpPGw7IGkr
KykgewogICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzW2ldKQogICAg
ICAgICB9CiAgICAgICAgIHJldHVybiBlbGVtZW50LmNsYXNzTmFtZTsKSW5kZXg6IGJvbS9TZWxl
Y3Rvci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSBib20vU2VsZWN0b3IuanMJKHJldmlzaW9uIDIzODg5KQor
KysgYm9tL1NlbGVjdG9yLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0zMjAsNyArMzIwLDcgQEAKICAg
ICByZXN1bHRzLnNvcnQoc29ydE9yZGVyKTsKIAogICAgIGlmICggaGFzRHVwbGljYXRlICkgewot
ICAgICAgZm9yICggdmFyIGkgPSAxOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKyApIHsKKyAgICAg
IGZvciAoIHZhciBpID0gMSwgbCA9IHJlc3VsdHMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewogICAg
ICAgICBpZiAoIHJlc3VsdHNbaV0gPT09IHJlc3VsdHNbaS0xXSApIHsKICAgICAgICAgICByZXN1
bHRzLnNwbGljZShpLS0sIDEpOwogICAgICAgICB9CkBAIC0xMjQwLDQgKzEyNDAsNCBAQAogICBy
ZXR1cm4gU2l6emxlKHNlbGVjdG9yLCBudWxsLCBudWxsLCBzZXQpOwogfTsKIAotfSkoKTsKXCBO
byBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KSgpOwpJbmRleDogYm9tL2h0bWxhcmVhL0h0bWxB
cmVhLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KLS0tIGJvbS9odG1sYXJlYS9IdG1sQXJlYS5qcwkocmV2aXNpb24g
MjM4ODkpCisrKyBib20vaHRtbGFyZWEvSHRtbEFyZWEuanMJKHdvcmtpbmcgY29weSkKQEAgLTI5
Miw3ICsyOTIsNyBAQAogICAgICAgdmFyIGEgPSBzdHIuc3BsaXQoIjsiKTsKICAgICAgIHZhciBp
OwogCi0gICAgICBmb3IgKGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAoaSA9
IDAsIGwgPSBhLmxlbmd0aDsgaSA8IGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHN0eWxl
ID0gYVtpXSwgc2VwID0gc3R5bGUuaW5kZXhPZigiOiIpOwogCkBAIC0xMjE3LDcgKzEyMTcsNyBA
QAogICAgICAgLy8gRWxlbWVudCBub2RlCiAgICAgICBpZihlbGVtZW50Lmhhc0NoaWxkTm9kZXMp
CiAgICAgICB7Ci0gICAgICAgIGZvcih2YXIgaT0wOyBpPGVsZW1lbnQuY2hpbGROb2Rlcy5sZW5n
dGg7IGkrKykKKyAgICAgICAgZm9yKHZhciBpPTAsIGw9ZWxlbWVudC5jaGlsZE5vZGVzLmxlbmd0
aDsgaTxsOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICB0bXAgPSB0aGlzLl9mZXRjaFRleHRO
b2RlcyhlbGVtZW50LmNoaWxkTm9kZXNbaV0pOwogICAgICAgICAgIHF4LmxhbmcuQXJyYXkuYXBw
ZW5kKHJlc3VsdCwgdG1wKTsKSW5kZXg6IGJvbS9odG1sYXJlYS9tYW5hZ2VyL0NvbW1hbmQuanMK
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQotLS0gYm9tL2h0bWxhcmVhL21hbmFnZXIvQ29tbWFuZC5qcwkocmV2aXNpb24g
MjM4ODkpCisrKyBib20vaHRtbGFyZWEvbWFuYWdlci9Db21tYW5kLmpzCSh3b3JraW5nIGNvcHkp
CkBAIC0xNDk1LDcgKzE0OTUsNyBAQAogICAgICB7CiAgICAgICAgdmFyIGVsZW0sIHBhcmVudERl
Y29yYXRpb24sIHBhcmVudFN0eWxlVmFsdWU7CiAKLSAgICAgICBmb3IodmFyIGk9MDsgaTxwYXJl
bnRzLmxlbmd0aDsgaSsrKQorICAgICAgIGZvcih2YXIgaT0wOyBsPXBhcmVudHMubGVuZ3RoOyBp
PGw7IGkrKykKICAgICAgICB7CiAgICAgICAgICBlbGVtID0gcGFyZW50c1tpXTsKIApAQCAtMTU0
OSwxMSArMTU0OSwxMSBAQAogICAgICAgIC8vIElmIGl0IGlzIHRoZSA8Ym9keT4gdGFnLCBhIHdo
b2xlIGJ1bmNoIG9mIGVsZW1lbnRzIGhhcyBiZWVuIHNlbGVjdGVkCiAgICAgICAgaWYgKGVsZW1l
bnQudGFnTmFtZSA9PSAiQk9EWSIpCiAgICAgICAgewotICAgICAgICAgZm9yICh2YXIgaT0wOyBp
PGxpc3RUeXBlcy5sZW5ndGg7IGkrKykKKyAgICAgICAgIGZvciAodmFyIGk9MCwgbCA9IGxpc3RU
eXBlcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgICAgewogICAgICAgICAgICAvLyBTZWFyY2gg
Zm9yIGxpc3QgZWxlbWVudHMuLi4KICAgICAgICAgICAgdG1wID0gZWxlbWVudC5nZXRFbGVtZW50
c0J5VGFnTmFtZShsaXN0VHlwZXNbaV0pOwotICAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8dG1w
Lmxlbmd0aDsgaisrKQorICAgICAgICAgICBmb3IgKHZhciBqPTAsIGwgPSB0bXAubGVuZ3RoOyBq
PGw7IGorKykKICAgICAgICAgICAgewogICAgICAgICAgICAgIGlmICh0bXBbal0pIHsKICAgICAg
ICAgICAgICAgIGxpc3RzLnB1c2godG1wW2pdKTsKQEAgLTE1NjksNyArMTU2OSw3IEBACiAgICAg
ICAgaWYobGlzdHMubGVuZ3RoID4gMCkKICAgICAgICB7CiAgICAgICAgICAvLyBXYWxrIHRocm91
Z2ggYWxsIGxpc3QgZWxlbWVudHMgYW5kIGNoZWNrIGlmIHRoZXkgYXJlIHNlbGVjdGVkCi0gICAg
ICAgICBmb3IodmFyIGk9MDsgaTxsaXN0cy5sZW5ndGg7IGkrKykKKyAgICAgICAgIGZvcih2YXIg
aT0wLCBsID0gbGlzdHMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgICAgIHsKICAgICAgICAgICAg
dmFyIGxpc3RFbGVtZW50ID0gbGlzdHNbaV07CiAKQEAgLTE1ODcsNyArMTU4Nyw3IEBACiAgICAg
ICAgICAgICAgICBzZWwuY29udGFpbnNOb2RlKGxpc3RFbGVtZW50LCBmYWxzZSk7CiAKICAgICAg
ICAgICAgLyogV2FsayB0aHJvdWdoIGFsbCBsaXN0IGVudHJpZXMgaW4gbGlzdCBlbGVtZW50OiAq
LwotICAgICAgICAgICBmb3Ioaj0wOyBqPGxpc3RFbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBq
KyspCisgICAgICAgICAgIGZvcihqPTA7IGw9bGlzdEVsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGg7
IGo8bDsgaisrKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdmFyIGxpc3RFbnRyeUVsZW1l
bnQgPSBsaXN0RWxlbWVudC5jaGlsZE5vZGVzW2pdOwogCkBAIC0xNjM5LDcgKzE2MzksNyBAQAog
CiAgICAgICAgICAvKiBHZXQgYWxsIHBhcmVudHMgKi8KICAgICAgICAgIHZhciBwYXJlbnRzID0g
cXguZG9tLkhpZXJhcmNoeS5nZXRBbmNlc3RvcnMocGFyZW50RWxlbWVudCk7Ci0gICAgICAgICBm
b3IoaT0wOyBpPHBhcmVudHMubGVuZ3RoOyBpKyspCisgICAgICAgICBmb3IoaT0wOyBsPXBhcmVu
dHMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgICAgIHsKIAogICAgICAgICAgICAvKiBFbGVtZW50
IGlzIGEgbGlzdCBlbnRyeSAqLwpAQCAtMTcxMiw3ICsxNzEyLDcgQEAKICAgICAgICAgICAgICog
bmV2ZXIgd29yayBvdXQgY29ycmVjdGx5LgogICAgICAgICAgICAgKi8KICAgICAgICAgICAgdmFy
IHNwYW5zID0gcGFyZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzcGFuIik7Ci0gICAgICAgICAg
IGZvciAoaT0wOyBpPHNwYW5zLmxlbmd0aDsgaSsrKSB7CisgICAgICAgICAgIGZvciAoaT0wLCBs
ID0gc3BhbnMubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICAgICAgIGlmIChzcGFuc1tpXS5z
dHlsZS5mb250U2l6ZSkKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzcGFuc1tpXS5z
dHlsZS5mb250U2l6ZSA9IG51bGw7CkBAIC0yMjE2LDQgKzIyMTYsNCBAQAogICAgIHRoaXMuX19k
b2MgPSB0aGlzLl9fZWRpdG9ySW5zdGFuY2UgPSB0aGlzLl9jb21tYW5kcyA9IG51bGw7CiAgICAg
dGhpcy5fX2ludmFsaWRGb2N1c0NvbW1hbmRzID0gdGhpcy5fX2ZvbnRTaXplTmFtZXMgPSBudWxs
OwogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IGJvbS9D
b2xsZWN0aW9uLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGJvbS9Db2xsZWN0aW9uLmpzCShyZXZpc2lvbiAy
Mzg4OSkKKysrIGJvbS9Db2xsZWN0aW9uLmpzCSh3b3JraW5nIGNvcHkpCkBAIC02MSwxMSArNjEs
MTEgQEAKICAgewogICAgIHJldHVybiBmdW5jdGlvbihhcmcxLCBhcmcyLCBhcmczLCBhcmc0LCBh
cmc1LCBhcmc2KQogICAgIHsKLSAgICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDsKLSAgICAg
IGlmIChsZW5ndGggPiAwKQorICAgICAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoOworICAgICAgaWYg
KGxlbiA+IDApCiAgICAgICB7CiAgICAgICAgIHZhciBwdG4gPSBjbGF6elttZXRob2RdOwotICAg
ICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MDsg
aTxsZW47IGkrKykKICAgICAgICAgewogICAgICAgICAgIGlmICh0aGlzW2ldLm5vZGVUeXBlID09
PSAxKSB7CiAgICAgICAgICAgICBwdG4uY2FsbChjbGF6eiwgdGhpc1tpXSwgYXJnMSwgYXJnMiwg
YXJnMywgYXJnNCwgYXJnNSwgYXJnNik7CkluZGV4OiBib20vY2xpZW50L0ZsYXNoLmpzCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLS0tIGJvbS9jbGllbnQvRmxhc2guanMJKHJldmlzaW9uIDIzODg5KQorKysgYm9tL2Ns
aWVudC9GbGFzaC5qcwkod29ya2luZyBjb3B5KQpAQCAtOTIsNyArOTIsNyBAQAogICAgICAgICB2
YXIgc3BsaXRJbnB1dCA9IGlucHV0LnNwbGl0KCIuIik7CiAgICAgICAgIHZhciBzeXN0ZW0gPSB0
aGlzLkZVTExWRVJTSU9OLnNwbGl0KCIuIik7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPHNw
bGl0SW5wdXQubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MCwgbCA9c3BsaXRJbnB1
dC5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIGRpZmYgPSBwYXJz
ZUludChzeXN0ZW1baV0pIC0gcGFyc2VJbnQoc3BsaXRJbnB1dFtpXSk7CiAgICAgICAgICAgaWYg
KGRpZmYgPiAwKSB7CkluZGV4OiB1aS9jb250cm9sL0NvbG9yUG9wdXAuanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gdWkvY29udHJvbC9Db2xvclBvcHVwLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL2NvbnRy
b2wvQ29sb3JQb3B1cC5qcwkod29ya2luZyBjb3B5KQpAQCAtMjIwLDcgKzIyMCw3IEBACiAgICAg
ICAgIHRoaXMuX19ib3hlc1t0YWJsZUlkXSA9IGJveDsKICAgICAgICAgdGhpcy5hZGQoYm94KTsK
IAotICAgICAgICBmb3IgKHZhciBpPTA7IGk8dGhpcy5fX2ZpZWxkTnVtYmVyOyBpKyspCisgICAg
ICAgIGZvciAodmFyIGk9MCwgbD10aGlzLl9fZmllbGROdW1iZXI7IGk8bDsgaSsrKQogICAgICAg
ICB7CiAgICAgICAgICAgZmllbGQgPSB0aGlzLmdldENoaWxkQ29udHJvbCgiZmllbGQjIiArIChq
KyspKTsKICAgICAgICAgICBmaWVsZC5zZXRCYWNrZ3JvdW5kQ29sb3IodGFibGUudmFsdWVzW2ld
IHx8IG51bGwpOwpAQCAtMzI4LDcgKzMyOCw3IEBACiAgICAgICAvLyBTeW5jIHRvIHZpc2libGUg
ZmllbGRzCiAgICAgICB2YXIgdkZpZWxkcyA9IHZSZWNlbnRCb3guZ2V0Q2hpbGRyZW4oKTsKIAot
ICAgICAgZm9yICh2YXIgaT0wOyBpPHZGaWVsZHMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAo
dmFyIGk9MCwgbD12RmllbGRzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdkZpZWxkc1tp
XS5zZXRCYWNrZ3JvdW5kQ29sb3IodlJlY2VudFRhYmxlW2ldIHx8IG51bGwpOwogICAgICAgfQog
ICAgIH0sCkBAIC01MDIsNCArNTAyLDQgQEAKICAgICB0aGlzLl9kaXNwb3NlT2JqZWN0cygiX19j
b2xvclNlbGVjdG9yV2luZG93IiwgIl9fY29sb3JTZWxlY3RvciIpOwogICAgIHRoaXMuX3RhYmxl
cyA9IHRoaXMuX19ib3hlcyA9IG51bGw7CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9m
IGZpbGUKK30pOwpJbmRleDogdWkvdmlydHVhbC9jZWxsL0NlbGwuanMKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0g
dWkvdmlydHVhbC9jZWxsL0NlbGwuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdmlydHVhbC9j
ZWxsL0NlbGwuanMJKHdvcmtpbmcgY29weSkKQEAgLTQ1MSw3ICs0NTEsNyBAQAogICAgIHsKICAg
ICAgIHZhciBQcm9wZXJ0eVV0aWwgPSBxeC51dGlsLlByb3BlcnR5VXRpbDsKICAgICAgIHZhciB0
aGVtYWJsZVByb3BlcnRpZXMgPSB0aGlzLl9nZXRDc3NQcm9wZXJ0aWVzKCk7Ci0gICAgICBmb3Ig
KHZhciBpPTA7IGk8dGhlbWFibGVQcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpPTAsIGw9dGhlbWFibGVQcm9wZXJ0aWVzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAg
ICAgUHJvcGVydHlVdGlsLmRlbGV0ZVRoZW1lVmFsdWUodGhpcywgdGhlbWFibGVQcm9wZXJ0aWVz
W2ldKTsKICAgICAgIH0KICAgICB9LApAQCAtNTAyLDcgKzUwMiw3IEBACiAgICAgICB2YXIgUHJv
cGVydHlVdGlsID0gcXgudXRpbC5Qcm9wZXJ0eVV0aWw7CiAKICAgICAgIHZhciB0aGVtZVZhbHVl
cyA9IHt9OwotICAgICAgZm9yICh2YXIgaT0wOyBpPHByb3BlcnRpZXMubGVuZ3RoOyBpKyspCisg
ICAgICBmb3IgKHZhciBpPTAsIGw9cHJvcGVydGllcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAg
ewogICAgICAgICB2YXIga2V5ID0gcHJvcGVydGllc1tpXTsKICAgICAgICAgdmFyIHZhbHVlID0g
UHJvcGVydHlVdGlsLmdldFRoZW1lVmFsdWUodGhpcywga2V5KTsKSW5kZXg6IHVpL3ZpcnR1YWwv
Zm9ybS9MaXN0LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3ZpcnR1YWwvZm9ybS9MaXN0LmpzCShyZXZp
c2lvbiAyMzg4OSkKKysrIHVpL3ZpcnR1YWwvZm9ybS9MaXN0LmpzCSh3b3JraW5nIGNvcHkpCkBA
IC0zOTQsNyArMzk0LDcgQEAKICAgICAgIH0KIAogICAgICAgdmFyIHdpZGdldHMgPSB0aGlzLl9f
Y2VsbExheWVyLmdldENoaWxkcmVuKCk7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8d2lkZ2V0cy5s
ZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD13aWRnZXRzLmxlbmd0aDsgaTxsOyBp
KyspCiAgICAgICB7CiAgICAgICAgIHZhciB3aWRnZXQgPSB3aWRnZXRzW2ldOwogICAgICAgICB2
YXIgY2VsbFJvdyA9IHdpZGdldC5nZXRVc2VyRGF0YSgiY2VsbC5yb3ciKTsKSW5kZXg6IHVpL3Zp
cnR1YWwvZm9ybS9MaXN0Q29udHJvbGxlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS92aXJ0dWFsL2Zv
cm0vTGlzdENvbnRyb2xsZXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdmlydHVhbC9mb3Jt
L0xpc3RDb250cm9sbGVyLmpzCSh3b3JraW5nIGNvcHkpCkBAIC01MTMsNyArNTEzLDcgQEAKICAg
ICAgIHZhciB0YXJnZXRTZWxlY3Rpb24gPSB0YXJnZXQuZ2V0U2VsZWN0aW9uTWFuYWdlcigpLmdl
dFNlbGVjdGlvbigpOwogICAgICAgdmFyIHNlbGVjdGlvbiA9IFtdOwogCi0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IHRhcmdldFNlbGVjdGlvbi5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2
YXIgaSA9IDAsIGwgPSB0YXJnZXRTZWxlY3Rpb24ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAg
ICAgIHZhciBtb2RlbEl0ZW0gPSB0aGlzLl9nZXRSb3dEYXRhKHRhcmdldFNlbGVjdGlvbltpXSk7
CiAgICAgICAgIHNlbGVjdGlvbi5wdXNoKG1vZGVsSXRlbSk7CiAgICAgICB9CkBAIC01NjgsOCAr
NTY4LDggQEAKICAgICAgKi8KICAgICBfc3luY1Jvd0NvdW50OiBmdW5jdGlvbigpCiAgICAgewot
ICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuZ2V0Um93Q291bnQoKTsKLSAgICAgIHRoaXMuZ2V0VGFy
Z2V0KCkuc2V0Um93Q291bnQobGVuZ3RoKTsKKyAgICAgIHZhciBsZW4gPSB0aGlzLmdldFJvd0Nv
dW50KCk7CisgICAgICB0aGlzLmdldFRhcmdldCgpLnNldFJvd0NvdW50KGxlbik7CiAgICAgfSwK
IAogCkluZGV4OiB1aS92aXJ0dWFsL2NvcmUvQXhpcy5qcwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS92aXJ0
dWFsL2NvcmUvQXhpcy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS92aXJ0dWFsL2NvcmUvQXhp
cy5qcwkod29ya2luZyBjb3B5KQpAQCAtMjA3LDcgKzIwNyw3IEBACiAgICAgICB2YXIgcmFuZ2Vz
ID0gW107CiAgICAgICB2YXIgY29ycmVjdGlvblN1bSA9IDA7CiAKLSAgICAgIGZvciAodmFyIGk9
MDsgaTxpbmRleGVzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPWluZGV4ZXMu
bGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIGluZGV4ID0gaW5kZXhlc1tp
XTsKICAgICAgICAgaWYgKGluZGV4ID49IGl0ZW1Db3VudCkgewpJbmRleDogdWkvdmlydHVhbC9j
b3JlL1BhbmUuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdmlydHVhbC9jb3JlL1BhbmUuanMJKHJldmlz
aW9uIDIzODg5KQorKysgdWkvdmlydHVhbC9jb3JlL1BhbmUuanMJKHdvcmtpbmcgY29weSkKQEAg
LTIyOSw3ICsyMjksNyBAQAogICAgIGdldFZpc2libGVMYXllcnMgOiBmdW5jdGlvbigpCiAgICAg
ewogICAgICAgdmFyIGxheWVycyA9IFtdOwotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX19s
YXllcnMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5fX2xheWVycy5s
ZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgbGF5ZXIgPSB0aGlzLl9fbGF5
ZXJzW2ldOwogICAgICAgICBpZiAobGF5ZXIuaXNWaXNpYmxlKCkpIHsKQEAgLTc4Niw3ICs3ODYs
NyBAQAogICAgICAgLy8gVE9ETzogZGVidWdnaW5nIGNvZGUKICAgICAgIHRoaXMuREVCVUcgJiYg
cXgudWkuY29yZS5xdWV1ZS5NYW5hZ2VyLmZsdXNoKCk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsg
aTx0aGlzLl9fbGF5ZXJzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMu
X19sYXllcnMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHN0YXJ0ID0g
bmV3IERhdGUoKTsKIApJbmRleDogdWkvdmlydHVhbC9sYXllci9IdG1sQ2VsbC5qcwo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09Ci0tLSB1aS92aXJ0dWFsL2xheWVyL0h0bWxDZWxsLmpzCShyZXZpc2lvbiAyMzg4OSkKKysr
IHVpL3ZpcnR1YWwvbGF5ZXIvSHRtbENlbGwuanMJKHdvcmtpbmcgY29weSkKQEAgLTkwLDEyICs5
MCwxMiBAQAogICAgICAgdmFyIHRvcCA9IDA7CiAgICAgICB2YXIgcm93ID0gZmlyc3RSb3c7CiAg
ICAgICB2YXIgY29sdW1uID0gZmlyc3RDb2x1bW47Ci0gICAgICBmb3IgKHZhciB5PTA7IHk8cm93
U2l6ZXMubGVuZ3RoOyB5KyspCisgICAgICBmb3IgKHZhciB5PTAsIGw9cm93U2l6ZXMubGVuZ3Ro
OyB5PGw7IHkrKykKICAgICAgIHsKICAgICAgICAgdmFyIGxlZnQgPSAwOwogICAgICAgICB2YXIg
Y29sdW1uID0gZmlyc3RDb2x1bW47CiAgICAgICAgIHZhciBoZWlnaHQgPSByb3dTaXplc1t5XQot
ICAgICAgICBmb3IodmFyIHg9MDsgeDxjb2x1bW5TaXplcy5sZW5ndGg7IHgrKykKKyAgICAgICAg
Zm9yKHZhciB4PTAsIGw9Y29sdW1uU2l6ZXMubGVuZ3RoOyB4PGw7IHgrKykKICAgICAgICAgewog
ICAgICAgICAgIHZhciB3aWR0aCA9IGNvbHVtblNpemVzW3hdOwogICAgICAgICAgIHZhciBjZWxs
UHJvcGVydGllcyA9IHRoaXMuX2NlbGxQcm92aWRlci5nZXRDZWxsUHJvcGVydGllcyhyb3csIGNv
bHVtbik7CkBAIC0xMzQsNCArMTM0LDQgQEAKICAgZGVzdHJ1Y3QgOiBmdW5jdGlvbigpIHsKICAg
ICB0aGlzLl9jZWxsUHJvdmlkZXIgPSBudWxsOwogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVu
ZCBvZiBmaWxlCit9KTsKSW5kZXg6IHVpL3ZpcnR1YWwvbGF5ZXIvV2lkZ2V0Q2VsbFNwYW4uanMK
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQotLS0gdWkvdmlydHVhbC9sYXllci9XaWRnZXRDZWxsU3Bhbi5qcwkocmV2aXNp
b24gMjM4ODkpCisrKyB1aS92aXJ0dWFsL2xheWVyL1dpZGdldENlbGxTcGFuLmpzCSh3b3JraW5n
IGNvcHkpCkBAIC0zMDQsNyArMzA0LDcgQEAKICAgZGVzdHJ1Y3QgOiBmdW5jdGlvbigpCiAgIHsK
ICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRDaGlsZHJlbigpOwotICAgIGZvciAodmFyIGk9
MDsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykgeworICAgIGZvciAodmFyIGk9MCwgbD1jaGlsZHJl
bi5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICBjaGlsZHJlbltpXS5kaXNwb3NlKCk7CiAgICAg
fQogCkluZGV4OiB1aS92aXJ0dWFsL2xheWVyL0h0bWxDZWxsU3Bhbi5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB1aS92aXJ0dWFsL2xheWVyL0h0bWxDZWxsU3Bhbi5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1
aS92aXJ0dWFsL2xheWVyL0h0bWxDZWxsU3Bhbi5qcwkod29ya2luZyBjb3B5KQpAQCAtMTM5LDcg
KzEzOSw3IEBACiAgICAgICB7CiAgICAgICAgIC8vIGNyZWF0ZSBlbXB0eSBkdW1teSBtYXAKICAg
ICAgICAgc3Bhbk1hcCA9IFtdOwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8cm93U2l6ZXMubGVu
Z3RoOyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaT0wLCBsPXJvd1NpemVzLmxlbmd0aDsgaTxs
OyBpKyspIHsKICAgICAgICAgICBzcGFuTWFwW2ZpcnN0Um93K2ldID0gW107CiAgICAgICAgIH0K
ICAgICAgIH0KQEAgLTE0OSwxMiArMTQ5LDEyIEBACiAgICAgICB2YXIgdG9wID0gMDsKICAgICAg
IHZhciByb3cgPSBmaXJzdFJvdzsKICAgICAgIHZhciBjb2x1bW4gPSBmaXJzdENvbHVtbjsKLSAg
ICAgIGZvciAodmFyIHg9MDsgeDxyb3dTaXplcy5sZW5ndGg7IHgrKykKKyAgICAgIGZvciAodmFy
IHg9MCwgbD1yb3dTaXplcy5sZW5ndGg7IHg8bDsgeCsrKQogICAgICAgewogICAgICAgICB2YXIg
bGVmdCA9IDA7CiAgICAgICAgIHZhciBjb2x1bW4gPSBmaXJzdENvbHVtbjsKICAgICAgICAgdmFy
IGhlaWdodCA9IHJvd1NpemVzW3hdCi0gICAgICAgIGZvcih2YXIgeT0wOyB5PGNvbHVtblNpemVz
Lmxlbmd0aDsgeSsrKQorICAgICAgICBmb3IodmFyIHk9MCwgbD1jb2x1bW5TaXplcy5sZW5ndGg7
IHk8bDsgeSsrKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIHdpZHRoID0gY29sdW1uU2l6ZXNb
eV07CiAKQEAgLTE4OSw0ICsxODksNCBAQAogICB7CiAgICAgdGhpcy5fZGlzcG9zZU9iamVjdHMo
Il9zcGFuTWFuYWdlciIpOwogICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9
KTsKSW5kZXg6IHVpL3ZpcnR1YWwvbGF5ZXIvUm93LmpzCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3ZpcnR1
YWwvbGF5ZXIvUm93LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3ZpcnR1YWwvbGF5ZXIvUm93
LmpzCSh3b3JraW5nIGNvcHkpCkBAIC02NSw3ICs2NSw3IEBACiAgICAgICB2YXIgcm93ID0gZmly
c3RSb3c7CiAgICAgICB2YXIgY2hpbGRJbmRleCA9IDA7CiAKLSAgICAgIGZvciAodmFyIHk9MDsg
eTxyb3dTaXplcy5sZW5ndGg7IHkrKykKKyAgICAgIGZvciAodmFyIHk9MCwgbD1yb3dTaXplcy5s
ZW5ndGg7IHk8bDsgeSsrKQogICAgICAgewogICAgICAgICB2YXIgZGVjb3JhdG9yID0gdGhpcy5n
ZXRCYWNrZ3JvdW5kKHJvdyk7CiAgICAgICAgIGlmIChkZWNvcmF0b3IpCkluZGV4OiB1aS92aXJ0
dWFsL2xheWVyL0NvbHVtbi5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS92aXJ0dWFsL2xheWVyL0NvbHVt
bi5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS92aXJ0dWFsL2xheWVyL0NvbHVtbi5qcwkod29y
a2luZyBjb3B5KQpAQCAtNjgsNyArNjgsNyBAQAogICAgICAgdmFyIGNvbHVtbiA9IGZpcnN0Q29s
dW1uOwogICAgICAgdmFyIGNoaWxkSW5kZXggPSAwOwogCi0gICAgICBmb3IgKHZhciB4PTA7IHg8
Y29sdW1uU2l6ZXMubGVuZ3RoOyB4KyspCisgICAgICBmb3IgKHZhciB4PTAsIGw9Y29sdW1uU2l6
ZXMubGVuZ3RoOyB4PGw7IHgrKykKICAgICAgIHsKIAogICAgICAgICB2YXIgZGVjb3JhdG9yID0g
dGhpcy5nZXRCYWNrZ3JvdW5kKGNvbHVtbik7CkluZGV4OiB1aS92aXJ0dWFsL2xheWVyL0dyaWRM
aW5lcy5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1aS92aXJ0dWFsL2xheWVyL0dyaWRMaW5lcy5qcwkocmV2
aXNpb24gMjM4ODkpCisrKyB1aS92aXJ0dWFsL2xheWVyL0dyaWRMaW5lcy5qcwkod29ya2luZyBj
b3B5KQpAQCAtMjA0LDcgKzIwNCw3IEBACiAgICAgewogICAgICAgdmFyIHRvcCA9IDA7CiAgICAg
ICB2YXIgY29sb3IsIGhlaWdodDsKLSAgICAgIGZvciAodmFyIHk9MDsgeTxyb3dTaXplcy5sZW5n
dGgtMTsgeSsrKQorICAgICAgZm9yICh2YXIgeT0wLCBsPXJvd1NpemVzLmxlbmd0aC0xOyB5PGw7
IHkrKykKICAgICAgIHsKICAgICAgICAgY29sb3IgPSB0aGlzLmdldExpbmVDb2xvcihmaXJzdFJv
dyArIHkpOwogICAgICAgICBoZWlnaHQgPSB0aGlzLmdldExpbmVTaXplKGZpcnN0Um93ICsgeSk7
CkBAIC0yMzUsNyArMjM1LDcgQEAKICAgICB7CiAgICAgICB2YXIgbGVmdCA9IDA7CiAgICAgICB2
YXIgY29sb3IsIHdpZHRoOwotICAgICAgZm9yICh2YXIgeD0wOyB4PGNvbHVtblNpemVzLmxlbmd0
aC0xOyB4KyspCisgICAgICBmb3IgKHZhciB4PTAsIGw9Y29sdW1uU2l6ZXMubGVuZ3RoLTE7IHg8
bDsgeCsrKQogICAgICAgewogICAgICAgICBjb2xvciA9IHRoaXMuZ2V0TGluZUNvbG9yKGZpcnN0
Q29sdW1uICsgeCk7CiAgICAgICAgIHdpZHRoID0gdGhpcy5nZXRMaW5lU2l6ZShmaXJzdENvbHVt
biArIHgpOwpJbmRleDogdWkvdmlydHVhbC9sYXllci9XaWRnZXRDZWxsLmpzCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
LS0tIHVpL3ZpcnR1YWwvbGF5ZXIvV2lkZ2V0Q2VsbC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1
aS92aXJ0dWFsL2xheWVyL1dpZGdldENlbGwuanMJKHdvcmtpbmcgY29weSkKQEAgLTE2NCw3ICsx
NjQsNyBAQAogICAgICAgdmFyIGNlbGxQcm92aWRlciA9IHRoaXMuX2NlbGxQcm92aWRlcjsKIAog
ICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0Q2hpbGRyZW4oKTsKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1jaGls
ZHJlbi5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgY2hpbGQgPSBjaGls
ZHJlbltpXTsKICAgICAgICAgaWYgKGNoaWxkLmdldFVzZXJEYXRhKCJjZWxsLmVtcHR5IikpIHsK
QEAgLTE4MCw5ICsxODAsOSBAQAogICAgICAgdmFyIHRvcCA9IDA7CiAgICAgICB2YXIgbGVmdCA9
IDA7CiAKLSAgICAgIGZvciAodmFyIHk9MDsgeTxyb3dTaXplcy5sZW5ndGg7IHkrKykKKyAgICAg
IGZvciAodmFyIHk9MCwgbD1yb3dTaXplcy5sZW5ndGg7IHk8bDsgeSsrKQogICAgICAgewotICAg
ICAgICBmb3IgKHZhciB4PTA7IHg8Y29sdW1uU2l6ZXMubGVuZ3RoOyB4KyspCisgICAgICAgIGZv
ciAodmFyIHg9MCwgbD1jb2x1bW5TaXplcy5sZW5ndGg7IHg8bDsgeCsrKQogICAgICAgICB7CiAg
ICAgICAgICAgdmFyIHJvdyA9IGZpcnN0Um93ICsgeTsKICAgICAgICAgICB2YXIgY29sdW1uID0g
Zmlyc3RDb2x1bW4gKyB4OwpAQCAtMjc4LDcgKzI3OCw3IEBACiAKICAgICAgIC8vIHBvb2wgd2lk
Z2V0cwogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0Q2hpbGRyZW4oKTsKLSAgICAgIGZv
ciAodmFyIGk9MDsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwg
bD1jaGlsZHJlbi5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICBpZiAoIXdpZGdl
dHNUb01vdmVJbmRleGVzW2ldKQogICAgICAgICB7CkBAIC0yOTcsOSArMjk3LDkgQEAKICAgICAg
IHZhciB0b3AgPSAwOwogICAgICAgdmFyIGxlZnQgPSAwOwogCi0gICAgICBmb3IgKHZhciB5PTA7
IHk8cm93U2l6ZXMubGVuZ3RoOyB5KyspCisgICAgICBmb3IgKHZhciB5PTAsIGw9cm93U2l6ZXMu
bGVuZ3RoOyB5PGw7IHkrKykKICAgICAgIHsKLSAgICAgICAgZm9yICh2YXIgeD0wOyB4PGNvbHVt
blNpemVzLmxlbmd0aDsgeCsrKQorICAgICAgICBmb3IgKHZhciB4PTAsIGw9Y29sdW1uU2l6ZXMu
bGVuZ3RoOyB4PGw7IHgrKykKICAgICAgICAgewogICAgICAgICAgIHZhciByb3cgPSBmaXJzdFJv
dyArIHk7CiAgICAgICAgICAgdmFyIGNvbHVtbiA9IGZpcnN0Q29sdW1uICsgeDsKQEAgLTMyNSw3
ICszMjUsNyBAQAogICBkZXN0cnVjdCA6IGZ1bmN0aW9uKCkKICAgewogICAgIHZhciBjaGlsZHJl
biA9IHRoaXMuX2dldENoaWxkcmVuKCk7Ci0gICAgZm9yICh2YXIgaT0wOyBpPGNoaWxkcmVuLmxl
bmd0aDsgaSsrKSB7CisgICAgZm9yICh2YXIgaT0wLCBsPWNoaWxkcmVuLmxlbmd0aDsgaTxsOyBp
KyspIHsKICAgICAgIGNoaWxkcmVuW2ldLmRpc3Bvc2UoKTsKICAgICB9CiAKSW5kZXg6IHVpL3Rh
YmxlL3NlbGVjdGlvbi9Nb2RlbC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS90YWJsZS9zZWxlY3Rpb24v
TW9kZWwuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdGFibGUvc2VsZWN0aW9uL01vZGVsLmpz
CSh3b3JraW5nIGNvcHkpCkBAIC0yODUsNyArMjg1LDcgQEAKICAgICB7CiAgICAgICB2YXIgc2Vs
ZWN0ZWRDb3VudCA9IDA7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLl9fc2VsZWN0ZWRS
YW5nZUFyci5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLl9fc2VsZWN0
ZWRSYW5nZUFyci5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgcmFuZ2Ug
PSB0aGlzLl9fc2VsZWN0ZWRSYW5nZUFycltpXTsKICAgICAgICAgc2VsZWN0ZWRDb3VudCArPSBy
YW5nZS5tYXhJbmRleCAtIHJhbmdlLm1pbkluZGV4ICsgMTsKQEAgLTMwMyw3ICszMDMsNyBAQAog
ICAgICAqLwogICAgIGlzU2VsZWN0ZWRJbmRleCA6IGZ1bmN0aW9uKGluZGV4KQogICAgIHsKLSAg
ICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGkrKykK
KyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGk8
bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLl9fc2VsZWN0ZWRSYW5n
ZUFycltpXTsKIApAQCAtMzI4LDcgKzMyOCw3IEBACiAgICAgICAvLyBjYWxsZXIgZnJvbSBtZXNz
aW5nIHdpdGggdGhlIGludGVybmFsIG1vZGVsCiAgICAgICB2YXIgcmV0VmFsID0gW107CiAKLSAg
ICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGkrKykK
KyAgICAgIGZvciAodmFyIGk9MCwgbD10aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGk8
bDsgaSsrKQogICAgICAgewogICAgICAgICByZXRWYWwucHVzaCgKICAgICAgICAgewpAQCAtMzYw
LDkgKzM2MCw5IEBACiAgICAgICovCiAgICAgaXRlcmF0ZVNlbGVjdGlvbiA6IGZ1bmN0aW9uKGl0
ZXJhdG9yLCBvYmplY3QpCiAgICAgewotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX19zZWxl
Y3RlZFJhbmdlQXJyLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMuX19z
ZWxlY3RlZFJhbmdlQXJyLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7Ci0gICAgICAgIGZvciAo
dmFyIGo9dGhpcy5fX3NlbGVjdGVkUmFuZ2VBcnJbaV0ubWluSW5kZXg7IGo8PXRoaXMuX19zZWxl
Y3RlZFJhbmdlQXJyW2ldLm1heEluZGV4OyBqKyspIHsKKyAgICAgICAgZm9yICh2YXIgaj10aGlz
Ll9fc2VsZWN0ZWRSYW5nZUFycltpXS5taW5JbmRleCwgbD10aGlzLl9fc2VsZWN0ZWRSYW5nZUFy
cltpXS5tYXhJbmRleDsgajw9bDsgaisrKSB7CiAgICAgICAgICAgaXRlcmF0b3IuY2FsbChvYmpl
Y3QsIGopOwogICAgICAgICB9CiAgICAgICB9CkBAIC00NzQsNyArNDc0LDcgQEAKICAgICAgIHZh
ciBtYXhJbmRleCA9IE1hdGgubWF4KGZyb21JbmRleCwgdG9JbmRleCk7CiAKICAgICAgIC8vIENy
b3AgdGhlIGFmZmVjdGVkIHJhbmdlcwotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX19zZWxl
Y3RlZFJhbmdlQXJyLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMuX19z
ZWxlY3RlZFJhbmdlQXJyLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciBy
YW5nZSA9IHRoaXMuX19zZWxlY3RlZFJhbmdlQXJyW2ldOwogCkBAIC01NjEsNyArNTYxLDcgQEAK
ICAgICAgIC8vIEZpbmQgdGhlIGluZGV4IHdoZXJlIHRoZSBuZXcgcmFuZ2Ugc2hvdWxkIGJlIGlu
c2VydGVkCiAgICAgICB2YXIgbmV3UmFuZ2VJbmRleCA9IDA7CiAKLSAgICAgIGZvciAoO25ld1Jh
bmdlSW5kZXg8dGhpcy5fX3NlbGVjdGVkUmFuZ2VBcnIubGVuZ3RoOyBuZXdSYW5nZUluZGV4Kysp
CisgICAgICBmb3IgKGw9dGhpcy5fX3NlbGVjdGVkUmFuZ2VBcnIubGVuZ3RoOyBuZXdSYW5nZUlu
ZGV4PGw7IG5ld1JhbmdlSW5kZXgrKykKICAgICAgIHsKICAgICAgICAgdmFyIHJhbmdlID0gdGhp
cy5fX3NlbGVjdGVkUmFuZ2VBcnJbbmV3UmFuZ2VJbmRleF07CiAKQEAgLTU4MCw3ICs1ODAsNyBA
QAogICAgICAgLy8gTWVyZ2Ugb3ZlcmxhcHBpbmcgcmFuZ2VzCiAgICAgICB2YXIgbGFzdFJhbmdl
ID0gdGhpcy5fX3NlbGVjdGVkUmFuZ2VBcnJbMF07CiAKLSAgICAgIGZvciAodmFyIGk9MTsgaTx0
aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MSwg
bD10aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAg
ICAgICB2YXIgcmFuZ2UgPSB0aGlzLl9fc2VsZWN0ZWRSYW5nZUFycltpXTsKIApAQCAtNjEyLDcg
KzYxMiw3IEBACiAgICAgewogICAgICAgdmFyIHRleHQgPSAiUmFuZ2VzOiI7CiAKLSAgICAgIGZv
ciAodmFyIGk9MDsgaTx0aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGkrKykKKyAgICAg
IGZvciAodmFyIGk9MCwgbD10aGlzLl9fc2VsZWN0ZWRSYW5nZUFyci5sZW5ndGg7IGk8bDsgaSsr
KQogICAgICAgewogICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLl9fc2VsZWN0ZWRSYW5nZUFycltp
XTsKICAgICAgICAgdGV4dCArPSAiIFsiICsgcmFuZ2UubWluSW5kZXggKyAiLi4iICsgcmFuZ2Uu
bWF4SW5kZXggKyAiXSI7CkluZGV4OiB1aS90YWJsZS9tb2RlbC9TaW1wbGUuanMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gdWkvdGFibGUvbW9kZWwvU2ltcGxlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3Rh
YmxlL21vZGVsL1NpbXBsZS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTgyLDcgKzE4Miw3IEBACiAg
ICAgICBpZiAocm93RGF0YSAhPSBudWxsKSB7CiAgICAgICAgIHZhciBtYXAgPSB7fTsKICAgICAg
ICAgLy8gZ2V0IHRoZSBjdXJyZW50IHNldCBkYXRhCi0gICAgICAgIGZvciAodmFyIGNvbCA9IDA7
IGNvbCA8IHRoaXMuZ2V0Q29sdW1uQ291bnQoKTsgY29sKyspIHsKKyAgICAgICAgZm9yICh2YXIg
Y29sID0gMCwgbCA9IHRoaXMuZ2V0Q29sdW1uQ291bnQoKTsgY29sIDwgbDsgY29sKyspIHsKICAg
ICAgICAgICBtYXBbdGhpcy5nZXRDb2x1bW5JZChjb2wpXSA9IHJvd0RhdGFbY29sXTsKICAgICAg
ICAgfQogICAgICAgICAKQEAgLTIwOCwxMCArMjA4LDkgQEAKICAgICAgKiBOb3RlOiBJbmRpdmlk
dWFsIGl0ZW1zIGFyZSByZXRyaWV2ZWQgYnkge0BsaW5rICNnZXRSb3dEYXRhQXNNYXB9LgogICAg
ICAqLwogICAgIGdldERhdGFBc01hcEFycmF5OiBmdW5jdGlvbigpIHsKLSAgICAgIHZhciBsZW4g
PSB0aGlzLmdldFJvd0NvdW50KCk7CiAgICAgICB2YXIgZGF0YSA9IFtdOwogCi0gICAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRo
aXMuZ2V0Um93Q291bnQoKTsgaSA8IGxlbjsgaSsrKQogICAgICAgewogICAgICAgICBkYXRhLnB1
c2godGhpcy5nZXRSb3dEYXRhQXNNYXAoaSkpOwogICAgICAgfQpAQCAtMjMwLDcgKzIyOSw3IEBA
CiAgICAgewogICAgICAgdGhpcy5fX2VkaXRhYmxlQ29sQXJyID0gW107CiAKLSAgICAgIGZvciAo
dmFyIGNvbD0wOyBjb2w8dGhpcy5nZXRDb2x1bW5Db3VudCgpOyBjb2wrKykgeworICAgICAgZm9y
ICh2YXIgY29sPTAsIGw9dGhpcy5nZXRDb2x1bW5Db3VudCgpOyBjb2w8bDsgY29sKyspIHsKICAg
ICAgICAgdGhpcy5fX2VkaXRhYmxlQ29sQXJyW2NvbF0gPSBlZGl0YWJsZTsKICAgICAgIH0KIApJ
bmRleDogdWkvdGFibGUvbW9kZWwvUmVtb3RlLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3RhYmxlL21v
ZGVsL1JlbW90ZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS90YWJsZS9tb2RlbC9SZW1vdGUu
anMJKHdvcmtpbmcgY29weSkKQEAgLTQwNCw3ICs0MDQsNyBAQAogICAgICAgICAgIHZhciByb3dP
ZmZzZXQgPSBibG9jayAqIGJsb2NrU2l6ZTsKICAgICAgICAgICB2YXIgcm93RGF0YUFyciA9IGJs
b2NrRGF0YS5yb3dEYXRhQXJyOwogCi0gICAgICAgICAgZm9yICh2YXIgcmVsUm93PTA7IHJlbFJv
dzxyb3dEYXRhQXJyLmxlbmd0aDsgcmVsUm93KyspCisgICAgICAgICAgZm9yICh2YXIgcmVsUm93
PTAsIGw9cm93RGF0YUFyci5sZW5ndGg7IHJlbFJvdzxsOyByZWxSb3crKykKICAgICAgICAgICB7
CiAgICAgICAgICAgICAvLyBDYWxsIHRoZSBpdGVyYXRvciBmb3IgdGhpcyByb3cKICAgICAgICAg
ICAgIHZhciByb3dEYXRhID0gcm93RGF0YUFycltyZWxSb3ddOwpAQCAtNzg5LDcgKzc4OSw3IEBA
CiAgICAgewogICAgICAgdGhpcy5fX2VkaXRhYmxlQ29sQXJyID0gW107CiAKLSAgICAgIGZvciAo
dmFyIGNvbD0wOyBjb2w8dGhpcy5nZXRDb2x1bW5Db3VudCgpOyBjb2wrKykgeworICAgICAgZm9y
ICh2YXIgY29sPTAsIGw9dGhpcy5nZXRDb2x1bW5Db3VudCgpOyBjb2w8bDsgY29sKyspIHsKICAg
ICAgICAgdGhpcy5fX2VkaXRhYmxlQ29sQXJyW2NvbF0gPSBlZGl0YWJsZTsKICAgICAgIH0KIApJ
bmRleDogdWkvdGFibGUvbW9kZWwvQWJzdHJhY3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdGFibGUv
bW9kZWwvQWJzdHJhY3QuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdGFibGUvbW9kZWwvQWJz
dHJhY3QuanMJKHdvcmtpbmcgY29weSkKQEAgLTE5Myw3ICsxOTMsNyBAQAogICAgICAgLy8gQ3Jl
YXRlIHRoZSByZXZlcnNlIG1hcAogICAgICAgdGhpcy5fX2NvbHVtbkluZGV4TWFwID0ge307CiAK
LSAgICAgIGZvciAodmFyIGk9MDsgaTxjb2x1bW5JZEFyci5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaT0wLCBsPWNvbHVtbklkQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
dGhpcy5fX2NvbHVtbkluZGV4TWFwW2NvbHVtbklkQXJyW2ldXSA9IGk7CiAgICAgICB9CiAKQEAg
LTI0NSw3ICsyNDUsNyBAQAogICAgIHsKICAgICAgIHRoaXMuX19jb2x1bW5OYW1lQXJyID0gbmV3
IEFycmF5KHRoaXMuX19jb2x1bW5JZEFyci5sZW5ndGgpOwogCi0gICAgICBmb3IgKHZhciBpPTA7
IGk8dGhpcy5fX2NvbHVtbklkQXJyLmxlbmd0aDsgKytpKSB7CisgICAgICBmb3IgKHZhciBpPTAs
IGw9dGhpcy5fX2NvbHVtbklkQXJyLmxlbmd0aDsgaTxsOyArK2kpIHsKICAgICAgICAgdGhpcy5f
X2NvbHVtbk5hbWVBcnJbaV0gPSBjb2x1bW5OYW1lTWFwW3RoaXMuX19jb2x1bW5JZEFycltpXV07
CiAgICAgICB9CiAgICAgfSwKSW5kZXg6IHVpL3RhYmxlL1RhYmxlLmpzCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0t
IHVpL3RhYmxlL1RhYmxlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3RhYmxlL1RhYmxlLmpz
CSh3b3JraW5nIGNvcHkpCkBAIC03NjYsNyArNzY2LDcgQEAKICAgICB7CiAgICAgICB2YXIgc2Ny
b2xsZXJBcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKTsKIAotICAgICAgZm9yICh2YXIg
aT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9
c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICBzY3JvbGxlckFycltpXS51
cGRhdGVWZXJTY3JvbGxCYXJNYXhpbXVtKCk7CiAgICAgICB9CiAgICAgfSwKQEAgLTc3Nyw3ICs3
NzcsNyBAQAogICAgIHsKICAgICAgIHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBhbmVTY3Jv
bGxlckFycigpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykK
ICAgICAgIHsKICAgICAgICAgc2Nyb2xsZXJBcnJbaV0uX2V4Y2x1ZGVDaGlsZENvbnRyb2woImhl
YWRlciIpOwogICAgICAgfQpAQCAtNzg5LDcgKzc4OSw3IEBACiAgICAgewogICAgICAgdmFyIHNj
cm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBs
PXNjcm9sbGVyQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgc2Nyb2xsZXJBcnJbaV0u
Z2V0SGVhZGVyKCkuc2V0SGVpZ2h0KHZhbHVlKTsKICAgICAgIH0KICAgICB9LApAQCAtODgzLDcg
Kzg4Myw3IEBACiAgICAgICAgIC8vIFJlc2V0IHRoZSB0YWJsZSBjb2x1bW4gbW9kZWwgaW4gZWFj
aCB0YWJsZSBwYW5lIG1vZGVsCiAgICAgICAgIHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBh
bmVTY3JvbGxlckFycigpOwogCi0gICAgICAgIGZvciAodmFyIGk9MDsgaTxzY3JvbGxlckFyci5s
ZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJyLmxlbmd0aDsg
aTxsOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgcGFuZVNjcm9sbGVyID0gc2Nyb2xs
ZXJBcnJbaV07CiAgICAgICAgICAgdmFyIHBhbmVNb2RlbCA9IHBhbmVTY3JvbGxlci5nZXRUYWJs
ZVBhbmVNb2RlbCgpOwpAQCAtOTU4LDcgKzk1OCw3IEBACiAgICAgICAvLyBVcGRhdGUgdGhlIG9s
ZCBwYW5lcwogICAgICAgdmFyIGxlZnRYID0gMDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPHNj
cm9sbGVyQXJyLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJy
Lmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciBwYW5lU2Nyb2xsZXIgPSBz
Y3JvbGxlckFycltpXTsKICAgICAgICAgdmFyIHBhbmVNb2RlbCA9IHBhbmVTY3JvbGxlci5nZXRU
YWJsZVBhbmVNb2RlbCgpOwpAQCAtOTcyLDcgKzk3Miw3IEBACiAgICAgICB7CiAgICAgICAgIHZh
ciBjb2x1bW5Nb2RlbCA9IHRoaXMuZ2V0VGFibGVDb2x1bW5Nb2RlbCgpOwogCi0gICAgICAgIGZv
ciAodmFyIGk9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPG1ldGFDb2x1bW5Db3VudHMubGVuZ3RoOyBp
KyspCisgICAgICAgIGZvciAodmFyIGk9c2Nyb2xsZXJBcnIubGVuZ3RoLCBsPW1ldGFDb2x1bW5D
b3VudHMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgICAgewogICAgICAgICAgIHZhciBwYW5lTW9k
ZWwgPSB0aGlzLmdldE5ld1RhYmxlUGFuZU1vZGVsKCkoY29sdW1uTW9kZWwpOwogICAgICAgICAg
IHBhbmVNb2RlbC5zZXRGaXJzdENvbHVtblgobGVmdFgpOwpAQCAtOTk5LDcgKzk5OSw3IEBACiAg
ICAgICAgICAgICAgICAgaGFuZGxlcnNbZXZOYW1lXS5jYXB0dXJlLmxlbmd0aCA+IDApCiAgICAg
ICAgICAgICB7CiAgICAgICAgICAgICAgIHZhciBjYXB0dXJlID0gaGFuZGxlcnNbZXZOYW1lXS5j
YXB0dXJlOwotICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhcHR1cmUubGVuZ3Ro
OyBpKyspCisgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gY2FwdHVyZS5sZW5ndGg7
IGkgPCBsOyBpKyspCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAvLyBEZXRlcm1p
bmUgd2hhdCBjb250ZXh0IHRvIHVzZS4gIElmIHRoZSBjb250ZXh0IGRvZXMgbm90CiAgICAgICAg
ICAgICAgICAgLy8gZXhpc3QsIHdlIGFzc3VtZSB0aGF0IHRoZSBjb250ZXh0IGlzIHRoaXMgdGFi
bGUuICBJZiBpdApAQCAtMTAyOSw3ICsxMDI5LDcgQEAKICAgICAgICAgICAgICAgICBoYW5kbGVy
c1tldk5hbWVdLmJ1YmJsZS5sZW5ndGggPiAwKQogICAgICAgICAgICAgewogICAgICAgICAgICAg
ICB2YXIgYnViYmxlID0gaGFuZGxlcnNbZXZOYW1lXS5idWJibGU7Ci0gICAgICAgICAgICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgYnViYmxlLmxlbmd0aDsgaSsrKQorICAgICAgICAgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IGJ1YmJsZS5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICAgICAgICAg
IHsKICAgICAgICAgICAgICAgICAvLyBEZXRlcm1pbmUgd2hhdCBjb250ZXh0IHRvIHVzZS4gIElm
IHRoZSBjb250ZXh0IGRvZXMgbm90CiAgICAgICAgICAgICAgICAgLy8gZXhpc3QsIHdlIGFzc3Vt
ZSB0aGF0IHRoZSBjb250ZXh0IGlzIHRoaXMgdGFibGUuICBJZiBpdApAQCAtMTA2NCw3ICsxMDY0
LDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gVXBkYXRlIGFsbCBtZXRhIGNvbHVtbnMKLSAgICAg
IGZvciAodmFyIGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFy
IGk9MCwgbD1zY3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2
YXIgcGFuZVNjcm9sbGVyID0gc2Nyb2xsZXJBcnJbaV07CiAgICAgICAgIHZhciBpc0xhc3QgPSAo
aSA9PSAoc2Nyb2xsZXJBcnIubGVuZ3RoIC0gMSkpOwpAQCAtMTA5MCw3ICsxMDkwLDcgQEAKICAg
ICB7CiAgICAgICB2YXIgc2Nyb2xsZXJBcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKTsK
IAotICAgICAgZm9yICh2YXIgaT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpPTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAg
ICBzY3JvbGxlckFycltpXS5zZXRGb2N1c0NlbGxPbk1vdXNlTW92ZSh2YWx1ZSk7CiAgICAgICB9
CiAgICAgfSwKQEAgLTExMDEsNyArMTEwMSw3IEBACiAgICAgewogICAgICAgdmFyIHNjcm9sbGVy
QXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsg
aTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9s
bGVyQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgc2Nyb2xsZXJBcnJbaV0uc2V0U2hv
d0NlbGxGb2N1c0luZGljYXRvcih2YWx1ZSk7CiAgICAgICB9CiAgICAgfSwKQEAgLTExMTIsNyAr
MTExMiw3IEBACiAgICAgewogICAgICAgdmFyIHNjcm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNj
cm9sbGVyQXJyKCk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7
IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJyLmxlbmd0aDsgaTxsOyBp
KyspIHsKICAgICAgICAgc2Nyb2xsZXJBcnJbaV0ub25LZWVwRmlyc3RWaXNpYmxlUm93Q29tcGxl
dGVDaGFuZ2VkKCk7CiAgICAgICB9CiAgICAgfSwKQEAgLTExMjMsNyArMTEyMyw3IEBACiAgICAg
ewogICAgICAgdmFyIHNjcm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAK
LSAgICAgIGZvciAodmFyIGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
c2Nyb2xsZXJBcnJbaV0uc2V0UmVzZXRTZWxlY3Rpb25PbkhlYWRlckNsaWNrKHZhbHVlKTsKICAg
ICAgIH0KICAgICB9LApAQCAtMTIwNSw3ICsxMjA1LDcgQEAKICAgICB7CiAgICAgICB2YXIgc2Ny
b2xsZXJBcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKTsKIAotICAgICAgZm9yICh2YXIg
aT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9
c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICBzY3JvbGxlckFycltpXS5v
blNlbGVjdGlvbkNoYW5nZWQoKTsKICAgICAgIH0KIApAQCAtMTIyMyw3ICsxMjIzLDcgQEAKICAg
ICB7CiAgICAgICB2YXIgc2Nyb2xsZXJBcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKTsK
IAotICAgICAgZm9yICh2YXIgaT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpPTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAg
ICBzY3JvbGxlckFycltpXS5vblRhYmxlTW9kZWxNZXRhRGF0YUNoYW5nZWQoKTsKICAgICAgIH0K
IApAQCAtMTI3Miw3ICsxMjcyLDcgQEAKICAgICAgICAgfQogICAgICAgfQogCi0gICAgICBmb3Ig
KHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAs
IGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgc2Nyb2xs
ZXJBcnJbaV0ub25UYWJsZU1vZGVsRGF0YUNoYW5nZWQoCiAgICAgICAgICAgZmlyc3RSb3csIGxh
c3RSb3csCkBAIC0xMzA3LDcgKzEzMDcsNyBAQAogICAgICAgICAvLyBTZXQgdGhlIHNhbWUgc2Ny
b2xsIHBvc2l0aW9uIHRvIGFsbCBtZXRhIGNvbHVtbnMKICAgICAgICAgdmFyIHNjcm9sbGVyQXJy
ID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBp
PHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9MCwgbD1zY3Jv
bGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgICAgc2Nyb2xsZXJBcnJbaV0uc2V0
U2Nyb2xsWShldnQuZ2V0RGF0YSgpKTsKICAgICAgICAgfQogCkBAIC0xNDcxLDcgKzE0NzEsNyBA
QAogICAgIHsKICAgICAgIHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBhbmVTY3JvbGxlckFy
cigpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspIHsK
KyAgICAgIGZvciAodmFyIGk9MCwgbD1zY3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKSB7CiAg
ICAgICAgIHNjcm9sbGVyQXJyW2ldLm9uRm9jdXNDaGFuZ2VkKCk7CiAgICAgICB9CiAgICAgfSwK
QEAgLTE0ODcsNyArMTQ4Nyw3IEBACiAgICAgewogICAgICAgdmFyIHNjcm9sbGVyQXJyID0gdGhp
cy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxzY3JvbGxl
ckFyci5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJyLmxl
bmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgc2Nyb2xsZXJBcnJbaV0ub25Db2xWaXNpYmlsaXR5
Q2hhbmdlZCgpOwogICAgICAgfQogCkBAIC0xNTEyLDcgKzE1MTIsNyBAQAogICAgIHsKICAgICAg
IHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBhbmVTY3JvbGxlckFycigpOwogCi0gICAgICBm
b3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBp
PTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFy
IGRhdGEgPSBldnQuZ2V0RGF0YSgpOwogICAgICAgICBzY3JvbGxlckFycltpXS5zZXRDb2x1bW5X
aWR0aChkYXRhLmNvbCwgZGF0YS5uZXdXaWR0aCk7CkBAIC0xNTMzLDcgKzE1MzMsNyBAQAogICAg
IHsKICAgICAgIHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBhbmVTY3JvbGxlckFycigpOwog
Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspIHsKKyAgICAg
IGZvciAodmFyIGk9MCwgbD1zY3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAg
IHNjcm9sbGVyQXJyW2ldLm9uQ29sT3JkZXJDaGFuZ2VkKCk7CiAgICAgICB9CiAKQEAgLTE1ODAs
NyArMTU4MCw3IEBACiAKICAgICAgICAgdmFyIHNjcm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNj
cm9sbGVyQXJyKCk7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0
aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGk9MCwgbD1zY3JvbGxlckFyci5sZW5ndGg7IGk8
bDsgaSsrKSB7CiAgICAgICAgICAgc2Nyb2xsZXJBcnJbaV0uc2V0Rm9jdXNlZENlbGwoY29sLCBy
b3cpOwogICAgICAgICB9CiAKQEAgLTE2NzIsNyArMTY3Miw3IEBACiAKICAgICAgIC8vIE5vdywg
Zm9yIGVhY2ggcGFuZSBzY3JvbGxlci4uLgogICAgICAgdmFyIHNjcm9sbGVyQXJyID0gdGhpcy5f
Z2V0UGFuZVNjcm9sbGVyQXJyKCk7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIu
bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBp
PGw7IGkrKykKICAgICAgIHsKICAgICAgICAgLy8gLi4uIHJlcGFpbnQgd2l0aG91dCBmb2N1cy4K
ICAgICAgICAgc2Nyb2xsZXJBcnJbaV0ub25Gb2N1c0NoYW5nZWQoKTsKQEAgLTE4MDUsNyArMTgw
NSw3IEBACiAgICAgICovCiAgICAgdXBkYXRlQ29udGVudCA6IGZ1bmN0aW9uKCkgewogICAgICAg
dmFyIHNjcm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7Ci0gICAgICBmb3Ig
KHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9
MCwgbD1zY3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHNjcm9sbGVyQXJy
W2ldLmdldFRhYmxlUGFuZSgpLnVwZGF0ZUNvbnRlbnQodHJ1ZSk7CiAgICAgICB9CiAgICAgfSwK
QEAgLTE4MTcsNyArMTgxNyw3IEBACiAgICAgYmxvY2tIZWFkZXJFbGVtZW50cyA6IGZ1bmN0aW9u
KCkKICAgICB7CiAgICAgICB2YXIgc2Nyb2xsZXJBcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJB
cnIoKTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykgewor
ICAgICAgZm9yICh2YXIgaT0wLCBsPXNjcm9sbGVyQXJyLmxlbmd0aDsgaTxsOyBpKyspIHsKICAg
ICAgICAgc2Nyb2xsZXJBcnJbaV0uZ2V0SGVhZGVyKCkuZ2V0QmxvY2tlcigpLmJsb2NrQ29udGVu
dCgyMCk7CiAgICAgICB9CiAgICAgICB0aGlzLmdldENoaWxkQ29udHJvbCgiY29sdW1uLWJ1dHRv
biIpLmdldEJsb2NrZXIoKS5ibG9ja0NvbnRlbnQoMjApOwpAQCAtMTgzMSw3ICsxODMxLDcgQEAK
ICAgICB1bmJsb2NrSGVhZGVyRWxlbWVudHMgOiBmdW5jdGlvbigpCiAgICAgewogICAgICAgdmFy
IHNjcm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7Ci0gICAgICBmb3IgKHZh
ciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwg
bD1zY3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIHNjcm9sbGVyQXJyW2ld
LmdldEhlYWRlcigpLmdldEJsb2NrZXIoKS51bmJsb2NrQ29udGVudCgpOwogICAgICAgfQogICAg
ICAgdGhpcy5nZXRDaGlsZENvbnRyb2woImNvbHVtbi1idXR0b24iKS5nZXRCbG9ja2VyKCkudW5i
bG9ja0NvbnRlbnQoKTsKQEAgLTE4NDgsNyArMTg0OCw3IEBACiAgICAgewogICAgICAgdmFyIHNj
cm9sbGVyQXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7CiAKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxzY3JvbGxlckFyci5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1z
Y3JvbGxlckFyci5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgcG9zID0g
c2Nyb2xsZXJBcnJbaV0uZ2V0Q29udGFpbmVyTG9jYXRpb24oKTsKIApAQCAtMTg3Myw3ICsxODcz
LDcgQEAKICAgICAgIHZhciBtZXRhQ29sdW1uQ291bnRzID0gdGhpcy5nZXRNZXRhQ29sdW1uQ291
bnRzKCk7CiAgICAgICB2YXIgcmlnaHRYUG9zID0gMDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBp
PG1ldGFDb2x1bW5Db3VudHMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9bWV0
YUNvbHVtbkNvdW50cy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgY291
bnRzID0gbWV0YUNvbHVtbkNvdW50c1tpXTsKICAgICAgICAgcmlnaHRYUG9zICs9IGNvdW50czsK
QEAgLTE5MzUsNyArMTkzNSw3IEBACiAgICAgICAvLyAoVGhlIGxhc3Qgb25lIGhhcyBhIGZsZXgg
d2l0aCkKICAgICAgIHZhciBzY3JvbGxlckFyciA9IHRoaXMuX2dldFBhbmVTY3JvbGxlckFycigp
OwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspCisgICAg
ICBmb3IgKHZhciBpPTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsK
ICAgICAgICAgdmFyIGlzTGFzdCA9IChpID09IChzY3JvbGxlckFyci5sZW5ndGggLSAxKSk7CiAg
ICAgICAgIHZhciB3aWR0aCA9IHNjcm9sbGVyQXJyW2ldLmdldFRhYmxlUGFuZU1vZGVsKCkuZ2V0
VG90YWxXaWR0aCgpOwpAQCAtMTk2NCw3ICsxOTY0LDcgQEAKICAgICAgIHZhciBob3JOZWVkZWQg
PSBmYWxzZTsKICAgICAgIHZhciB2ZXJOZWVkZWQgPSBmYWxzZTsKIAotICAgICAgZm9yICh2YXIg
aT0wOyBpPHNjcm9sbGVyQXJyLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXNj
cm9sbGVyQXJyLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZhciBpc0xhc3Qg
PSAoaSA9PSAoc2Nyb2xsZXJBcnIubGVuZ3RoIC0gMSkpOwogCkBAIC0xOTgxLDcgKzE5ODEsNyBA
QAogICAgICAgfQogCiAgICAgICAvLyBTZXQgdGhlIG5lZWRlZCBzY3JvbGxiYXJzCi0gICAgICBm
b3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJBcnIubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBp
PTAsIGw9c2Nyb2xsZXJBcnIubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFy
IGlzTGFzdCA9IChpID09IChzY3JvbGxlckFyci5sZW5ndGggLSAxKSk7CiAgICAgICAgIHZhciBi
SGFkVmVydGljYWxTY3JvbGxCYXI7CkBAIC0yMTEyLDcgKzIxMTIsNyBAQAogICAgICAgewogICAg
ICAgICAvLyBzdGFydCB0aGUgaWQgd2l0aCB0aGUgdHlwZSAobmVlZGVkIGZvciByZW1vdmluZykK
ICAgICAgICAgdmFyIGlkID0gW3R5cGVdOwotICAgICAgICBmb3IgKHZhciBpID0gMCwgYXJyID0g
dGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspCisgICAgICAg
IGZvciAodmFyIGkgPSAwLCBhcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKSwgbCA9IGFy
ci5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBpZC5wdXNoKGFycltp
XS5hZGRMaXN0ZW5lci5hcHBseShhcnJbaV0sIGFyZ3VtZW50cykpOwogICAgICAgICB9CkBAIC0y
MTMxLDcgKzIxMzEsNyBAQAogICAgIHsKICAgICAgIGlmICh0aGlzLnNlbGYoYXJndW1lbnRzKS5f
X3JlZGlyZWN0RXZlbnRzW3R5cGVdKQogICAgICAgewotICAgICAgICBmb3IgKHZhciBpID0gMCwg
YXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspCisg
ICAgICAgIGZvciAodmFyIGkgPSAwLCBhcnIgPSB0aGlzLl9nZXRQYW5lU2Nyb2xsZXJBcnIoKSwg
bD0gYXJyLmxlbmd0aDsgaSA8IGw7IGkrKykKICAgICAgICAgewogICAgICAgICAgIGFycltpXS5y
ZW1vdmVMaXN0ZW5lci5hcHBseShhcnJbaV0sIGFyZ3VtZW50cyk7CiAgICAgICAgIH0KQEAgLTIx
NTEsNyArMjE1MSw3IEBACiAgICAgICBpZiAodGhpcy5zZWxmKGFyZ3VtZW50cykuX19yZWRpcmVj
dEV2ZW50c1t0eXBlXSkKICAgICAgIHsKICAgICAgICAgdmFyIHJlbW92ZWQgPSB0cnVlOwotICAg
ICAgICBmb3IgKHZhciBpID0gMCwgYXJyID0gdGhpcy5fZ2V0UGFuZVNjcm9sbGVyQXJyKCk7IGkg
PCBhcnIubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGkgPSAwLCBhcnIgPSB0aGlzLl9n
ZXRQYW5lU2Nyb2xsZXJBcnIoKSwgbCA9IGFyci5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICAg
IHsKICAgICAgICAgICByZW1vdmVkID0gYXJyW2ldLnJlbW92ZUxpc3RlbmVyQnlJZC5jYWxsKGFy
cltpXSwgaWRzW2ldKSAmJiByZW1vdmVkOwogICAgICAgICB9CkluZGV4OiB1aS90YWJsZS9jb2x1
bW5tb2RlbC9yZXNpemViZWhhdmlvci9EZWZhdWx0LmpzCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3RhYmxl
L2NvbHVtbm1vZGVsL3Jlc2l6ZWJlaGF2aW9yL0RlZmF1bHQuanMJKHJldmlzaW9uIDIzODg5KQor
KysgdWkvdGFibGUvY29sdW1ubW9kZWwvcmVzaXplYmVoYXZpb3IvRGVmYXVsdC5qcwkod29ya2lu
ZyBjb3B5KQpAQCAtNDY3LDcgKzQ2Nyw3IEBACiAgICAgICBpZiAod2lkdGhVc2VkIDwgd2lkdGgp
CiAgICAgICB7CiAgICAgICAgIC8vIC4uLiB0aGVuIGRldGVybWluZSB0aGUgbmV4dCB2aXNpYmxl
IGNvbHVtbgotICAgICAgICBmb3IgKGk9MDsgaTx2aXNpYmxlQ29sdW1ucy5sZW5ndGg7IGkrKykK
KyAgICAgICAgZm9yIChpPTAsIGw9dmlzaWJsZUNvbHVtbnMubGVuZ3RoOyBpPGw7IGkrKykKICAg
ICAgICAgewogICAgICAgICAgIGlmICh2aXNpYmxlQ29sdW1uc1tpXSA9PSBkYXRhLmNvbCkKICAg
ICAgICAgICB7CkluZGV4OiB1aS90YWJsZS9jb2x1bW5tb2RlbC9CYXNpYy5qcwo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
Ci0tLSB1aS90YWJsZS9jb2x1bW5tb2RlbC9CYXNpYy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1
aS90YWJsZS9jb2x1bW5tb2RlbC9CYXNpYy5qcwkod29ya2luZyBjb3B5KQpAQCAtMTkyLDcgKzE5
Miw3IEBACiAgICAgICAvLyBJZiBhbnkgY29sdW1ucyBhcmUgaW5pdGlhbHkgaGlkZGVuLCBoaWRl
IHRoZW0gbm93LiBNYWtlIGl0IGFuCiAgICAgICAvLyBpbnRlcm5hbCBjaGFuZ2Ugc28gdGhhdCBl
dmVudHMgYXJlIG5vdCBnZW5lcmF0ZWQuCiAgICAgICB0aGlzLl9faW50ZXJuYWxDaGFuZ2UgPSB0
cnVlOwotICAgICAgZm9yICh2YXIgaGlkZGVuPTA7IGhpZGRlbjxpbml0aWFsbHlIaWRkZW5Db2x1
bW5zLmxlbmd0aDsgaGlkZGVuKyspCisgICAgICBmb3IgKHZhciBoaWRkZW49MCwgbD1pbml0aWFs
bHlIaWRkZW5Db2x1bW5zLmxlbmd0aDsgaGlkZGVuPGw7IGhpZGRlbisrKQogICAgICAgewogICAg
ICAgICB0aGlzLnNldENvbHVtblZpc2libGUoaW5pdGlhbGx5SGlkZGVuQ29sdW1uc1toaWRkZW5d
LCBmYWxzZSk7CiAgICAgICB9CkBAIC00MzIsMTMgKzQzMiwxMyBAQAogICAgICAgewogICAgICAg
ICB0aGlzLl9fY29sVG9YUG9zTWFwID0ge307CiAKLSAgICAgICAgZm9yICh2YXIgb3Zlclg9MDsg
b3Zlclg8dGhpcy5fX292ZXJhbGxDb2x1bW5BcnIubGVuZ3RoOyBvdmVyWCsrKQorICAgICAgICBm
b3IgKHZhciBvdmVyWD0wLCBsPXRoaXMuX19vdmVyYWxsQ29sdW1uQXJyLmxlbmd0aDsgb3Zlclg8
bDsgb3ZlclgrKykKICAgICAgICAgewogICAgICAgICAgIHZhciBjb2wgPSB0aGlzLl9fb3ZlcmFs
bENvbHVtbkFycltvdmVyWF07CiAgICAgICAgICAgdGhpcy5fX2NvbFRvWFBvc01hcFtjb2xdID0g
eyBvdmVyWCA6IG92ZXJYIH07CiAgICAgICAgIH0KIAotICAgICAgICBmb3IgKHZhciB2aXNYPTA7
IHZpc1g8dGhpcy5fX3Zpc2libGVDb2x1bW5BcnIubGVuZ3RoOyB2aXNYKyspCisgICAgICAgIGZv
ciAodmFyIHZpc1g9MCwgbD10aGlzLl9fdmlzaWJsZUNvbHVtbkFyci5sZW5ndGg7IHZpc1g8bDsg
dmlzWCsrKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIGNvbCA9IHRoaXMuX192aXNpYmxlQ29s
dW1uQXJyW3Zpc1hdOwogICAgICAgICAgIHRoaXMuX19jb2xUb1hQb3NNYXBbY29sXS52aXNYID0g
dmlzWDsKQEAgLTU3OSw3ICs1NzksNyBAQAogICAgICAgICAgIC8vIGdldCB0aGUgdmlzWCBvZiB0
aGUgbmV4dCB2aXNpYmxlIGNvbHVtbiBhZnRlciB0aGUgY29sdW1uIHRvIHNob3cKICAgICAgICAg
ICB2YXIgbmV4dFZpc1g7CiAKLSAgICAgICAgICBmb3IgKHZhciB4PW92ZXJYKzE7IHg8dGhpcy5f
X292ZXJhbGxDb2x1bW5BcnIubGVuZ3RoOyB4KyspCisgICAgICAgICAgZm9yICh2YXIgeD1vdmVy
WCsxLCBsPXRoaXMuX19vdmVyYWxsQ29sdW1uQXJyLmxlbmd0aDsgeDxsOyB4KyspCiAgICAgICAg
ICAgewogICAgICAgICAgICAgdmFyIGN1cnJDb2wgPSB0aGlzLl9fb3ZlcmFsbENvbHVtbkFyclt4
XTsKICAgICAgICAgICAgIHZhciBjdXJyVmlzWCA9IGNvbFRvWFBvc01hcFtjdXJyQ29sXS52aXNY
OwpAQCAtNjk1LDcgKzY5NSw3IEBACiAgICAgICAgIC8vIHRoaXMganVzdCBtaW1pY2tzIHRoZSBi
ZWhhdmlvdXIgb2YgbW92ZUNvbHVtbi4gUG9zc2libHkgdXNlZnVsIGJlY2F1c2Ugc2V0dGluZwog
ICAgICAgICAvLyBhIGNvbHVtbiB2aXNpYmxlIGxhdGVyIHVwZGF0ZXMgYSBtYXAgd2l0aCBpdHMg
c2NyZWVuIGNvb3Jkcy4KICAgICAgICAgdmFyIGlzVmlzaWJsZSA9IG5ldyBBcnJheShuZXdQb3Np
dGlvbnMubGVuZ3RoKTsKLSAgICAgICAgZm9yICh2YXIgY29sSWR4ID0gMDsgY29sSWR4IDwgdGhp
cy5fX292ZXJhbGxDb2x1bW5BcnIubGVuZ3RoOyBjb2xJZHgrKykKKyAgICAgICAgZm9yICh2YXIg
Y29sSWR4ID0gMCwgbCA9IHRoaXMuX19vdmVyYWxsQ29sdW1uQXJyLmxlbmd0aDsgY29sSWR4PGw7
IGNvbElkeCsrKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIHZpc2libGUgPSB0aGlzLmlzQ29s
dW1uVmlzaWJsZShjb2xJZHgpOwogICAgICAgICAgIGlzVmlzaWJsZVtjb2xJZHhdID0gdmlzaWJs
ZTsgLy9SZW1lbWJlciwgYXMgdGhpcyByZWxpZXMgb24gdGhpcy5fX2NvbFRvWFBvc01hcCB3aGlj
aCBpcyBjbGVhcmVkIGJlbG93CkBAIC03MTEsNyArNzExLDcgQEAKICAgICAgICAgdGhpcy5fX2Nv
bFRvWFBvc01hcCA9IG51bGw7CiAKICAgICAgICAgLy8gR28gdGhyb3VnaCBlYWNoIGNvbHVtbiBh
biBzd2l0Y2ggaW52aXNpYmxlIG9uZXMgYmFjayB0byB2aXNpYmxlCi0gICAgICAgIGZvciAodmFy
IGNvbElkeCA9IDA7IGNvbElkeCA8IHRoaXMuX19vdmVyYWxsQ29sdW1uQXJyLmxlbmd0aDsgY29s
SWR4KyspeworICAgICAgICBmb3IgKHZhciBjb2xJZHggPSAwLCBsID0gdGhpcy5fX292ZXJhbGxD
b2x1bW5BcnIubGVuZ3RoOyBjb2xJZHggPCBsOyBjb2xJZHgrKyl7CiAgICAgICAgICAgaWYgKGlz
VmlzaWJsZVtjb2xJZHhdKSB7CiAgICAgICAgICAgICB0aGlzLnNldENvbHVtblZpc2libGUoY29s
SWR4LCB0cnVlKTsKICAgICAgICAgICB9CkBAIC03NDEsNyArNzQxLDcgQEAKIAogICBkZXN0cnVj
dCA6IGZ1bmN0aW9uKCkKICAgewotICAgIGZvciAodmFyIGk9MDsgaTwgdGhpcy5fX2NvbHVtbkRh
dGFBcnIubGVuZ3RoOyBpKyspCisgICAgZm9yICh2YXIgaT0wLCBsID0gdGhpcy5fX2NvbHVtbkRh
dGFBcnIubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgIHsKICAgICAgIHRoaXMuX19jb2x1bW5EYXRh
QXJyW2ldLmhlYWRlclJlbmRlcmVyLmRpc3Bvc2UoKTsKICAgICAgIHRoaXMuX19jb2x1bW5EYXRh
QXJyW2ldLmRhdGFSZW5kZXJlci5kaXNwb3NlKCk7CkluZGV4OiB1aS9jb3JlL0Jsb2NrZXIuanMK
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQotLS0gdWkvY29yZS9CbG9ja2VyLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVp
L2NvcmUvQmxvY2tlci5qcwkod29ya2luZyBjb3B5KQpAQCAtMTkyLDcgKzE5Miw3IEBACiAgICAg
ICB0aGlzLl9fYmxvY2tlciAmJiBibG9ja2Vycy5wdXNoKHRoaXMuX19ibG9ja2VyKTsKICAgICAg
IHRoaXMuX19jb250ZW50QmxvY2tlciAmJiBibG9ja2Vycy5wdXNoKHRoaXMuX19jb250ZW50Qmxv
Y2tlcik7CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmxvY2tlcnMubGVuZ3RoOyBpKysp
IHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gYmxvY2tlcnMubGVuZ3RoOyBpIDwgbDsgaSsr
KSB7CiAgICAgICAgIGJsb2NrZXJzW2ldLnNldFN0eWxlKGtleSwgdmFsdWUpOwogICAgICAgfQog
ICAgIH0sCkBAIC01MjgsNCArNTI4LDQgQEAKICAgICB0aGlzLl9fb2xkQW5vbnltb3VzID0gdGhp
cy5fX2FjdGl2ZUVsZW1lbnRzID0gdGhpcy5fX2ZvY3VzRWxlbWVudHMgPQogICAgICAgdGhpcy5f
d2lkZ2V0ID0gdGhpcy5fX2NvbnRlbnRCbG9ja2VyQ291bnQgPSBudWxsOwogICB9Ci19KTsKXCBO
byBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHVpL2NvcmUvU2luZ2xlU2VsZWN0
aW9uTWFuYWdlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9jb3JlL1NpbmdsZVNlbGVjdGlvbk1hbmFn
ZXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvY29yZS9TaW5nbGVTZWxlY3Rpb25NYW5hZ2Vy
LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xODcsNyArMTg3LDcgQEAKICAgICAgIHZhciBpdGVtcyA9
IHRoaXMuX19zZWxlY3Rpb25Qcm92aWRlci5nZXRJdGVtcygpOwogICAgICAgdmFyIHJlc3VsdCA9
IFtdOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKQorICAg
ICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICB7
CiAgICAgICAgIGlmICh0aGlzLl9fc2VsZWN0aW9uUHJvdmlkZXIuaXNJdGVtU2VsZWN0YWJsZShp
dGVtc1tpXSkpIHsKICAgICAgICAgICByZXN1bHQucHVzaChpdGVtc1tpXSk7CkBAIC0yNjgsNyAr
MjY4LDcgQEAKICAgICB7CiAgICAgICB2YXIgaXRlbXMgPSB0aGlzLl9fc2VsZWN0aW9uUHJvdmlk
ZXIuZ2V0SXRlbXMoKTsKIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7
IGkrKykKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsr
KQogICAgICAgewogICAgICAgICBpZiAoaXRlbXNbaV0gPT09IGl0ZW0pCiAgICAgICAgIHsKSW5k
ZXg6IHVpL2NvcmUvc2VsZWN0aW9uL1Njcm9sbEFyZWEuanMKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvY29y
ZS9zZWxlY3Rpb24vU2Nyb2xsQXJlYS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9jb3JlL3Nl
bGVjdGlvbi9TY3JvbGxBcmVhLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMTEsNyArMTExLDYgQEAK
ICAgICBfZ2V0UGFnZSA6IGZ1bmN0aW9uKGxlYWQsIHVwKQogICAgIHsKICAgICAgIHZhciBzZWxl
Y3RhYmxlcyA9IHRoaXMuZ2V0U2VsZWN0YWJsZXMoKTsKLSAgICAgIHZhciBsZW5ndGggPSBzZWxl
Y3RhYmxlcy5sZW5ndGg7CiAgICAgICB2YXIgc3RhcnQgPSBzZWxlY3RhYmxlcy5pbmRleE9mKGxl
YWQpOwogCiAgICAgICAvLyBHaXZlbiBsZWFkIGlzIG5vdCBhIHNlbGVjdGFibGU/IT8KQEAgLTE3
OSw3ICsxNzgsNyBAQAogICAgICAgICB3aGlsZSgxKQogICAgICAgICB7CiAgICAgICAgICAgLy8g
SXRlcmF0ZSB0aHJvdWdoIGFsbCBzZWxlY3RhYmxlcyBmcm9tIHN0YXJ0Ci0gICAgICAgICAgZm9y
ICg7IGk8bGVuZ3RoOyBpKyspCisgICAgICAgICAgZm9yICh2YXIgbGVuID0gc2VsZWN0YWJsZXMu
bGVuZ3RoOyBpPGxlbjsgaSsrKQogICAgICAgICAgIHsKICAgICAgICAgICAgIGJvdHRvbSA9IHdp
ZGdldC5nZXRJdGVtQm90dG9tKHNlbGVjdGFibGVzW2ldKTsKIApJbmRleDogdWkvY29yZS9zZWxl
Y3Rpb24vQWJzdHJhY3QuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvY29yZS9zZWxlY3Rpb24vQWJzdHJh
Y3QuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvY29yZS9zZWxlY3Rpb24vQWJzdHJhY3QuanMJ
KHdvcmtpbmcgY29weSkKQEAgLTQ0MCw3ICs0NDAsNyBAQAogICAgICAgfQogCiAgICAgICB2YXIg
c2VsZWN0YWJsZXMgPSB0aGlzLmdldFNlbGVjdGFibGVzKCk7Ci0gICAgICBmb3IgKHZhciBpID0g
MDsgaSA8IHNlbGVjdGFibGVzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGwg
PSBzZWxlY3RhYmxlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHRoaXMu
X3RvZ2dsZUluU2VsZWN0aW9uKHNlbGVjdGFibGVzW2ldKTsKICAgICAgIH0KSW5kZXg6IHVpL2Nv
cmUvc2VsZWN0aW9uL1dpZGdldC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9jb3JlL3NlbGVjdGlvbi9X
aWRnZXQuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvY29yZS9zZWxlY3Rpb24vV2lkZ2V0Lmpz
CSh3b3JraW5nIGNvcHkpCkBAIC0zMjksNyArMzI5LDcgQEAKICAgICAgIH0KICAgICAgIGVsc2Ug
aWYgKCh2ZXJ0aWNhbCAmJiByZWxhdGlvbiA9PT0gInVuZGVyIikgfHwgKCF2ZXJ0aWNhbCAmJiBy
ZWxhdGlvbiA9PT0gInJpZ2h0IikpCiAgICAgICB7Ci0gICAgICAgIGZvciAodmFyIGk9aW5kZXgr
MTsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT1pbmRleCsxLCBs
PWNoaWxkcmVuLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBzaWJsaW5n
ID0gY2hpbGRyZW5baV07CiAgICAgICAgICAgaWYgKHRoaXMuX2lzSXRlbVNlbGVjdGFibGUoc2li
bGluZykpIHsKSW5kZXg6IHVpL2NvcmUvTU11bHRpU2VsZWN0aW9uSGFuZGxpbmcuanMKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQotLS0gdWkvY29yZS9NTXVsdGlTZWxlY3Rpb25IYW5kbGluZy5qcwkocmV2aXNpb24gMjM4
ODkpCisrKyB1aS9jb3JlL01NdWx0aVNlbGVjdGlvbkhhbmRsaW5nLmpzCSh3b3JraW5nIGNvcHkp
CkBAIC0yMjcsNyArMjI3LDcgQEAKICAgICAgKiAgICB0aGUgaXRlbXMgY29udGFpbnMgbW9yZSB0
aGFuIG9uZSBpdGVtLgogICAgICAqLwogICAgIHNldFNlbGVjdGlvbiA6IGZ1bmN0aW9uKGl0ZW1z
KSB7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAg
ICBpZiAoIXF4LnVpLmNvcmUuV2lkZ2V0LmNvbnRhaW5zKHRoaXMsIGl0ZW1zW2ldKSkgewogICAg
ICAgICAgIHRocm93IG5ldyBFcnJvcigiQ291bGQgbm90IHNlbGVjdCAiICsgaXRlbXNbaV0gKwog
ICAgICAgICAgICAgIiwgYmVjYXVzZSBpdCBpcyBub3QgYSBjaGlsZCBlbGVtZW50ISIpOwpJbmRl
eDogdWkvY29yZS9NRXhlY3V0YWJsZS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9jb3JlL01FeGVjdXRh
YmxlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL2NvcmUvTUV4ZWN1dGFibGUuanMJKHdvcmtp
bmcgY29weSkKQEAgLTE0NSw3ICsxNDUsNyBAQAogICAgICAgaWYgKGlkcyA9PSBudWxsKSB7CiAg
ICAgICAgIHRoaXMuX19leGVjdXRhYmxlQmluZGluZ0lkcyA9IGlkcyA9IHt9OwogICAgICAgfQot
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9iaW5kYWJsZVByb3BlcnRpZXMubGVuZ3Ro
OyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fYmluZGFibGVQcm9wZXJ0
aWVzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgcHJvcGVydHkgPSB0aGlzLl9i
aW5kYWJsZVByb3BlcnRpZXNbaV07CiAKICAgICAgICAgLy8gcmVtb3ZlIHRoZSBvbGQgYmluZGlu
ZwpAQCAtMTc3LDQgKzE3Nyw0IEBACiAgIGRlc3RydWN0IDogZnVuY3Rpb24oKSB7CiAgICAgdGhp
cy5fX2V4ZWN1dGFibGVCaW5kaW5nSWRzID0gbnVsbDsKICAgfQotfSk7ClwgTm8gbmV3bGluZSBh
dCBlbmQgb2YgZmlsZQorfSk7CkluZGV4OiB1aS90cmVlL1RyZWUuanMKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0g
dWkvdHJlZS9UcmVlLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3RyZWUvVHJlZS5qcwkod29y
a2luZyBjb3B5KQpAQCAtNTMzLDcgKzUzMyw3IEBACiAgICAgX29uQ2hhbmdlU2VsZWN0aW9uIDog
ZnVuY3Rpb24oZSkgewogICAgICAgdmFyIHNlbGVjdGlvbiA9IGUuZ2V0RGF0YSgpOwogICAgICAg
Ly8gZm9yIGV2ZXJ5IHNlbGVjdGVkIGZvbGRlcgotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBz
ZWxlY3Rpb24ubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gc2VsZWN0
aW9uLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgZm9sZGVyID0gc2VsZWN0aW9u
W2ldOwogICAgICAgICAvLyBnbyB1cCBhbGwgcGFyZW50cyBhbmQgb3BlbiB0aGVtCiAgICAgICAg
IHdoaWxlIChmb2xkZXIuZ2V0UGFyZW50KCkgIT0gbnVsbCkgewpJbmRleDogdWkvdHJlZS9TZWxl
Y3Rpb25NYW5hZ2VyLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3RyZWUvU2VsZWN0aW9uTWFuYWdlci5q
cwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS90cmVlL1NlbGVjdGlvbk1hbmFnZXIuanMJKHdvcmtp
bmcgY29weSkKQEAgLTc0LDcgKzc0LDcgQEAKICAgICAgIHsKICAgICAgICAgdmFyIGl0ZW1zID0g
d2lkZ2V0LmdldFJvb3QoKS5nZXRJdGVtcyh0cnVlLCAhIWFsbCwgd2lkZ2V0LmdldEhpZGVSb290
KCkpOwogCi0gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspCisg
ICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAg
ICAgICB7CiAgICAgICAgICAgaWYgKHRoaXMuX2lzU2VsZWN0YWJsZShpdGVtc1tpXSkpIHsKICAg
ICAgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW1zW2ldKTsKQEAgLTE2Myw0ICsxNjMsNCBAQAogICAg
ICAgfQogICAgIH0KICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQorfSk7Cklu
ZGV4OiB1aS9zcGxpdHBhbmUvSExheW91dC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9zcGxpdHBhbmUv
SExheW91dC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9zcGxpdHBhbmUvSExheW91dC5qcwko
d29ya2luZyBjb3B5KQpAQCAtNjgsMTEgKzY4LDEwIEBACiAgICAgcmVuZGVyTGF5b3V0IDogZnVu
Y3Rpb24oYXZhaWxXaWR0aCwgYXZhaWxIZWlnaHQpCiAgICAgewogICAgICAgdmFyIGNoaWxkcmVu
ID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJl
bi5sZW5ndGg7CiAgICAgICB2YXIgY2hpbGQsIHR5cGU7CiAgICAgICB2YXIgYmVnaW4sIHNwbGl0
dGVyLCBzbGlkZXIsIGVuZDsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQor
ICAgICAgZm9yICh2YXIgaT0wLCBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7IGk8bGVuOyBpKyspCiAg
ICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgIHR5cGUgPSBjaGls
ZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCkudHlwZTsKQEAgLTE2OSwxMiArMTY4LDExIEBACiAgICAg
X2NvbXB1dGVTaXplSGludCA6IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4g
PSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVu
Lmxlbmd0aDsKICAgICAgIHZhciBjaGlsZCwgaGludCwgcHJvcHM7CiAgICAgICB2YXIgbWluV2lk
dGg9MCwgd2lkdGg9MCwgbWF4V2lkdGg9MDsKICAgICAgIHZhciBtaW5IZWlnaHQ9MCwgaGVpZ2h0
PTAsIG1heEhlaWdodD0wOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisg
ICAgICBmb3IgKHZhciBpPTAsIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsgaTxsZW47IGkrKykKICAg
ICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAgcHJvcHMgPSBjaGls
ZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCk7CkluZGV4OiB1aS9zcGxpdHBhbmUvVkxheW91dC5qcwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0tLSB1aS9zcGxpdHBhbmUvVkxheW91dC5qcwkocmV2aXNpb24gMjM4ODkpCisr
KyB1aS9zcGxpdHBhbmUvVkxheW91dC5qcwkod29ya2luZyBjb3B5KQpAQCAtNjgsMTEgKzY4LDEw
IEBACiAgICAgcmVuZGVyTGF5b3V0IDogZnVuY3Rpb24oYXZhaWxXaWR0aCwgYXZhaWxIZWlnaHQp
CiAgICAgewogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fZ2V0TGF5b3V0Q2hpbGRyZW4oKTsK
LSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgY2hpbGQsIHR5
cGU7CiAgICAgICB2YXIgYmVnaW4sIHNwbGl0dGVyLCBzbGlkZXIsIGVuZDsKIAotICAgICAgZm9y
ICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsZW4gPSBjaGls
ZHJlbi5sZW5ndGg7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRy
ZW5baV07CiAgICAgICAgIHR5cGUgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCkudHlwZTsK
QEAgLTE2OSwxMiArMTY4LDExIEBACiAgICAgX2NvbXB1dGVTaXplSGludCA6IGZ1bmN0aW9uKCkK
ICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwot
ICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBjaGlsZCwgaGlu
dCwgcHJvcHM7CiAgICAgICB2YXIgbWluSGVpZ2h0PTAsIGhlaWdodD0wLCBtYXhIZWlnaHQ9MDsK
ICAgICAgIHZhciBtaW5XaWR0aD0wLCB3aWR0aD0wLCBtYXhXaWR0aD0wOwogCi0gICAgICBmb3Ig
KHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGxlbiA9IGNoaWxk
cmVuLmxlbmd0aDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJl
bltpXTsKICAgICAgICAgcHJvcHMgPSBjaGlsZC5nZXRMYXlvdXRQcm9wZXJ0aWVzKCk7CkluZGV4
OiB1aS90YWJ2aWV3L1RhYlZpZXcuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdGFidmlldy9UYWJWaWV3
LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3RhYnZpZXcvVGFiVmlldy5qcwkod29ya2luZyBj
b3B5KQpAQCAtMzkzLDcgKzM5Myw3IEBACiAgICAgICB2YXIgYnV0dG9ucyA9IHRoaXMuX19yYWRp
b0dyb3VwLmdldFNlbGVjdGlvbigpOwogICAgICAgdmFyIHJlc3VsdCA9IFtdOwogCi0gICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IGJ1dHRvbnMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFy
IGkgPSAwLCBsID0gYnV0dG9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgcmVzdWx0
LnB1c2goYnV0dG9uc1tpXS5nZXRVc2VyRGF0YSgicGFnZSIpKTsKICAgICAgIH0KIApAQCAtNDEw
LDcgKzQxMCw3IEBACiAgICAgc2V0U2VsZWN0aW9uIDogZnVuY3Rpb24oaXRlbXMpIHsKICAgICAg
IHZhciBidXR0b25zID0gW10KIAotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5n
dGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKICAgICAgICAgYnV0dG9ucy5wdXNoKGl0ZW1zW2ldLmdldENoaWxkQ29udHJvbCgi
YnV0dG9uIikpOwogICAgICAgfQogICAgICAgdGhpcy5fX3JhZGlvR3JvdXAuc2V0U2VsZWN0aW9u
KGJ1dHRvbnMpOwpAQCAtNDU2LDcgKzQ1Niw3IEBACiAgICAgICB2YXIgYnV0dG9ucyA9IHRoaXMu
X19yYWRpb0dyb3VwLmdldFNlbGVjdGFibGVzKGFsbCk7CiAgICAgICB2YXIgcmVzdWx0ID0gW107
CiAKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDxidXR0b25zLmxlbmd0aDsgaSsrKSB7CisgICAg
ICBmb3IgKHZhciBpID0gMCwgbCA9IGJ1dHRvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAg
ICAgIHJlc3VsdC5wdXNoKGJ1dHRvbnNbaV0uZ2V0VXNlckRhdGEoInBhZ2UiKSk7CiAgICAgICB9
CiAKSW5kZXg6IHVpL3Rvb2xiYXIvVG9vbEJhci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS90b29sYmFy
L1Rvb2xCYXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdG9vbGJhci9Ub29sQmFyLmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0zNzgsNyArMzc4LDcgQEAKICAgICAgICAgfQogCiAgICAgICAgIC8v
IHNldCBhbGwgYnV0dG9ucyBiYWNrIHRvIHZpc2libGUKLSAgICAgICAgZm9yICh2YXIgaSA9IDA7
IGkgPCB0aGlzLl9fcmVtb3ZlZEl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFy
IGkgPSAwLCBsID0gdGhpcy5fX3JlbW92ZWRJdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAg
ICAgICAgICB0aGlzLl9fcmVtb3ZlZEl0ZW1zW2ldLnNldFZpc2liaWxpdHkoInZpc2libGUiKTsK
ICAgICAgICAgfTsKICAgICAgICAgLy8gcmVzZXQgdGhlIHJlbW92ZWQgaXRlbXMKSW5kZXg6IHVp
L2Zvcm0vUmFkaW9Hcm91cC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL1JhZGlvR3JvdXAuanMJ
KHJldmlzaW9uIDIzODg5KQorKysgdWkvZm9ybS9SYWRpb0dyb3VwLmpzCSh3b3JraW5nIGNvcHkp
CkBAIC0zMDMsMTQgKzMwMywxNCBAQAogICAgICovCiAgICAgLy8gcHJvcGVydHkgYXBwbHkKICAg
ICBfYXBwbHlJbnZhbGlkTWVzc2FnZSA6IGZ1bmN0aW9uKHZhbHVlLCBvbGQpIHsKLSAgICAgIGZv
ciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2l0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IHRoaXMuX19pdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAg
ICAgdGhpcy5fX2l0ZW1zW2ldLnNldEludmFsaWRNZXNzYWdlKHZhbHVlKTsKICAgICAgIH0KICAg
ICB9LAogCiAgICAgLy8gcHJvcGVydHkgYXBwbHkKICAgICBfYXBwbHlWYWxpZDogZnVuY3Rpb24o
dmFsdWUsIG9sZCkgewotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9faXRlbXMubGVu
Z3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2l0ZW1zLmxlbmd0
aDsgaSA8IGw7IGkrKykgewogICAgICAgICB0aGlzLl9faXRlbXNbaV0uc2V0VmFsaWQodmFsdWUp
OwogICAgICAgfQogICAgIH0sCkBAIC0zNjIsMTggKzM2MiwxOCBAQAogICAgICAgfQogCiAgICAg
ICB2YXIgaSA9IDA7Ci0gICAgICB2YXIgbGVuZ3RoID0gaXRlbXMubGVuZ3RoOworICAgICAgdmFy
IGxlbiA9IGl0ZW1zLmxlbmd0aDsKIAogICAgICAgLy8gRmluZCBuZXh0IGVuYWJsZWQgaXRlbQog
ICAgICAgaWYgKHRoaXMuZ2V0V3JhcCgpKSB7Ci0gICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkg
JSBsZW5ndGg7CisgICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkgJSBsZW47CiAgICAgICB9IGVs
c2UgewotICAgICAgICBpbmRleCA9IE1hdGgubWluKGluZGV4ICsgMSwgbGVuZ3RoIC0gMSk7Cisg
ICAgICAgIGluZGV4ID0gTWF0aC5taW4oaW5kZXggKyAxLCBsZW4gLSAxKTsKICAgICAgIH0KIAot
ICAgICAgd2hpbGUgKGkgPCBsZW5ndGggJiYgIWl0ZW1zW2luZGV4XS5nZXRFbmFibGVkKCkpCisg
ICAgICB3aGlsZSAoaSA8IGxlbiAmJiAhaXRlbXNbaW5kZXhdLmdldEVuYWJsZWQoKSkKICAgICAg
IHsKLSAgICAgICAgaW5kZXggPSAoaW5kZXggKyAxKSAlIGxlbmd0aDsKKyAgICAgICAgaW5kZXgg
PSAoaW5kZXggKyAxKSAlIGxlbjsKICAgICAgICAgaSsrOwogICAgICAgfQogCkBAIC0zOTQsMTgg
KzM5NCwxOCBAQAogICAgICAgfQogCiAgICAgICB2YXIgaSA9IDA7Ci0gICAgICB2YXIgbGVuZ3Ro
ID0gaXRlbXMubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGl0ZW1zLmxlbmd0aDsKIAogICAgICAg
Ly8gRmluZCBwcmV2aW91cyBlbmFibGVkIGl0ZW0KICAgICAgIGlmICh0aGlzLmdldFdyYXAoKSkg
ewotICAgICAgICBpbmRleCA9IChpbmRleCAtIDEgKyBsZW5ndGgpICUgbGVuZ3RoOworICAgICAg
ICBpbmRleCA9IChpbmRleCAtIDEgKyBsZW4pICUgbGVuOwogICAgICAgfSBlbHNlIHsKICAgICAg
ICAgaW5kZXggPSBNYXRoLm1heChpbmRleCAtIDEsIDApOwogICAgICAgfQogCi0gICAgICB3aGls
ZSAoaSA8IGxlbmd0aCAmJiAhaXRlbXNbaW5kZXhdLmdldEVuYWJsZWQoKSkKKyAgICAgIHdoaWxl
IChpIDwgbGVuICYmICFpdGVtc1tpbmRleF0uZ2V0RW5hYmxlZCgpKQogICAgICAgewotICAgICAg
ICBpbmRleCA9IChpbmRleCAtIDEgKyBsZW5ndGgpICUgbGVuZ3RoOworICAgICAgICBpbmRleCA9
IChpbmRleCAtIDEgKyBsZW4pICUgbGVuOwogICAgICAgICBpKys7CiAgICAgICB9CiAKSW5kZXg6
IHVpL2Zvcm0vTGlzdC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL0xpc3QuanMJKHJldmlzaW9u
IDIzODg5KQorKysgdWkvZm9ybS9MaXN0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0yNzYsNyArMjc2
LDcgQEAKICAgICAgIGlmIChlLmdldEtleUlkZW50aWZpZXIoKSA9PSAiRW50ZXIiICYmICFlLmlz
QWx0UHJlc3NlZCgpKQogICAgICAgewogICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLmdldFNlbGVj
dGlvbigpOwotICAgICAgICBmb3IgKHZhciBpPTA7IGk8aXRlbXMubGVuZ3RoOyBpKyspIHsKKyAg
ICAgICAgZm9yICh2YXIgaT0wLCBsPWl0ZW1zLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
ICBpdGVtc1tpXS5maXJlRXZlbnQoImFjdGlvbiIpOwogICAgICAgICB9CiAKSW5kZXg6IHVpL2Zv
cm0vdmFsaWRhdGlvbi9NYW5hZ2VyLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL2Zvcm0vdmFsaWRhdGlv
bi9NYW5hZ2VyLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL2Zvcm0vdmFsaWRhdGlvbi9NYW5h
Z2VyLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xODIsNyArMTgyLDcgQEAKICAgICAgIHZhciBpdGVt
cyA9IFtdOwogCiAgICAgICAvLyBjaGVjayBhbGwgdmFsaWRhdG9ycyBmb3IgdGhlIGFkZGVkIGZv
cm0gaXRlbXMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fX2Zvcm1JdGVtcy5sZW5n
dGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9fZm9ybUl0ZW1zLmxl
bmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgZm9ybUl0ZW0gPSB0aGlzLl9fZm9ybUl0
ZW1zW2ldLml0ZW07CiAgICAgICAgIHZhciB2YWxpZGF0b3IgPSB0aGlzLl9fZm9ybUl0ZW1zW2ld
LnZhbGlkYXRvcjsKIApAQCAtNDQ0LDcgKzQ0NCw3IEBACiAgICAgZ2V0SW52YWxpZE1lc3NhZ2Vz
OiBmdW5jdGlvbigpIHsKICAgICAgIHZhciBtZXNzYWdlcyA9IFtdOwogICAgICAgLy8gY29tYmlu
ZSB0aGUgbWVzc2FnZXMgb2YgYWxsIGZvcm0gaXRlbXMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgdGhpcy5fX2Zvcm1JdGVtcy5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAs
IGwgPSB0aGlzLl9fZm9ybUl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIg
Zm9ybUl0ZW0gPSB0aGlzLl9fZm9ybUl0ZW1zW2ldLml0ZW07CiAgICAgICAgIGlmICghZm9ybUl0
ZW0uZ2V0VmFsaWQoKSkgewogICAgICAgICAgIG1lc3NhZ2VzLnB1c2goZm9ybUl0ZW0uZ2V0SW52
YWxpZE1lc3NhZ2UoKSk7CkBAIC00NjQsNyArNDY0LDcgQEAKICAgICAgKi8KICAgICByZXNldDog
ZnVuY3Rpb24oKSB7CiAgICAgICAvLyByZXNldCBhbGwgZm9ybSBpdGVtcwotICAgICAgZm9yICh2
YXIgaSA9IDA7IGkgPCB0aGlzLl9fZm9ybUl0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IHRoaXMuX19mb3JtSXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAg
ICAgICAgIHZhciBkYXRhRW50cnkgPSB0aGlzLl9fZm9ybUl0ZW1zW2ldOwogICAgICAgICAvLyBz
ZXQgdGhlIGZpZWxkIHRvIHZhbGlkCiAgICAgICAgIGRhdGFFbnRyeS5pdGVtLnNldFZhbGlkKHRy
dWUpOwpJbmRleDogdWkvZm9ybS9yZW5kZXJlci9TaW5nbGVQbGFjZWhvbGRlci5qcwo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09Ci0tLSB1aS9mb3JtL3JlbmRlcmVyL1NpbmdsZVBsYWNlaG9sZGVyLmpzCShyZXZpc2lvbiAy
Mzg4OSkKKysrIHVpL2Zvcm0vcmVuZGVyZXIvU2luZ2xlUGxhY2Vob2xkZXIuanMJKHdvcmtpbmcg
Y29weSkKQEAgLTM4LDcgKzM4LDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gYWRkIHRoZSBpdGVt
cwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAg
aWYgKGl0ZW1zW2ldLnNldFBsYWNlaG9sZGVyID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICB0
aHJvdyBuZXcgRXJyb3IoIk9ubHkgd2lkZ2V0cyB3aXRoIHBsYWNlaG9sZGVycyBzdXBwb3J0ZWQu
Iik7CiAgICAgICAgIH0KSW5kZXg6IHVpL2Zvcm0vcmVuZGVyZXIvQWJzdHJhY3RSZW5kZXJlci5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL3JlbmRlcmVyL0Fic3RyYWN0UmVuZGVyZXIuanMJKHJl
dmlzaW9uIDIzODg5KQorKysgdWkvZm9ybS9yZW5kZXJlci9BYnN0cmFjdFJlbmRlcmVyLmpzCSh3
b3JraW5nIGNvcHkpCkBAIC00OSw3ICs0OSw3IEBACiAKICAgICAvLyBhZGQgdGhlIGdyb3Vwcwog
ICAgIHZhciBncm91cHMgPSBmb3JtLmdldEdyb3VwcygpOwotICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7CisgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBncm91cHMu
bGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICB2YXIgZ3JvdXAgPSBncm91cHNbaV07CiAgICAg
ICB0aGlzLmFkZEl0ZW1zKAogICAgICAgICBncm91cC5pdGVtcywgZ3JvdXAubGFiZWxzLCBncm91
cC50aXRsZSwgZ3JvdXAub3B0aW9ucywgZ3JvdXAuaGVhZGVyT3B0aW9ucwpAQCAtNTksNyArNTks
NyBAQAogICAgIC8vIGFkZCB0aGUgYnV0dG9ucwogICAgIHZhciBidXR0b25zID0gZm9ybS5nZXRC
dXR0b25zKCk7CiAgICAgdmFyIGJ1dHRvbk9wdGlvbnMgPSBmb3JtLmdldEJ1dHRvbk9wdGlvbnMo
KTsKLSAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1dHRvbnMubGVuZ3RoOyBpKyspIHsKKyAgICBm
b3IgKHZhciBpID0gMCwgbCA9IGJ1dHRvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICB0
aGlzLmFkZEJ1dHRvbihidXR0b25zW2ldLCBidXR0b25PcHRpb25zW2ldKTsKICAgICB9CiAgIH0s
CkBAIC05Miw3ICs5Miw3IEBACiAgICAgX29uQ2hhbmdlTG9jYWxlIDogcXguY29yZS5WYXJpYW50
LnNlbGVjdCgicXguZHlubG9jYWxlIiwKICAgICB7CiAgICAgICAib24iIDogZnVuY3Rpb24oZSkg
ewotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX25hbWVzLmxlbmd0aDsgaSsrKSB7
CisgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fbmFtZXMubGVuZ3RoOyBpIDwgbDsg
aSsrKSB7CiAgICAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy5fbmFtZXNbaV07CiAgICAgICAgICAg
aWYgKGVudHJ5Lm5hbWUgJiYgZW50cnkubmFtZS50cmFuc2xhdGUpIHsKICAgICAgICAgICAgIGVu
dHJ5Lm5hbWUgPSBlbnRyeS5uYW1lLnRyYW5zbGF0ZSgpOwpAQCAtMTU1LDkgKzE1NSw5IEBACiAg
ICAgdGhpcy5fbmFtZXMgPSBudWxsOwogCiAgICAgLy8gcmVtb3ZlIHRoZSB2aXNpYmlsaXR5IGJp
bmRpbmdzCi0gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl92aXNpYmlsaXR5QmluZGluZ0lk
cy5sZW5ndGg7IGkrKykgeworICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fdmlzaWJpbGl0
eUJpbmRpbmdJZHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICB2YXIgZW50cnkgPSB0aGlz
Ll92aXNpYmlsaXR5QmluZGluZ0lkc1tpXTsKICAgICAgIGVudHJ5Lml0ZW0ucmVtb3ZlQmluZGlu
ZyhlbnRyeS5pZCk7CiAgICAgfTsKICAgfQotfSk7ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmls
ZQorfSk7CkluZGV4OiB1aS9mb3JtL3JlbmRlcmVyL0RvdWJsZS5qcwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1
aS9mb3JtL3JlbmRlcmVyL0RvdWJsZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9mb3JtL3Jl
bmRlcmVyL0RvdWJsZS5qcwkod29ya2luZyBjb3B5KQpAQCAtNjQsNyArNjQsNyBAQAogICAgICAg
fQogCiAgICAgICAvLyBhZGQgdGhlIGl0ZW1zCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0
ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0
aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLl9jcmVhdGVMYWJlbChu
YW1lc1tpXSwgaXRlbXNbaV0pOwogICAgICAgICB0aGlzLl9hZGQobGFiZWwsIHtyb3c6IHRoaXMu
X3JvdywgY29sdW1uOiAoaSAqIDIpICUgNH0pOwogICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ld
OwpJbmRleDogdWkvZm9ybS9yZW5kZXJlci9TaW5nbGUuanMKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvZm9y
bS9yZW5kZXJlci9TaW5nbGUuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvZm9ybS9yZW5kZXJl
ci9TaW5nbGUuanMJKHdvcmtpbmcgY29weSkKQEAgLTYzLDcgKzYzLDcgQEAKICAgICAgIH0KIAog
ICAgICAgLy8gYWRkIHRoZSBpdGVtcwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5s
ZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkg
PCBsOyBpKyspIHsKICAgICAgICAgdmFyIGxhYmVsID0gdGhpcy5fY3JlYXRlTGFiZWwobmFtZXNb
aV0sIGl0ZW1zW2ldKTsKICAgICAgICAgdGhpcy5fYWRkKGxhYmVsLCB7cm93OiB0aGlzLl9yb3cs
IGNvbHVtbjogMH0pOwogICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldOwpJbmRleDogdWkvZm9y
bS9SZXNldHRlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL1Jlc2V0dGVyLmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIHVpL2Zvcm0vUmVzZXR0ZXIuanMJKHdvcmtpbmcgY29weSkKQEAgLTY2LDcg
KzY2LDcgQEAKICAgICAgKi8KICAgICByZXNldDogZnVuY3Rpb24oKSB7CiAgICAgICAvLyByZXNl
dCBhbGwgZm9ybSBpdGVtcwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9faXRlbXMu
bGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2l0ZW1zLmxl
bmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB2YXIgZGF0YUVudHJ5ID0gdGhpcy5fX2l0ZW1z
W2ldOwogICAgICAgICAvLyBzZXQgdGhlIGluaXQgdmFsdWUKICAgICAgICAgdGhpcy5fX3NldEl0
ZW0oZGF0YUVudHJ5Lml0ZW0sIGRhdGFFbnRyeS5pbml0KTsKQEAgLTg0LDcgKzg0LDcgQEAKICAg
ICB7CiAgICAgICAvLyBnZXQgdGhlIGluaXQgdmFsdWUKICAgICAgIHZhciBpbml0OwotICAgICAg
Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9faXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZv
ciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2l0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAg
ICAgICB2YXIgZGF0YUVudHJ5ID0gdGhpcy5fX2l0ZW1zW2ldOwogICAgICAgICBpZiAoZGF0YUVu
dHJ5Lml0ZW0gPT09IGl0ZW0pIHsKICAgICAgICAgICBpbml0ID0gZGF0YUVudHJ5LmluaXQ7CkBA
IC0xMjUsNyArMTI1LDcgQEAKICAgICAgKi8KICAgICByZWRlZmluZTogZnVuY3Rpb24oKSB7CiAg
ICAgICAvLyBnbyB0aHJldyBhbGwgYWRkZWQgaXRlbXMKLSAgICAgIGZvciAodmFyIGkgPSAwOyBp
IDwgdGhpcy5fX2l0ZW1zLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9
IHRoaXMuX19pdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdmFyIGl0ZW0gPSB0
aGlzLl9faXRlbXNbaV0uaXRlbTsKICAgICAgICAgLy8gc2V0IHRoZSBuZXcgaW5pdCB2YWx1ZSBm
b3IgdGhlIGl0ZW0KICAgICAgICAgdGhpcy5fX2l0ZW1zW2ldLmluaXQgPSB0aGlzLl9fZ2V0Q3Vy
cmVudFZhbHVlKGl0ZW0pOwpAQCAtMTQzLDcgKzE0Myw3IEBACiAgICAgewogICAgICAgLy8gZ2V0
IHRoZSBkYXRhIGVudHJ5CiAgICAgICB2YXIgZGF0YUVudHJ5OwotICAgICAgZm9yICh2YXIgaSA9
IDA7IGkgPCB0aGlzLl9faXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAw
LCBsID0gdGhpcy5fX2l0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICBpZiAodGhp
cy5fX2l0ZW1zW2ldLml0ZW0gPT09IGl0ZW0pIHsKICAgICAgICAgICBkYXRhRW50cnkgPSB0aGlz
Ll9faXRlbXNbaV07CiAgICAgICAgICAgYnJlYWs7CkluZGV4OiB1aS9mb3JtL0Zvcm0uanMKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQotLS0gdWkvZm9ybS9Gb3JtLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL2Zvcm0v
Rm9ybS5qcwkod29ya2luZyBjb3B5KQpAQCAtMjU2LDEwICsyNTYsMTAgQEAKICAgICBnZXRJdGVt
cyA6IGZ1bmN0aW9uKCkgewogICAgICAgdmFyIGl0ZW1zID0ge307CiAgICAgICAvLyBnbyB0aHJl
dyBhbGwgZ3JvdXBzCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19ncm91cHMubGVu
Z3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fX2dyb3Vwcy5sZW5n
dGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdmFyIGdyb3VwID0gdGhpcy5fX2dyb3Vwc1tpXTsK
ICAgICAgICAgLy8gZ2V0IGFsbCBpdGVtcwotICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGdy
b3VwLm5hbWVzLmxlbmd0aDsgaisrKSB7CisgICAgICAgIGZvciAodmFyIGogPSAwLCBsID0gIGdy
b3VwLm5hbWVzLmxlbmd0aDsgaiA8IGw7IGorKykgewogICAgICAgICAgIHZhciBuYW1lID0gZ3Jv
dXAubmFtZXNbal07CiAgICAgICAgICAgaXRlbXNbbmFtZV0gPSBncm91cC5pdGVtc1tqXTsKICAg
ICAgICAgfQpJbmRleDogdWkvZm9ybS9SYWRpb0J1dHRvbkdyb3VwLmpzCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0t
IHVpL2Zvcm0vUmFkaW9CdXR0b25Hcm91cC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9mb3Jt
L1JhZGlvQnV0dG9uR3JvdXAuanMJKHdvcmtpbmcgY29weSkKQEAgLTEzMiw3ICsxMzIsNyBAQAog
ICAgIC8vIHByb3BlcnR5IGFwcGx5CiAgICAgX2FwcGx5SW52YWxpZE1lc3NhZ2UgOiBmdW5jdGlv
bih2YWx1ZSwgb2xkKSB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRDaGlsZHJlbigp
OwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykgeworICAg
ICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAg
ICAgICAgY2hpbGRyZW5baV0uc2V0SW52YWxpZE1lc3NhZ2UodmFsdWUpOwogICAgICAgfQogICAg
IH0sCkBAIC0xNDEsNyArMTQxLDcgQEAKICAgICAvLyBwcm9wZXJ0eSBhcHBseQogICAgIF9hcHBs
eVZhbGlkOiBmdW5jdGlvbih2YWx1ZSwgb2xkKSB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlz
Ll9nZXRDaGlsZHJlbigpOwotICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5n
dGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGkg
PCBsOyBpKyspIHsKICAgICAgICAgY2hpbGRyZW5baV0uc2V0VmFsaWQodmFsdWUpOwogICAgICAg
fQogICAgIH0sCkBAIC0yMDgsNyArMjA4LDcgQEAKICAgICB7CiAgICAgICAvLyByZW1vdmUgYWxs
IGNoaWxkcmVuIGZyb20gdGhlIHJhZGlvIGdyb3VwCiAgICAgICB2YXIgcmFkaW9JdGVtcyA9IHRo
aXMuX19yYWRpb0dyb3VwLmdldEl0ZW1zKCk7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJh
ZGlvSXRlbXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gcmFkaW9J
dGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdGhpcy5fX3JhZGlvR3JvdXAucmVt
b3ZlKHJhZGlvSXRlbXNbaV0pOwogICAgICAgfQogCkluZGV4OiB1aS9mb3JtL01Nb2RlbFNlbGVj
dGlvbi5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9mb3JtL01Nb2RlbFNlbGVjdGlvbi5qcwkocmV2aXNp
b24gMjM4ODkpCisrKyB1aS9mb3JtL01Nb2RlbFNlbGVjdGlvbi5qcwkod29ya2luZyBjb3B5KQpA
QCAtNjUsNyArNjUsNyBAQAogCiAgICAgICAvLyBjcmVhdGUgdGhlIGFycmF5IHdpdGggdGhlIG1v
ZGVzIGluc2lkZQogICAgICAgdmFyIG1vZGVsU2VsZWN0aW9uID0gW107Ci0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGkgPSAwLCBs
ID0gZGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgdmFyIGl0ZW0gPSBkYXRhW2ld
OwogICAgICAgICAvLyBmYWxsYmFjayBpZiBnZXRNb2RlbCBpcyBub3QgaW1wbGVtZW50ZWQKICAg
ICAgICAgdmFyIG1vZGVsID0gaXRlbS5nZXRNb2RlbCA/IGl0ZW0uZ2V0TW9kZWwoKSA6IG51bGw7
CkBAIC05MCw5ICs5MCw5IEBACiAgICAgICB2YXIgaXRlbVNlbGVjdGlvbiA9IFtdOwogCiAgICAg
ICB2YXIgbW9kZWxTZWxlY3Rpb24gPSB0aGlzLl9fbW9kZWxTZWxlY3Rpb24udG9BcnJheSgpOwot
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtb2RlbFNlbGVjdGlvbi5sZW5ndGg7IGkrKykgewor
ICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBtb2RlbFNlbGVjdGlvbi5sZW5ndGg7IGkgPCBsOyAg
aSsrKSB7CiAgICAgICAgIHZhciBtb2RlbCA9IG1vZGVsU2VsZWN0aW9uW2ldOwotICAgICAgICBm
b3IgKHZhciBqID0gMDsgaiA8IHNlbGVjdGFibGVzLmxlbmd0aDsgaisrKSB7CisgICAgICAgIGZv
ciAodmFyIGogPSAwLCBsID0gc2VsZWN0YWJsZXMubGVuZ3RoOyBqIDwgbDsgaisrKSB7CiAgICAg
ICAgICAgdmFyIHNlbGVjdGFibGUgPSBzZWxlY3RhYmxlc1tqXTsKICAgICAgICAgICAvLyBmYWxs
YmFjayBpZiBnZXRNb2RlbCBpcyBub3QgaW1wbGVtZW50ZWQKICAgICAgICAgICB2YXIgc2VsZWN0
YWJsZU1vZGVsID0gc2VsZWN0YWJsZS5nZXRNb2RlbCA/IHNlbGVjdGFibGUuZ2V0TW9kZWwoKSA6
IG51bGw7CkluZGV4OiB1aS9wb3B1cC9NYW5hZ2VyLmpzCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3BvcHVw
L01hbmFnZXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvcG9wdXAvTWFuYWdlci5qcwkod29y
a2luZyBjb3B5KQpAQCAtMTEwLDcgKzExMCw3IEBACiAgICAgaGlkZUFsbCA6IGZ1bmN0aW9uKCkK
ICAgICB7CiAgICAgICBpZiAodGhpcy5fX29iamVjdHMpIHsKLSAgICAgICAgZm9yICh2YXIgaSA9
IDA7IGkgPCB0aGlzLl9fb2JqZWN0cy5sZW5ndGg7IGkrKykgeworICAgICAgICBmb3IgKHZhciBp
ID0gMCwgbCA9IHRoaXMuX19vYmplY3RzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAg
IHRoaXMuX19vYmplY3RzW2ldLmV4Y2x1ZGUoKTsKICAgICAgICAgfQogICAgICAgfQpAQCAtMTM0
LDcgKzEzNCw3IEBACiAgICAgX191cGRhdGVJbmRleGVzIDogZnVuY3Rpb24oKQogICAgIHsKICAg
ICAgIHZhciBtaW4gPSAxZTc7Ci0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX19vYmpl
Y3RzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMuX19vYmpl
Y3RzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICB0aGlzLl9fb2JqZWN0c1tpXS5zZXRa
SW5kZXgobWluKyspOwogICAgICAgfQogICAgIH0sCkBAIC0xNjMsNyArMTYzLDcgQEAKICAgICAg
IHZhciB0YXJnZXQgPSBxeC51aS5jb3JlLldpZGdldC5nZXRXaWRnZXRCeUVsZW1lbnQoZS5nZXRU
YXJnZXQoKSk7CiAKICAgICAgIHZhciByZWcgPSB0aGlzLl9fb2JqZWN0czsKLSAgICAgIGZvciAo
dmFyIGkgPSAwOyBpIDwgcmVnLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGwg
PSByZWcubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgb2JqID0gcmVn
W2ldOwogCkBAIC0xOTEsNCArMTkxLDQgQEAKIAogICAgIHRoaXMuX2Rpc3Bvc2VBcnJheSgiX19v
YmplY3RzIik7CiAgIH0KLX0pOwpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKK30pOwpJbmRl
eDogdWkvbWVudS9NZW51LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL21lbnUvTWVudS5qcwkocmV2aXNp
b24gMjM4ODkpCisrKyB1aS9tZW51L01lbnUuanMJKHdvcmtpbmcgY29weSkKQEAgLTM1MSw3ICsz
NTEsNyBAQAogICAgICAgdmFyIHJlc3VsdCA9IFtdOwogICAgICAgdmFyIGNoaWxkcmVuID0gdGhp
cy5nZXRDaGlsZHJlbigpOwogCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxl
bmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGkg
PCBsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChjaGlsZHJlbltpXS5pc0VuYWJsZWQoKSkg
ewogICAgICAgICAgIHJlc3VsdC5wdXNoKGNoaWxkcmVuW2ldKTsKQEAgLTUzOSw3ICs1MzksNyBA
QAogICAgICAgICAgIHNsaWRlYmFyTGF5b3V0LmRpc3Bvc2UoKTsKIAogICAgICAgICAgIHZhciBj
aGlsZHJlbiA9IHF4LmxhbmcuQXJyYXkuY2xvbmUodGhpcy5nZXRDaGlsZHJlbigpKTsKLSAgICAg
ICAgICBmb3IgKHZhciBpPTA7IGk8Y2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsKKyAgICAgICAgICBm
b3IgKHZhciBpPTAsIGw9Y2hpbGRyZW4ubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICAgICAg
Y29udHJvbC5hZGQoY2hpbGRyZW5baV0pOwogICAgICAgICAgIH0KIApJbmRleDogdWkvbWVudS9N
YW5hZ2VyLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL21lbnUvTWFuYWdlci5qcwkocmV2aXNpb24gMjM4
ODkpCisrKyB1aS9tZW51L01hbmFnZXIuanMJKHdvcmtpbmcgY29weSkKQEAgLTExMiwxMCArMTEy
LDEwIEBACiAgICAgX2dldENoaWxkIDogZnVuY3Rpb24obWVudSwgc3RhcnQsIGl0ZXIsIGxvb3Ap
CiAgICAgewogICAgICAgdmFyIGNoaWxkcmVuID0gbWVudS5nZXRDaGlsZHJlbigpOwotICAgICAg
dmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5s
ZW5ndGg7CiAgICAgICB2YXIgY2hpbGQ7CiAKLSAgICAgIGZvciAodmFyIGk9c3RhcnQ7IGk8bGVu
Z3RoICYmIGk+PTA7IGkrPWl0ZXIpCisgICAgICBmb3IgKHZhciBpPXN0YXJ0OyBpPGxlbiAmJiBp
Pj0wOyBpKz1pdGVyKQogICAgICAgewogICAgICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogICAg
ICAgICBpZiAoY2hpbGQuaXNFbmFibGVkKCkgJiYgIWNoaWxkLmlzQW5vbnltb3VzKCkpIHsKQEAg
LTEyNSw3ICsxMjUsNyBAQAogCiAgICAgICBpZiAobG9vcCkKICAgICAgIHsKLSAgICAgICAgaSA9
IGkgPT0gbGVuZ3RoID8gMCA6IGxlbmd0aC0xOworICAgICAgICBpID0gaSA9PSBsZW4gPyAwIDog
bGVuLTE7CiAgICAgICAgIGZvciAoOyBpIT1zdGFydDsgaSs9aXRlcikKICAgICAgICAgewogICAg
ICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07CkBAIC02NTEsMTAgKzY1MSwxMCBAQAogCiAgICAg
ICAgIC8vIEdldCBwcmV2aW91cyBidXR0b24sIGZhbGxiYWNrIHRvIGVuZCBpZiBmaXJzdCBhcnJp
dmVkCiAgICAgICAgIHZhciBwcmV2QnV0dG9uID0gbnVsbDsKLSAgICAgICAgdmFyIGxlbmd0aCA9
ICBidXR0b25zLmxlbmd0aDsKLSAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gbGVuZ3RoOyBp
KyspCisgICAgICAgIHZhciBsZW4gPSAgYnV0dG9ucy5sZW5ndGg7CisgICAgICAgIGZvciAodmFy
IGkgPSAxOyBpIDw9IGxlbjsgaSsrKQogICAgICAgICB7Ci0gICAgICAgICAgdmFyIGJ1dHRvbiA9
IGJ1dHRvbnNbKGluZGV4IC0gaSArIGxlbmd0aCkgJSBsZW5ndGhdOworICAgICAgICAgIHZhciBi
dXR0b24gPSBidXR0b25zWyhpbmRleCAtIGkgKyBsZW4pICUgbGVuXTsKICAgICAgICAgICBpZihi
dXR0b24uaXNFbmFibGVkKCkpIHsKICAgICAgICAgICAgIHByZXZCdXR0b24gPSBidXR0b247CiAg
ICAgICAgICAgICBicmVhazsKQEAgLTc1OCwxMCArNzU4LDEwIEBACiAKICAgICAgICAgLy8gR2V0
IG5leHQgYnV0dG9uLCBmYWxsYmFjayB0byBmaXJzdCBpZiBlbmQgYXJyaXZlZAogICAgICAgICB2
YXIgbmV4dEJ1dHRvbiA9IG51bGw7Ci0gICAgICAgIHZhciBsZW5ndGggPSAgYnV0dG9ucy5sZW5n
dGg7Ci0gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IGxlbmd0aDsgaSsrKQorICAgICAgICB2
YXIgbGVuID0gIGJ1dHRvbnMubGVuZ3RoOworICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBs
ZW47IGkrKykKICAgICAgICAgewotICAgICAgICAgIHZhciBidXR0b24gPSBidXR0b25zWyhpbmRl
eCArIGkpICUgbGVuZ3RoXTsKKyAgICAgICAgICB2YXIgYnV0dG9uID0gYnV0dG9uc1soaW5kZXgg
KyBpKSAlIGxlbl07CiAgICAgICAgICAgaWYoYnV0dG9uLmlzRW5hYmxlZCgpKSB7CiAgICAgICAg
ICAgICBuZXh0QnV0dG9uID0gYnV0dG9uOwogICAgICAgICAgICAgYnJlYWs7CkluZGV4OiB1aS9t
ZW51L0xheW91dC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9tZW51L0xheW91dC5qcwkocmV2aXNpb24g
MjM4ODkpCisrKyB1aS9tZW51L0xheW91dC5qcwkod29ya2luZyBjb3B5KQpAQCAtMTE3LDcgKzEx
Nyw3IEBACiAKICAgICAgICAgc2l6ZXMgPSBjaGlsZC5nZXRDaGlsZHJlblNpemVzKCk7CiAKLSAg
ICAgICAgZm9yICh2YXIgY29sdW1uPTA7IGNvbHVtbjxzaXplcy5sZW5ndGg7IGNvbHVtbisrKQor
ICAgICAgICBmb3IgKHZhciBjb2x1bW49MCwgbD1zaXplcy5sZW5ndGg7IGNvbHVtbjxsOyBjb2x1
bW4rKykKICAgICAgICAgewogICAgICAgICAgIGlmIChzcGFuQ29sdW1uICE9IG51bGwgJiYgY29s
dW1uID09IHNwYW5Db2x1bW4gJiYgc2l6ZXNbc3BhbkNvbHVtbisxXSA9PSAwKSB7CiAgICAgICAg
ICAgICBzcGFuQ29sdW1uV2lkdGggPSBNYXRoLm1heChzcGFuQ29sdW1uV2lkdGgsIHNpemVzW2Nv
bHVtbl0pOwpJbmRleDogdWkvdHJlZXZpcnR1YWwvU2ltcGxlVHJlZURhdGFNb2RlbC5qcwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09Ci0tLSB1aS90cmVldmlydHVhbC9TaW1wbGVUcmVlRGF0YU1vZGVsLmpzCShyZXZpc2lv
biAyMzg4OSkKKysrIHVpL3RyZWV2aXJ0dWFsL1NpbXBsZVRyZWVEYXRhTW9kZWwuanMJKHdvcmtp
bmcgY29weSkKQEAgLTE5Myw3ICsxOTMsNyBAQAogICAgIHsKICAgICAgIHRoaXMuX19lZGl0YWJs
ZUNvbEFyciA9IFtdOwogCi0gICAgICBmb3IgKHZhciBjb2w9MDsgY29sPHRoaXMuZ2V0Q29sdW1u
Q291bnQoKTsgY29sKyspCisgICAgICBmb3IgKHZhciBjb2w9MCwgbD10aGlzLmdldENvbHVtbkNv
dW50KCk7IGNvbDxsOyBjb2wrKykKICAgICAgIHsKICAgICAgICAgdGhpcy5fX2VkaXRhYmxlQ29s
QXJyW2NvbF0gPSBlZGl0YWJsZTsKICAgICAgIH0KQEAgLTcyMSw3ICs3MjEsNyBAQAogICAgICAg
ICAgICAgaWYgKGNoaWxkLmNvbHVtbkRhdGEpCiAgICAgICAgICAgICB7CiAgICAgICAgICAgICAg
IC8vIC4uLiB0aGVuIGFkZCBlYWNoIGNvbHVtbiBkYXRhLgotICAgICAgICAgICAgICBmb3IgKHZh
ciBqPTA7IGo8Y2hpbGQuY29sdW1uRGF0YS5sZW5ndGg7IGorKykKKyAgICAgICAgICAgICAgZm9y
ICh2YXIgaj0wLCBsPWNoaWxkLmNvbHVtbkRhdGEubGVuZ3RoOyBqPGw7IGorKykKICAgICAgICAg
ICAgICAgewogICAgICAgICAgICAgICAgIC8vIElzIHRoaXMgdGhlIHRyZWUgY29sdW1uPwogICAg
ICAgICAgICAgICAgIGlmIChqID09IF90aGlzLl90cmVlQ29sdW1uKQpJbmRleDogdWkvdHJlZXZp
cnR1YWwvVHJlZVZpcnR1YWwuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdHJlZXZpcnR1YWwvVHJlZVZp
cnR1YWwuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvdHJlZXZpcnR1YWwvVHJlZVZpcnR1YWwu
anMJKHdvcmtpbmcgY29weSkKQEAgLTE5MSw3ICsxOTEsNyBAQAogICAgIHZhciB0Y20gPSB0aGlz
LmdldFRhYmxlQ29sdW1uTW9kZWwoKTsKICAgICB2YXIgdHJlZUNvbCA9IHRoaXMuZ2V0RGF0YU1v
ZGVsKCkuZ2V0VHJlZUNvbHVtbigpOwogCi0gICAgZm9yICh2YXIgaT0wOyBpPGhlYWRpbmdzLmxl
bmd0aDsgaSsrKQorICAgIGZvciAodmFyIGk9MCwgbD1oZWFkaW5ncy5sZW5ndGg7IGk8bDsgaSsr
KQogICAgIHsKICAgICAgIHRjbS5zZXREYXRhQ2VsbFJlbmRlcmVyKGksIGkgPT0gdHJlZUNvbCA/
IHN0ZGNyIDogZGRjcik7CiAgICAgfQpAQCAtMjA5LDcgKzIwOSw3IEBACiAgICAgdmFyIHNjcm9s
bGVycyA9IHRoaXMuX2dldFBhbmVTY3JvbGxlckFycigpOwogCiAgICAgLy8gRm9yIGVhY2ggc2Ny
b2xsZXIuLi4KLSAgICBmb3IgKHZhciBpPTA7IGk8c2Nyb2xsZXJzLmxlbmd0aDsgaSsrKQorICAg
IGZvciAodmFyIGk9MCwgbD1zY3JvbGxlcnMubGVuZ3RoOyBpPGw7IGkrKykKICAgICB7CiAgICAg
ICAvLyBTZXQgdGhlIHBhbmUgc2Nyb2xsZXJzIHRvIGhhbmRsZSB0aGUgc2VsZWN0aW9uIGJlZm9y
ZQogICAgICAgLy8gZGlzcGxheWluZyB0aGUgZm9jdXMsIHNvIHdlIGNhbiBtYW5pcHVsYXRlIHRo
ZSBzZWxlY3RlZCBpY29uLgpAQCAtODYxLDggKzg2MSw4IEBACiAgICAgICAgICAgIGk8c2VsZWN0
ZWRSYW5nZXMubGVuZ3RoOwogICAgICAgICAgICBpKyspCiAgICAgICB7Ci0gICAgICAgIGZvciAo
dmFyIGo9c2VsZWN0ZWRSYW5nZXNbaV0ubWluSW5kZXg7Ci0gICAgICAgICAgICAgajw9c2VsZWN0
ZWRSYW5nZXNbaV0ubWF4SW5kZXg7CisgICAgICAgIGZvciAodmFyIGo9c2VsZWN0ZWRSYW5nZXNb
aV0ubWluSW5kZXgsCisgICAgICAgICAgICAgbD1zZWxlY3RlZFJhbmdlc1tpXS5tYXhJbmRleDsg
ajw9bDsKICAgICAgICAgICAgICBqKyspCiAgICAgICAgIHsKICAgICAgICAgICBub2RlID0gc3Rk
Y20uZ2V0Tm9kZShqKTsKSW5kZXg6IHVpL3RyZWV2aXJ0dWFsL1NpbXBsZVRyZWVEYXRhQ2VsbFJl
bmRlcmVyLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3RyZWV2aXJ0dWFsL1NpbXBsZVRyZWVEYXRhQ2Vs
bFJlbmRlcmVyLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3RyZWV2aXJ0dWFsL1NpbXBsZVRy
ZWVEYXRhQ2VsbFJlbmRlcmVyLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0zODcsNyArMzg3LDcgQEAK
ICAgICAgIHZhciBiRXhjbHVkZUZpcnN0TGV2ZWxUcmVlTGluZXMgPSB0aGlzLmdldEV4Y2x1ZGVG
aXJzdExldmVsVHJlZUxpbmVzKCk7CiAgICAgICB2YXIgYkFsd2F5c1Nob3dPcGVuQ2xvc2VTeW1i
b2wgPSB0aGlzLmdldEFsd2F5c1Nob3dPcGVuQ2xvc2VTeW1ib2woKTsKIAotICAgICAgZm9yICh2
YXIgaT0wOyBpPG5vZGUubGV2ZWw7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1ub2RlLmxl
dmVsOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgaW1hZ2VEYXRhID0gdGhpcy5fZ2V0SW5k
ZW50U3ltYm9sKGksIG5vZGUsIGJVc2VUcmVlTGluZXMsCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBiQWx3YXlzU2hvd09wZW5DbG9zZVN5bWJvbCwKSW5kZXg6IHVp
L3RyZWV2aXJ0dWFsL01GYW1pbHkuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvdHJlZXZpcnR1YWwvTUZh
bWlseS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS90cmVldmlydHVhbC9NRmFtaWx5LmpzCSh3
b3JraW5nIGNvcHkpCkBAIC0xMzksNyArMTM5LDcgQEAKICAgICAgIHZhciBwYXJlbnRDaGlsZHJl
biA9IG5vZGVzW25vZGUucGFyZW50Tm9kZUlkXS5jaGlsZHJlbjsKIAogICAgICAgLy8gRmluZCB0
aGlzIG5vZGUgaWQgaW4gb3VyIHBhcmVudCdzIGNoaWxkcmVuIGFycmF5Ci0gICAgICBmb3IgKHZh
ciBpPTA7IGk8cGFyZW50Q2hpbGRyZW4ubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAs
IGw9cGFyZW50Q2hpbGRyZW4ubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgLy8g
SXMgdGhpcyBvdXIgaWQ/CiAgICAgICAgIGlmIChwYXJlbnRDaGlsZHJlbltpXSA9PSBteU5vZGVJ
ZCkKQEAgLTE5Myw3ICsxOTMsNyBAQAogICAgICAgdmFyIHBhcmVudENoaWxkcmVuID0gbm9kZXNb
bm9kZS5wYXJlbnROb2RlSWRdLmNoaWxkcmVuOwogCiAgICAgICAvLyBGaW5kIHRoaXMgbm9kZSBp
ZCBpbiBvdXIgcGFyZW50J3MgY2hpbGRyZW4gYXJyYXkKLSAgICAgIGZvciAodmFyIGk9MDsgaTxw
YXJlbnRDaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1wYXJlbnRD
aGlsZHJlbi5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICAvLyBJcyB0aGlzIG91
ciBpZD8KICAgICAgICAgaWYgKHBhcmVudENoaWxkcmVuW2ldID09IG15Tm9kZUlkKQpJbmRleDog
dWkvdHJlZXZpcnR1YWwvU2VsZWN0aW9uTWFuYWdlci5qcwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS90cmVl
dmlydHVhbC9TZWxlY3Rpb25NYW5hZ2VyLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3RyZWV2
aXJ0dWFsL1NlbGVjdGlvbk1hbmFnZXIuanMJKHdvcmtpbmcgY29weSkKQEAgLTEwOCw3ICsxMDgs
NyBAQAogICAgICAgICAgICAgLy8gLi4uIHRoZW4gZm9jdXMgaXQgbm93IHNvIHdlIGNhbiBkZXRl
cm1pbmUgdGhlIG5vZGUgdG8gb3Blbi9jbG9zZQogICAgICAgICAgICAgdmFyIHNjcm9sbGVycyA9
IHRyZWUuX2dldFBhbmVTY3JvbGxlckFycigpOwogCi0gICAgICAgICAgICBmb3IgKHZhciBpPTA7
IGk8c2Nyb2xsZXJzLmxlbmd0aDsgaSsrKQorICAgICAgICAgICAgZm9yICh2YXIgaT0wLCBsPXNj
cm9sbGVycy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgICAgICAgewogICAgICAgICAgICAgICBz
Y3JvbGxlcnNbaV0uX2ZvY3VzQ2VsbEF0UGFnZVBvcyhldnQuZ2V0Vmlld3BvcnRMZWZ0KCksCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2dC5nZXRWaWV3
cG9ydFRvcCgpKTsKQEAgLTEzNCw3ICsxMzQsNyBAQAogICAgICAgICAgIHZhciBsZWZ0ID0gcXgu
Ym9tLmVsZW1lbnQuTG9jYXRpb24uZ2V0TGVmdCgKICAgICAgICAgICAgIHRyZWUuZ2V0Q29udGVu
dEVsZW1lbnQoKS5nZXREb21FbGVtZW50KCkpOwogCi0gICAgICAgICAgZm9yICh2YXIgaT0wOyBp
PGNvbHVtblBvc2l0aW9uc1t0cmVlQ29sXS52aXNYOyBpKyspIHsKKyAgICAgICAgICBmb3IgKHZh
ciBpPTAsIGw9Y29sdW1uUG9zaXRpb25zW3RyZWVDb2xdLnZpc1g7IGk8bDsgaSsrKSB7CiAgICAg
ICAgICAgICBsZWZ0ICs9IHRjbS5nZXRDb2x1bW5XaWR0aChjb2x1bW5Qb3NpdGlvbnNbaV0udmlz
WCk7CiAgICAgICAgICAgfQogCkluZGV4OiB1aS9wcm9ncmVzc2l2ZS9yZW5kZXJlci90YWJsZS9j
ZWxsL0NvbmRpdGlvbmFsLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3Byb2dyZXNzaXZlL3JlbmRlcmVy
L3RhYmxlL2NlbGwvQ29uZGl0aW9uYWwuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvcHJvZ3Jl
c3NpdmUvcmVuZGVyZXIvdGFibGUvY2VsbC9Db25kaXRpb25hbC5qcwkod29ya2luZyBjb3B5KQpA
QCAtMzI3LDcgKzMyNyw3IEBACiAgICAgICAgICAgImZvbnQtd2VpZ2h0IiA6IHRoaXMuX19kZWZh
dWx0Rm9udFdlaWdodAogICAgICAgICB9OwogCi0gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5f
X2NvbmRpdGlvbnMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKGkgPSAwLCBsID0gdGhpcy5fX2Nv
bmRpdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgdGVzdCA9
IHRoaXMuX19jb25kaXRpb25zW2ldOwogCkluZGV4OiB1aS9wcm9ncmVzc2l2ZS9yZW5kZXJlci90
YWJsZS9Sb3cuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQotLS0gdWkvcHJvZ3Jlc3NpdmUvcmVuZGVyZXIvdGFibGUv
Um93LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL3Byb2dyZXNzaXZlL3JlbmRlcmVyL3RhYmxl
L1Jvdy5qcwkod29ya2luZyBjb3B5KQpAQCAtMTY0LDcgKzE2NCw3IEBACiAKICAgICAgICAgdmFy
IGNvbHVtbkRhdGEgPSB0aGlzLl9fY29sdW1uV2lkdGhzLmdldERhdGEoKTsKIAotICAgICAgICBm
b3IgKHZhciBpID0gMDsgaSA8IGNvbHVtbkRhdGEubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAo
dmFyIGkgPSAwLCBsID0gY29sdW1uRGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspCiAgICAgICAgIHsK
ICAgICAgICAgICB2YXIgc3R5bGVzaGVldCA9CiAgICAgICAgICAgICAiLnF4LXByb2dyZXNzaXZl
LSIgKyBoYXNoICsgIi1jb2wtIiArIGkgKyAiIHsiICsKQEAgLTI2Nyw3ICsyNjcsNyBAQAogICAg
ICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogCiAgICAgICAvLyBG
b3IgZWFjaCBjZWxsLi4uCi0gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGRhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKQog
ICAgICAgewogICAgICAgICB2YXIgc3R5bGVzaGVldCA9ICJxeC1wcm9ncmVzc2l2ZS0iICsgdGhp
cy5fX2hhc2ggKyAiLWNvbC0iICsgaTsKIApJbmRleDogdWkvcHJvZ3Jlc3NpdmUvaGVhZGZvb3Qv
VGFibGVIZWFkaW5nLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL3Byb2dyZXNzaXZlL2hlYWRmb290L1Rh
YmxlSGVhZGluZy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9wcm9ncmVzc2l2ZS9oZWFkZm9v
dC9UYWJsZUhlYWRpbmcuanMJKHdvcmtpbmcgY29weSkKQEAgLTU0LDcgKzU0LDcgQEAKICAgICB0
aGlzLl9fbGFiZWxzID0gWyBdOwogCiAgICAgLy8gRm9yIGVhY2ggbGFiZWwuLi4KLSAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IGNvbHVtbkRhdGEubGVuZ3RoOyBpKyspCisgICAgZm9yICh2YXIgaSA9
IDAsIGwgPSBjb2x1bW5EYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykKICAgICB7CiAgICAgICAvLyAu
Li4gY3JlYXRlIGFuIGF0b20gdG8gaG9sZCB0aGUgbGFiZWwKICAgICAgIHZhciBsYWJlbCA9IG5l
dyBxeC51aS5iYXNpYy5BdG9tKGxhYmVsQXJyW2ldKTsKQEAgLTE1Nyw3ICsxNTcsNyBAQAogICAg
ICAgdmFyIGNvbHVtbkRhdGEgPSB0aGlzLl9fY29sdW1uV2lkdGhzLmdldERhdGEoKTsKIAogICAg
ICAgLy8gR2V0IHRoZSBjb2x1bW4gd2lkdGggZGF0YS4gIEZvciBlYWNoIGxhYmVsLi4uCi0gICAg
ICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbHVtbkRhdGEubGVuZ3RoOyBpKyspCisgICAgICBmb3Ig
KHZhciBpID0gMCwgbCA9IGNvbHVtbkRhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgewog
ICAgICAgICAvLyAuLi4gcmVzZXQgdGhlIHdpZHRoIG9mIHRoZSBjb3JyZXNwb25kaW5nIGNvbHVt
biAobGFiZWwpCiAgICAgICAgIHRoaXMuX19sYWJlbHNbaV0uc2V0V2lkdGgoY29sdW1uRGF0YVtp
XS5nZXRDb21wdXRlZFdpZHRoKCkpOwpJbmRleDogdWkvbGlzdC9jb3JlL01TZWxlY3Rpb25IYW5k
bGluZy5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9saXN0L2NvcmUvTVNlbGVjdGlvbkhhbmRsaW5nLmpz
CShyZXZpc2lvbiAyMzg4OSkKKysrIHVpL2xpc3QvY29yZS9NU2VsZWN0aW9uSGFuZGxpbmcuanMJ
KHdvcmtpbmcgY29weSkKQEAgLTIwOCw3ICsyMDgsNyBAQAogICAgICAgdmFyIHNlbGVjdGlvbiA9
IHRoaXMuZ2V0U2VsZWN0aW9uKCk7CiAKICAgICAgIHZhciBuZXdTZWxlY3Rpb24gPSBbXTsKLSAg
ICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZWN0aW9uLmdldExlbmd0aCgpOyBpKyspCisgICAg
ICBmb3IgKHZhciBpID0gMCwgbCA9IHNlbGVjdGlvbi5nZXRMZW5ndGgoKTsgaSA8IGw7IGkrKykK
ICAgICAgIHsKICAgICAgICAgdmFyIGl0ZW0gPSBzZWxlY3Rpb24uZ2V0SXRlbShpKTsKICAgICAg
ICAgdmFyIGluZGV4ID0gdGhpcy5nZXRNb2RlbCgpLmluZGV4T2YoaXRlbSk7CkBAIC0yNjQsNyAr
MjY0LDcgQEAKICAgICAgIHZhciBtYW5hZ2VyU2VsZWN0aW9uID0gdGhpcy5fbWFuYWdlci5nZXRT
ZWxlY3Rpb24oKTsKIAogICAgICAgcXgubGFuZy5BcnJheS5yZW1vdmVBbGwobmF0aXZBcnJheSk7
Ci0gICAgICBmb3IodmFyIGkgPSAwOyBpIDwgbWFuYWdlclNlbGVjdGlvbi5sZW5ndGg7IGkrKykg
eworICAgICAgZm9yKHZhciBpID0gMCwgbD1tYW5hZ2VyU2VsZWN0aW9uLmxlbmd0aDsgaTxsOyBp
KyspIHsKICAgICAgICAgbmF0aXZBcnJheS5wdXNoKHRoaXMuX2dldERhdGFGcm9tUm93KG1hbmFn
ZXJTZWxlY3Rpb25baV0pKTsKICAgICAgIH0KICAgICAgIGxvY2FsU2VsZWN0aW9uLmxlbmd0aCA9
IG5hdGl2QXJyYXkubGVuZ3RoOwpJbmRleDogdWkvbGF5b3V0L0dyaWQuanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gdWkvbGF5b3V0L0dyaWQuanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvbGF5b3V0L0dyaWQu
anMJKHdvcmtpbmcgY29weSkKQEAgLTIzNCw5ICsyMzQsOSBAQAogICAgICAgICAgICk7CiAgICAg
ICAgIH0KIAotICAgICAgICBmb3IgKHZhciB4PWNvbHVtbjsgeDxjb2x1bW4rcHJvcHMuY29sU3Bh
bjsgeCsrKQorICAgICAgICBmb3IgKHZhciB4PWNvbHVtbiwgbD1jb2x1bW4rcHJvcHMuY29sU3Bh
bjsgeDxsOyB4KyspCiAgICAgICAgIHsKLSAgICAgICAgICBmb3IgKHZhciB5PXJvdzsgeTxyb3cr
cHJvcHMucm93U3BhbjsgeSsrKQorICAgICAgICAgIGZvciAodmFyIHk9cm93LCBsPXJvdytwcm9w
cy5yb3dTcGFuOyB5PGw7IHkrKykKICAgICAgICAgICB7CiAgICAgICAgICAgICBpZiAoZ3JpZFt5
XSA9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGdyaWRbeV0gPSBbXTsKQEAgLTg0Niw3
ICs4NDYsNyBAQAogCiAgICAgICAgIHZhciByb3dGbGV4ZXMgPSB7fTsKIAotICAgICAgICBmb3Ig
KHZhciBqPTA7IGo8d2lkZ2V0UHJvcHMucm93U3BhbjsgaisrKQorICAgICAgICBmb3IgKHZhciBq
PTAsIGw9d2lkZ2V0UHJvcHMucm93U3BhbjsgajxsOyBqKyspCiAgICAgICAgIHsKICAgICAgICAg
ICB2YXIgcm93ID0gd2lkZ2V0UHJvcHMucm93K2o7CiAgICAgICAgICAgdmFyIHJvd0hlaWdodCA9
IHJvd0hlaWdodHNbcm93XTsKQEAgLTg3Nyw3ICs4NzcsNyBAQAogICAgICAgICAgICAgICByb3dG
bGV4ZXMsIGhpbnQuaGVpZ2h0LCBwcmVmU3BhbkhlaWdodAogICAgICAgICAgICAgKTsKIAotICAg
ICAgICAgICAgZm9yICh2YXIgaz0wOyBrPHdpZGdldFByb3BzLnJvd1NwYW47IGsrKykKKyAgICAg
ICAgICAgIGZvciAodmFyIGs9MCwgbD13aWRnZXRQcm9wcy5yb3dTcGFuOyBrPGw7IGsrKykKICAg
ICAgICAgICAgIHsKICAgICAgICAgICAgICAgdmFyIG9mZnNldCA9IHJvd0luY3JlbWVudHNbd2lk
Z2V0Um93K2tdID8gcm93SW5jcmVtZW50c1t3aWRnZXRSb3cra10ub2Zmc2V0IDogMDsKICAgICAg
ICAgICAgICAgcm93SGVpZ2h0c1t3aWRnZXRSb3cra10uaGVpZ2h0ICs9IG9mZnNldDsKQEAgLTg4
OCw3ICs4ODgsNyBAQAogICAgICAgICAgICAgdmFyIGF2YWlsYWJsZUhlaWdodCA9IGhpbnQuaGVp
Z2h0IC0gdG90YWxTcGFjaW5nOwogICAgICAgICAgICAgLy8gY2hlY2sgaG93IGhpZ2ggZWFjaCBy
b3cgaGFzIHRvIGJlIHRvIGZpdCB0aGUgc2V0IGhlaWdodAogICAgICAgICAgICAgdmFyIHJvd0hl
aWdodCA9IE1hdGguZmxvb3IoYXZhaWxhYmxlSGVpZ2h0IC8gd2lkZ2V0UHJvcHMucm93U3Bhbik7
Ci0gICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHdpZGdldFByb3BzLnJvd1NwYW47IGsr
KykgeworICAgICAgICAgICAgZm9yICh2YXIgayA9IDAsIGwgPSB3aWRnZXRQcm9wcy5yb3dTcGFu
OyBrIDwgbDsgaysrKSB7CiAgICAgICAgICAgICAgIHJvd0hlaWdodHNbd2lkZ2V0Um93ICsga10u
aGVpZ2h0ID0gcm93SGVpZ2h0OwogICAgICAgICAgICAgfQogICAgICAgICAgIH0KQEAgLTkwMiw3
ICs5MDIsNyBAQAogICAgICAgICAgICAgcm93RmxleGVzLCBoaW50Lm1pbkhlaWdodCwgbWluU3Bh
bkhlaWdodAogICAgICAgICAgICk7CiAgICAgICAgICAgCi0gICAgICAgICAgZm9yICh2YXIgaj0w
OyBqPHdpZGdldFByb3BzLnJvd1NwYW47IGorKykKKyAgICAgICAgICBmb3IgKHZhciBqPTAsIGw9
d2lkZ2V0UHJvcHMucm93U3BhbjsgajxsOyBqKyspCiAgICAgICAgICAgewogICAgICAgICAgICAg
dmFyIG9mZnNldCA9IHJvd0luY3JlbWVudHNbd2lkZ2V0Um93K2pdID8gcm93SW5jcmVtZW50c1t3
aWRnZXRSb3cral0ub2Zmc2V0IDogMDsKICAgICAgICAgICAgIHJvd0hlaWdodHNbd2lkZ2V0Um93
K2pdLm1pbkhlaWdodCArPSBvZmZzZXQ7CkBAIC05NDUsNyArOTQ1LDcgQEAKIAogICAgICAgICB2
YXIgb2Zmc2V0OwogCi0gICAgICAgIGZvciAodmFyIGo9MDsgajx3aWRnZXRQcm9wcy5jb2xTcGFu
OyBqKyspCisgICAgICAgIGZvciAodmFyIGo9MCwgbD13aWRnZXRQcm9wcy5jb2xTcGFuOyBqPGw7
IGorKykKICAgICAgICAgewogICAgICAgICAgIHZhciBjb2wgPSB3aWRnZXRQcm9wcy5jb2x1bW4r
ajsKICAgICAgICAgICB2YXIgY29sV2lkdGggPSBjb2xXaWR0aHNbY29sXTsKQEAgLTk3NSw3ICs5
NzUsNyBAQAogICAgICAgICAgICAgY29sRmxleGVzLCBoaW50LndpZHRoLCBwcmVmU3BhbldpZHRo
CiAgICAgICAgICAgKTsKIAotICAgICAgICAgIGZvciAodmFyIGo9MDsgajx3aWRnZXRQcm9wcy5j
b2xTcGFuOyBqKyspCisgICAgICAgICAgZm9yICh2YXIgaj0wLCBsPXdpZGdldFByb3BzLmNvbFNw
YW47IGo8bDsgaisrKQogICAgICAgICAgIHsKICAgICAgICAgICAgIG9mZnNldCA9IGNvbEluY3Jl
bWVudHNbd2lkZ2V0Q29sdW1uK2pdID8gY29sSW5jcmVtZW50c1t3aWRnZXRDb2x1bW4ral0ub2Zm
c2V0IDogMDsKICAgICAgICAgICAgIGNvbFdpZHRoc1t3aWRnZXRDb2x1bW4ral0ud2lkdGggKz0g
b2Zmc2V0OwpAQCAtOTkwLDcgKzk5MCw3IEBACiAgICAgICAgICAgICBjb2xGbGV4ZXMsIGhpbnQu
bWluV2lkdGgsIG1pblNwYW5XaWR0aAogICAgICAgICAgICk7CiAKLSAgICAgICAgICBmb3IgKHZh
ciBqPTA7IGo8d2lkZ2V0UHJvcHMuY29sU3BhbjsgaisrKQorICAgICAgICAgIGZvciAodmFyIGo9
MCwgbD13aWRnZXRQcm9wcy5jb2xTcGFuOyBqPGw7IGorKykKICAgICAgICAgICB7CiAgICAgICAg
ICAgICBvZmZzZXQgPSBjb2xJbmNyZW1lbnRzW3dpZGdldENvbHVtbitqXSA/IGNvbEluY3JlbWVu
dHNbd2lkZ2V0Q29sdW1uK2pdLm9mZnNldCA6IDA7CiAgICAgICAgICAgICBjb2xXaWR0aHNbd2lk
Z2V0Q29sdW1uK2pdLm1pbldpZHRoICs9IG9mZnNldDsKQEAgLTEzMDksMTIgKzEzMDksMTIgQEAK
IAogICAgICAgICAgIC8vIGNvbXB1dGUgc2l6ZXMgd2lkdGggaW5jbHVkaW5nIGNlbGwgc3Bhbm5p
bmcKICAgICAgICAgICB2YXIgc3BhbldpZHRoID0gaFNwYWNpbmcgKiAod2lkZ2V0UHJvcHMuY29s
U3BhbiAtIDEpOwotICAgICAgICAgIGZvciAodmFyIGk9MDsgaTx3aWRnZXRQcm9wcy5jb2xTcGFu
OyBpKyspIHsKKyAgICAgICAgICBmb3IgKHZhciBpPTAsIGw9d2lkZ2V0UHJvcHMuY29sU3Bhbjsg
aTxsOyBpKyspIHsKICAgICAgICAgICAgIHNwYW5XaWR0aCArPSBjb2xXaWR0aHNbY29sK2ldOwog
ICAgICAgICAgIH0KIAogICAgICAgICAgIHZhciBzcGFuSGVpZ2h0ID0gdlNwYWNpbmcgKiAod2lk
Z2V0UHJvcHMucm93U3BhbiAtIDEpOwotICAgICAgICAgIGZvciAodmFyIGk9MDsgaTx3aWRnZXRQ
cm9wcy5yb3dTcGFuOyBpKyspIHsKKyAgICAgICAgICBmb3IgKHZhciBpPTAsIGw9d2lkZ2V0UHJv
cHMucm93U3BhbjsgaTxsOyBpKyspIHsKICAgICAgICAgICAgIHNwYW5IZWlnaHQgKz0gcm93SGVp
Z2h0c1tyb3craV07CiAgICAgICAgICAgfQogCkluZGV4OiB1aS9sYXlvdXQvRmxvdy5qcwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09Ci0tLSB1aS9sYXlvdXQvRmxvdy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9sYXlv
dXQvRmxvdy5qcwkod29ya2luZyBjb3B5KQpAQCAtMjY4LDcgKzI2OCw3IEBACiAgICAgICAgIH0K
ICAgICAgIH0KIAotICAgICAgZm9yICh2YXIgaT0wOyBpPGxpbmUuY2hpbGRyZW4ubGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9bGluZS5jaGlsZHJlbi5sZW5ndGg7IGk8bDsgaSsr
KQogICAgICAgewogICAgICAgICB2YXIgY2hpbGQgPSBsaW5lLmNoaWxkcmVuW2ldOwogICAgICAg
ICB2YXIgc2l6ZSA9IGNoaWxkLmdldFNpemVIaW50KCk7CkluZGV4OiB1aS9sYXlvdXQvTGluZVNp
emVJdGVyYXRvci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9sYXlvdXQvTGluZVNpemVJdGVyYXRvci5q
cwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9sYXlvdXQvTGluZVNpemVJdGVyYXRvci5qcwkod29y
a2luZyBjb3B5KQpAQCAtNjksNyArNjksNyBAQAogICAgICAgdmFyIGxpbmVDaGlsZHJlbiA9IFtd
OwogICAgICAgdmFyIGdhcHNCZWZvcmUgPSBbXTsKIAotICAgICAgZm9yICh2YXIgaT10aGlzLl9f
Y2hpbGRJbmRleDsgaTxjaGlsZHJlbi5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9dGhp
cy5fX2NoaWxkSW5kZXgsIGw9Y2hpbGRyZW4ubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAg
ICAgICAgdmFyIGNoaWxkID0gY2hpbGRyZW5baV07CiAgICAgICAgIHZhciBzaXplID0gY2hpbGQu
Z2V0U2l6ZUhpbnQoKTsKQEAgLTEzOCw0ICsxMzgsNCBAQAogICAgICAgcmV0dXJuIHRoaXMuX19o
YXNNb3JlTGluZXM7CiAgICAgfQogICB9Ci19KQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUK
K30pCkluZGV4OiB1aS9sYXlvdXQvVkJveC5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1aS9sYXlvdXQvVkJv
eC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9sYXlvdXQvVkJveC5qcwkod29ya2luZyBjb3B5
KQpAQCAtMjIxLDE0ICsyMjEsMTQgQEAKICAgICBfX3JlYnVpbGRDYWNoZSA6IGZ1bmN0aW9uKCkK
ICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwot
ICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGls
ZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgZW5hYmxlRmxleCA9IGZhbHNlOwotICAgICAgdmFyIHJl
dXNlID0gdGhpcy5fX2hlaWdodHMgJiYgdGhpcy5fX2hlaWdodHMubGVuZ3RoICE9IGxlbmd0aCAm
JiB0aGlzLl9fZmxleHMgJiYgdGhpcy5fX2hlaWdodHM7CisgICAgICB2YXIgcmV1c2UgPSB0aGlz
Ll9faGVpZ2h0cyAmJiB0aGlzLl9faGVpZ2h0cy5sZW5ndGggIT0gbGVuICYmIHRoaXMuX19mbGV4
cyAmJiB0aGlzLl9faGVpZ2h0czsKICAgICAgIHZhciBwcm9wczsKIAogICAgICAgLy8gU3BhcnNl
IGFycmF5IChrZWVwIG9sZCBvbmUgaWYgbGVuZ3RocyBoYXMgbm90IGJlZW4gbW9kaWZpZWQpCi0g
ICAgICB2YXIgaGVpZ2h0cyA9IHJldXNlID8gdGhpcy5fX2hlaWdodHMgOiBuZXcgQXJyYXkobGVu
Z3RoKTsKLSAgICAgIHZhciBmbGV4cyA9IHJldXNlID8gdGhpcy5fX2ZsZXhzIDogbmV3IEFycmF5
KGxlbmd0aCk7CisgICAgICB2YXIgaGVpZ2h0cyA9IHJldXNlID8gdGhpcy5fX2hlaWdodHMgOiBu
ZXcgQXJyYXkobGVuKTsKKyAgICAgIHZhciBmbGV4cyA9IHJldXNlID8gdGhpcy5fX2ZsZXhzIDog
bmV3IEFycmF5KGxlbik7CiAKICAgICAgIC8vIFJldmVyc2Ugc3VwcG9ydAogICAgICAgaWYgKHRo
aXMuZ2V0UmV2ZXJzZWQoKSkgewpAQCAtMjM2LDcgKzIzNiw3IEBACiAgICAgICB9CiAKICAgICAg
IC8vIExvb3AgdGhyb3VnaCBjaGlsZHJlbiB0byBwcmVwYXJzZSB2YWx1ZXMKLSAgICAgIGZvciAo
dmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykK
ICAgICAgIHsKICAgICAgICAgcHJvcHMgPSBjaGlsZHJlbltpXS5nZXRMYXlvdXRQcm9wZXJ0aWVz
KCk7CiAKQEAgLTMxMSw3ICszMTEsNyBAQAogCiAgICAgICAvLyBDYWNoZSBjaGlsZHJlbgogICAg
ICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fX2NoaWxkcmVuOwotICAgICAgdmFyIGxlbmd0aCA9IGNo
aWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2
YXIgdXRpbCA9IHF4LnVpLmxheW91dC5VdGlsOwogCiAKQEAgLTMzMCw3ICszMzAsNyBAQAogICAg
ICAgdmFyIGhlaWdodHMgPSBbXTsKICAgICAgIHZhciBhbGxvY2F0ZWRIZWlnaHQgPSBnYXBzOwog
Ci0gICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEpCisgICAgICBmb3IgKGk9MDsgaTxsZW47
IGkrPTEpCiAgICAgICB7CiAgICAgICAgIHBlcmNlbnQgPSB0aGlzLl9faGVpZ2h0c1tpXTsKIApA
QCAtMzQ5LDcgKzM0OSw3IEBACiAgICAgICAgIHZhciBmbGV4aWJsZXMgPSB7fTsKICAgICAgICAg
dmFyIGZsZXgsIG9mZnNldDsKIAotICAgICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEpCisg
ICAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSs9MSkKICAgICAgICAgewogICAgICAgICAgIGZsZXgg
PSB0aGlzLl9fZmxleHNbaV07CiAKQEAgLTQwNyw3ICs0MDcsNyBAQAogICAgICAgfQogCiAgICAg
ICAvLyBSZW5kZXIgY2hpbGRyZW4gYW5kIHNlcGFyYXRvcnMKLSAgICAgIGZvciAoaT0wOyBpPGxl
bmd0aDsgaSs9MSkKKyAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSs9MSkKICAgICAgIHsKICAgICAg
ICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAgaGVpZ2h0ID0gaGVpZ2h0c1tpXTsKSW5k
ZXg6IHVpL2xheW91dC9BdG9tLmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIHVpL2xheW91dC9BdG9tLmpzCShy
ZXZpc2lvbiAyMzg4OSkKKysrIHVpL2xheW91dC9BdG9tLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0x
MjgsNyArMTI4LDcgQEAKIAogICAgICAgdmFyIGljb25Qb3NpdGlvbiA9IHRoaXMuZ2V0SWNvblBv
c2l0aW9uKCk7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigp
OwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBj
aGlsZHJlbi5sZW5ndGg7CiAKICAgICAgIHZhciBsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQ7CiAg
ICAgICB2YXIgY2hpbGQsIGhpbnQ7CkBAIC0xMzgsMTQgKzEzOCwxNCBAQAogICAgICAgLy8gcmV2
ZXJzZSBvcmRlcmluZwogICAgICAgaWYgKGljb25Qb3NpdGlvbiA9PT0gImJvdHRvbSIgfHwgaWNv
blBvc2l0aW9uID09PSAicmlnaHQiKQogICAgICAgewotICAgICAgICB2YXIgc3RhcnQgPSBsZW5n
dGgtMTsKKyAgICAgICAgdmFyIHN0YXJ0ID0gbGVuLTE7CiAgICAgICAgIHZhciBlbmQgPSAtMTsK
ICAgICAgICAgdmFyIGluY3JlbWVudCA9IC0xOwogICAgICAgfQogICAgICAgZWxzZQogICAgICAg
ewogICAgICAgICB2YXIgc3RhcnQgPSAwOwotICAgICAgICB2YXIgZW5kID0gbGVuZ3RoOworICAg
ICAgICB2YXIgZW5kID0gbGVuOwogICAgICAgICB2YXIgaW5jcmVtZW50ID0gMTsKICAgICAgIH0K
IApAQCAtMjc0LDExICsyNzQsMTEgQEAKICAgICBfY29tcHV0ZVNpemVIaW50IDogZnVuY3Rpb24o
KQogICAgIHsKICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuX2dldExheW91dENoaWxkcmVuKCk7
Ci0gICAgICB2YXIgbGVuZ3RoID0gY2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNo
aWxkcmVuLmxlbmd0aDsKICAgICAgIHZhciBoaW50LCByZXN1bHQ7CiAKICAgICAgIC8vIEZhc3Qg
cGF0aCBmb3Igb25seSBvbmUgY2hpbGQKLSAgICAgIGlmIChsZW5ndGggPT09IDEpCisgICAgICBp
ZiAobGVuID09PSAxKQogICAgICAgewogICAgICAgICB2YXIgaGludCA9IGNoaWxkcmVuWzBdLmdl
dFNpemVIaW50KCk7CiAKQEAgLTMwMyw3ICszMDMsNyBAQAogICAgICAgICBpZiAoaWNvblBvc2l0
aW9uID09PSAidG9wIiB8fCBpY29uUG9zaXRpb24gPT09ICJib3R0b20iKQogICAgICAgICB7CiAg
ICAgICAgICAgdmFyIGNvdW50ID0gMDsKLSAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3Ro
OyBpKyspCisgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgICAgIHsK
ICAgICAgICAgICAgIGhpbnQgPSBjaGlsZHJlbltpXS5nZXRTaXplSGludCgpOwogCkBAIC0zMzAs
NyArMzMwLDcgQEAKICAgICAgICAgZWxzZQogICAgICAgICB7CiAgICAgICAgICAgdmFyIGNvdW50
PTA7Ci0gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgICAgIGZv
ciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgICAgICB7CiAgICAgICAgICAgICBoaW50ID0g
Y2hpbGRyZW5baV0uZ2V0U2l6ZUhpbnQoKTsKIApJbmRleDogdWkvbGF5b3V0L0RvY2suanMKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQotLS0gdWkvbGF5b3V0L0RvY2suanMJKHJldmlzaW9uIDIzODg5KQorKysgdWkvbGF5
b3V0L0RvY2suanMJKHdvcmtpbmcgY29weSkKQEAgLTI4OSw3ICsyODksNyBAQAogICAgIHsKICAg
ICAgIHZhciBhbGwgPSB0aGlzLl9nZXRMYXlvdXRDaGlsZHJlbigpOwogICAgICAgdmFyIGNoaWxk
LCBjZW50ZXI7Ci0gICAgICB2YXIgbGVuZ3RoID0gYWxsLmxlbmd0aDsKKyAgICAgIHZhciBsZW4g
PSBhbGwubGVuZ3RoOwogCiAgICAgICB2YXIgaGlnaCA9IFtdOwogICAgICAgdmFyIGxvdyA9IFtd
OwpAQCAtMjk4LDcgKzI5OCw3IEBACiAgICAgICB2YXIgeWZpcnN0ID0gdGhpcy5nZXRTb3J0KCkg
PT09ICJ5IjsKICAgICAgIHZhciB4Zmlyc3QgPSB0aGlzLmdldFNvcnQoKSA9PT0gIngiOwogCi0g
ICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTA7IGk8
bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gYWxsW2ldOwogICAgICAgICBlZGdl
ID0gY2hpbGQuZ2V0TGF5b3V0UHJvcGVydGllcygpLmVkZ2U7CkBAIC0zMzUsNyArMzM1LDcgQEAK
IAogICAgICAgLy8gQ2FjaGUgZWRnZXMgZm9yIGZhc3RlciBhY2Nlc3MKICAgICAgIHZhciBlZGdl
cz1bXTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFy
IGk9MDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgZWRnZSA9IHJlc3VsdFtpXS5nZXRM
YXlvdXRQcm9wZXJ0aWVzKCkuZWRnZTsKICAgICAgICAgZWRnZXNbaV0gPSB0aGlzLl9fZWRnZU1h
cFtlZGdlXSB8fCA1OwpAQCAtMzY3LDcgKzM2Nyw3IEBACiAgICAgICB2YXIgdXRpbCA9IHF4LnVp
LmxheW91dC5VdGlsOwogICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5fX2NoaWxkcmVuOwogICAg
ICAgdmFyIGVkZ2VzID0gdGhpcy5fX2VkZ2VzOwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVu
Lmxlbmd0aDsKKyAgICAgIHZhciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgZmxl
eGlibGVzLCBjaGlsZCwgaGludCwgcHJvcHMsIGZsZXgsIGdyb3csIHdpZHRoLCBoZWlnaHQsIG9m
ZnNldDsKIAogICAgICAgdmFyIHdpZHRocyA9IFtdOwpAQCAtMzk1LDcgKzM5NSw3IEBACiAgICAg
ICAgIGFsbG9jYXRlZEhlaWdodCAtPSBzZXBhcmF0b3JXaWR0aHMueSArIHNwYWNpbmdZOwogICAg
ICAgfQogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8bGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZh
ciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICB7CiAgICAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07
CiAgICAgICAgIHByb3BzID0gY2hpbGQuZ2V0TGF5b3V0UHJvcGVydGllcygpOwpAQCAtNDc2LDcg
KzQ3Niw3IEBACiAgICAgICAgIGZsZXhpYmxlcyA9IHt9OwogICAgICAgICBncm93ID0gYWxsb2Nh
dGVkV2lkdGggPCBhdmFpbFdpZHRoOwogCi0gICAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7
IGkrKykKKyAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsrKQogICAgICAgICB7CiAgICAg
ICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKIApAQCAtNTMwLDcgKzUzMCw3IEBACiAgICAgICAg
IGZsZXhpYmxlcyA9IFtdOwogICAgICAgICBncm93ID0gYWxsb2NhdGVkSGVpZ2h0IDwgYXZhaWxI
ZWlnaHQ7CiAKLSAgICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgICBm
b3IgKHZhciBpPTA7IGk8bGVuOyBpKyspCiAgICAgICAgIHsKICAgICAgICAgICBjaGlsZCA9IGNo
aWxkcmVuW2ldOwogCkBAIC01OTEsNyArNTkxLDcgQEAKICAgICAgIHZhciBtYXJnaW5Ub3AsIG1h
cmdpbkJvdHRvbSwgbWFyZ2luTGVmdCwgbWFyZ2luUmlnaHQ7CiAgICAgICB2YXIgYWxpZ25NYXAg
PSB0aGlzLl9fYWxpZ25NYXA7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxsZW5ndGg7IGkrKykK
KyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAgICAgIHsKICAgICAgICAgLy8gQ2Fj
aGUgY2hpbGQgZGF0YQogICAgICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldOwpAQCAtODE1LDcgKzgx
NSw3IEBACiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47CiAgICAgICB2YXIg
ZWRnZXMgPSB0aGlzLl9fZWRnZXM7CiAKLSAgICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5n
dGg7CisgICAgICB2YXIgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOwogICAgICAgdmFyIGhpbnQsIGNo
aWxkOwogICAgICAgdmFyIG1hcmdpblgsIG1hcmdpblk7CiAKQEAgLTgzNyw3ICs4MzcsNyBAQAog
ICAgICAgfQogCiAgICAgICAvLyBEZXRlY3QgY2hpbGRyZW4gc2l6ZXMKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxsZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MDsgaTxsZW47IGkrKykKICAg
ICAgIHsKICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgICAgICAgaGludCA9IGNoaWxk
LmdldFNpemVIaW50KCk7CkluZGV4OiB1aS9sYXlvdXQvSEJveC5qcwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1
aS9sYXlvdXQvSEJveC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1aS9sYXlvdXQvSEJveC5qcwko
d29ya2luZyBjb3B5KQpAQCAtMjIwLDE0ICsyMjAsMTQgQEAKICAgICBfX3JlYnVpbGRDYWNoZSA6
IGZ1bmN0aW9uKCkKICAgICB7CiAgICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9nZXRMYXlvdXRD
aGlsZHJlbigpOwotICAgICAgdmFyIGxlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDsKKyAgICAgIHZh
ciBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7CiAgICAgICB2YXIgZW5hYmxlRmxleCA9IGZhbHNlOwot
ICAgICAgdmFyIHJldXNlID0gdGhpcy5fX3dpZHRocyAmJiB0aGlzLl9fd2lkdGhzLmxlbmd0aCAh
PSBsZW5ndGggJiYgdGhpcy5fX2ZsZXhzICYmIHRoaXMuX193aWR0aHM7CisgICAgICB2YXIgcmV1
c2UgPSB0aGlzLl9fd2lkdGhzICYmIHRoaXMuX193aWR0aHMubGVuZ3RoICE9IGxlbiAmJiB0aGlz
Ll9fZmxleHMgJiYgdGhpcy5fX3dpZHRoczsKICAgICAgIHZhciBwcm9wczsKIAogICAgICAgLy8g
U3BhcnNlIGFycmF5IChrZWVwIG9sZCBvbmUgaWYgbGVuZ3RocyBoYXMgbm90IGJlZW4gbW9kaWZp
ZWQpCi0gICAgICB2YXIgd2lkdGhzID0gcmV1c2UgPyB0aGlzLl9fd2lkdGhzIDogbmV3IEFycmF5
KGxlbmd0aCk7Ci0gICAgICB2YXIgZmxleHMgPSByZXVzZSA/IHRoaXMuX19mbGV4cyA6IG5ldyBB
cnJheShsZW5ndGgpOworICAgICAgdmFyIHdpZHRocyA9IHJldXNlID8gdGhpcy5fX3dpZHRocyA6
IG5ldyBBcnJheShsZW4pOworICAgICAgdmFyIGZsZXhzID0gcmV1c2UgPyB0aGlzLl9fZmxleHMg
OiBuZXcgQXJyYXkobGVuKTsKIAogICAgICAgLy8gUmV2ZXJzZSBzdXBwb3J0CiAgICAgICBpZiAo
dGhpcy5nZXRSZXZlcnNlZCgpKSB7CkBAIC0yMzUsNyArMjM1LDcgQEAKICAgICAgIH0KIAogICAg
ICAgLy8gTG9vcCB0aHJvdWdoIGNoaWxkcmVuIHRvIHByZXBhcnNlIHZhbHVlcwotICAgICAgZm9y
ICh2YXIgaT0wOyBpPGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wOyBpPGxlbjsgaSsr
KQogICAgICAgewogICAgICAgICBwcm9wcyA9IGNoaWxkcmVuW2ldLmdldExheW91dFByb3BlcnRp
ZXMoKTsKIApAQCAtMzEwLDcgKzMxMCw3IEBACiAKICAgICAgIC8vIENhY2hlIGNoaWxkcmVuCiAg
ICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLl9fY2hpbGRyZW47Ci0gICAgICB2YXIgbGVuZ3RoID0g
Y2hpbGRyZW4ubGVuZ3RoOworICAgICAgdmFyIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsKICAgICAg
IHZhciB1dGlsID0gcXgudWkubGF5b3V0LlV0aWw7CiAKIApAQCAtMzI5LDcgKzMyOSw3IEBACiAg
ICAgICB2YXIgd2lkdGhzID0gW107CiAgICAgICB2YXIgYWxsb2NhdGVkV2lkdGggPSBnYXBzOwog
Ci0gICAgICBmb3IgKGk9MDsgaTxsZW5ndGg7IGkrPTEpCisgICAgICBmb3IgKGk9MDsgaTxsZW47
IGkrPTEpCiAgICAgICB7CiAgICAgICAgIHBlcmNlbnQgPSB0aGlzLl9fd2lkdGhzW2ldOwogCkBA
IC0zNDgsNyArMzQ4LDcgQEAKICAgICAgICAgdmFyIGZsZXhpYmxlcyA9IHt9OwogICAgICAgICB2
YXIgZmxleCwgb2Zmc2V0OwogCi0gICAgICAgIGZvciAoaT0wOyBpPGxlbmd0aDsgaSs9MSkKKyAg
ICAgICAgZm9yIChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgICB7CiAgICAgICAgICAgZmxleCA9
IHRoaXMuX19mbGV4c1tpXTsKIApAQCAtNDA3LDcgKzQwNyw3IEBACiAgICAgICB9CiAKICAgICAg
IC8vIFJlbmRlciBjaGlsZHJlbiBhbmQgc2VwYXJhdG9ycwotICAgICAgZm9yIChpPTA7IGk8bGVu
Z3RoOyBpKz0xKQorICAgICAgZm9yIChpPTA7IGk8bGVuOyBpKz0xKQogICAgICAgewogICAgICAg
ICBjaGlsZCA9IGNoaWxkcmVuW2ldOwogICAgICAgICB3aWR0aCA9IHdpZHRoc1tpXTsKSW5kZXg6
IHV0aWwvUGVybXV0YXRpb24uanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdXRpbC9QZXJtdXRhdGlvbi5qcwko
cmV2aXNpb24gMjM4ODkpCisrKyB1dGlsL1Blcm11dGF0aW9uLmpzCSh3b3JraW5nIGNvcHkpCkBA
IC0zNiw3ICszNiw3IEBACiAgICAgICAvLyBpbml0CiAgICAgICB2YXIgbWFwID0ge307CiAgICAg
ICB2YXIgaW5kaWNlcyA9IFtdOwotICAgICAgZm9yICh2YXIgaT0wOyBpPGtleXMubGVuZ3RoOyBp
KyspCisgICAgICBmb3IgKHZhciBpPTAsIGwgPSBrZXlzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAg
ICB7CiAgICAgICAgIGluZGljZXNbaV0gPSAwOwogICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTsK
QEAgLTUyLDcgKzUyLDcgQEAKICAgICAgICAgdmFyIGtleSA9IGtleXNbaW5kZXhdOwogICAgICAg
ICB2YXIgdmFsdWVzID0gb3B0aW9uc1trZXldOwogCi0gICAgICAgIGZvciAodmFyIGk9MDsgaTx2
YWx1ZXMubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MCwgbCA9IHZhbHVlcy5sZW5n
dGg7IGk8bDsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAgaWYgKGlnbm9yZSAhPT0gaSkKICAg
ICAgICAgICB7CkBAIC02Nyw0ICs2Nyw0IEBACiAgICAgICBfcGVybSgwLCAtMSk7CiAgICAgfQog
ICB9Ci19KTsKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCit9KTsKSW5kZXg6IHV0aWwvU2Vy
aWFsaXplci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1dGlsL1NlcmlhbGl6ZXIuanMJKHJldmlzaW9uIDIz
ODg5KQorKysgdXRpbC9TZXJpYWxpemVyLmpzCSh3b3JraW5nIGNvcHkpCkBAIC01MSw3ICs1MSw3
IEBACiAKICAgICAgICAgLy8gaGFuZGxlIGFycmF5cwogICAgICAgICBpZiAocXgubGFuZy5UeXBl
LmlzQXJyYXkodmFsdWUpKSB7Ci0gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5s
ZW5ndGg7IGkrKykgeworICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gdmFsdWUubGVuZ3Ro
OyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgICByZXN1bHQgKz0gdGhpcy5fX3RvVXJpUGFyYW1l
dGVyKG5hbWUsIHZhbHVlW2ldLCBxeFNlcmlhbGl6ZXIpOwogICAgICAgICAgIH07CiAgICAgICAg
IH0gZWxzZSBpZiAocXgubGFuZy5UeXBlLmlzRGF0ZSh2YWx1ZSkgJiYgZGF0ZUZvcm1hdCAhPSBu
dWxsKSB7CkBAIC0xMjEsNyArMTIxLDcgQEAKICAgICAgIGlmIChxeC5DbGFzcy5oYXNJbnRlcmZh
Y2Uob2JqZWN0LmNvbnN0cnVjdG9yLCBxeC5kYXRhLklMaXN0RGF0YSkpCiAgICAgICB7CiAgICAg
ICAgIHJlc3VsdCA9IFtdOwotICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iamVjdC5nZXRM
ZW5ndGgoKTsgaSsrKQorICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iamVjdC5nZXRMZW5n
dGgoKTsgaSA8IGw7IGkrKykKICAgICAgICAgewogICAgICAgICAgIHJlc3VsdC5wdXNoKHF4LnV0
aWwuU2VyaWFsaXplci50b05hdGl2ZU9iamVjdCgKICAgICAgICAgICAgIG9iamVjdC5nZXRJdGVt
KGkpLCBxeFNlcmlhbGl6ZXIsIGRhdGVGb3JtYXQpCkBAIC0xMzUsNyArMTM1LDcgQEAKICAgICAg
IGlmIChxeC5sYW5nLlR5cGUuaXNBcnJheShvYmplY3QpKQogICAgICAgewogICAgICAgICByZXN1
bHQgPSBbXTsKLSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3QubGVuZ3RoOyBpKysp
CisgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gb2JqZWN0Lmxlbmd0aDsgaSA8IGw7IGkrKykK
ICAgICAgICAgewogICAgICAgICAgIHJlc3VsdC5wdXNoKHF4LnV0aWwuU2VyaWFsaXplci50b05h
dGl2ZU9iamVjdCgKICAgICAgICAgICAgIG9iamVjdFtpXSwgcXhTZXJpYWxpemVyLCBkYXRlRm9y
bWF0KQpAQCAtMjMwLDcgKzIzMCw3IEBACiAgICAgICAvLyBkYXRhIGFycmF5CiAgICAgICB9IGVs
c2UgaWYgKHF4LkNsYXNzLmhhc0ludGVyZmFjZShvYmplY3QuY29uc3RydWN0b3IsIHF4LmRhdGEu
SUxpc3REYXRhKSkgewogICAgICAgICByZXN1bHQgKz0gIlsiOwotICAgICAgICBmb3IgKHZhciBp
ID0gMDsgaSA8IG9iamVjdC5nZXRMZW5ndGgoKTsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGkg
PSAwLCBsID0gb2JqZWN0LmdldExlbmd0aCgpOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgcmVz
dWx0ICs9IHF4LnV0aWwuU2VyaWFsaXplci50b0pzb24ob2JqZWN0LmdldEl0ZW0oaSksIHF4U2Vy
aWFsaXplciwgZGF0ZUZvcm1hdCkgKyAiLCI7CiAgICAgICAgIH0KICAgICAgICAgaWYgKHJlc3Vs
dCAhPSAiWyIpIHsKQEAgLTI0MSw3ICsyNDEsNyBAQAogICAgICAgLy8gb3RoZXIgYXJyYXlzCiAg
ICAgICB9IGVsc2UgaWYgKHF4LmxhbmcuVHlwZS5pc0FycmF5KG9iamVjdCkpIHsKICAgICAgICAg
cmVzdWx0ICs9ICJbIjsKLSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3QubGVuZ3Ro
OyBpKyspIHsKKyAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvYmplY3QubGVuZ3RoOyBpIDwg
bDsgaSsrKSB7CiAgICAgICAgICAgcmVzdWx0ICs9IHF4LnV0aWwuU2VyaWFsaXplci50b0pzb24o
b2JqZWN0W2ldLCBxeFNlcmlhbGl6ZXIsIGRhdGVGb3JtYXQpICsgIiwiOwogICAgICAgICB9CiAg
ICAgICAgIGlmIChyZXN1bHQgIT0gIlsiKSB7CkluZGV4OiB1dGlsL2ZzbS9GaW5pdGVTdGF0ZU1h
Y2hpbmUuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQotLS0gdXRpbC9mc20vRmluaXRlU3RhdGVNYWNoaW5lLmpzCShy
ZXZpc2lvbiAyMzg4OSkKKysrIHV0aWwvZnNtL0Zpbml0ZVN0YXRlTWFjaGluZS5qcwkod29ya2lu
ZyBjb3B5KQpAQCAtNDA4LDcgKzQwOCw3IEBACiAgICAgICB9CiAKICAgICAgIC8vIEZvciBlYWNo
IGdyb3VwIHRoYXQgdGhpcyBmcmllbmRseSBuYW1lIGlzIHRvIGJlIGEgbWVtYmVyIG9mLi4uCi0g
ICAgICBmb3IgKHZhciBpPTA7IGk8Z3JvdXBOYW1lcy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAo
dmFyIGk9MCwgbD1ncm91cE5hbWVzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAg
IHZhciBncm91cE5hbWUgPSBncm91cE5hbWVzW2ldOwogCkBAIC0xMTg4LDcgKzExODgsNyBAQAog
ICAgICAgICAvLyBBZGQgYW55IGJsb2NrZWQgZXZlbnRzIGJhY2sgb250byB0aGUgcGVuZGluZyBl
dmVudCBxdWV1ZQogICAgICAgICB2YXIgZTsKIAotICAgICAgICBmb3IgKHZhciBpPTA7IGk8dGhp
cy5fX2Jsb2NrZWRFdmVudHMubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MCwgbD10
aGlzLl9fYmxvY2tlZEV2ZW50cy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgICB7CiAgICAgICAg
ICAgZSA9IHRoaXMuX19ibG9ja2VkRXZlbnRzLnBvcCgpOwogICAgICAgICAgIHRoaXMuX19ldmVu
dFF1ZXVlLnVuc2hpZnQoZSk7CkluZGV4OiB1dGlsL2ZzbS9TdGF0ZS5qcwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0t
LSB1dGlsL2ZzbS9TdGF0ZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1dGlsL2ZzbS9TdGF0ZS5q
cwkod29ya2luZyBjb3B5KQpAQCAtMzIzLDcgKzMyMyw3IEBACiAgICAgICAgIH0KIAogICAgICAg
ICAvLyBGb3IgZWFjaCBmdW5jdGlvbiByZXF1ZXN0Li4uCi0gICAgICAgIGZvciAodmFyIGk9MDsg
aTxmdW5jdGlvblJlcXVlc3QubGVuZ3RoOyBpKyspCisgICAgICAgIGZvciAodmFyIGk9MCwgbCA9
IGZ1bmN0aW9uUmVxdWVzdC5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgICB7CiAgICAgICAgICAg
Ly8gUmV0cmVpdmUgdGhlIG9iamVjdCBhbmQgZ3JvdXAgbGlzdCBvYmplY3QKICAgICAgICAgICBv
YmplY3RBbmRHcm91cExpc3QgPSBmdW5jdGlvblJlcXVlc3RbaV07CkBAIC0zNjQsNyArMzY0LDcg
QEAKICAgICAgICAgICBmdW5jRnJhZ21lbnQgPSBmICsgIigiOwogCiAgICAgICAgICAgLy8gRm9y
IGVhY2ggcGFyYW1ldGVyLi4uCi0gICAgICAgICAgZm9yICh2YXIgaj0wOyBqPHBhcmFtcy5sZW5n
dGg7IGorKykKKyAgICAgICAgICBmb3IgKHZhciBqPTAgbCA9IHBhcmFtcy5sZW5ndGg7IGo8bDsg
aisrKQogICAgICAgICAgIHsKICAgICAgICAgICAgIC8vIElmIHRoaXMgaXNuJ3QgdGhlIGZpcnN0
IHBhcmFtZXRlciwgYWRkIGEgc2VwYXJhdG9yCiAgICAgICAgICAgICBpZiAoaiAhPSAwKSB7CkBA
IC00MDgsNyArNDA4LDcgQEAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgKGEp
KTsKICAgICAgICAgICB9CiAKLSAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8YS5sZW5ndGg7IGor
KykKKyAgICAgICAgICBmb3IgKHZhciBqPTAsIGwgPSBhLmxlbmd0aDsgajxsOyBqKyspCiAgICAg
ICAgICAgewogICAgICAgICAgICAgLy8gRW5zdXJlIHdlIGdvdCBhIHN0cmluZwogICAgICAgICAg
ICAgaWYgKHR5cGVvZiAoYVtqXSkgIT0gInN0cmluZyIpIHsKQEAgLTQzMywxMyArNDMzLDEzIEBA
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgKGcpKTsKICAgICAgICAgICAg
IH0KIAotICAgICAgICAgICAgZm9yIChqPTA7IGo8Zy5sZW5ndGg7IGorKykKKyAgICAgICAgICAg
IGZvciAoaj0wLCBsID0gZy5sZW5ndGg7IGo8bDsgaisrKQogICAgICAgICAgICAgewogICAgICAg
ICAgICAgICAvLyBBcnJhbmdlIHRvIGNhbGwgdGhlIGZ1bmN0aW9uIG9uIGVhY2ggb2JqZWN0IGlu
IGVhY2ggZ3JvdXAKICAgICAgICAgICAgICAgZnVuYyArPQogICAgICAgICAgICAgICAgICIgIHZh
ciBncm91cE9iamVjdHMgPSAiICsKICAgICAgICAgICAgICAgICAiICAgIGZzbS5nZXRHcm91cE9i
amVjdHMoJyIgKyBnW2pdICsgIicpOyIgKwotICAgICAgICAgICAgICAgICIgIGZvciAodmFyIGkg
PSAwOyBpIDwgZ3JvdXBPYmplY3RzLmxlbmd0aDsgaSsrKSIgKworICAgICAgICAgICAgICAgICIg
IGZvciAodmFyIGkgPSAwLCBsID0gZ3JvdXBPYmplY3RzLmxlbmd0aDsgaSA8IGw7IGkrKykiICsK
ICAgICAgICAgICAgICAgICAiICB7IiArCiAgICAgICAgICAgICAgICAgIiAgICB2YXIgb2JqTmFt
ZSA9IGdyb3VwT2JqZWN0c1tpXTsiICsKICAgICAgICAgICAgICAgICAiICAgIGZzbS5nZXRPYmpl
Y3Qob2JqTmFtZSkuIiArIGZ1bmNGcmFnbWVudCArICI7IiArCkluZGV4OiB1dGlsL1RpbWVyTWFu
YWdlci5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09Ci0tLSB1dGlsL1RpbWVyTWFuYWdlci5qcwkocmV2aXNpb24gMjM4
ODkpCisrKyB1dGlsL1RpbWVyTWFuYWdlci5qcwkod29ya2luZyBjb3B5KQpAQCAtMTcxLDggKzE3
MSw3IEBACiAgICAgewogICAgICAgLy8gRmluZCB0aGlzIHRpbWVyIGlkIGluIHRoZSB0aW1lLW9y
ZGVyZWQgbGlzdAogICAgICAgdmFyIHRpbWVyUXVldWUgPSB0aGlzLnNlbGYoYXJndW1lbnRzKS5f
X3RpbWVyUXVldWU7Ci0gICAgICB2YXIgbGVuZ3RoID0gdGltZXJRdWV1ZS5sZW5ndGg7Ci0gICAg
ICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaSA9IDAs
IGxlbiA9IHRpbWVyUXVldWUubGVuZ3RoOyBpIDwgbGVuOyBpKyspCiAgICAgICB7CiAgICAgICAg
IC8vIElzIHRoaXMgdGhlIG9uZSB3ZSdyZSBsb29raW5nIGZvcj8KICAgICAgICAgaWYgKHRpbWVy
UXVldWVbaV0gPT0gdGltZXJJZCkKQEAgLTIxOCw4ICsyMTcsOCBAQAogICAgICAgLy8gYXBwcm9w
cmlhdGUgcGxhY2UgdG8gaW5zZXJ0IHRoaXMgdGltZXIuCiAgICAgICB2YXIgdGltZXJRdWV1ZSA9
IHRoaXMuc2VsZihhcmd1bWVudHMpLl9fdGltZXJRdWV1ZTsKICAgICAgIHZhciB0aW1lckRhdGEg
PSB0aGlzLnNlbGYoYXJndW1lbnRzKS5fX3RpbWVyRGF0YTsKLSAgICAgIHZhciBsZW5ndGggPSB0
aW1lclF1ZXVlLmxlbmd0aDsKLSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKysp
CisgICAgICB2YXIgbGVuID0gdGltZXJRdWV1ZS5sZW5ndGg7CisgICAgICBmb3IgKHZhciBpID0g
MDsgaSA8IGxlbjsgaSsrKQogICAgICAgewogICAgICAgICAvLyBIYXZlIHdlIHJlYWNoZWQgYSBs
YXRlciB0aW1lPwogICAgICAgICBpZiAodGltZXJEYXRhW3RpbWVyUXVldWVbaV1dLmV4cGlyZUF0
ID4gZXhwaXJlQXQpCkBAIC0yMzMsNyArMjMyLDcgQEAKICAgICAgIH0KIAogICAgICAgLy8gRGlk
IHdlIGZpbmQgc29tZXBsYWNlIGluIHRoZSBtaWRkbGUgb2YgdGhlIHF1ZXVlIGZvciBpdD8KLSAg
ICAgIGlmICh0aW1lclF1ZXVlLmxlbmd0aCA9PSBsZW5ndGgpCisgICAgICBpZiAodGltZXJRdWV1
ZS5sZW5ndGggPT0gbGVuKQogICAgICAgewogICAgICAgICAvLyBOb3BlLiAgSW5zZXJ0IGl0IGF0
IHRoZSBlbmQuCiAgICAgICAgIHRpbWVyUXVldWUucHVzaCh0aW1lcklkKTsKSW5kZXg6IHV0aWwv
Zm9ybWF0L0RhdGVGb3JtYXQuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gdXRpbC9mb3JtYXQvRGF0ZUZvcm1h
dC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1dGlsL2Zvcm1hdC9EYXRlRm9ybWF0LmpzCSh3b3Jr
aW5nIGNvcHkpCkBAIC0yNjgsNyArMjY4LDcgQEAKICAgICAgIHRoaXMuX19pbml0Rm9ybWF0VHJl
ZSgpOwogICAgICAgdmFyIG91dHB1dCA9ICIiOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8dGhp
cy5fX2Zvcm1hdFRyZWUubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5f
X2Zvcm1hdFRyZWUubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIGN1cnJB
dG9tID0gdGhpcy5fX2Zvcm1hdFRyZWVbaV07CiAKQEAgLTQ2Nyw3ICs0NjcsNyBAQAogCiAgICAg
ICB2YXIgY3Vyckdyb3VwID0gMTsKIAotICAgICAgZm9yICh2YXIgaT0wOyBpPHRoaXMuX19wYXJz
ZUZlZWQudXNlZFJ1bGVzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPXRoaXMu
X19wYXJzZUZlZWQudXNlZFJ1bGVzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAg
IHZhciBydWxlID0gdGhpcy5fX3BhcnNlRmVlZC51c2VkUnVsZXNbaV07CiAKQEAgLTY5NSw3ICs2
OTUsNyBAQAogICAgICAgdmFyIHVzZWRSdWxlcyA9IFtdOwogICAgICAgdmFyIHBhdHRlcm4gPSAi
XiI7CiAKLSAgICAgIGZvciAodmFyIGF0b21JZHg9MDsgYXRvbUlkeDx0aGlzLl9fZm9ybWF0VHJl
ZS5sZW5ndGg7IGF0b21JZHgrKykKKyAgICAgIGZvciAodmFyIGF0b21JZHg9MCwgbD10aGlzLl9f
Zm9ybWF0VHJlZS5sZW5ndGg7IGF0b21JZHg8bDsgYXRvbUlkeCsrKQogICAgICAgewogICAgICAg
ICB2YXIgY3VyckF0b20gPSB0aGlzLl9fZm9ybWF0VHJlZVthdG9tSWR4XTsKIApAQCAtNzExLDcg
KzcxMSw3IEBACiAgICAgICAgICAgLy8gR2V0IHRoZSBydWxlIGZvciB0aGlzIHdpbGRjYXJkCiAg
ICAgICAgICAgdmFyIHdpbGRjYXJkUnVsZTsKIAotICAgICAgICAgIGZvciAodmFyIHJ1bGVJZHg9
MDsgcnVsZUlkeDx0aGlzLl9fcGFyc2VSdWxlcy5sZW5ndGg7IHJ1bGVJZHgrKykKKyAgICAgICAg
ICBmb3IgKHZhciBydWxlSWR4PTAsIGw9dGhpcy5fX3BhcnNlUnVsZXMubGVuZ3RoOyBydWxlSWR4
PGw7IHJ1bGVJZHgrKykKICAgICAgICAgICB7CiAgICAgICAgICAgICB2YXIgcnVsZSA9IHRoaXMu
X19wYXJzZVJ1bGVzW3J1bGVJZHhdOwogCkBAIC04MjEsNyArODIxLDcgQEAKICAgICAgIH07CiAK
ICAgICAgIHZhciBzaG9ydE1vbnRoTmFtZXMgPSBxeC5sb2NhbGUuRGF0ZS5nZXRNb250aE5hbWVz
KCJhYmJyZXZpYXRlZCIsIHRoaXMuX19sb2NhbGUsICJmb3JtYXQiKTsKLSAgICAgIGZvciAodmFy
IGk9MDsgaTxzaG9ydE1vbnRoTmFtZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9
MCwgbD1zaG9ydE1vbnRoTmFtZXMubGVuZ3RoOyBpPGw7IGkrKykgewogICAgICAgICBzaG9ydE1v
bnRoTmFtZXNbaV0gPSBMU3RyaW5nLmVzY2FwZVJlZ2V4cENoYXJzKHNob3J0TW9udGhOYW1lc1tp
XS50b1N0cmluZygpKTsKICAgICAgIH0KIApAQCAtODMxLDcgKzgzMSw3IEBACiAgICAgICB9CiAK
ICAgICAgIHZhciBmdWxsTW9udGhOYW1lcyA9IHF4LmxvY2FsZS5EYXRlLmdldE1vbnRoTmFtZXMo
IndpZGUiLCB0aGlzLl9fbG9jYWxlLCAiZm9ybWF0Iik7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8
ZnVsbE1vbnRoTmFtZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1mdWxs
TW9udGhOYW1lcy5sZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIGZ1bGxNb250aE5hbWVzW2ld
ID0gTFN0cmluZy5lc2NhcGVSZWdleHBDaGFycyhmdWxsTW9udGhOYW1lc1tpXS50b1N0cmluZygp
KTsKICAgICAgIH0KIApAQCAtODQxLDcgKzg0MSw3IEBACiAgICAgICB9CiAKICAgICAgIHZhciBu
YXJyb3dEYXlOYW1lcyA9IHF4LmxvY2FsZS5EYXRlLmdldERheU5hbWVzKCJuYXJyb3ciLCB0aGlz
Ll9fbG9jYWxlLCAiZm9ybWF0Iik7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8bmFycm93RGF5TmFt
ZXMubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1uYXJyb3dEYXlOYW1lcy5s
ZW5ndGg7IGk8bDsgaSsrKSB7CiAgICAgICAgIG5hcnJvd0RheU5hbWVzW2ldID0gTFN0cmluZy5l
c2NhcGVSZWdleHBDaGFycyhuYXJyb3dEYXlOYW1lc1tpXS50b1N0cmluZygpKTsKICAgICAgIH0K
IApAQCAtODUxLDcgKzg1MSw3IEBACiAgICAgICB9CiAKICAgICAgIHZhciBhYmJyRGF5TmFtZXMg
PSBxeC5sb2NhbGUuRGF0ZS5nZXREYXlOYW1lcygiYWJicmV2aWF0ZWQiLCB0aGlzLl9fbG9jYWxl
LCAiZm9ybWF0Iik7Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8YWJickRheU5hbWVzLmxlbmd0aDsg
aSsrKSB7CisgICAgICBmb3IgKHZhciBpPTAsIGw9YWJickRheU5hbWVzLmxlbmd0aDsgaTxsOyBp
KyspIHsKICAgICAgICAgYWJickRheU5hbWVzW2ldID0gTFN0cmluZy5lc2NhcGVSZWdleHBDaGFy
cyhhYmJyRGF5TmFtZXNbaV0udG9TdHJpbmcoKSk7CiAgICAgICB9CiAKQEAgLTg2MSw3ICs4NjEs
NyBAQAogICAgICAgfQogCiAgICAgICB2YXIgZnVsbERheU5hbWVzID0gcXgubG9jYWxlLkRhdGUu
Z2V0RGF5TmFtZXMoIndpZGUiLCB0aGlzLl9fbG9jYWxlLCAiZm9ybWF0Iik7Ci0gICAgICBmb3Ig
KHZhciBpPTA7IGk8ZnVsbERheU5hbWVzLmxlbmd0aDsgaSsrKSB7CisgICAgICBmb3IgKHZhciBp
PTAsIGw9ZnVsbERheU5hbWVzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgZnVsbERheU5h
bWVzW2ldID0gTFN0cmluZy5lc2NhcGVSZWdleHBDaGFycyhmdWxsRGF5TmFtZXNbaV0udG9TdHJp
bmcoKSk7CiAgICAgICB9CiAKSW5kZXg6IHV0aWwvU3RyaW5nU3BsaXQuanMKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQot
LS0gdXRpbC9TdHJpbmdTcGxpdC5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1dGlsL1N0cmluZ1Nw
bGl0LmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMDAsNyArMTAwLDcgQEAKICAgICAgICAgICBpZiAo
IWNvbXBsaWFudEV4ZWNOcGNnICYmIG1hdGNoLmxlbmd0aCA+IDEpCiAgICAgICAgICAgewogICAg
ICAgICAgICAgbWF0Y2hbMF0ucmVwbGFjZShzZXBhcmF0b3IyLCBmdW5jdGlvbiAoKSB7Ci0gICAg
ICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykK
KyAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDEsIGwgPSBhcmd1bWVudHMubGVuZ3RoIC0gMjsg
aSA8IGw7IGkrKykKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIGlmIChhcmd1bWVu
dHNbaV0gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgbWF0Y2hbaV0gPSB1bmRl
ZmluZWQ7CkluZGV4OiB1dGlsL0VkaXREaXN0YW5jZS5qcwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB1dGlsL0Vk
aXREaXN0YW5jZS5qcwkocmV2aXNpb24gMjM4ODkpCisrKyB1dGlsL0VkaXREaXN0YW5jZS5qcwko
d29ya2luZyBjb3B5KQpAQCAtNTIsMTkgKzUyLDE5IEBACiAgICAgICAvLyBwb3NBIGFuZCBwb3NC
IGFyZSB1c2VkIHRvIGl0ZXJhdGUgb3ZlciBzdHIxIGFuZCBzdHIyCiAgICAgICB2YXIgcG9zQSwg
cG9zQiwgY29zdDsKIAotICAgICAgZm9yIChwb3NBPTA7IHBvc0E8PWRhdGFBLmxlbmd0aDsgcG9z
QSsrKQorICAgICAgZm9yIChwb3NBPTAsIGwgPSBkYXRhQS5sZW5ndGg7IHBvc0E8PWw7IHBvc0Er
KykKICAgICAgIHsKICAgICAgICAgZGlzdGFuY2VbcG9zQV0gPSBbXTsKICAgICAgICAgZGlzdGFu
Y2VbcG9zQV1bMF0gPSBwb3NBOwogICAgICAgfQogCi0gICAgICBmb3IgKHBvc0I9MTsgcG9zQjw9
ZGF0YUIubGVuZ3RoOyBwb3NCKyspIHsKKyAgICAgIGZvciAocG9zQj0xLCBsID0gZGF0YUIubGVu
Z3RoOyBwb3NCPD1sOyBwb3NCKyspIHsKICAgICAgICAgZGlzdGFuY2VbMF1bcG9zQl0gPSBwb3NC
OwogICAgICAgfQogCi0gICAgICBmb3IgKHBvc0E9MTsgcG9zQTw9ZGF0YUEubGVuZ3RoOyBwb3NB
KyspCisgICAgICBmb3IgKHBvc0E9MSwgbCA9IGRhdGFBLmxlbmd0aDsgcG9zQTw9bDsgcG9zQSsr
KQogICAgICAgewotICAgICAgICBmb3IgKHBvc0I9MTsgcG9zQjw9ZGF0YUIubGVuZ3RoOyBwb3NC
KyspCisgICAgICAgIGZvciAocG9zQj0xLCBsID0gZGF0YUIubGVuZ3RoOyBwb3NCPD1sOyBwb3NC
KyspCiAgICAgICAgIHsKICAgICAgICAgICBjb3N0ID0gZGF0YUFbcG9zQS0xXSA9PT0gZGF0YUJb
cG9zQi0xXSA/IDAgOiAxOwogCkluZGV4OiBkZXYvdW5pdC9UZXN0TG9hZGVySW5saW5lLmpzCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0KLS0tIGRldi91bml0L1Rlc3RMb2FkZXJJbmxpbmUuanMJKHJldmlzaW9uIDIzODg5
KQorKysgZGV2L3VuaXQvVGVzdExvYWRlcklubGluZS5qcwkod29ya2luZyBjb3B5KQpAQCAtMTYx
LDcgKzE2MSw3IEBACiAgICAgICB2YXIgZGVzYyA9IFtdOwogICAgICAgdmFyIGNsYXNzZXMgPSB0
aGlzLmdldFN1aXRlKCkuZ2V0VGVzdENsYXNzZXMoKTsKIAotICAgICAgZm9yICh2YXIgaT0wOyBp
PGNsYXNzZXMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9Y2xhc3Nlcy5sZW5n
dGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgY2xzID0gY2xhc3Nlc1tpXTsKICAg
ICAgICAgdmFyIGNsc0Rlc2MgPSB7fTsKQEAgLTE2OSw3ICsxNjksNyBAQAogICAgICAgICBjbHNE
ZXNjLnRlc3RzID0gW107CiAgICAgICAgIHZhciBtZXRob2RzID0gY2xzLmdldFRlc3RNZXRob2Rz
KCk7CiAKLSAgICAgICAgZm9yICh2YXIgaj0wOyBqPG1ldGhvZHMubGVuZ3RoOyBqKyspIHsKKyAg
ICAgICAgZm9yICh2YXIgaj0wLCBsPW1ldGhvZHMubGVuZ3RoOyBqPGw7IGorKykgewogICAgICAg
ICAgIGNsc0Rlc2MudGVzdHMucHVzaChtZXRob2RzW2pdLmdldE5hbWUoKSk7CiAgICAgICAgIH0K
IApAQCAtMTkxLDEzICsxOTEsMTMgQEAKICAgICB7CiAgICAgICB2YXIgY2xhc3NlcyA9IHRoaXMu
Z2V0U3VpdGUoKS5nZXRUZXN0Q2xhc3NlcygpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8Y2xh
c3Nlcy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1jbGFzc2VzLmxlbmd0aDsg
aTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gY2xhc3Nlc1tpXS5n
ZXROYW1lKCkpCiAgICAgICAgIHsKICAgICAgICAgICB2YXIgbWV0aG9kcyA9IGNsYXNzZXNbaV0u
Z2V0VGVzdE1ldGhvZHMoKTsKIAotICAgICAgICAgIGZvciAodmFyIGo9MDsgajxtZXRob2RzLmxl
bmd0aDsgaisrKQorICAgICAgICAgIGZvciAodmFyIGo9MCwgbD1tZXRob2RzLmxlbmd0aDsgajxs
OyBqKyspCiAgICAgICAgICAgewogICAgICAgICAgICAgaWYgKG1ldGhvZE5hbWUgJiYgbWV0aG9k
c1tqXS5nZXROYW1lKCkgIT0gbWV0aG9kTmFtZSkgewogICAgICAgICAgICAgICBjb250aW51ZTsK
QEAgLTIyMiw3ICsyMjIsNyBAQAogICAgIHsKICAgICAgIHZhciBjbGFzc2VzID0gdGhpcy5nZXRT
dWl0ZSgpLmdldFRlc3RDbGFzc2VzKCk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxjbGFzc2Vz
Lmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPWNsYXNzZXMubGVuZ3RoOyBpPGw7
IGkrKykKICAgICAgIHsKICAgICAgICAgaWYgKGNsYXNzZXNbaV0uZ2V0TmFtZSgpLmluZGV4T2Yo
bmFtZXNwYWNlTmFtZSkgPT0gMCkgewogICAgICAgICAgIGNsYXNzZXNbaV0ucnVuKHRlc3RSZXN1
bHQpOwpJbmRleDogZGV2L3VuaXQvVGVzdExvYWRlci5qcwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkZXYvdW5p
dC9UZXN0TG9hZGVyLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGRldi91bml0L1Rlc3RMb2FkZXIu
anMJKHdvcmtpbmcgY29weSkKQEAgLTE2MSw3ICsxNjEsNyBAQAogICAgICAgdmFyIGRlc2MgPSBb
XTsKICAgICAgIHZhciBjbGFzc2VzID0gdGhpcy5nZXRTdWl0ZSgpLmdldFRlc3RDbGFzc2VzKCk7
CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxjbGFzc2VzLmxlbmd0aDsgaSsrKQorICAgICAgZm9y
ICh2YXIgaT0wLCBsPWNsYXNzZXMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAg
dmFyIGNscyA9IGNsYXNzZXNbaV07CiAgICAgICAgIHZhciBjbHNEZXNjID0ge307CkBAIC0xNjks
NyArMTY5LDcgQEAKICAgICAgICAgY2xzRGVzYy50ZXN0cyA9IFtdOwogICAgICAgICB2YXIgbWV0
aG9kcyA9IGNscy5nZXRUZXN0TWV0aG9kcygpOwogCi0gICAgICAgIGZvciAodmFyIGo9MDsgajxt
ZXRob2RzLmxlbmd0aDsgaisrKSB7CisgICAgICAgIGZvciAodmFyIGo9MCwgbD1tZXRob2RzLmxl
bmd0aDsgajxsOyBqKyspIHsKICAgICAgICAgICBjbHNEZXNjLnRlc3RzLnB1c2gobWV0aG9kc1tq
XS5nZXROYW1lKCkpOwogICAgICAgICB9CiAKQEAgLTE5MSwxMyArMTkxLDEzIEBACiAgICAgewog
ICAgICAgdmFyIGNsYXNzZXMgPSB0aGlzLmdldFN1aXRlKCkuZ2V0VGVzdENsYXNzZXMoKTsKIAot
ICAgICAgZm9yICh2YXIgaT0wOyBpPGNsYXNzZXMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZh
ciBpPTAsIGw9Y2xhc3Nlcy5sZW5ndGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICBpZiAo
Y2xhc3NOYW1lID09IGNsYXNzZXNbaV0uZ2V0TmFtZSgpKQogICAgICAgICB7CiAgICAgICAgICAg
dmFyIG1ldGhvZHMgPSBjbGFzc2VzW2ldLmdldFRlc3RNZXRob2RzKCk7CiAKLSAgICAgICAgICBm
b3IgKHZhciBqPTA7IGo8bWV0aG9kcy5sZW5ndGg7IGorKykKKyAgICAgICAgICBmb3IgKHZhciBq
PTAsIGw9bWV0aG9kcy5sZW5ndGg7IGo8bDsgaisrKQogICAgICAgICAgIHsKICAgICAgICAgICAg
IGlmIChtZXRob2ROYW1lICYmIG1ldGhvZHNbal0uZ2V0TmFtZSgpICE9IG1ldGhvZE5hbWUpIHsK
ICAgICAgICAgICAgICAgY29udGludWU7CkBAIC0yMjIsNyArMjIyLDcgQEAKICAgICB7CiAgICAg
ICB2YXIgY2xhc3NlcyA9IHRoaXMuZ2V0U3VpdGUoKS5nZXRUZXN0Q2xhc3NlcygpOwogCi0gICAg
ICBmb3IgKHZhciBpPTA7IGk8Y2xhc3Nlcy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9
MCwgbD1jbGFzc2VzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChjbGFz
c2VzW2ldLmdldE5hbWUoKS5pbmRleE9mKG5hbWVzcGFjZU5hbWUpID09IDApIHsKICAgICAgICAg
ICBjbGFzc2VzW2ldLnJ1bih0ZXN0UmVzdWx0KTsKSW5kZXg6IGRldi91bml0L1Rlc3RTdWl0ZS5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSBkZXYvdW5pdC9UZXN0U3VpdGUuanMJKHJldmlzaW9uIDIzODg5KQor
KysgZGV2L3VuaXQvVGVzdFN1aXRlLmpzCSh3b3JraW5nIGNvcHkpCkBAIC0xMzMsNyArMTMzLDcg
QEAKICAgICB7CiAgICAgICB2YXIgY2xhc3NlcyA9IFtdOwogCi0gICAgICBmb3IgKHZhciBpPTA7
IGk8dGhpcy5fdGVzdHMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5f
dGVzdHMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHRlc3QgPSB0aGlz
Ll90ZXN0c1tpXTsKIApJbmRleDogZGV2L3VuaXQvQWJzdHJhY3RUZXN0U3VpdGUuanMKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQotLS0gZGV2L3VuaXQvQWJzdHJhY3RUZXN0U3VpdGUuanMJKHJldmlzaW9uIDIzODg5KQor
KysgZGV2L3VuaXQvQWJzdHJhY3RUZXN0U3VpdGUuanMJKHdvcmtpbmcgY29weSkKQEAgLTgyLDcg
KzgyLDcgQEAKICAgICAgKi8KICAgICBydW4gOiBmdW5jdGlvbih0ZXN0UmVzdWx0KQogICAgIHsK
LSAgICAgIGZvciAodmFyIGk9MDsgaTx0aGlzLl90ZXN0cy5sZW5ndGg7IGkrKykgeworICAgICAg
Zm9yICh2YXIgaT0wLCBsPXRoaXMuX3Rlc3RzLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
KHRoaXMuX3Rlc3RzW2ldKS5ydW4odGVzdFJlc3VsdCk7CiAgICAgICB9CiAgICAgfSwKQEAgLTk3
LDcgKzk3LDcgQEAKICAgICB7CiAgICAgICB2YXIgbWV0aG9kcyA9IFtdOwogCi0gICAgICBmb3Ig
KHZhciBpPTA7IGk8dGhpcy5fdGVzdHMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAs
IGw9dGhpcy5fdGVzdHMubGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIHRl
c3QgPSB0aGlzLl90ZXN0c1tpXTsKIApJbmRleDogZGV2L3VuaXQvVGVzdExvYWRlck5hdGl2ZS5q
cwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09Ci0tLSBkZXYvdW5pdC9UZXN0TG9hZGVyTmF0aXZlLmpzCShyZXZpc2lvbiAy
Mzg4OSkKKysrIGRldi91bml0L1Rlc3RMb2FkZXJOYXRpdmUuanMJKHdvcmtpbmcgY29weSkKQEAg
LTE2MSw3ICsxNjEsNyBAQAogICAgICAgdmFyIGRlc2MgPSBbXTsKICAgICAgIHZhciBjbGFzc2Vz
ID0gdGhpcy5nZXRTdWl0ZSgpLmdldFRlc3RDbGFzc2VzKCk7CiAKLSAgICAgIGZvciAodmFyIGk9
MDsgaTxjbGFzc2VzLmxlbmd0aDsgaSsrKQorICAgICAgZm9yICh2YXIgaT0wLCBsPWNsYXNzZXMu
bGVuZ3RoOyBpPGw7IGkrKykKICAgICAgIHsKICAgICAgICAgdmFyIGNscyA9IGNsYXNzZXNbaV07
CiAgICAgICAgIHZhciBjbHNEZXNjID0ge307CkBAIC0xNjksNyArMTY5LDcgQEAKICAgICAgICAg
Y2xzRGVzYy50ZXN0cyA9IFtdOwogICAgICAgICB2YXIgbWV0aG9kcyA9IGNscy5nZXRUZXN0TWV0
aG9kcygpOwogCi0gICAgICAgIGZvciAodmFyIGo9MDsgajxtZXRob2RzLmxlbmd0aDsgaisrKSB7
CisgICAgICAgIGZvciAodmFyIGo9MCwgbD1tZXRob2RzLmxlbmd0aDsgajxsOyBqKyspIHsKICAg
ICAgICAgICBjbHNEZXNjLnRlc3RzLnB1c2gobWV0aG9kc1tqXS5nZXROYW1lKCkpOwogICAgICAg
ICB9CiAKQEAgLTE5MSwxMyArMTkxLDEzIEBACiAgICAgewogICAgICAgdmFyIGNsYXNzZXMgPSB0
aGlzLmdldFN1aXRlKCkuZ2V0VGVzdENsYXNzZXMoKTsKIAotICAgICAgZm9yICh2YXIgaT0wOyBp
PGNsYXNzZXMubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpPTAsIGw9Y2xhc3Nlcy5sZW5n
dGg7IGk8bDsgaSsrKQogICAgICAgewogICAgICAgICBpZiAoY2xhc3NOYW1lID09IGNsYXNzZXNb
aV0uZ2V0TmFtZSgpKQogICAgICAgICB7CiAgICAgICAgICAgdmFyIG1ldGhvZHMgPSBjbGFzc2Vz
W2ldLmdldFRlc3RNZXRob2RzKCk7CiAKLSAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8bWV0aG9k
cy5sZW5ndGg7IGorKykKKyAgICAgICAgICBmb3IgKHZhciBqPTAsIGw9bWV0aG9kcy5sZW5ndGg7
IGo8bDsgaisrKQogICAgICAgICAgIHsKICAgICAgICAgICAgIGlmIChtZXRob2ROYW1lICYmIG1l
dGhvZHNbal0uZ2V0TmFtZSgpICE9IG1ldGhvZE5hbWUpIHsKICAgICAgICAgICAgICAgY29udGlu
dWU7CkBAIC0yMjIsNyArMjIyLDcgQEAKICAgICB7CiAgICAgICB2YXIgY2xhc3NlcyA9IHRoaXMu
Z2V0U3VpdGUoKS5nZXRUZXN0Q2xhc3NlcygpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8Y2xh
c3Nlcy5sZW5ndGg7IGkrKykKKyAgICAgIGZvciAodmFyIGk9MCwgbD1jbGFzc2VzLmxlbmd0aDsg
aTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIGlmIChjbGFzc2VzW2ldLmdldE5hbWUoKS5pbmRl
eE9mKG5hbWVzcGFjZU5hbWUpID09IDApIHsKICAgICAgICAgICBjbGFzc2VzW2ldLnJ1bih0ZXN0
UmVzdWx0KTsKSW5kZXg6IGRldi9PYmplY3RTdW1tYXJ5LmpzCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGRldi9P
YmplY3RTdW1tYXJ5LmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGRldi9PYmplY3RTdW1tYXJ5Lmpz
CSh3b3JraW5nIGNvcHkpCkBAIC03Miw3ICs3Miw3IEBACiAKICAgICAgIHZhciB2TXNnID0gIlN1
bW1hcnk6ICgiICsgdkNvdW50ZXIgKyAiIE9iamVjdHMpXG5cbiI7CiAKLSAgICAgIGZvciAodmFy
IGk9MDsgaTx2QXJyRGF0YS5sZW5ndGg7IGkrKykgeworICAgICAgZm9yICh2YXIgaT0wLCBsPXZB
cnJEYXRhLmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAgdk1zZyArPSB2QXJyRGF0YVtpXS5u
dW1iZXIgKyAiOiAiICsgdkFyckRhdGFbaV0uY2xhc3NuYW1lICsgIlxuIjsKICAgICAgIH0KIApJ
bmRleDogZGV2L1N0YWNrVHJhY2UuanMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gZGV2L1N0YWNrVHJhY2UuanMJ
KHJldmlzaW9uIDIzODg5KQorKysgZGV2L1N0YWNrVHJhY2UuanMJKHdvcmtpbmcgY29weSkKQEAg
LTU2LDcgKzU2LDcgQEAKICAgICAgICAgICB2YXIgY2FsbGVyVHJhY2UgPSB0aGlzLmdldFN0YWNr
VHJhY2VGcm9tQ2FsbGVyKGFyZ3VtZW50cyk7CiAKICAgICAgICAgICB2YXIgdHJhY2UgPSBjYWxs
ZXJUcmFjZS5sZW5ndGggPiBlcnJvclRyYWNlLmxlbmd0aCA/IGNhbGxlclRyYWNlIDogZXJyb3JU
cmFjZTsKLSAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8TWF0aC5taW4oY2FsbGVyVHJhY2UubGVu
Z3RoLCBlcnJvclRyYWNlLmxlbmd0aCk7IGkrKykKKyAgICAgICAgICBmb3IgKHZhciBpPTAsIGw9
TWF0aC5taW4oY2FsbGVyVHJhY2UubGVuZ3RoLCBlcnJvclRyYWNlLmxlbmd0aCk7IGk8bDsgaSsr
KQogICAgICAgICAgIHsKICAgICAgICAgICAgIHZhciBjYWxsZXJDYWxsID0gY2FsbGVyVHJhY2Vb
aV07CiAgICAgICAgICAgICBpZiAoY2FsbGVyQ2FsbC5pbmRleE9mKCJhbm9ueW1vdXMiKSA+PSAw
KSB7CkBAIC0yMzEsNyArMjMxLDcgQEAKICAgICAgICAgdmFyIHRyYWNlID0gW107CiAgICAgICAg
IHZhciB0cmFjZVN0cmluZyA9IHF4LmxhbmcuU3RyaW5nLnRyaW0oZXJyb3IubWVzc2FnZS5zcGxp
dCgiQmFja3RyYWNlOiIpWzFdKTsKICAgICAgICAgdmFyIGxpbmVzID0gdHJhY2VTdHJpbmcuc3Bs
aXQoIlxuIik7Ci0gICAgICAgIGZvciAodmFyIGk9MDsgaTxsaW5lcy5sZW5ndGg7IGkrKykKKyAg
ICAgICAgZm9yICh2YXIgaT0wLCBsPWxpbmVzLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICAgIHsK
ICAgICAgICAgICB2YXIgcmVSZXN1bHQgPSBsaW5lc1tpXS5tYXRjaCgvXHMqTGluZSAoWzAtOV0r
KSBvZi4qIChcUy4qKS8pOwogICAgICAgICAgIGlmIChyZVJlc3VsdCAmJiByZVJlc3VsdC5sZW5n
dGggPj0gMikgewpJbmRleDogZGV2L1BvbGx1dGlvbi5qcwo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkZXYvUG9s
bHV0aW9uLmpzCShyZXZpc2lvbiAyMzg4OSkKKysrIGRldi9Qb2xsdXRpb24uanMJKHdvcmtpbmcg
Y29weSkKQEAgLTE0OCw3ICsxNDgsNyBAQAogICAgICAgICB7CiAgICAgICAgICAgaWduID0gaWdu
LnNsaWNlKDApOwogCi0gICAgICAgICAgZm9yICh2YXIgZnJhbWVJbmRleD0wOyBmcmFtZUluZGV4
PHdpbmRvdy5sZW5ndGg7IGZyYW1lSW5kZXgrKykgeworICAgICAgICAgIGZvciAodmFyIGZyYW1l
SW5kZXg9MCwgbD13aW5kb3cubGVuZ3RoOyBmcmFtZUluZGV4PGw7IGZyYW1lSW5kZXgrKykgewog
ICAgICAgICAgICAgaWduLnB1c2goIiIgKyBmcmFtZUluZGV4KTsKICAgICAgICAgICB9CiAgICAg
ICAgIH0KQEAgLTIzMCw3ICsyMzAsNyBAQAogCiAgICAgICB2YXIgZXh0ID0gdGhpcy5leHRyYWN0
KG9iamVjdE5hbWUpOwogCi0gICAgICBmb3IgKHZhciBpPTA7IGk8ZXh0Lmxlbmd0aDsgaSsrKSB7
CisgICAgICBmb3IgKHZhciBpPTAsIGw9ZXh0Lmxlbmd0aDsgaTxsOyBpKyspIHsKICAgICAgICAg
YWxsLnB1c2gocm93U3RhcnQgKyBleHRbaV0ua2V5ICsgY2VsbFNwbGl0ICsgZXh0W2ldLnZhbHVl
ICsgcm93RW5kKTsKICAgICAgIH0KIApAQCAtMjYwLDcgKzI2MCw3IEBACiAKICAgICAgIHZhciBl
eHQgPSB0aGlzLmV4dHJhY3Qob2JqZWN0TmFtZSk7CiAKLSAgICAgIGZvciAodmFyIGk9MDsgaTxl
eHQubGVuZ3RoOyBpKyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD1leHQubGVuZ3RoOyBpPGw7
IGkrKykgewogICAgICAgICBhbGwucHVzaChleHRbaV0ua2V5ICsgY2VsbFNwbGl0ICsgZXh0W2ld
LnZhbHVlICsgcm93RW5kKTsKICAgICAgIH0KIApJbmRleDogZGV2L0RlYnVnLmpzCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KLS0tIGRldi9EZWJ1Zy5qcwkocmV2aXNpb24gMjM4ODkpCisrKyBkZXYvRGVidWcuanMJKHdv
cmtpbmcgY29weSkKQEAgLTMwNiw3ICszMDYsNyBAQAogCiAgICAgICB9IGVsc2UgaWYgKHF4LkNs
YXNzLmhhc0ludGVyZmFjZShtb2RlbC5jb25zdHJ1Y3RvciwgcXguZGF0YS5JTGlzdERhdGEpKSB7
CiAgICAgICAgIC8vIGdvIHRocmV3IHRoZSBkYXRhIHN0cnVjdHVyZQotICAgICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IG1vZGVsLmxlbmd0aDsgaSsrKSB7CisgICAgICAgIGZvciAodmFyIGkgPSAw
LCBsID0gbW9kZWwubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICAgLy8gcHJpbnQgb3V0
IHRoZSBpbmRlbnRhdGlvbgogICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaW5kZW50OyBq
KyspIHsKICAgICAgICAgICAgIG1lc3NhZ2UgKz0gIi0iCkluZGV4OiBkZXYvVG9rZW5pemVyLmpz
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KLS0tIGRldi9Ub2tlbml6ZXIuanMJKHJldmlzaW9uIDIzODg5KQorKysgZGV2
L1Rva2VuaXplci5qcwkod29ya2luZyBjb3B5KQpAQCAtMTQ4LDcgKzE0OCw3IEBACiAKICAgICAg
IHZhciBhID0gamF2YVNjcmlwdFRleHQubWF0Y2gocmVfdG9rZW4pOwogCi0gICAgICBmb3IgKHZh
ciBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspCisgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGEu
bGVuZ3RoOyBpIDwgbDsgaSsrKQogICAgICAgewogICAgICAgICB2YXIgdG9rZW4gPSBhW2ldOwog
ICAgICAgICBpZiAodG9rZW4ubWF0Y2gocmVfbGluZV9jb21tZW50KSkgewpAQCAtMjI1LDcgKzIy
NSw3IEBACiAgICAgewogICAgICAgdmFyIHRva2VucyA9IHF4LmRldi5Ub2tlbml6ZXIudG9rZW5p
emVKYXZhU2NyaXB0KGphdmFTY3JpcHRUZXh0KTsKICAgICAgIHZhciBqcyA9IG5ldyBxeC51dGls
LlN0cmluZ0J1aWxkZXIoKTsKLSAgICAgIGZvciAodmFyIGk9MDsgaTx0b2tlbnMubGVuZ3RoOyBp
KyspIHsKKyAgICAgIGZvciAodmFyIGk9MCwgbD10b2tlbnMubGVuZ3RoOyBpPGw7IGkrKykgewog
ICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07CiAgICAgICAgIHZhciBodG1sVmFsdWUgPSBx
eC5ib20uU3RyaW5nLmVzY2FwZSh0b2tlbi52YWx1ZSk7CiAgICAgICAgIHN3aXRjaCh0b2tlbi50
eXBlKSB7CkluZGV4OiBkZXYvUHJvZmlsZS5qcwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBkZXYvUHJvZmlsZS5q
cwkocmV2aXNpb24gMjM4ODkpCisrKyBkZXYvUHJvZmlsZS5qcwkod29ya2luZyBjb3B5KQpAQCAt
MTE3LDcgKzExNyw3IEBACiAgICAgICBkYXRhID0gZGF0YS5zbGljZSgwLCBtYXhMZW5ndGggfHwg
MTAwKTsKIAogICAgICAgdmFyIHN0ciA9IFsiPHRhYmxlPjx0cj48dGg+TmFtZTwvdGg+PHRoPlR5
cGU8L3RoPjx0aD5Pd24gdGltZTwvdGg+PHRoPkF2ZyB0aW1lPC90aD48dGg+Y2FsbHM8L3RoPjwv
dHI+Il07Ci0gICAgICBmb3IgKHZhciBpPTA7IGk8ZGF0YS5sZW5ndGg7IGkrKykKKyAgICAgIGZv
ciAodmFyIGk9MCwgbD1kYXRhLmxlbmd0aDsgaTxsOyBpKyspCiAgICAgICB7CiAgICAgICAgIHZh
ciBwcm9mRGF0YSA9IGRhdGFbaV07CiAgICAgICAgIGlmIChwcm9mRGF0YS5uYW1lID09ICJxeC5j
b3JlLkFzcGVjdC5fX2NhbGlicmF0ZUhlbHBlciIpIHsK
</data>

          </attachment>
      

    </bug>