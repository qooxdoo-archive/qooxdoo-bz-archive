<bug>
          <bug_id>1637</bug_id>
          
          <creation_ts>2008-11-25 14:53:00 +0100</creation_ts>
          <short_desc>zero is a valid return value; don&#39;t replace it with null</short_desc>
          <delta_ts>2014-03-03 15:22:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>6475</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-11-25 14:53:40 +0100</bug_when>
            <thetext>From Kenny Tilton:

In XmlHTTP.js def of getResponseContent under the app/json case we see:

  qx.util.Json.parseQx(vText) || null

Where the json parse returns 0, we have the problem that:

 0 || null =&gt; null

[Unless that expression is handed to string concatenation handed to this.debug! That evaluted to &quot;blah vlah 0&quot; just before returning the same expression as null. &lt;sigh&gt; Anyway...]

I changed that to:

    r = qx.util.Json.parseQx(vText);
    if (r==0) return 0;
    else return r || null;

and the return value on &quot;0&quot; is 0.

I suggest a grep for &quot;|| null&quot; on the qooxdoo code base.

cheers, kenny</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6476</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-11-25 14:56:59 +0100</bug_when>
            <thetext>fix summary</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6479</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-11-25 15:05:01 +0100</bug_when>
            <thetext>- Corrected all occurrances in qx.io.remote.* of &#39;return x || null;&#39; where x
  could be a valid response of 0.

- Searched remainder of qx.* code base for &quot;|| null&quot; and found that remaining
  usages of that construct appear sound except for possibly one:
  Object.js:490 looks like oldData could contain a valid value 0 but end up
  passing null instead.  @Fabian, please have a look.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6541</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-11-28 12:16:56 +0100</bug_when>
            <thetext>Right this is always a problem, when the value on the left side of the &quot;||&quot; operator is a number or string. I greped for &quot;|| null&quot; but I did not find any other suspicious code. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37640</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:20 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>