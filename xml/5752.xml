<bug>
          <bug_id>5752</bug_id>
          
          <creation_ts>2011-10-27 10:58:00 +0200</creation_ts>
          <short_desc>The &quot;respondWith&quot; method of the fake server is acting wrong when 3 arguments are passed</short_desc>
          <delta_ts>2014-03-03 15:19:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.testing</component>
          <version>1.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27334</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-10-27 10:58:00 +0200</bug_when>
            <thetext>Consider the following setup:

--snip--
var server = this.getServer();

var responseHeaders = {
  &quot;Content-Type&quot;: &quot;application/json&quot;,
  &quot;X-MY-OWN-HEADER&quot;: &quot;value&quot;
};

// works - e.g. the &quot;success&quot; event is fired when using the REST implementation
server.respondWith(&quot;OK&quot;);

// works not - not event is fired
server.respondWith( &quot;GET&quot;, &quot;/contacts&quot;, [200, responseHeaders, &quot;OK&quot;] );

// later on
server.respond();
--snip--

Using the code above in an unit test is not possible (the call with three arguments).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27343</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-10-28 08:11:41 +0200</bug_when>
            <thetext>Turns out #respondWith and #respond works as expected when isolated. This is covered by both tests in Sinon itself and integration tests. It appears the behavior is specific to the test case in question.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27347</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-10-28 10:00:30 +0200</bug_when>
            <thetext>Confirmed by Alex.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36650</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:50 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>