<bug>
          <bug_id>5090</bug_id>
          
          <creation_ts>2011-05-06 14:38:00 +0200</creation_ts>
          <short_desc>An empty implement array in the class definition object prints &quot;&quot; and exits with code 1</short_desc>
          <delta_ts>2014-03-03 15:24:32 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.apidata</component>
          <version>1.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.4.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Doru Moisa">teodor.moisa</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>24348</commentid>
            <who name="Doru Moisa">teodor.moisa</who>
            <bug_when>2011-05-06 14:38:44 +0200</bug_when>
            <thetext>When adding an empty implement array in the class deffinition (or commenting out
it&#39;s existing content), the api generator job prints bogus message and exits with exit code 1.

Reproducible using qooxdoo versions 1.4 stable, trunk rev 24496, 26799 and the latest (currently rev 27067)

When adding an empty include implement array, it gives a warning, but the build continues.

Steps to reproduce:

1. Create an application:
Eg:
$&gt; create-application.py -n foo -o . -s com
&gt;&gt;&gt; Copy skeleton into the output directory: ./foo
&gt;&gt;&gt; Patching file &#39;./foo/Manifest.json&#39;
&gt;&gt;&gt; Patching file &#39;./foo/config.json&#39;
&gt;&gt;&gt; Patching file &#39;./foo/generate.py&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/index.html&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/Application.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/simulation/DemoSimulation.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/theme/Theme.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/theme/Color.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/theme/Font.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/theme/Appearance.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/theme/Decoration.js&#39;
&gt;&gt;&gt; Patching file &#39;./foo/source/class/com/test/DemoTest.js&#39;

2. Edit the Application.js main class (file ./foo/source/class/com/Application.js ), and add an empty implement array in the class deffinition object:

Eg.
qx.Class.create(&quot;com.foo.Application&quot;{

	// [...]

	// this will trigger a &quot;node has no children&quot; output message (stdout)
	// and an abnormal generator program exit code (1)
	implement: [],

	// [...]
});

3. try to build the API (with an empty implement key):

$&gt; python ./generate.py api
[...]
============================================================================
    EXECUTING: API::APICONF::BUILD-DATA
============================================================================
&gt;&gt;&gt; Initializing cache...
&gt;&gt;&gt; Scanning libraries...
&gt;&gt;&gt; Warning: Excludes may break code ([u&#39;qx.test.*&#39;, u&#39;com.theme.*&#39;, u&#39;com.test.*&#39;, u&#39;com.simulation.*&#39;])
&gt;&gt;&gt; Resolving dependencies

  - Processing explicitly configured includes/excludes...
  - Sorting 719 classes
&gt;&gt;&gt; Generating API data...
  - Loading class docs... 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
node has no children

... and the exit code is 1.

I marked it as major, as it breaks integration with other build/CI tools like Maven, which fail the builds. Also, only the api job is affected, so this is definitely a bug.

Thanks</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24350</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-06 14:54:27 +0200</bug_when>
            <thetext>Daniel, how long would it take to fix that?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24760</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-05-27 11:00:18 +0200</bug_when>
            <thetext>api.py handles empty include arrays by simply logging a warning and moving on. Applying the same fix to empty implement arrays is a no-brainer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24762</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-05-27 11:22:10 +0200</bug_when>
            <thetext>Fixed for trunk and 1.4.x with r27436.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38423</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:32 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>