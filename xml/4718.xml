<bug>
          <bug_id>4718</bug_id>
          
          <creation_ts>2011-03-01 12:13:00 +0100</creation_ts>
          <short_desc>desktop resized when window moved on south/east edge</short_desc>
          <delta_ts>2014-03-03 15:19:39 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>1.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>3.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andrea">lgxco</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23013</commentid>
            <who name="Andrea">lgxco</who>
            <bug_when>2011-03-01 12:13:03 +0100</bug_when>
            <thetext>When a window is moved across the bottom edge or the right edge the desktop is resized, the container of desktop is resized as well. 

Use following code to reproduce and move the window to south or east edge.

qx.Class.define(&quot;myApp.MyApp&quot;,
{
  extend : qx.application.Standalone,
  members :
  {
    main: function()
    {
      this.base(arguments);
var container = new qx.ui.container.Composite();
container.setLayout(new qx.ui.layout.Dock(0, 0)) ;
this.getRoot().add(container, {edge: 0});

var desktop = new qx.ui.window.Desktop(  ) ;
var win = new qx.ui.window.Window( &quot;window&quot; ) ;
desktop.add(win);
var toolbar = new qx.ui.toolbar.ToolBar(); 

var buttons = new qx.ui.toolbar.Part();
toolbar.add( buttons );
var button = new qx.ui.toolbar.Button( &quot;button&quot; );
buttons.add( button );
toolbar.addSpacer();

buttons = new qx.ui.toolbar.Part();
toolbar.add( buttons );
button = new qx.ui.toolbar.Button( &quot;button&quot; );
buttons.add( button );

container.add(toolbar, {edge:&quot;north&quot;});
container.add(desktop, {edge:&quot;center&quot;});

win.open();
  }
 }
} );</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23026</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-02 08:05:37 +0100</bug_when>
            <thetext>Thanks for the report and the example. I haven&#39;t checked that issue but as a first tip, i would try to set allowGrow to false on everything you don&#39;t want to to be resized.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23033</commentid>
            <who name="Andrea">lgxco</who>
            <bug_when>2011-03-02 18:41:54 +0100</bug_when>
            <thetext>(In reply to comment #1)
&gt; Thanks for the report and the example. I haven&#39;t checked that issue but as a
&gt; first tip, i would try to set allowGrow to false on everything you don&#39;t want
&gt; to to be resized.

Setting allowGrow to false for either desktop or container (in code example) shrinks the initial area when loading the page. Moving the window to south or east still resize the desktop and its container.
Setting allowGrow to false for the toolbar shrinks it to the size of buttons; in this case the spacer become useless</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23036</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-03 08:58:10 +0100</bug_when>
            <thetext>Thanks for the additional info. Then I&#39;m out of tricks for now. We need to check that in detail.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24087</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-04-18 09:09:10 +0200</bug_when>
            <thetext>Gabi, please take care of the bugs already scheduled for 1.5 / 1.4.1 first.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33811</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2013-09-02 15:41:02 +0200</bug_when>
            <thetext>Martin and I went over this issue and found that the problem is caused by the Desktop&#39;s Canvas layout, which respects the Window&#39;s minimum sizes when calculating the Desktop&#39;s size. We fixed it by adding a new property named &#39;desktop&#39; to the Canvas layout which forces _computeSizeHint to ignore the children&#39;s minWidth and minHeight values. Not a perfectly elegant solution but better than anything else we could come up with.

Fixed with
f01e4e71861727bdb69a1ae2a6aefe500494375c (master)
95dfa2dadbb1943cf0851c3c29d122e5e62e5892 (branch_3_0_x)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36572</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:39 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>