<bug>
          <bug_id>2683</bug_id>
          
          <creation_ts>2009-08-14 12:18:00 +0200</creation_ts>
          <short_desc>Add callback mechanism when opening a BOM window</short_desc>
          <delta_ts>2014-03-03 15:26:33 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.bom</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.4</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan Weiß">qooxdoo-bugs</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>giesen.florian</cc>
    
    <cc>info</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>11338</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-08-14 12:18:47 +0200</bug_when>
            <thetext>Reported by Florian: http://n2.nabble.com/qx.bom.Collection%3A-Append-collection-fails-in-IE8-tp3443834p3443834.html

Hello QooXdoo-Team,
 
including a CSS File with qx.bom.Stylsheet.includeFile() with Chrome 2.0.x fails with the message &quot;Uncaught TypeError: Cannot call method &#39;appendChild&#39; of undefined&quot; in Stylesheet.js line 61.
 
Here is my code snippet:
 
var nativeWin = qx.bom.Window.open(&quot;&quot;, this.tr(&quot;Print&quot;), {width: 500, height : 600});
qx.bom.Stylesheet.includeFile(&quot;http://localhost/mystyle.css&quot;, nativeWin.document);

 
Regards, Florian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11344</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-14 14:00:47 +0200</bug_when>
            <thetext>This might be never tested already. It is necessary that the link element is created by the same document as the document where the element is appended to. Maybe that&#39;s not the case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11346</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-14 14:04:27 +0200</bug_when>
            <thetext>It might also be the case that the document is not yet ready. Creating a window and directly modfying it&#39;s content had lead to problems in almost any major browser in history.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11353</commentid>
            <who name="Florian Giesen">giesen.florian</who>
            <bug_when>2009-08-14 18:05:28 +0200</bug_when>
            <thetext>Thanks for your hint, Sebastian!

When I execute &quot;qx.bom.Stylesheet.includeFile()&quot; after the &quot;onload&quot; event of the new window&#39;s body tag, everything works fine in Chrome 2.

If you know an elegant way to listen to the onload event of the new browser window from the context of the opener, then let me know (either the devel mailinglist or florian.giesen@im-concepts.de).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11357</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-14 20:35:16 +0200</bug_when>
            <thetext>Maybe we could have some kind of callback mechanism in the open() command? 

qx.bom.Window.open(&quot;&quot;, this.tr(&quot;Print&quot;), {width: 500, height: 600}, function(win){
win.document.innerHTML = &quot;FOO&quot;;
});

What do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19995</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-08-26 13:32:26 +0200</bug_when>
            <thetext>Corrected bug report (subject, browser, ...), as the original issue became a potential generic enhancement.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22971</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-02-25 14:19:33 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25252.

couldn&#39;t add unit tests, due to the fact that browsers now block opening new windows. there are some tests done, but all of them are commented [qx.test.bom.Window].

i used qx.bom.event.addNativeListener instead of qx.bom.Element.addListener because the latter would go finally
to qx.event.handler.Window.registerEvent() method which is empty.
we could add code to qx.event.handler.Window.registerEvent() in the case the window is another window uninitialised with window events as the original one. but that would go in another bug , and we will come back here after that one gets solved.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22991</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-28 08:20:33 +0100</bug_when>
            <thetext>Hey,
I just checked your commit. The solution looks good but please stick to the qooxdoo coding style (one space after a comma) for example. I already changed that. A more important thing is, which I reopen the bug, that you created a memory leak with that fix. As long as a native listener is attached to the DOM, the garbage collector can not delete the object which is now true for every window we create when adding a callback. I don&#39;t know when a good point in time is to get rid of the listener. Maybe you have a good idea?
Best,
Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22993</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-02-28 09:18:14 +0100</bug_when>
            <thetext>i could make it remove itself after the listener function executes itself, as windows open only once. what do you think ?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23014</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-01 13:30:14 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25289</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23025</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-02 08:03:11 +0100</bug_when>
            <thetext>Much better! :) Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39152</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:33 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>