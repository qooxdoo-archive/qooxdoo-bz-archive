<bug>
          <bug_id>9059</bug_id>
          
          <creation_ts>2015-04-08 13:27:00 +0200</creation_ts>
          <short_desc>Update super calls</short_desc>
          <delta_ts>2015-04-13 11:09:22 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43030</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-08 13:27:59 +0200</bug_when>
            <thetext>The current super call feels a but clumsy and unintuitive as you have to repeat the classname within each super call. We decided back then to use the method as it was the only one we could think of. 

Just now came up a new idea of how to get that fixed. Every class could store its baseclass in a local member variable. To prevent overriding the member in subclasses, the name should contain the current classname.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43034</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-08 16:27:07 +0200</bug_when>
            <thetext>Managed to get the first argument obsolet with the usage of the prototype chain (the initial idea did not work as I could not access the classname). 

master: 3152c60818eb1949e771ba3d408b7b15404961b3

Waiting for review until I fix all calls and remove the first argument.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43046</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-09 15:18:34 +0200</bug_when>
            <thetext>As nothing seems to break and everything works as expected, I updated the codebase and removed the class reference in all super calls.

master: b685fc18cbd00b9e96f56fa43674fd052d8da10c</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43052</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-04-10 08:53:46 +0200</bug_when>
            <thetext>The changes break several unit tests in IE 10 and 11:

Class superclass calls aka basecalls (constructor and methods)	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

Class Try to rename construct to constructor at super call	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

Class Try to rename construct to constructor at super call when construct already defined as a member	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

Class Try to rename construct to constructor at super call when construct already defined as a property

log.DeprecationMethodOverriding ClassB1: overrides method	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

log.DeprecationMethodOverriding ClassC1: doesn&#39;t override method	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

log.DeprecationMethodOverriding ClassB2: doesn&#39;t override method	
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference

log.DeprecationMethodOverriding ClassC2: overrides method
	# TypeError: Unable to get property &#39;hasOwnProperty&#39; of undefined or null reference</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43067</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-13 11:09:22 +0200</bug_when>
            <thetext>Looks like this was a caching problem in out local test environment.</thetext>
          </long_desc>
      
      

    </bug>