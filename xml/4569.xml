<bug>
          <bug_id>4569</bug_id>
          
          <creation_ts>2011-01-22 00:38:00 +0100</creation_ts>
          <short_desc>Additional keys added to function-call parameters</short_desc>
          <delta_ts>2012-05-16 09:33:49 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.oo</component>
          <version>1.3</version>
          <rep_platform>IE</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Linus Gasser">ineiti</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>derrell.lipman</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22382</commentid>
              <attachid>870</attachid>
            <who name="Linus Gasser">ineiti</who>
            <bug_when>2011-01-22 00:38:10 +0100</bug_when>
            <thetext>Created attachment 870
Most simple test-case that fails

For some reasons it&#39;s not possible to walk over an array that got passed through a function in a class, when I use IE. With Firefox it&#39;s &quot;normal&quot;.

I tried the attached small program in IE, and it gives horrible results. Instead of just showing &quot;0&quot;, &quot;1&quot; and &quot;2&quot;, it adds &quot;indexOf&quot;, &quot;lastIndexOf&quot;, &quot;forEach&quot;, &quot;filter&quot;, &quot;map&quot;, &quot;some&quot;, &quot;every&quot;.

I think that&#39;s not as it&#39;s supposed to be.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22383</commentid>
            <who name="Linus Gasser">ineiti</who>
            <bug_when>2011-01-22 01:23:03 +0100</bug_when>
            <thetext>So I replaced all

  function( res ){
    for ( var r in res ){

with

    for ( var r = 0; r &lt; res.length; r++ ){

and now my Application works both in Firefox and IE. I still prefer the first line, it&#39;s shorter, and works also on Hashes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22384</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-01-22 01:42:18 +0100</bug_when>
            <thetext>Actually, your code is in error. It is not proper JavaScript to use for...in on arrays. Arrays should always be iterated using for(i=0; i &lt; arr.length; i++). The reason is exactly as you&#39;ve seen. Depending on what functions have been added to the Array prototype, you&#39;ll have browser-dependent results if you try to iterate an array with a for..in loop. In addition to the numeric subscripts of the array, your iteration may (depending on the browser) include any additional methods added to the prototype.

Always use the standard counting iteration for arrays, not for...in.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22385</commentid>
            <who name="Linus Gasser">ineiti</who>
            <bug_when>2011-01-22 13:05:08 +0100</bug_when>
            <thetext>OK, thank you. Got too lazy using Ruby ;)</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>870</attachid>
            <date>2011-01-22 00:38:00 +0100</date>
            <delta_ts>2011-01-22 00:38:10 +0100</delta_ts>
            <desc>Most simple test-case that fails</desc>
            <filename>Application.js</filename>
            <type>text/plain</type>
            <size>332</size>
            <attacher>ineiti</attacher>
            
              <data encoding="base64">cXguQ2xhc3MuZGVmaW5lKCJmcm9udGVuZC5BcHBsaWNhdGlvbiIsCnsKICBleHRlbmQgOiBxeC5h
cHBsaWNhdGlvbi5TdGFuZGFsb25lLAogIG1lbWJlcnMgOgogIHsKICAgIG1haW4gOiBmdW5jdGlv
bigpCiAgICB7CiAgICAgLy8gdmFyIGxheW91dCA9IG5ldyBmcm9udGVuZC5MYXlvdXQoKTsKICAg
ICAgdGhpcy5kaXNwYXRjaCggWzEsMiwzXSApOwogICAgfSwKCiAgICBkaXNwYXRjaCA6IGZ1bmN0
aW9uKCByZXMgKQogICAgewogICAgICBmb3IgKCB2YXIgciBpbiByZXMgKQogICAgICB7CiAgICAg
ICAgYWxlcnQoICJyIGlzICIgKyByICk7CiAgICAgIH0KICAgIH0KICB9Cn0pOwo=
</data>

          </attachment>
      

    </bug>