<bug>
          <bug_id>7390</bug_id>
          
          <creation_ts>2013-05-07 17:31:00 +0200</creation_ts>
          <short_desc>API Doc for Types of qx.event.handler.ElementResize Constants</short_desc>
          <delta_ts>2014-03-03 15:24:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.apidata</component>
          <version>2.1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32701</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-07 17:31:10 +0200</bug_when>
            <thetext>ElementResize has a number of static constants that hold JSDoc of the form

  /** {Integer} Priority of this handler */
  PRIORITY : qx.event.Registration.PRIORITY_NORMAL

For one thing, this is not one of the recognized JSDoc syntaxes. At least it 
should be /** @type {Integer} ...*/. At the moment, the entire text starting 
with &quot;{Integer} ...&quot; is printed as documentation in the Apiviewer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32702</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-07 17:39:39 +0200</bug_when>
            <thetext>I&#39;ve changed the parsing of @type hints to allow optional descriptive text 
after the type spec, as is the case in ElementResize.

master: 555dc43

I also tried to add the &#39;@type&#39; key to ElementResize&#39;s JSDocs, but to no avail. 
The descriptive text is now entirely missing from Apiviewer. Leaving them in 
nevertheless, as this is the intended syntax.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32734</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2013-05-14 11:14:11 +0200</bug_when>
            <thetext>In case there&#39;s both a general description and a type description, e.g.:

/**
 * General desc
 * @type {Object} type desc
 */

We decided to concat the two descriptions (instead of silently ignoring the general description).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32735</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-14 11:41:09 +0200</bug_when>
            <thetext>There are plenty more occurrences in the framework where data attributes are 
documented with a &#39;* {&lt;type&gt;}&#39; idiom (I&#39;ve counted more than 400).

(Search for &#39;\* \s*\{\w&#39;).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32748</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2013-05-14 17:18:56 +0200</bug_when>
            <thetext>The parsed type information is now added to the doc tree (dd44e99 on master). No changes were necessary in the API Viewer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32751</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-14 18:59:06 +0200</bug_when>
            <thetext>Daniel, there is an issue with @type annotations of properties. E.g. in 
qx.ui.form.validation.Manager the property &#39;validator&#39; has a complex expression 
as its &#39;check&#39; member, hence the author gave an @type hint ({Function | 
AsyncValidator}). But this type hint isn&#39;t picked up. Rather, the fallback 
&#39;var&#39; type is used in the Apiviewer. Maybe you can look into that.

I&#39;ve added @type hint keys to the comments of the other framework classes.
master: b304248</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32762</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2013-05-15 17:01:59 +0200</bug_when>
            <thetext>Property types are fixed with 9c490cc (master).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38536</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:50 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>