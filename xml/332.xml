<bug>
          <bug_id>332</bug_id>
          
          <creation_ts>2007-03-12 13:59:00 +0100</creation_ts>
          <short_desc>Pretty print: Empty comment lines are ignored when inserting blank lines</short_desc>
          <delta_ts>2008-06-05 14:37:49 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.migration</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1021</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-12 13:59:59 +0100</bug_when>
            <thetext>Our coding standards say that inline comments should have a blank comment line before and afterwards. So we have code like this:

            //
            // Create the dialogs
            //
            this._CreateDialogs();
            //
            // Listen for when the tree is loaded and navigate to next unread
            //
            this.getIndexTree().&lt;snip&gt;

The default migration pretty print in 0.7 always puts in a blank line before an inline comment, so this becomes:


            //
            // Create the dialogs
            //
            this._CreateDialogs();

            //
            // Listen for when the tree is loaded and navigate to next unread
            //
            this.getIndexTree().&lt;snip&gt;

This is obviously less than ideal. 

Special cases include after an &quot;if&quot; statement - in this case, if there is an inline comment block with an empty initial line, the pretty printer should not insert a blank line afterwards. And for a map (e.g. properties) we should ensure that a blank line is in place.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1022</commentid>
              <attachid>136</attachid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-12 14:03:01 +0100</bug_when>
            <thetext>Created attachment 136
Includes fix for bug 332 (and 331)

Fix for bug 332 and 331 included in this patch. The code for this bug is around line 405.

I&#39;ve considered inline comments using /* as well as //

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1023</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-12 14:04:12 +0100</bug_when>
            <thetext>Note that when I said:

&gt; And for a map (e.g. properties) we should ensure that a blank line is in place.

I meant that &quot;we should ensure that a newline is in place&quot;.

Hugh
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1734</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-07-03 18:51:03 +0200</bug_when>
            <thetext>Fixed in trunk (r8797), applied outstanding part of Hugh&#39;s patch.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>136</attachid>
            <date>2007-03-12 14:03:00 +0100</date>
            <delta_ts>2007-03-12 14:03:01 +0100</delta_ts>
            <desc>Includes fix for bug 332 (and 331)</desc>
            <filename>qxBug332.patch</filename>
            <type>application/octet-stream</type>
            <size>1143</size>
            <attacher>hgibson</attacher>
            
              <data encoding="base64">SW5kZXg6IGNvbXBpbGVyLnB5DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0gY29tcGlsZXIucHkJKHJldmlzaW9u
IDY4NDUpDQorKysgY29tcGlsZXIucHkJKHdvcmtpbmcgY29weSkNCkBAIC00MDIsNyArNDAyLDEx
IEBADQogICAgICAgICAgICAgICAgICAgICBpZiBkb2NDb21tZW50OgogICAgICAgICAgICAgICAg
ICAgICAgICAgZG9jKCkKICAgICAgICAgICAgICAgICAgICAgZWxzZToKLSAgICAgICAgICAgICAg
ICAgICAgICAgIHNlcCgpCisgICAgICAgICAgICAgICAgICAgICAgICBpZiBjaGlsZC5nZXQoInRl
eHQiKSBpbiAoIi8vIiwgIi8qIik6CisgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9zZXAo
KSAgICAgICAgICAgICAjIHRoZSBibGFuayBjb21tZW50IHByb3ZpZGVzIGEgYmxhbmsgbGluZSwg
c28gZG9uJ3QgcHV0IGEgc2VwYXJhdG9yIGluCisgICAgICAgICAgICAgICAgICAgICAgICAgICAg
bGluZSgpICAgICAgICAgICAgICAjIG1ha2Ugc3VyZSB0aGVyZSBpcyBhIG5ldyBsaW5lIGFmdGVy
IHdoYXRldmVyIGhhcyBnb25lIGJlZm9yZQorICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToK
KyAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXAoKQogCiAgICAgICAgICAgICAgICAgZWxp
ZiBpbk9wZXJhdGlvbjoKICAgICAgICAgICAgICAgICAgICAgc2VwKCkKQEAgLTEyMjQsOCArMTIy
OCwxMCBAQA0KICAgICAgICAgd3JpdGUoIn0iKQogCiAgICAgICAgIGlmIHByZXR0eToKLSAgICAg
ICAgICAgICAgICBpZiBub2RlLmlzQ29tcGxleCBhbmQgb3B0bnMucHJldHR5cE9wZW5DdXJseUlu
ZGVudEJlZm9yZToKLSAgICAgICAgICAgICAgICAgICAgZGVjX2luZGVudCgpCisgICAgICAgICAg
ICBpZiBub2RlLmhhc1BhcmVudCgpIGFuZCBub2RlLnBhcmVudC50eXBlID09ICJleHByZXNzaW9u
IiBhbmQgbm9kZS5wYXJlbnQucGFyZW50LnR5cGUgPT0gInJldHVybiI6CisgICAgICAgICAgICAg
ICAgcGFzcworICAgICAgICAgICAgZWxpZiBub2RlLmlzQ29tcGxleCBhbmQgb3B0bnMucHJldHR5
cE9wZW5DdXJseUluZGVudEJlZm9yZToKKyAgICAgICAgICAgICAgICBkZWNfaW5kZW50KCkKIAog
CiAK
</data>

          </attachment>
      

    </bug>