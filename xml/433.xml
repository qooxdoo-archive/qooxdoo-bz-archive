<bug>
          <bug_id>433</bug_id>
          
          <creation_ts>2007-05-24 15:58:00 +0200</creation_ts>
          <short_desc>Implement different obfuscation technique</short_desc>
          <delta_ts>2014-03-03 08:46:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1398</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-05-24 15:58:39 +0200</bug_when>
            <thetext>This was originally discussed at http://www.nabble.com/Obfuscation-of-variables-tf3020901.html#a8390033

I am logging it here so it&#39;s not forgotten.

----------------------------------------------------------------------------------------
I have been thinking about another approach to this which could have significant benefits - reduced script size, and improvements in speed of execution. Should also be straightforward to implement safely.

For every place where a new namespace is defined, also define an alias for that namespace. Then when that namespace is referenced in code, use the alias. Any references in code that use computed values would still work as we are simply defining an alias for the original, which would still exist.

The alias could be simply a global variable e.g. qa, qb, qc or to avoid polluting globals, use q.a, q.b, q.c.

Using lower and upper case means that 2704 classes could be accomodated in 2 characters.

You could, of course, define them as additional entries in the $ array.

This would reduce the size of code (but probably not dramatically). However, it would also improve execution time. We all know how important it is to cache deep namespace references in loops, and this would do it automatically throughout the application, for every place. 
----------------------------------------------------------------------------------------

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1423</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-05-29 11:13:43 +0200</bug_when>
            <thetext>Generally a good idea. However I don&#39;t think that the obfuscation improvements and performance gains are really noticeable.

Global variables are a no go in my opinion. But I think we could place them easily in &quot;qx.$&quot; e.g. &quot;qx.$a&quot;, &quot;qx.$b&quot;, ...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1470</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-31 10:16:31 +0200</bug_when>
            <thetext>I have a few try statements that look like this:
try {
	statement1;
	// comment
} catch (exc) {
	statement2;
}

The migration tool changes this to the following:
try {
	statement1;
}

// comment catch(exc) {</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1471</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-31 10:17:17 +0200</bug_when>
            <thetext>forget the last comment. wrong bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5149</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:49 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35699</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:52 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>