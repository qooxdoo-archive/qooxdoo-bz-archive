<bug>
          <bug_id>4392</bug_id>
          
          <creation_ts>2010-12-01 14:01:00 +0100</creation_ts>
          <short_desc>TypeError: data[key] is null at: qx.util.DisposeUtil:150</short_desc>
          <delta_ts>2010-12-13 08:22:17 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.lang</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>21663</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2010-12-01 14:01:59 +0100</bug_when>
            <thetext>When I dispose data by the following code:
 destruct : function() {
    this._disposeMap(&quot;__serviceAccountMap&quot;);
  }
I get the following error:
  TypeError: data[key] is null at: qx.util.DisposeUtil:150 

The map that I want to dispose contains a key whose corresponding value is null. 
This null value in the map is correct, because the map is a kind of a cache and the null value means that there is no data for that key.

To fix this Issue a null check should be added to the qooxdoo code:

qx.class.define(&quot;qx.util.DisposeUtil&quot;, {
  disposeMap : function(obj, field) {
  for (var key in data)
  {
// New check:
   if( data[key] ) {
// End new check
     if (data.hasOwnProperty(key)) {
       data[key].dispose();
     }
   }
  }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21684</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-12-02 09:05:54 +0100</bug_when>
            <thetext>Sounds reasonable that the dispose should not fail because there is nothing to dispose.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21696</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-12-02 14:56:56 +0100</bug_when>
            <thetext>We already had that check in the array dipose so its no problem to add that to the map dispose as well.

trunk: r24153
1.2.x: r24154</thetext>
          </long_desc>
      
      

    </bug>