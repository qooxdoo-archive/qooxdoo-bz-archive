<bug>
          <bug_id>3901</bug_id>
          
          <creation_ts>2010-07-29 17:04:00 +0200</creation_ts>
          <short_desc>&quot;provider&quot; job: Add possibility  to add all resources to the provider</short_desc>
          <delta_ts>2010-11-24 15:53:19 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19512</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-07-29 17:04:23 +0200</bug_when>
            <thetext>Especially if the qooxdoo framework itself is created as code provider it is necessary that all available resources (under &quot;source/resource/qx&quot;) are added to the code provider data directory.

At the moment only the resources which are linked with an &quot;#asset&quot; directive are added to the resources. However, this is not sufficient, because there may be applications which use e.g. icons of the framework which are not used by the framework itself. This way the dependency cannot be fulfilled since the icon is not part of the code provider (no direct dependency of the qooxdoo framework).

This bug can easily be reproduced by building the qooxdoo framework as code provider.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19804</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-12 19:05:41 +0200</bug_when>
            <thetext>I have commited an intermediate version (r23039) where all resources of the 
local lib are copied, and entries are made into the resources.json. But the 
Json file still has artifacts (.meta files are included), and combined images 
are not analyzed. Give it a try. I&#39;m afraid I will not be able to finish that 
until after two weeks ahead.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19831</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-08-13 16:32:18 +0200</bug_when>
            <thetext>I guess this works out for us right now. The next (possible) step would be to use the &quot;include&quot; and &quot;exclude&quot; keys also for the resource instead of &quot;only&quot; looking at the JS classes.

But this should end up in an own bug report. From my point of view you can set this one to &quot;FIXED&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19838</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-13 17:28:57 +0200</bug_when>
            <thetext>Artefacts (like .meta files) are now removed from the resource infos, the 
sprites embedded in combined images are extracted and added to the resource 
infos. If the sprites are from a foreign library, their library attribute in 
the resourc info is set to &quot;&quot;, as the library cannot be infered from the 
combined image&#39;s .meta file. Otherwise, I think that fixes it.

With r23046.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20727</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-10-15 16:52:25 +0200</bug_when>
            <thetext>verified</thetext>
          </long_desc>
      
      

    </bug>