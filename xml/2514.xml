<bug>
          <bug_id>2514</bug_id>
          
          <creation_ts>2009-06-25 19:55:00 +0200</creation_ts>
          <short_desc>generate.py build creates wrong code (syntax error) for multiple assignments on one line</short_desc>
          <delta_ts>2014-03-03 15:20:47 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jean-Noel Rivasseau">elvanor</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>vincent</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10581</commentid>
            <who name="Jean-Noel Rivasseau">elvanor</who>
            <bug_when>2009-06-25 19:55:19 +0200</bug_when>
            <thetext>Hi,

I tried to build my app today and the generated JS script had a syntax error. I tracked it down to the following problem: if you write several assignments in one line (which is legit in JS) like this:

a = myObject.myField, b = myObject.otherField;

then in this case the final &quot;;&quot; does not appear in the generated source, which results in a syntax error (or not, depending on the surrounding lines, but it will be an error anyway).

I don&#39;t know which underlying tool you use to minify / obfuscate the JS code, but this should be fixed. I previously used YUI Compressor which did not have this problem, by the way.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10582</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-06-25 20:03:41 +0200</bug_when>
            <thetext>to Thomas.

AFAIK multiple assignments on one line are handled fine usually, so this might be due to the &quot;dotted&quot; values here?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11219</commentid>
            <who name="Jean-Noel Rivasseau">elvanor</who>
            <bug_when>2009-08-06 19:20:10 +0200</bug_when>
            <thetext>Any progress on this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11305</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-12 11:48:00 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; Any progress on this?

No, sorry, not until now. This bug is in a big bunch with other compiler 
related bugs, which I hope to address anytime soon (they&#39;re all targeted for 
0.8.3).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11839</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-03 10:12:50 +0200</bug_when>
            <thetext>Jean-Noel, sorry, we&#39;ll have to move those sort of compiler issues to a later release. 

Do you know of a workaround, i.e. an equivalent expression that does not cause problems? Can you confirm it&#39;s limited to &quot;dotted&quot; values (comment #1)?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11869</commentid>
            <who name="Jean-Noel Rivasseau">elvanor</who>
            <bug_when>2009-09-03 11:52:32 +0200</bug_when>
            <thetext>Well the workaround for us was just to break the multiple assignment into 2 assignments (on separate lines).

I can NOT confirm it happens only with dotted values, as I have not tried with undotted values.

We currently do not use anymore multiple assignments in our codebase, just to be sure we won&#39;t be affected by this, so this is not really a blocker for us. But these kind of compiler bugs are frightening and I definitely think this one should be adressed ASAP.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14057</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-11 17:06:10 +0100</bug_when>
            <thetext>This appears to be fixed due to work on expression lists for similar bugs (e.g. 
#2307).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14520</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:15:13 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37032</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:47 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>