<bug>
          <bug_id>7044</bug_id>
          
          <creation_ts>2012-11-27 11:32:00 +0100</creation_ts>
          <short_desc>Generator warnings in spite of #ignore tag</short_desc>
          <delta_ts>2014-03-03 15:21:19 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>2.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="saaj">id</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>dfrost999</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31465</commentid>
            <who name="saaj">id</who>
            <bug_when>2012-11-27 11:32:03 +0100</bug_when>
            <thetext>Particularly, I use uploadmgr (http://qooxdoo.org/contrib/project/uploadmgr). So updating to qx2.1 I have the following warnings on a first build.

- Warning: com.zenesis.qx.upload.XhrHandler (94,21): Unknown global symbol used: &#39;FormData&#39;
- Warning: com.zenesis.qx.upload.XhrHandler (95,24): Unknown global symbol used: &#39;FormData&#39;

XhrHandler.js has two #ignore tags:

  #ignore(File)
  #ignore(FormData)

so it&#39;s a little strange that warnings are related to FormData only, as File global is referenced as well.

Further builds doesn&#39;t raise the warning because of cache. Also there was no such issue in 2.0.1.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31526</commentid>
            <who name="saaj">id</who>
            <bug_when>2012-11-29 09:36:32 +0100</bug_when>
            <thetext>That happens with application code as well, so I renamed the bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31897</commentid>
            <who name="Deacon">dfrost999</who>
            <bug_when>2013-01-15 09:02:46 +0100</bug_when>
            <thetext>This is open for 2 month. For me it renders 2.1 almost useless because it blows up my CI builds with warnings.
It is difficult enough to make generator behave quietly (spinning bars etc.), now it even complains about jsdoc strings it cannot parse!
For bigger projects this stuff needs to run in automated build environments where warnings have to be treated as errors so every additional output of the tool has to be dealt with.
It is very difficult to integrate the qx-toolchain with external libraries as is (works with lots of fiddling in source or hybrid mode, but then blows up in build mode class loader) though IMHO this gets more and more important in JS-land so at least make it *ignore* external stuff.
Please expedite this...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31900</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-01-15 10:31:18 +0100</bug_when>
            <thetext>Deacon,

#ignore hints are still honored by the dependency analysis. But with the new warning system (see bug#4561), I wouldn&#39;t want to introduce too much compatibility code when the old #-hints will be deprecated in one of the next versions anyway. 

(In reply to comment #2)
&gt; This is open for 2 month. For me it renders 2.1 almost useless because it blows
&gt; up my CI builds with warnings.

Even if we were to fix it, you would need to wait for at least the next patch release (2.1.1) which hasn&#39;t even been scheduled.

&gt; It is difficult enough to make generator behave quietly (spinning bars etc.),
&gt; now it even complains about jsdoc strings it cannot parse!

Yes, it&#39;s a constant struggle between these two needs - making the generator warnings more precise for more consistency, and making them quiet.

&gt; For bigger projects this stuff needs to run in automated build environments
&gt; where warnings have to be treated as errors so every additional output of the
&gt; tool has to be dealt with.

We&#39;re aware of automated build environments, we are using them ourself. But I don&#39;t see how you are not able to ignore warnings on that level. At the very least you can ignore all of them, as long as the generator terminates with a zero status code.

&gt; It is very difficult to integrate the qx-toolchain with external libraries as
&gt; is (works with lots of fiddling in source or hybrid mode, but then blows up in
&gt; build mode class loader)

I don&#39;t get this ...?!

&gt; though IMHO this gets more and more important in
&gt; JS-land so at least make it *ignore* external stuff.
&gt; Please expedite this...

I just checked the UploadMgr contrib, and John Spackman, the maintainer, has turned all #ignore&#39;s into new-style @ignore&#39;s. If you upgrade to the latest UploadMgr you should be all set.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31902</commentid>
            <who name="saaj">id</who>
            <bug_when>2013-01-15 10:41:32 +0100</bug_when>
            <thetext>To disable &quot;spinning bar&quot; it&#39;s enough to run generator with -I flag which disables progress animation.

About ignore tag:
 * intention – http://news.qooxdoo.org/new-lint-module, 
 * adaptation – http://news.qooxdoo.org/qooxdoo-2-1-released. 

So as you can see in its sources, qx currently uses both @ignore and #ignore. Some files have only one syntax, some both. As of 2.1 only the former works in user code... here I see the email notification that Thomas already replied so I stop on this ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31905</commentid>
            <who name="saaj">id</who>
            <bug_when>2013-01-15 10:52:20 +0100</bug_when>
            <thetext>I&#39;ll add about external libraries. In its codebase qooxdoo itself has examples of external libraries management. E.g. https://github.com/qooxdoo/qooxdoo/blob/master/framework/source/class/qx/bom/Template.js. And it was working pretty good so far.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31926</commentid>
            <who name="Deacon">dfrost999</who>
            <bug_when>2013-01-17 09:56:24 +0100</bug_when>
            <thetext>Thanks a lot for your input!
I added @ignore tags to the code and that seems to work. I was not aware of this.

Sorry if my comment came across as harsh. My point was that I am of course grateful for warnings (the more and detailed the better) but if they are not &quot;real&quot; warnings and cannot be suppressed either it interferes with the build process (which should treat warnings as errors) or makes you ignore them altogether which of course defeats their purpose.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31927</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-01-17 10:15:18 +0100</bug_when>
            <thetext>So I hope everybody is fine with closing this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37245</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:19 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>