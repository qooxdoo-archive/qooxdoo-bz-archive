<bug>
          <bug_id>2478</bug_id>
          
          <creation_ts>2009-06-17 00:05:00 +0200</creation_ts>
          <short_desc>Data binding: converter function is not called on an applyModel() for a controller</short_desc>
          <delta_ts>2009-06-17 11:51:40 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>2457</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jean-Noel Rivasseau">elvanor</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10430</commentid>
            <who name="Jean-Noel Rivasseau">elvanor</who>
            <bug_when>2009-06-17 00:05:16 +0200</bug_when>
            <thetext>If you have a converter, add a target to it and use a converter function in the options, this function won&#39;t be called if the model later changes via setModel(). It works for the first time, eg when the first setModel() is done, but not later.

It should be easy to reproduce: create one textField and create a controller, binding the value of the text field to an object that has a property. I created a nullToBlank converter that would change a null value to an empty string for the textField. If you call setModel() on the controller, and change the model to a second instance of the object, when its property is null, an exception is thrown because textField&#39;s value cannot be null. This is because the converter function is not used in that case.

I traced through the code to confirm this, however it looks a bit beyond my current Qx skills to fix this problem myself.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10431</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-06-17 08:14:59 +0200</bug_when>
            <thetext>to me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10433</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-06-17 09:44:01 +0200</bug_when>
            <thetext>Hello Jean-Noel,
this really looks like a bug i already fixed yesterday. I wrote a litte test application to see it working. Could you please check the test listed below to see if that addresses your described bug?


// set up the target
var text = new qx.ui.form.TextField();
this.getRoot().add(text, {left: 10, top: 10});

// set up the model
var model = new qx.ui.core.Widget();
var model2 = new qx.ui.core.Widget();
model2.setZIndex(10);

// coverter
var options = {
  converter : function(data) {
    console.log(&quot;converter executed&quot;);
    return &quot;&quot; + data;
  }
};

// create and configure the controller
var c = new qx.data.controller.Object();
c.addTarget(text, &quot;value&quot;, &quot;zIndex&quot;, false, options);

// test the model change
c.setModel(model2);
c.setModel(model);
c.setModel(model2);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10436</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-06-17 11:51:40 +0200</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 2457 ***</thetext>
          </long_desc>
      
      

    </bug>