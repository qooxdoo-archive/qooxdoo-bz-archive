<bug>
          <bug_id>8661</bug_id>
          
          <creation_ts>2014-10-29 18:57:00 +0100</creation_ts>
          <short_desc>qx.ui.table.columnmodel.Basic#setDataCellRenderer incorrectly returns the newly set renderer instead of the old one</short_desc>
          <delta_ts>2014-12-16 11:44:16 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>4.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>4.0.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Aaron Opfer">aaron.opfer</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41467</commentid>
            <who name="Aaron Opfer">aaron.opfer</who>
            <bug_when>2014-10-29 18:57:58 +0100</bug_when>
            <thetext>setDataCellRenderer&#39;s documentation says:

&gt; If an old renderer was set and it was not the default renderer, the old renderer is returned for pooling or disposing.

However, a bug prevents this from ever happening. The function stores a reference to the old renderer after it has already been updated, preventing the old renderer reference from pointing at anything other than the newly set renderer. This means if you dispose non-null return values of setDataCellRenderer, you dispose the renderer you just set!

The fix is as easy as taking these two lines:
https://github.com/qooxdoo/qooxdoo/blob/release_4_0_1/framework/source/class/qx/ui/table/columnmodel/Basic.js#L356-L358

&gt;     this.__columnDataArr[col].dataRenderer = renderer;
&gt;
&gt;      var oldRenderer = this.__columnDataArr[col].dataRenderer;

and switching them around. Amusingly, my code has been disposing the return value of setDataCellRenderer for a while now, and it seems like most renderers work fine, disposed or not!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41468</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2014-10-30 12:50:07 +0100</bug_when>
            <thetext>Thanks for the report and the fix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41590</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-11-17 11:19:05 +0100</bug_when>
            <thetext>Fixed the issue as proposed by switching the two lines.

master: c7bc0d0767b3d28477928b03b5c55b038c81e2cb
4.0.x: 27e0de20064883dc24327dc0b84328cc203f64b7</thetext>
          </long_desc>
      
      

    </bug>