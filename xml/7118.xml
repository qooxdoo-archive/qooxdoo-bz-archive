<bug>
          <bug_id>7118</bug_id>
          
          <creation_ts>2013-01-04 15:06:00 +0100</creation_ts>
          <short_desc>styles and attributes arguments of qx.html.Element are not cloned</short_desc>
          <delta_ts>2014-03-03 08:46:06 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.html</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Johannes Kissel">johannes.kissel</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>alexander.steitz</cc>
          <qa_contact name="Alexander Steitz">alexander.steitz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31818</commentid>
            <who name="Johannes Kissel">johannes.kissel</who>
            <bug_when>2013-01-04 15:06:35 +0100</bug_when>
            <thetext>This is bad if you want to initialize several elements with the same styling.

Since they all work on the same styles object, at the end they all have the same position (and general styling).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31819</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-01-04 16:13:37 +0100</bug_when>
            <thetext>Can you provide a small code example to explain your need?

Thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31820</commentid>
            <who name="Johannes Kissel">johannes.kissel</who>
            <bug_when>2013-01-04 16:38:01 +0100</bug_when>
            <thetext>I created a playground example: http://tinyurl.com/agz27ux

The same problem (if it is one) applies to attributes, because of the constructor code of qx.html.Element:

  construct : function(tagName, styles, attributes)
  {
    this.base(arguments);

    // {String} Set tag name
    this.__nodeName = tagName || &quot;div&quot;;

    this.__styleValues = styles || null;
    this.__attribValues = attributes || null;
  },</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31821</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-01-04 18:18:02 +0100</bug_when>
            <thetext>&gt; This is bad if you want to initialize several elements with the same styling.
&gt; 
&gt; Since they all work on the same styles object, at the end they all have the
&gt; same position (and general styling).

Yes, the &quot;qx.html.Element&quot; works on the object you provide as second / third parameter, so you get into trouble when passing the same object.

What about using the API this way to achieve your goal:

--snip--
var styles = {};

var e1 = new qx.html.Element(&quot;div&quot;);
var e2 = new qx.html.Element(&quot;div&quot;);

e1.setStyles(styles);
e2.setStyles(styles);

e1.setStyle(&quot;backgroundColor&quot;, &quot;red&quot;);
e2.setStyle(&quot;backgroundColor&quot;, &quot;blue&quot;);
--snip--

This solves your issue using public API (and also works for attributes).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31826</commentid>
            <who name="Johannes Kissel">johannes.kissel</who>
            <bug_when>2013-01-07 10:20:00 +0100</bug_when>
            <thetext>Of course, that would be a solution. So I&#39;m fine.

I just can&#39;t imagine a case, when it would make sense to use the same styles object.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31829</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-01-07 10:40:25 +0100</bug_when>
            <thetext>It could be interesting to manipulate a group of objects if thats working at all but I can&#39;t imagine another use case as well. And even that use case is not really a thing I would suggest to do! So basically I would also assume that the objects will be cloned and used as literal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31833</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-01-07 11:25:51 +0100</bug_when>
            <thetext>Just keep the performance in mind - qx.html.Element is used very often within the UI layer / many instances are created at runtime.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35414</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:06 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>