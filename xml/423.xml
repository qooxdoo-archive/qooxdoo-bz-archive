<bug>
          <bug_id>423</bug_id>
          
          <creation_ts>2007-05-18 14:27:00 +0200</creation_ts>
          <short_desc>merge qx.ui.tree and qx.ui.treefullcontrol</short_desc>
          <delta_ts>2014-03-03 15:26:45 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.tree</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.8</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabian Jakobs">fabian.jakobs</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1342</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-18 14:27:59 +0200</bug_when>
            <thetext>It&#39;s a pain to maintain two almost identical tree implementations.

Both implementations should be merged into one implmentation which is API compatible with the existing ones (if possible).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1345</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-05-18 15:30:42 +0200</bug_when>
            <thetext>Not only is it possible, that&#39;s the way I originally implemented it.  TreeFullControl replaced Tree (and was named Tree) and provided the Tree interface in addition to the additional features of TreeFullControl.  At the time, there was concern about the performance of TreeFullControl, I think, so I was asked to separate it into its own class.

At some point, when I get some time, I&#39;ll look into merging them again.

What I&#39;d really like to do is eliminate both Tree and TreeFullControl and use only TreeVirtual (with interfaces available to emulate the other classes) but that&#39;s far more difficult.

(I won&#39;t  assign this bug to me right now since I&#39;m not planning on working on it right away.  If someone else wants to work on it before I get to it, that&#39;s fine with me.)

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1346</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2007-05-18 16:01:32 +0200</bug_when>
            <thetext>IMHO everyone agrees in consolidating Tree and TreeFullControl into a single tree widget implentation (called Tree, of course). The performance issues (or object counts for IE6 in particular) shouldn&#39;t be a real problem, I suppose. This aspect is being addressed by the virtual tree anyway, right? The step to merge the two regular trees may be done in the very near future (0.7 the earliest).

Maybe we even go for a more mature or more common API, if that is the outcome of accumulated experience of developers and users currently using qooxdoo trees? Input from other GUI toolkits and ideas are always welcome for such a task. If there are significant API changes ahead, I doubt they will happen before qooxdoo 0.8.

A full-blown and mature TreeVirtual implementation that completely removes the need for a regular tree widget may take considerably longer, despite any current state of success. I expect a consolidation of Tree and TreeVirtual (if at all) in the rather distant future (taking into account the new layout engine features in qooxdoo 0.8). Is that your expectation as well, Derrell?

Anyway, the pimped-up Tree will certainly be an excellent replacement leading to less confusion to users &quot;lost in the forrest&quot;...
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1348</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-05-18 16:13:14 +0200</bug_when>
            <thetext>&gt; A full-blown and mature TreeVirtual implementation that completely removes the
&gt; need for a regular tree widget may take considerably longer, despite any
&gt; current state of success. I expect a consolidation of Tree and TreeVirtual (if
&gt; at all) in the rather distant future (taking into account the new layout engine
&gt; features in qooxdoo 0.8). Is that your expectation as well, Derrell?

Yes, very much.  Aside from the difficulty of combining them due to the very different interfaces, TreeVirtual does not yet support all of the features of Tree and TreeFullControl (e.g. drag &amp; drop).  TreeVirtual needs to be feature-complete before we could even attempt to use it as the basis of the other two.  I see this merger, if ever, to be pretty far into the future.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1349</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-05-18 16:57:23 +0200</bug_when>
            <thetext>The thing is that currently TreeFullControl generates overhead. Even if it would be nice to improve the clean look of qooxdoo to consolidate the tree widgets, it is not acceptable currently because it negatively affects the performance also for users which don&#39;t rely on these advanced features.

I would like it better to &quot;extend&quot; TreeFullControl widgets from the basic tree features. This would reduce the doubled code which keeping the better performing Tree widget.

A virtual tree is definitely a thing for 0.8. One reason for me is that the TreeVirtual, which is based on the excellent - from the feature set - based Table, but also inherits its performance issues (e.g. slow scrolling and rendering at all). Yes, it is very scaleable - so a lot better for large trees - theoratically - but the suboptimal runtime performance reduces it&#39;s capability a lot.

Please also keep in mind that virtual trees are thought out for big big trees. I could think of a lot of examples where a static - non virtual - tree implementation fits perfectly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1350</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-05-18 17:07:10 +0200</bug_when>
            <thetext>&gt; The thing is that currently TreeFullControl generates overhead. Even if it
&gt; would be nice to improve the clean look of qooxdoo to consolidate the tree
&gt; widgets, it is not acceptable currently because it negatively affects the
&gt; performance also for users which don&#39;t rely on these advanced features.

I&#39;m curious what you&#39;re basing this on.  I thought we resolved this as an urban legend, long ago.  I don&#39;t believe that with a single column, emulating Tree using TreeFullControl, there is any noticible performance penalty over using Tree itself.  Can you show me otherwise?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1351</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-18 17:40:44 +0200</bug_when>
            <thetext>I have looked at the code and I don&#39;t see any reason the treefullcontrol should be any slower than the original tree. Even the number of created widgets is the same for similar trees. I see no reason against merging the two.

I think for the long term we will have a &quot;normal&quot; tree working with plain qooxdoo widgets and a virtual tree for large data sets.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1515</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-06-06 16:41:04 +0200</bug_when>
            <thetext>Derrell, I have started working on this. It looks like its not so hard to do.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1516</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-06-06 17:49:42 +0200</bug_when>
            <thetext>Fabian, if you look back at the mail archives where I first sent the TreeFullControl class to the list (it wasn&#39;t called that at the time; it was modifications of Tree itself), you&#39;ll find my wrapper that did exactly what you&#39;re looking for.  The work has been done.  There should be not much more than the changes to 0.7 format to be done.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1539</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-06-11 12:31:14 +0200</bug_when>
            <thetext>done with rev. 8515

The new tree is API compatible with both, the old tree and treefullcontrol widgets. There is a small difference for freefullcontrol: The root node no longer has the plus/minus sign enabled by default to match the behavior of the tree widget.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39222</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:45 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>