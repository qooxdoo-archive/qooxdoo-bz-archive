<bug>
          <bug_id>5265</bug_id>
          
          <creation_ts>2011-06-20 19:01:00 +0200</creation_ts>
          <short_desc>Generator crashes in long string catenation expression</short_desc>
          <delta_ts>2014-03-03 15:26:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.dependencies</component>
          <version>1.4.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="John Spackman">john.spackman</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>25181</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-20 19:01:06 +0200</bug_when>
            <thetext>The generator can crash with &quot;maximum recursion depth exceeded in cmp&quot; with large files; this is not reproducable in isolation and may be related to bug #2922.

Bug #2922 was fixed by adding &quot;sys.setrecursionlimit(1500)&quot; to generator.py (the default is 1000); in my case I increased the limit to 2500 and the problem went away.

I have been unable to reproduce this in a sample application, but the crash was triggered as a very long string in a source file grew.  The string is over 10,000 characters long and the source file is attached.

I reran the generator with &quot;-s&quot; and &quot;sys.setrecursionlimit(1500)&quot; ; the output is below:

Resolving dependencies
  -  
___________________________________________________________________________
___________________________________________________________________________
_____*...........................................................*.........
...Traceback (most recent call last):
  File
&quot;/Users/john/dev/Grasshopper/smart/Local/WebContent/public/grasshopper/qoox
doo-1.4.1-sdk/tool/bin/generator.py&quot;, line 224, in &lt;module&gt;
    main()
  File
&quot;/Users/john/dev/Grasshopper/smart/Local/WebContent/public/grasshopper/qoox
doo-1.4.1-sdk/tool/bin/generator.py&quot;, line 218, in main
    generatorObj.run()
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/Generator.py&quot;, line 626, in run
    
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/Generator.py&quot;, line 198, in
computeClassList
    config.cleanUpJobs(expandedjobs)
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 101,
in getClassList
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 75,
in resolveDepsSmartCludes
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 215,
in classlistFromInclude
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 164,
in classlistFromClassRecursive
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 164,
in classlistFromClassRecursive
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 146,
in classlistFromClassRecursive
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/DependencyLoader.py&quot;, line 254,
in getCombinedDeps
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/Class.py&quot;, line 518, in
dependencies
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/Class.py&quot;, line 212, in
classVariants
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/Class.py&quot;, line 160, in tree
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/code/Class.py&quot;, line 143, in
_getSourceTree
  File
&quot;/Volumes/MIRROR/Users/john/dev/Grasshopper/smart/Local/WebContent/public/q
ooxdoo-1.4.1-sdk/tool/pylib/generator/runtime/Cache.py&quot;, line 295, in write
RuntimeError: maximum recursion depth exceeded in cmp</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25182</commentid>
              <attachid>1005</attachid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-20 19:02:37 +0200</bug_when>
            <thetext>Created attachment 1005
example of the very long string that caused the problem

If you&#39;re wondering why this is a very long string that looks like HTML - that&#39;s because it runs in a server app, not on the client.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25183</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-20 19:03:48 +0200</bug_when>
            <thetext>PS Thomas suggests that &quot;an iterative exploration of the class list might help&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25192</commentid>
              <attachid>1006</attachid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 11:41:40 +0200</bug_when>
            <thetext>Created attachment 1006
complete output from the generator with stack trace</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25193</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 12:16:12 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; Created attachment 1006 [details]
&gt; complete output from the generator with stack trace

John, I was not questioning your post on the ml, but the stack trace still looks weird to me. What is the definition of the qxoo-source job? It doesn&#39;t seem to be one of our predefined jobs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25194</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 12:24:54 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; (In reply to comment #3)
&gt; &gt; Created attachment 1006 [details] [details]
&gt; &gt; complete output from the generator with stack trace
&gt; 
&gt; John, I was not questioning your post on the ml, but the stack trace still
&gt; looks weird to me. What is the definition of the qxoo-source job? It doesn&#39;t
&gt; seem to be one of our predefined jobs.

Hi Thomas - that&#39;s OK I just thought I&#39;d missed the point or something :)  The qxoo-source job is the same one I used in bug #5100 and I&#39;ve uploaded the entire stack trace as an attachement here too.

I&#39;ve been trying to isolate this some more this morning but not getting very far - I can make it fail but as soon as I start taking out almost anything it works again.  

Depending on how helpful you might find it, I&#39;m considering wrapping up a build containing all the classes &amp; libraries and sending it to you but although I&#39;ll remove the stuff not found by the dependency analysis it would still be quite a bit of code.  It would also be code that is not open source and I specifically do not want published anywhere so I&#39;d want to email it to you direct and need you to keep it just for the purpose of this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25196</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 12:50:47 +0200</bug_when>
            <thetext>&gt; Depending on how helpful you might find it, I&#39;m considering wrapping up a build
&gt; containing all the classes &amp; libraries

I&#39;ve just done it, and it&#39;s much smaller than I thought; I now have one demo app with no outside dependencies (other than Qx) and it&#39;s only got 10 JS source files in it.  Do you want a copy to try?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25197</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 12:53:51 +0200</bug_when>
            <thetext>Reduced stack consumption in ecmascript.backend.Packer (responsible for compressed script output in build jobs), by removing unnecessary calls to Node.isComplex().

With r27753.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25198</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 13:11:41 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; &gt; Depending on how helpful you might find it, I&#39;m considering wrapping up a build
&gt; &gt; containing all the classes &amp; libraries
&gt; 
&gt; I&#39;ve just done it, and it&#39;s much smaller than I thought; I now have one demo
&gt; app with no outside dependencies (other than Qx) and it&#39;s only got 10 JS source
&gt; files in it.  Do you want a copy to try?

Yes, definitely. You can PM it to me if you are concerned about disclosure.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25199</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 13:13:15 +0200</bug_when>
            <thetext>r27753 doesn&#39;t fix it, stack trace attached in a sec

&gt; Yes, definitely. You can PM it to me if you are concerned about disclosure.

cool, i&#39;ll send it over now</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25200</commentid>
              <attachid>1007</attachid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 13:13:45 +0200</bug_when>
            <thetext>Created attachment 1007
stack trace when run against svn head</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25205</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 16:36:29 +0200</bug_when>
            <thetext>Ok, case clear, I could reproduce the whole issue:

The exception happens in the Python standard module cPickle. cPickle doesn&#39;t give a proper stack trace, that&#39;s why it is so short. Using the alternative &quot;pickle&quot; module gives proper stack traces.

This happens during class parsing, when the generator tries to save an already parsed syntax tree to disk through pickling. That means the syntax tree is finished, so it&#39;s not a recursion issue in the parser. Just the serialization of that tree.

I don&#39;t see a general way to avoid this. I don&#39;t see a viable alternative to the syntax tree representation for source code, so we&#39;ll continue to have trees that need to be written to disk. We could bypass the pickle module when writing a tree to disk that is too &quot;deep&quot;, but then we&#39;d need an alternative serialization format (e.g. XML), *and* write a de-serializer for reading it back from disk. - I wouldn&#39;t want to go to this length at the moment.

The best is really to increase Python&#39;s recursion limit. The defaults are very conservative, even the current value of the generator, 1,500, is conservative, and I&#39;ve seen suggestions to set it as high as 10,000.

So, rather than hard-wiring a new maximum recursion limit into the generator, maybe the best thing is to make this value configurable. Then a project with deep parsing classes and large enough RAM could easily increase the value for their local needs, without interfering with outher projects that don&#39;t have that issue, or don&#39;t have enough RAM.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25206</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 16:47:03 +0200</bug_when>
            <thetext>Open: Make the Python recursion limit configurable through config.json.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25208</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-06-21 17:22:54 +0200</bug_when>
            <thetext>(In reply to comment #11)

Ok, so AIUI then the tree got deeper with each concatenation because it&#39;s a single expression and if each concatenation had been a different statement (eg a += &quot;xxx&quot;; rather than a=&quot;xxx&quot;+&quot;yyy&quot;...etc) the tree would have remained short?

It&#39;s got to be unusual to have an expression with so many steps in it and if the recursionlimit causes a buffer of a specific size to be allocated then specifying it in config.json would be very useful.  But if it&#39;s just a limit that protects against recursive data then I wouldn&#39;t bother IMHO.

This has also made me realise that the code that triggered this should use \ to spread the string over multiple lines, not add strings together at runtime!

If 1,500 is considered conservative, why not just up it to say 3,000 and wait until someone else hits the same problem - the error message is pretty distinctive after all.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25209</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-21 17:40:36 +0200</bug_when>
            <thetext>(In reply to comment #13)
&gt; (In reply to comment #11)
&gt; 
&gt; Ok, so AIUI then the tree got deeper with each concatenation because it&#39;s a
&gt; single expression and if each concatenation had been a different statement (eg
&gt; a += &quot;xxx&quot;; rather than a=&quot;xxx&quot;+&quot;yyy&quot;...etc) the tree would have remained
&gt; short?

Exactly. That would be one way around it from the application code side of things.

Another alternative would be to collect the substrings in an array, and in the end join it:

   var a = [
     &quot;foo&quot; ,
     &quot;bar&quot; ,
     &quot;baz&quot; ,
     ...
   ];
   var s = a.join(&#39;&#39;);

The last form comes close to the code you already have, just replacing the &#39;+&#39; at the end of the lines with &#39;,&#39;. I&#39;ve tried it on your code, works like a charm :).

&gt; It&#39;s got to be unusual to have an expression with so many steps in it and if

Yes, it&#39;s just that formally this is a long operator expression using string &#39;+&#39; as its repeated operator. Then in the syntax tree you get a right-dangling tree for the second operand:

                        +
                      /   \
                    foo    +
                         /   \
                       bar    +
                            /   \
                          baz    +
                               /   \
                             ...   ...

This causes the deep nesting. But as I said, the tree alone is innocent. Only when trying to pickle it, pickling uses like 5 function calls per node in the tree, and then the stack goes through the roof.

&gt; the recursionlimit causes a buffer of a specific size to be allocated then
&gt; specifying it in config.json would be very useful.

Yes, I think so. It&#39;s not a specific allocation size, I think, just a run-time check of the Python interpreter on its own stack.

&gt; But if it&#39;s just a limit
&gt; that protects against recursive data then I wouldn&#39;t bother IMHO.

No, it&#39;s just a limit against stack overflow. Recursive algorithms are not bad in themselves. And if you have RAM enough you can allow the call stack to grow to your needs. (There is supposed to be hard platform-dependent limit for that, but it should be long before you hit this).

&gt; This has also made me realise that the code that triggered this should use \ to
&gt; spread the string over multiple lines, not add strings together at runtime!

Yes, see above. Should be more efficient at run time, especially the array version.

&gt; If 1,500 is considered conservative, why not just up it to say 3,000 and wait
&gt; until someone else hits the same problem - the error message is pretty
&gt; distinctive after all.

Good point. The only thing that bugged me was to find out where it happens, and what really causes it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25391</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-01 10:27:55 +0200</bug_when>
            <thetext>Set default recursion limit to 3,500 in generator.py.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25392</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-01 10:32:30 +0200</bug_when>
            <thetext>Open: Expose recursion limit in a config key (e.g. 
&quot;generator-run-time/recursion-limit&quot;).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28264</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-01-13 12:06:21 +0100</bug_when>
            <thetext>I&#39;d rather open a dedicated bug for the configurable recursion limit ( 
bug#6040), and close this one.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28265</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-01-13 12:10:55 +0100</bug_when>
            <thetext>Made the bug summary more specific to the code involved.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39110</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:26 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1005</attachid>
            <date>2011-06-20 19:02:00 +0200</date>
            <delta_ts>2011-06-20 19:02:37 +0200</delta_ts>
            <desc>example of the very long string that caused the problem</desc>
            <filename>BookingWidget.js</filename>
            <type>application/x-javascript</type>
            <size>14384</size>
            <attacher>john.spackman</attacher>
            
              <data encoding="base64">LyoqCiAqIENsYXNzIGdlbmVyYXRlZCBieSBaZW5lc2lzIEpTU1AgQ2xhc3MgR2VuZXJhdG9yCiAq
CiAqLwpxeC5DbGFzcy5kZWZpbmUoImdyYXNzaG9wcGVyLm1vdC5zcnYuQm9va2luZ1dpZGdldCIs
IHsKCWV4dGVuZDogZ3Jhc3Nob3BwZXIuc3J2LndpZGdldHMuQWJzdHJhY3RXaWRnZXQsCgkKCQoJ
Cglwcm9wZXJ0aWVzOiB7CgkJCgl9LAoJCgltZW1iZXJzOiB7CgkJLyogTGluZSAxMSBpbiAiaW5s
aW5lIiwgY29sdW1uIDEgdG8gbGluZSAxNiwgY29sdW1uIDQgKi8KZ2VuZXJhdGVEeW5hbWljOiBm
dW5jdGlvbih3cml0ZXIsIGRhdGEpIHsKCQl2YXIgZG9jID0gc2l0ZUltcGwuZ2V0RHJsKCJncmFz
c2hvcHBlci9nYXJhZ2UiKS5nZXREb2N1bWVudCgpOwoJCQoJCXZhciBzdGVwSW5kZXggPSAxOwoJ
CS8qIExpbmUgMTYgaW4gImlubGluZSIsIGNvbHVtbiA1IHRvIGxpbmUgMjYsIGNvbHVtbiA0ICov
CndyaXRlci53cml0ZSgiXG4iICsgCgkiCQk8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRc
IiBzcmM9XCIvcHVibGljL2dyYXNzaG9wcGVyL2pxdWVyeS9qcXVlcnkudmFsaWRhdGlvbkVuZ2lu
ZS0yLjIuanNcIj4gPC9zY3JpcHQ+XG4iICsgCgkiCQk8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFz
Y3JpcHRcIiBzcmM9XCIvcHVibGljL2dyYXNzaG9wcGVyL2pxdWVyeS9qcXVlcnkudmFsaWRhdGlv
bkVuZ2luZS1lbi0yLjIuanNcIj4gPC9zY3JpcHQ+XG4iICsgCgkiCQk8bGluayByZWw9XCJzdHls
ZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9wdWJsaWMvZ3Jhc3Nob3BwZXIvanF1
ZXJ5L2pxdWVyeS52YWxpZGF0aW9uRW5naW5lLTIuMi5jc3NcIiAvPlxuIiArIAoJIgkJXG4iICsg
CgkiCQk8Zm9ybSBpZD1cImJvb2tpbmdGb3JtXCIgYWN0aW9uPVwiXCIgbWV0aG9kPVwicG9zdFwi
PlxuIiArIAoJIgkJCTxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIm1vdENsYXNzXCIgaWQ9
XCJtb3RDbGFzc1wiPlxuIiArIAoJIgkJCTxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIm1v
dERhdGVcIiBpZD1cIm1vdERhdGVcIj5cbiIgKyAKCSIJCQlcbiIgKyAKCSIJCQk8ZGl2IGNsYXNz
PVwibW90LWJvb2tpbmctY29udGFpbmVyXCI+XG4iICsgCgkiCQkJCSIpOwovKiBMaW5lIDI2IGlu
ICJpbmxpbmUiLCBjb2x1bW4gNSB0byBsaW5lIDI5LCBjb2x1bW4gNyAqLwoKCQkJCXZhciBtb3RD
bGFzc2VzID0gZG9jLmdldE1vdENsYXNzZXMoKTsKCQkJCWlmIChtb3RDbGFzc2VzLmxlbmd0aCA+
IDEpIHsKCQkJCQkvKiBMaW5lIDI5IGluICJpbmxpbmUiLCBjb2x1bW4gOCB0byBsaW5lIDMzLCBj
b2x1bW4gNyAqLwp3cml0ZXIud3JpdGUoIlxuIiArIAoJIgkJCQkJPGRpdiBjbGFzcz1cIm1vdC1i
b29raW5nIG1vdC1ib29raW5nLWNsYXNzXCI+XG4iICsgCgkiCQkJCQkJPGRpdiBjbGFzcz1cIm1v
dC1zdGVwLWxhYmVsXCI+PHNwYW4gY2xhc3M9XCJtb3Qtc3RlcC1pbmRleFwiPjE8L3NwYW4+PHNw
YW4gY2xhc3M9XCJtb3Qtc3RlcC10aXRsZVwiPlR5cGUgb2YgTU9UPC9zcGFuPiA8L2Rpdj5cbiIg
KyAKCSIJCQkJCQk8ZGl2IGNsYXNzPVwibW90LXN0ZXAtYWN0aW9uXCI+XG4iICsgCgkiCQkJCQkJ
CSIpOwovKiBMaW5lIDMzIGluICJpbmxpbmUiLCBjb2x1bW4gOCB0byBsaW5lIDM1LCBjb2x1bW4g
MTAgKi8KCgkJCQkJCQlmb3IgKHZhciBsID0gbW90Q2xhc3Nlcy5sZW5ndGgsIGkgPSAwOyBpIDwg
bDsgaSsrKSB7CgkJCQkJCQkJLyogTGluZSAzNSBpbiAiaW5saW5lIiwgY29sdW1uIDExIHRvIGxp
bmUgMzYsIGNvbHVtbiA1NyAqLwp3cml0ZXIud3JpdGUoIlxuIiArIAoJIgkJCQkJCQkJPGRpdiBj
bGFzcz1cIm1vdC1jbGFzcy1jb250YWluZXIgbW90LWNsYXNzLXR5cGVpZC0iKTsKLyogTGluZSAz
NiBpbiAiaW5saW5lIiwgY29sdW1uIDU4IHRvIGxpbmUgMzYsIGNvbHVtbiA4MyAqLwp3cml0ZXIu
d3JpdGUobW90Q2xhc3Nlc1tpXS5nZXRJZCgpKTsKd3JpdGVyLndyaXRlKCJcIj5cbiIgKyAKCSIJ
CQkJCQkJCQk8ZGl2IGNsYXNzPVwibW90LWNsYXNzLWJhbm5lclwiPlxuIiArIAoJIgkJCQkJCQkJ
CQk8c3BhbiBjbGFzcz1cIm1vdC1jbGFzcy10aXRsZS1wcmljZVwiPlxuIiArIAoJIgkJCQkJCQkJ
CQkJPHNwYW4gY2xhc3M9XCJtb3QtY2xhc3MtdGl0bGVcIj4iKTsKLyogTGluZSAzOSBpbiAiaW5s
aW5lIiwgY29sdW1uIDQyIHRvIGxpbmUgMzksIGNvbHVtbiA3MCAqLwp3cml0ZXIud3JpdGUobW90
Q2xhc3Nlc1tpXS5nZXRUaXRsZSgpKTsKd3JpdGVyLndyaXRlKCI8L3NwYW4+XG4iICsgCgkiCQkJ
CQkJCQkJCQk8c3BhbiBjbGFzcz1cIm1vdC1jbGFzcy1wcmljZVwiPiZwb3VuZDsiKTsKLyogTGlu
ZSA0MCBpbiAiaW5saW5lIiwgY29sdW1uIDQ5IHRvIGxpbmUgNDAsIGNvbHVtbiA3NyAqLwp3cml0
ZXIud3JpdGUobW90Q2xhc3Nlc1tpXS5nZXRQcmljZSgpKTsKd3JpdGVyLndyaXRlKCI8L3NwYW4+
XG4iICsgCgkiCQkJCQkJCQkJCTwvc3Bhbj5cbiIgKyAKCSIJCQkJCQkJCQkJPHNwYW4gY2xhc3M9
XCJtb3QtY2xhc3MtZGVzY1wiPiIpOwovKiBMaW5lIDQyIGluICJpbmxpbmUiLCBjb2x1bW4gNDAg
dG8gbGluZSA0MiwgY29sdW1uIDc0ICovCndyaXRlci53cml0ZShtb3RDbGFzc2VzW2ldLmdldERl
c2NyaXB0aW9uKCkpOwp3cml0ZXIud3JpdGUoIjwvc3Bhbj5cbiIgKyAKCSIJCQkJCQkJCQk8L2Rp
dj5cbiIgKyAKCSIJCQkJCQkJCTwvZGl2PlxuIiArIAoJIgkJCQkJCQkJIik7Ci8qIExpbmUgNDUg
aW4gImlubGluZSIsIGNvbHVtbiA5IHRvIGxpbmUgNDcsIGNvbHVtbiA5ICovCgoJCQkJCQkJfQoJ
CQkJCQkJLyogTGluZSA0NyBpbiAiaW5saW5lIiwgY29sdW1uIDEwIHRvIGxpbmUgNTAsIGNvbHVt
biA1ICovCndyaXRlci53cml0ZSgiXG4iICsgCgkiCQkJCQkJPC9kaXY+XG4iICsgCgkiCQkJCQk8
L2Rpdj5cbiIgKyAKCSIJCQkJCSIpOwovKiBMaW5lIDUwIGluICJpbmxpbmUiLCBjb2x1bW4gNiB0
byBsaW5lIDUzLCBjb2x1bW4gNiAqLwoKCQkJCQlzdGVwSW5kZXgrKzsKCQkJCX0KCQkJCS8qIExp
bmUgNTMgaW4gImlubGluZSIsIGNvbHVtbiA3IHRvIGxpbmUgNTUsIGNvbHVtbiA2MiAqLwp3cml0
ZXIud3JpdGUoIlxuIiArIAoJIgkJCQk8ZGl2IGNsYXNzPVwibW90LWJvb2tpbmcgbW90LWJvb2tp
bmctd2hlblwiPlxuIiArIAoJIgkJCQkJPGRpdiBjbGFzcz1cIm1vdC1zdGVwLWxhYmVsXCI+PHNw
YW4gY2xhc3M9XCJtb3Qtc3RlcC1pbmRleFwiPiIpOwovKiBMaW5lIDU1IGluICJpbmxpbmUiLCBj
b2x1bW4gNjMgdG8gbGluZSA1NSwgY29sdW1uIDc4ICovCndyaXRlci53cml0ZShzdGVwSW5kZXgr
Kyk7CndyaXRlci53cml0ZSgiPC9zcGFuPjxzcGFuIGNsYXNzPVwibW90LXN0ZXAtdGl0bGVcIj5Q
aWNrIFdoZW48L3NwYW4+IDwvZGl2PlxuIiArIAoJIgkJCQkJPGRpdiBjbGFzcz1cIm1vdC1zdGVw
LWFjdGlvblwiPlxuIiArIAoJIgkJCQkJCTxkaXYgaWQ9XCJjYWxlbmRhclwiPiA8L2Rpdj5cbiIg
KyAKCSIJCQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtY29udGFpbmVyXCI+XG4iICsgCgkiCQkJCQkJ
CTxkaXYgY2xhc3M9XCJndGltZS10YWJzXCI+XG4iICsgCgkiCQkJCQkJCQk8ZGl2IGNsYXNzPVwi
Z3RpbWUtdGFiIGd0aW1lLXRhYi1hY3RpdmUgZ3RpbWUtbW9ybmluZ1wiPjxzcGFuIGNsYXNzPVwi
Z3RpbWUtY2FwdGlvblwiPk1vcm5pbmc8L3NwYW4+IDxicj44OjMwYW0gLSAxMjowMHBtPC9kaXY+
XG4iICsgCgkiCQkJCQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtdGFiIGd0aW1lLXRhYi1pbmFjdGl2
ZSBndGltZS1hZnRlcm5vb25cIj48c3BhbiBjbGFzcz1cImd0aW1lLWNhcHRpb25cIj5BZnRlcm5v
b248L3NwYW4+IDxicj4xMjozMHBtIC0gNDowMHBtPC9kaXY+XG4iICsgCgkiCQkJCQkJCTwvZGl2
PlxuIiArIAoJIgkJCQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtcGFnZSBndGltZS1tb3JuaW5nXCI+
XG4iICsgCgkiCQkJCQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtc2xvdCBndGltZS1hdmFpbGFibGVc
Ij48c3BhbiBjbGFzcz1cImd0aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5cGU9XCJyYWRpb1wiIGNs
YXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCIgbmFtZT1cInN0YXJ0VGltZVwiIGlkPVwic3RhcnRU
aW1lLTA4MzBcIj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGltZVwiPjg6MzBhbTwvc3Bh
bj48L2Rpdj5cbiIgKyAKCSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLWF2
YWlsYWJsZVwiPjxzcGFuIGNsYXNzPVwiZ3RpbWUtc2VsZWN0b3JcIj48aW5wdXQgdHlwZT1cInJh
ZGlvXCIgY2xhc3M9XCJ2YWxpZGF0ZVtyZXF1aXJlZF1cIiBuYW1lPVwic3RhcnRUaW1lXCIgaWQ9
XCJzdGFydFRpbWUtMDkwMFwiPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJndGltZS10aW1lXCI+OTow
MGFtPC9zcGFuPjwvZGl2PlxuIiArIAoJIgkJCQkJCQkJPGRpdiBjbGFzcz1cImd0aW1lLXNsb3Qg
Z3RpbWUtYXZhaWxhYmxlXCI+PHNwYW4gY2xhc3M9XCJndGltZS1zZWxlY3RvclwiPjxpbnB1dCB0
eXBlPVwicmFkaW9cIiBjbGFzcz1cInZhbGlkYXRlW3JlcXVpcmVkXVwiIG5hbWU9XCJzdGFydFRp
bWVcIiBpZD1cInN0YXJ0VGltZS0wOTMwXCI+PC9zcGFuPiA8c3BhbiBjbGFzcz1cImd0aW1lLXRp
bWVcIj45OjMwYW08L3NwYW4+PC9kaXY+XG4iICsgCgkiCQkJCQkJCQk8ZGl2IGNsYXNzPVwiZ3Rp
bWUtc2xvdCBndGltZS1ub3QtYXZhaWxhYmxlXCI+PHNwYW4gY2xhc3M9XCJndGltZS1zZWxlY3Rv
clwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBjbGFzcz1cInZhbGlkYXRlW3JlcXVpcmVkXVwiIG5h
bWU9XCJzdGFydFRpbWVcIiBpZD1cInN0YXJ0VGltZS0xMDAwXCI+PC9zcGFuPiA8c3BhbiBjbGFz
cz1cImd0aW1lLXRpbWVcIj4xMDowMGFtPC9zcGFuPjwvZGl2PlxuIiArIAoJIgkJCQkJCQkJPGRp
diBjbGFzcz1cImd0aW1lLXNsb3QgZ3RpbWUtbm90LWF2YWlsYWJsZVwiPjxzcGFuIGNsYXNzPVwi
Z3RpbWUtc2VsZWN0b3JcIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJ2YWxpZGF0ZVty
ZXF1aXJlZF1cIiBuYW1lPVwic3RhcnRUaW1lXCIgaWQ9XCJzdGFydFRpbWUtMTAzMFwiPjwvc3Bh
bj4gPHNwYW4gY2xhc3M9XCJndGltZS10aW1lXCI+MTA6MzBhbTwvc3Bhbj48L2Rpdj5cbiIgKyAK
CSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLWF2YWlsYWJsZVwiPjxzcGFu
IGNsYXNzPVwiZ3RpbWUtc2VsZWN0b3JcIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJ2
YWxpZGF0ZVtyZXF1aXJlZF1cIiBuYW1lPVwic3RhcnRUaW1lXCIgaWQ9XCJzdGFydFRpbWUtMTEw
MFwiPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJndGltZS10aW1lXCI+MTE6MDBhbTwvc3Bhbj48L2Rp
dj5cbiIgKyAKCSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLW5vdC1hdmFp
bGFibGVcIj48c3BhbiBjbGFzcz1cImd0aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5cGU9XCJyYWRp
b1wiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCIgbmFtZT1cInN0YXJ0VGltZVwiIGlkPVwi
c3RhcnRUaW1lLTExMzBcIj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGltZVwiPjExOjMw
YW08L3NwYW4+PC9kaXY+XG4iICsgCgkiCQkJCQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtc2xvdCBn
dGltZS1hdmFpbGFibGVcIj48c3BhbiBjbGFzcz1cImd0aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5
cGU9XCJyYWRpb1wiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCIgbmFtZT1cInN0YXJ0VGlt
ZVwiIGlkPVwic3RhcnRUaW1lLTEyMDBcIj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGlt
ZVwiPjEyOjAwcG08L3NwYW4+PC9kaXY+XG4iICsgCgkiCQkJCQkJCTwvZGl2PlxuIiArIAoJIgkJ
CQkJCQk8ZGl2IGNsYXNzPVwiZ3RpbWUtcGFnZSBndGltZS1hZnRlcm5vb25cIj5cbiIgKyAKCSIJ
CQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLWF2YWlsYWJsZVwiPjxzcGFuIGNs
YXNzPVwiZ3RpbWUtc2VsZWN0b3JcIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJ2YWxp
ZGF0ZVtyZXF1aXJlZF1cIiBuYW1lPVwic3RhcnRUaW1lXCIgaWQ9XCJzdGFydFRpbWUtMTIzMFwi
Pjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJndGltZS10aW1lXCI+MTI6MzBwbTwvc3Bhbj48L2Rpdj5c
biIgKyAKCSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLW5vdC1hdmFpbGFi
bGVcIj48c3BhbiBjbGFzcz1cImd0aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5cGU9XCJyYWRpb1wi
IGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCIgbmFtZT1cInN0YXJ0VGltZVwiIGlkPVwic3Rh
cnRUaW1lLTEzMDBcIj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGltZVwiPjE6MDBwbTwv
c3Bhbj48L2Rpdj5cbiIgKyAKCSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1l
LW5vdC1hdmFpbGFibGVcIj48c3BhbiBjbGFzcz1cImd0aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5
cGU9XCJyYWRpb1wiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCIgbmFtZT1cInN0YXJ0VGlt
ZVwiIGlkPVwic3RhcnRUaW1lLTEzMzBcIj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGlt
ZVwiPjE6MzBwbTwvc3Bhbj48L2Rpdj5cbiIgKyAKCSIJCQkJCQkJCTxkaXYgY2xhc3M9XCJndGlt
ZS1zbG90IGd0aW1lLWF2YWlsYWJsZVwiPjxzcGFuIGNsYXNzPVwiZ3RpbWUtc2VsZWN0b3JcIj48
aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJ2YWxpZGF0ZVtyZXF1aXJlZF1cIiBuYW1lPVwi
c3RhcnRUaW1lXCIgaWQ9XCJzdGFydFRpbWUtMTQwMFwiPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJn
dGltZS10aW1lXCI+MjowMHBtPC9zcGFuPjwvZGl2PlxuIiArIAoJIgkJCQkJCQkJPGRpdiBjbGFz
cz1cImd0aW1lLXNsb3QgZ3RpbWUtYXZhaWxhYmxlXCI+PHNwYW4gY2xhc3M9XCJndGltZS1zZWxl
Y3RvclwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBjbGFzcz1cInZhbGlkYXRlW3JlcXVpcmVkXVwi
IG5hbWU9XCJzdGFydFRpbWVcIiBpZD1cInN0YXJ0VGltZS0xNDMwXCI+PC9zcGFuPiA8c3BhbiBj
bGFzcz1cImd0aW1lLXRpbWVcIj4yOjMwcG08L3NwYW4+PC9kaXY+XG4iICsgCgkiCQkJCQkJCQk8
ZGl2IGNsYXNzPVwiZ3RpbWUtc2xvdCBndGltZS1hdmFpbGFibGVcIj48c3BhbiBjbGFzcz1cImd0
aW1lLXNlbGVjdG9yXCI+PGlucHV0IHR5cGU9XCJyYWRpb1wiIGNsYXNzPVwidmFsaWRhdGVbcmVx
dWlyZWRdXCIgbmFtZT1cInN0YXJ0VGltZVwiIGlkPVwic3RhcnRUaW1lLTE1MDBcIj48L3NwYW4+
IDxzcGFuIGNsYXNzPVwiZ3RpbWUtdGltZVwiPjM6MDBwbTwvc3Bhbj48L2Rpdj5cbiIgKyAKCSIJ
CQkJCQkJCTxkaXYgY2xhc3M9XCJndGltZS1zbG90IGd0aW1lLWF2YWlsYWJsZVwiPjxzcGFuIGNs
YXNzPVwiZ3RpbWUtc2VsZWN0b3JcIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJ2YWxp
ZGF0ZVtyZXF1aXJlZF1cIiBuYW1lPVwic3RhcnRUaW1lXCIgaWQ9XCJzdGFydFRpbWUtMTUzMFwi
Pjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJndGltZS10aW1lXCI+MzozMHBtPC9zcGFuPjwvZGl2Plxu
IiArIAoJIgkJCQkJCQkJPGRpdiBjbGFzcz1cImd0aW1lLXNsb3QgZ3RpbWUtYXZhaWxhYmxlXCI+
PHNwYW4gY2xhc3M9XCJndGltZS1zZWxlY3RvclwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBjbGFz
cz1cInZhbGlkYXRlW3JlcXVpcmVkXVwiIG5hbWU9XCJzdGFydFRpbWVcIiBpZD1cInN0YXJ0VGlt
ZS0xNjAwXCI+PC9zcGFuPiA8c3BhbiBjbGFzcz1cImd0aW1lLXRpbWVcIj40OjAwcG08L3NwYW4+
PC9kaXY+XG4iICsgCgkiCQkJCQkJCTwvZGl2PlxuIiArIAoJIgkJCQkJCTwvZGl2PlxuIiArIAoJ
IgkJCQkJPC9kaXY+XG4iICsgCgkiCQkJCTwvZGl2PlxuIiArIAoJIgkJCQk8ZGl2IGNsYXNzPVwi
bW90LWJvb2tpbmcgbW90LWJvb2tpbmctY3VzdG9tZXJcIj5cbiIgKyAKCSIJCQkJCTxkaXYgY2xh
c3M9XCJtb3Qtc3RlcC1sYWJlbFwiPjxzcGFuIGNsYXNzPVwibW90LXN0ZXAtaW5kZXhcIj4zPC9z
cGFuPjxzcGFuIGNsYXNzPVwibW90LXN0ZXAtdGl0bGVcIj5Zb3VyIERldGFpbHM8L3NwYW4+IDwv
ZGl2PlxuIiArIAoJIgkJCQkJPGRpdiBjbGFzcz1cIm1vdC1zdGVwLWFjdGlvblwiPlxuIiArIAoJ
IgkJCQkJCTx0YWJsZSBpZD1cImN1c3RvbWVyRGV0YWlsc1wiPlxuIiArIAoJIgkJCQkJCQk8dHI+
XG4iICsgCgkiCQkJCQkJCQk8dGQ+WW91ciBOYW1lOjwvdGQ+XG4iICsgCgkiCQkJCQkJCQk8dGQ+
XG4iICsgCgkiCQkJCQkJCQkJPHNlbGVjdCBuYW1lPVwic2FsdXRhdGlvblwiIGlkPVwic2FsdXRh
dGlvblwiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCI+XG4iICsgCgkiCQkJCQkJCQkJCTxv
cHRpb24gdmFsdWU9XCJtclwiPk1yPC9vcHRpb24+XG4iICsgCgkiCQkJCQkJCQkJCTxvcHRpb24g
dmFsdWU9XCJtcnNcIj5NcnM8L29wdGlvbj5cbiIgKyAKCSIJCQkJCQkJCQkJPG9wdGlvbiB2YWx1
ZT1cIm1zXCI+TXM8L29wdGlvbj5cbiIgKyAKCSIJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT1cImRy
XCI+RHI8L29wdGlvbj5cbiIgKyAKCSIJCQkJCQkJCQk8L3NlbGVjdD5cbiIgKyAKCSIJCQkJCQkJ
CQk8aW5wdXQgbmFtZT1cImZ1bGxOYW1lXCIgaWQ9XCJmdWxsTmFtZVwiIGNsYXNzPVwidmFsaWRh
dGVbcmVxdWlyZWRdXCI+XG4iICsgCgkiCQkJCQkJCQk8L3RkPlxuIiArIAoJIgkJCQkJCQk8L3Ry
PlxuIiArIAoJIgkJCQkJCQk8dHI+XG4iICsgCgkiCQkJCQkJCQk8dGQ+WW91ciBQaG9uZSBOdW1i
ZXI6PC90ZD5cbiIgKyAKCSIJCQkJCQkJCTx0ZD48aW5wdXQgbmFtZT1cInBob25lTnVtYmVyXCIg
aWQ9XCJwaG9uZU51bWJlclwiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWQsY3VzdG9tW3Bob25l
XV1cIj48L3RkPlxuIiArIAoJIgkJCQkJCQk8L3RyPlxuIiArIAoJIgkJCQkJCQk8dHI+XG4iICsg
CgkiCQkJCQkJCQk8dGQ+WW91ciBFbWFpbCBBZGRyZXNzOjwvdGQ+XG4iICsgCgkiCQkJCQkJCQk8
dGQ+PGlucHV0IG5hbWU9XCJlbWFpbEFkZHJlc3NcIiBpZD1cImVtYWlsQWRkcmVzc1wiIGNsYXNz
PVwidmFsaWRhdGVbY3VzdG9tW2VtYWlsXV1cIj48c3BhbiBjbGFzcz1cIm9wdGlvbmFsLXRleHRc
Ij4ob3B0aW9uYWwpPC9zcGFuPjwvdGQ+XG4iICsgCgkiCQkJCQkJCTwvdHI+XG4iICsgCgkiCQkJ
CQkJPC90YWJsZT5cbiIgKyAKCSIJCQkJCQk8dGFibGUgaWQ9XCJ2ZWhpY2xlRGV0YWlsc1wiPlxu
IiArIAoJIgkJCQkJCQk8dHI+XG4iICsgCgkiCQkJCQkJCQk8dGQ+VmVoaWNsZSBNYWtlOjwvdGQ+
XG4iICsgCgkiCQkJCQkJCQk8dGQ+PGlucHV0IG5hbWU9XCJ2ZWhpY2xlTWFrZVwiIGlkPVwidmVo
aWNsZU1ha2VcIiBjbGFzcz1cInZhbGlkYXRlW3JlcXVpcmVkXVwiPjwvdGQ+XG4iICsgCgkiCQkJ
CQkJCTwvdHI+XG4iICsgCgkiCQkJCQkJCTx0cj5cbiIgKyAKCSIJCQkJCQkJCTx0ZD5WZWhpY2xl
IE1vZGVsOjwvdGQ+XG4iICsgCgkiCQkJCQkJCQk8dGQ+PGlucHV0IG5hbWU9XCJ2ZWhpY2xlTW9k
ZWxcIiBpZD1cInZlaGljbGVNb2RlbFwiIGNsYXNzPVwidmFsaWRhdGVbcmVxdWlyZWRdXCI+PC90
ZD5cbiIgKyAKCSIJCQkJCQkJPC90cj5cbiIgKyAKCSIJCQkJCQkJPHRyPlxuIiArIAoJIgkJCQkJ
CQkJPHRkPlBldHJvbCBvciBEaWVzZWw/PC90ZD5cbiIgKyAKCSIJCQkJCQkJCTx0ZD5cbiIgKyAK
CSIJCQkJCQkJCQk8c2VsZWN0IG5hbWU9XCJ2ZWhpY2xlRnVlbFwiIGlkPVwidmVoaWNsZUZ1ZWxc
IiBjbGFzcz1cInZhbGlkYXRlW3JlcXVpcmVkXVwiPlxuIiArIAoJIgkJCQkJCQkJCQk8b3B0aW9u
IHZhbHVlPVwicGV0cm9sXCIgc2VsZWN0ZWQ9XCJzZWxlY3RlZFwiPlBldHJvbDwvb3B0aW9uPlxu
IiArIAoJIgkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPVwiZGllc2VsXCI+RGllc2VsPC9vcHRpb24+
XG4iICsgCgkiCQkJCQkJCQkJPC9zZWxlY3Q+XG4iICsgCgkiCQkJCQkJCQk8L3RkPlxuIiArIAoJ
IgkJCQkJCQk8L3RyPlxuIiArIAoJIgkJCQkJCTwvdGFibGU+XG4iICsgCgkiCQkJCQk8L2Rpdj5c
biIgKyAKCSIJCQkJPC9kaXY+XG4iICsgCgkiCQkJCTxkaXYgY2xhc3M9XCJtb3QtYm9va2luZyBt
b3QtYm9va2luZy1ib29rLWl0XCI+XG4iICsgCgkiCQkJCQk8ZGl2IGNsYXNzPVwibW90LXN0ZXAt
YWN0aW9uXCI+PGlucHV0IHR5cGU9XCJpbWFnZVwiIGlkPVwiYm9va0J1dHRvblwiIGFsdD1cIkJv
b2sgWW91ciBNT1RcIiBzcmM9XCIvc2tpbi9pbWFnZXMvYm9vay1tb3QucG5nXCI+PC9kaXY+XG4i
ICsgCgkiCQkJCTwvZGl2PlxuIiArIAoJIgkJCTwvZGl2PlxuIiArIAoJIgkJPC9mb3JtPlxuXG4i
ICsgCgkiCQk8c3R5bGU+XG4iICsgCgkiCQkJI2NhbGVuZGFyLCAuZ3RpbWUtY29udGFpbmVyIHtc
biIgKyAKCSIJCQkJZmxvYXQ6IGxlZnQ7XG4iICsgCgkiCQkJfVxuIiArIAoJIgkJCS5ndGltZS1j
b250YWluZXIge1xuIiArIAoJIgkJCQltYXJnaW4tbGVmdDogMjBweDtcbiIgKyAKCSIJCQl9XG4i
ICsgCgkiCQkJI2N1c3RvbWVyRGV0YWlscywgI3ZlaGljbGVEZXRhaWxzIHtcbiIgKyAKCSIJCQkJ
ZmxvYXQ6IGxlZnQ7XG4iICsgCgkiCQkJCWJhY2tncm91bmQtY29sb3I6ICNlNWVkZjU7XG4iICsg
CgkiCQkJCXBhZGRpbmc6IDlweDtcbiIgKyAKCSIJCQl9XG4iICsgCgkiCQkJI3ZlaGljbGVEZXRh
aWxzIHtcbiIgKyAKCSIJCQkJbWFyZ2luLWxlZnQ6IDE1cHg7XG4iICsgCgkiCQkJfVxuIiArIAoJ
IgkJPC9zdHlsZT5cbiIgKyAKCSIJCTxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxu
IiArIAoJIgkJJChmdW5jdGlvbigpIHtcbiIgKyAKCSIJCQl2YXIgYXBpQ2FsZW5kYXIgPSAkKFwi
I2NhbGVuZGFyXCIpLmdDYWxlbmRhcih7XG4iICsgCgkiCQkJCW9uU2VsZWN0RGF0ZTogZnVuY3Rp
b24oZHQpIHtcbiIgKyAKCSIJCQkJCSQoXCIjY2FsZW5kYXJcIikudmFsaWRhdGlvbkVuZ2luZShc
J2hpZGVQcm9tcHRcJyk7XG4iICsgCgkiCQkJCQljb25zb2xlLmxvZyhcIlNlbGVjdGVkIGRhdGU6
IFwiICsgZHQpO1xuIiArIAoJIgkJCQkJJC5hamF4KHtcbiIgKyAKCSIJCQkJCQl0eXBlOiBcIkdF
VFwiLFxuIiArIAoJIgkJCQkJCXVybDogXCIvX19ncmFzc2hvcHBlci5hcGkvdjEvZ3Jhc3Nob3Bw
ZXIubW90LnNydi5Cb29raW5nQXBpL2dldEF2YWlsYWJsZVNsb3RzP2FyZ3VtZW50cz10b2RheVwi
LFxuIiArIAoJIgkJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMsIGpxWEhS
KSB7XG4iICsgCgkiCQkJCQkJCSQubG9nKFwicmVjZWl2ZWQgdGV4dFN0YXR1cz1cIiArIHRleHRT
dGF0dXMgKyBcIiwgZGF0YT1cIiArIGRhdGEpO1xuIiArIAoJIgkJCQkJCX0sXG4iICsgCgkiCQkJ
CQkJZXJyb3I6IGZ1bmN0aW9uKHhociwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcbiIgKyAK
CSIJCQkJCQl9XG4iICsgCgkiCQkJCQl9KTtcbiIgKyAKCSIJCQkJfSxcbiIgKyAKCSIJCQkJYWxs
b3dQYXN0RGF0ZXM6IGZhbHNlLFxuIiArIAoJIgkJCQlhbGxvd1RvZGF5OiB0cnVlXG4iICsgCgki
CQkJfSk7XG4iICsgCgkiCQkJJChcIi5tb3QtYm9va2luZyAubW90LWNsYXNzLWNvbnRhaW5lclwi
KVxuIiArIAoJIgkJCQkuaG92ZXIoXG4iICsgCgkiCQkJCQlmdW5jdGlvbigpIHtcbiIgKyAKCSIJ
CQkJCQkkKHRoaXMpLmFkZENsYXNzKFwibW90LWhvdmVyXCIpO1xuIiArIAoJIgkJCQkJfSwgZnVu
Y3Rpb24oKSB7XG4iICsgCgkiCQkJCQkJJCh0aGlzKS5yZW1vdmVDbGFzcyhcIm1vdC1ob3Zlclwi
KTtcbiIgKyAKCSIJCQkJCX0pXG4iICsgCgkiCQkJCS5jbGljayhmdW5jdGlvbigpIHtcbiIgKyAK
CSIJCQkJCSQoXCIubW90LWJvb2tpbmcgLm1vdC1jbGFzcy1jb250YWluZXJcIilcbiIgKyAKCSIJ
CQkJCQkucmVtb3ZlQ2xhc3MoXCJtb3Qtc2VsZWN0ZWRcIilcbiIgKyAKCSIJCQkJCQkudmFsaWRh
dGlvbkVuZ2luZShcJ2hpZGVQcm9tcHRcJyk7XG4iICsgCgkiCQkJCQkkKHRoaXMpLmFkZENsYXNz
KFwibW90LXNlbGVjdGVkXCIpO1xuIiArIAoJIgkJCQkJXG4iICsgCgkiCQkJCQkvLyBFYWNoIGhh
cyBhIGNzcyBjbGFzcyBvZiBcIm1vdC1jbGFzcy1cIiBwbHVzIHRoZSBzaG9ydCBjb2RlIG9mIHRo
ZSBjbGFzc2lmaWNhdGlvblxuIiArIAoJIgkJCQkJdmFyIHByZWZpeCA9IFwibW90LWNsYXNzLXR5
cGVpZC1cIiwgcHJlZml4TGVuID0gcHJlZml4Lmxlbmd0aCxcbiIgKyAKCSIJCQkJCQltb3RDbGFz
cyA9IG51bGw7XG4iICsgCgkiCQkJCQlmb3IgKHZhciBjbGFzc05hbWVzID0gJCh0aGlzKS5hdHRy
KFwnY2xhc3NcJykuc3BsaXQoL1xccysvKSwgaSA9IDA7IGkgPCBjbGFzc05hbWVzLmxlbmd0aDsg
aSsrKSB7XG4iICsgCgkiCQkJCQkJdmFyIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbaV07XG4iICsg
CgkiCQkJCQkJaWYgKGNsYXNzTmFtZS5sZW5ndGggPiBwcmVmaXhMZW4gJiYgY2xhc3NOYW1lLnN1
YnN0cmluZygwLCBwcmVmaXhMZW4pID09IHByZWZpeCkge1xuIiArIAoJIgkJCQkJCQltb3RDbGFz
cyA9IGNsYXNzTmFtZS5zdWJzdHJpbmcocHJlZml4TGVuKTtcbiIgKyAKCSIJCQkJCQkJYnJlYWs7
XG4iICsgCgkiCQkJCQkJfVxuIiArIAoJIgkJCQkJfVxuIiArIAoJIgkJCQkJXG4iICsgCgkiCQkJ
CQkkKFwiI21vdENsYXNzXCIpLnZhbChtb3RDbGFzc3x8XCJcIik7XG4iICsgCgkiCQkJCX0pO1xu
IiArIAoJIgkJCS8qXG4iICsgCgkiCQkJJChcIiNib29rQnV0dG9uXCIpLmhvdmVyKFxuIiArIAoJ
IgkJCQlmdW5jdGlvbigpIHtcbiIgKyAKCSIJCQkJCSQodGhpcykuYXR0cihcJ3NyY1wnLCBcIi9z
a2luL2ltYWdlcy9ib29rLW1vdC1vdmVyLnBuZ1wiKTtcbiIgKyAKCSIJCQkJfSwgZnVuY3Rpb24o
KSB7XG4iICsgCgkiCQkJCQkkKHRoaXMpLmF0dHIoXCdzcmNcJywgXCIvc2tpbi9pbWFnZXMvYm9v
ay1tb3QucG5nXCIpO1xuIiArIAoJIgkJCQl9KTtcbiIgKyAKCSIJCQkqL1xuIiArIAoJIgkJCVxu
IiArIAoJIgkJCXZhciAkZm9ybSA9ICQoXCIjYm9va2luZ0Zvcm1cIik7XG4iICsgCgkiCQkJJGZv
cm1cbiIgKyAKCSIJCQkJLnN1Ym1pdChmdW5jdGlvbihldnQpIHtcbiIgKyAKCSIJCQkJCWV2dC5w
cmV2ZW50RGVmYXVsdCgpO1xuIiArIAoJIgkJCQkJdmFyIHZhbGlkID0gJGZvcm0udmFsaWRhdGlv
bkVuZ2luZShcJ3ZhbGlkYXRlXCcpO1xuIiArIAoJIgkJCQkJXG4iICsgCgkiCQkJCQkvLyBHZXQg
dGhlIHNlbGVjdGVkIG1vdCBjbGFzc2lmaWNhdGlvblxuIiArIAoJIgkJCQkJdmFyIG1vdENsYXNz
ID0gJChcIiNtb3RDbGFzc1wiKS52YWwoKTtcbiIgKyAKCSIJCQkJCWlmICgkKFwiLm1vdC1ib29r
aW5nLm1vdC1ib29raW5nLWNsYXNzXCIpLmxlbmd0aCkge1xuIiArIAoJIgkJCQkJCS8vIENoZWNr
IHdlIGZvdW5kIG9uZVxuIiArIAoJIgkJCQkJCWlmICghbW90Q2xhc3MpIHtcbiIgKyAKCSIJCQkJ
CQkJJChcIi5tb3QtYm9va2luZyAubW90LWNsYXNzLWNvbnRhaW5lclwiKS52YWxpZGF0aW9uRW5n
aW5lKFwnc2hvd1Byb21wdFwnLCBcJ1BsZWFzZSBzZWxlY3QgdGhlIHR5cGUgb2YgTU9UXCcsIFwn
cmVkXCcsIFwndG9wUmlnaHRcJywgdHJ1ZSk7XG4iICsgCgkiCQkJCQkJCXZhbGlkID0gZmFsc2U7
XG4iICsgCgkiCQkJCQkJfVxuIiArIAoJIgkJCQkJfVxuIiArIAoJIgkJCQkJXG4iICsgCgkiCQkJ
CQlpZiAoIWFwaUNhbGVuZGFyLmdldFNlbGVjdGVkRGF0ZSgpKSB7XG4iICsgCgkiCQkJCQkJJChc
IiNjYWxlbmRhclwiKS52YWxpZGF0aW9uRW5naW5lKFwnc2hvd1Byb21wdFwnLCBcJ1BsZWFzZSBz
ZWxlY3QgdGhlIGRheSB5b3VcXFwnZCBsaWtlIHRvIGhhdmUgeW91ciBNT1RcJywgXCdyZWRcJywg
XCd0b3BSaWdodFwnLCB0cnVlKTtcbiIgKyAKCSIJCQkJCQl2YWxpZCA9IGZhbHNlO1xuIiArIAoJ
IgkJCQkJfVxuIiArIAoJIgkJCQkJXG4iICsgCgkiCQkJCQlyZXR1cm4gZmFsc2U7XG4iICsgCgki
CQkJCX0pXG4iICsgCgkiCQkJCS52YWxpZGF0aW9uRW5naW5lKFwiYXR0YWNoXCIpO1xuIiArIAoJ
IgkJCXZhciAkeCA9ICQoXCIuZ3RpbWUtc2xvdC5ndGltZS1ub3QtYXZhaWxhYmxlIGlucHV0XCIp
O1xuIiArIAoJIgkJCSR4LmF0dHIoXCdkaXNhYmxlZFwnLCB0cnVlKTtcbiIgKyAKCSIJCX0pO1xu
IiArIAoJIgkJPC9zY3JpcHQ+CQlcbiIgKyAKCSIJCSIpOwovKiBMaW5lIDIzNiBpbiAiaW5saW5l
IiwgY29sdW1uIDMgdG8gbGluZSAyMzksIGNvbHVtbiAyICovCgoJfSwKCQkKCQlib2R5OiBmdW5j
dGlvbih3cml0ZXIpIHsKCQkJaWYgKHR5cGVvZiBwYWdlT3B0cyA9PSAidW5kZWZpbmVkIikKCQkJ
CXBhZ2VPcHRzID0ge307CgkJCS8qIExpbmUgMSBpbiAiaW5saW5lIiwgY29sdW1uIDkxIHRvIGxp
bmUgMywgY29sdW1uIDAgKi8Kd3JpdGVyLndyaXRlKCJcblxuIik7CgoJCX0KCX0sCgkKCXN0YXRp
Y3M6IHsKCQkKCX0KfSk7CgoKCQk=
</data>

          </attachment>
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1006</attachid>
            <date>2011-06-21 11:41:00 +0200</date>
            <delta_ts>2011-06-21 11:41:40 +0200</delta_ts>
            <desc>complete output from the generator with stack trace</desc>
            <filename>stacktrace.txt</filename>
            <type>text/plain</type>
            <size>4404</size>
            <attacher>john.spackman</attacher>
            
              <data encoding="base64">am9obnMtbWFjOnNlcnZlciBqb2huJCAuL2dlbmVyYXRlLnB5IC1zIHF4b28tc291cmNlCiJweXRo
b24iICIvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9w
dWJsaWMvZ3Jhc3Nob3BwZXIvcW9veGRvby0xLjQuMS1zZGsvdG9vbC9iaW4vZ2VuZXJhdG9yLnB5
IiAiLXMiICJxeG9vLXNvdXJjZSIKCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgIElOSVRJQUxJWklO
RzogU0VSVkVSCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KPj4+IENvbmZpZ3VyYXRpb246IGNvbmZpZy5q
c29uCj4+PiBSZXNvbHZpbmcgY29uZmlnIGluY2x1ZGVzLi4uCiAgLSBXYXJuaW5nOiAhIFNoYWRv
d2luZyBqb2IgInNvdXJjZSIgd2l0aCBsb2NhbCBvbmUKICAtIFdhcm5pbmc6ICEgU2hhZG93aW5n
IGpvYiAic291cmNlLWh5YnJpZCIgd2l0aCBsb2NhbCBvbmUKICAtIFdhcm5pbmc6ICEgU2hhZG93
aW5nIGpvYiAibGlicmFyaWVzIiB3aXRoIGxvY2FsIG9uZQogIC0gV2FybmluZzogISBTaGFkb3dp
bmcgam9iICJzb3VyY2UtYWxsIiB3aXRoIGxvY2FsIG9uZQogIC0gV2FybmluZzogISBTaGFkb3dp
bmcgam9iICJidWlsZCIgd2l0aCBsb2NhbCBvbmUKICAtIFdhcm5pbmc6ICEgU2hhZG93aW5nIGpv
YiAic291cmNlLXNjcmlwdCIgd2l0aCBsb2NhbCBvbmUKICAtIFdhcm5pbmc6ICEgU2hhZG93aW5n
IGpvYiAiY29tbW9uIiB3aXRoIGxvY2FsIG9uZQogIC0gV2FybmluZzogISBTaGFkb3dpbmcgam9i
ICJxeG9vIiB3aXRoIGxvY2FsIG9uZQo+Pj4gSm9iczogcXhvby1zb3VyY2UKPj4+IFJlc29sdmlu
ZyBqb2JzLi4uCj4+PiBJbmNvcnBvcmF0aW5nIGpvYiBkZWZhdWx0cy4uLgo+Pj4gUmVzb2x2aW5n
IG1hY3Jvcy4uLgo+Pj4gUmVzb2x2aW5nIGxpYnMvbWFuaWZlc3RzLi4uCgo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09CiAgICBFWEVDVVRJTkc6IFFYT08tU09VUkNFCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KPj4+
IEluaXRpYWxpemluZyBjYWNoZS4uLgo+Pj4gU2Nhbm5pbmcgbGlicmFyaWVzLi4uCj4+PiBXYXJu
aW5nOiBFeGNsdWRlcyBtYXkgYnJlYWsgY29kZSAoW3UncXguZXZlbnQuR2xvYmFsRXJyb3InXSkK
Pj4+IFJlc29sdmluZyBkZXBlbmRlbmNpZXMKICAtICAuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4u
Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uRXJyb3I6IENv
dWxkIG5vdCByZWFkIGNhY2hlIGZyb20gL1VzZXJzL2pvaG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0
L0xvY2FsL3RlbXAvX19ncmFzc2hvcHBlci52MmZvcm1zL2NhY2hlLXFvb3hkb28tMS40LjEtc2Rr
ClRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0KToKICBGaWxlICIvVXNlcnMvam9obi9k
ZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3Nob3BwZXIv
cW9veGRvby0xLjQuMS1zZGsvdG9vbC9iaW4vZ2VuZXJhdG9yLnB5IiwgbGluZSAyMjQsIGluIDxt
b2R1bGU+CiAgICBtYWluKCkKICBGaWxlICIvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21h
cnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3Nob3BwZXIvcW9veGRvby0xLjQuMS1zZGsv
dG9vbC9iaW4vZ2VuZXJhdG9yLnB5IiwgbGluZSAyMTgsIGluIG1haW4KICAgIGdlbmVyYXRvck9i
ai5ydW4oKQogIEZpbGUgIi9Wb2x1bWVzL01JUlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBl
ci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1YmxpYy9xb294ZG9vLTEuNC4xLXNkay90b29sL3B5
bGliL2dlbmVyYXRvci9HZW5lcmF0b3IucHkiLCBsaW5lIDYyNiwgaW4gcnVuCiAgICAKICBGaWxl
ICIvVm9sdW1lcy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwv
V2ViQ29udGVudC9wdWJsaWMvcW9veGRvby0xLjQuMS1zZGsvdG9vbC9weWxpYi9nZW5lcmF0b3Iv
R2VuZXJhdG9yLnB5IiwgbGluZSAxOTgsIGluIGNvbXB1dGVDbGFzc0xpc3QKICAgIGNvbmZpZy5j
bGVhblVwSm9icyhleHBhbmRlZGpvYnMpCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pv
aG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL3Fvb3hkb28t
MS40LjEtc2RrL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxvYWRlci5weSIs
IGxpbmUgMTAxLCBpbiBnZXRDbGFzc0xpc3QKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNlcnMv
am9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvcW9veGRv
by0xLjQuMS1zZGsvdG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9EZXBlbmRlbmN5TG9hZGVyLnB5
IiwgbGluZSA3NSwgaW4gcmVzb2x2ZURlcHNTbWFydENsdWRlcwogIEZpbGUgIi9Wb2x1bWVzL01J
UlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBlci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1
YmxpYy9xb294ZG9vLTEuNC4xLXNkay90b29sL3B5bGliL2dlbmVyYXRvci9jb2RlL0RlcGVuZGVu
Y3lMb2FkZXIucHkiLCBsaW5lIDIxNSwgaW4gY2xhc3NsaXN0RnJvbUluY2x1ZGUKICBGaWxlICIv
Vm9sdW1lcy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2Vi
Q29udGVudC9wdWJsaWMvcW9veGRvby0xLjQuMS1zZGsvdG9vbC9weWxpYi9nZW5lcmF0b3IvY29k
ZS9EZXBlbmRlbmN5TG9hZGVyLnB5IiwgbGluZSAxNjQsIGluIGNsYXNzbGlzdEZyb21DbGFzc1Jl
Y3Vyc2l2ZQogIEZpbGUgIi9Wb2x1bWVzL01JUlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBl
ci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1YmxpYy9xb294ZG9vLTEuNC4xLXNkay90b29sL3B5
bGliL2dlbmVyYXRvci9jb2RlL0RlcGVuZGVuY3lMb2FkZXIucHkiLCBsaW5lIDE2NCwgaW4gY2xh
c3NsaXN0RnJvbUNsYXNzUmVjdXJzaXZlCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pv
aG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL3Fvb3hkb28t
MS40LjEtc2RrL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxvYWRlci5weSIs
IGxpbmUgMTQ2LCBpbiBjbGFzc2xpc3RGcm9tQ2xhc3NSZWN1cnNpdmUKICBGaWxlICIvVm9sdW1l
cy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVu
dC9wdWJsaWMvcW9veGRvby0xLjQuMS1zZGsvdG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9EZXBl
bmRlbmN5TG9hZGVyLnB5IiwgbGluZSAyNTQsIGluIGdldENvbWJpbmVkRGVwcwogIEZpbGUgIi9W
b2x1bWVzL01JUlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBlci9zbWFydC9Mb2NhbC9XZWJD
b250ZW50L3B1YmxpYy9xb294ZG9vLTEuNC4xLXNkay90b29sL3B5bGliL2dlbmVyYXRvci9jb2Rl
L0NsYXNzLnB5IiwgbGluZSA1MTgsIGluIGRlcGVuZGVuY2llcwogIEZpbGUgIi9Wb2x1bWVzL01J
UlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBlci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1
YmxpYy9xb294ZG9vLTEuNC4xLXNkay90b29sL3B5bGliL2dlbmVyYXRvci9jb2RlL0NsYXNzLnB5
IiwgbGluZSAyMTIsIGluIGNsYXNzVmFyaWFudHMKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNl
cnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvcW9v
eGRvby0xLjQuMS1zZGsvdG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9DbGFzcy5weSIsIGxpbmUg
MTYwLCBpbiB0cmVlCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2L0dyYXNz
aG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL3Fvb3hkb28tMS40LjEtc2RrL3Rv
b2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvQ2xhc3MucHkiLCBsaW5lIDE0MywgaW4gX2dldFNvdXJj
ZVRyZWUKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIv
c21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvcW9veGRvby0xLjQuMS1zZGsvdG9vbC9weWxp
Yi9nZW5lcmF0b3IvcnVudGltZS9DYWNoZS5weSIsIGxpbmUgMjk1LCBpbiB3cml0ZQpSdW50aW1l
RXJyb3I6IG1heGltdW0gcmVjdXJzaW9uIGRlcHRoIGV4Y2VlZGVkIGluIGNtcApqb2hucy1tYWM6
c2VydmVyIGpvaG4kIAoK
</data>

          </attachment>
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1007</attachid>
            <date>2011-06-21 13:13:00 +0200</date>
            <delta_ts>2011-06-21 13:13:45 +0200</delta_ts>
            <desc>stack trace when run against svn head</desc>
            <filename>stacktrace.txt</filename>
            <type>text/plain</type>
            <size>5072</size>
            <attacher>john.spackman</attacher>
            
              <data encoding="base64">am9obnMtbWFjOmFmdG9nbyBqb2huJCAuL2dlbmVyYXRlLnB5IHF4b28tc291cmNlCgotLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCiAgICBJbml0aWFsaXppbmc6IGFmdG9nbwotLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
Cj4+PiBQcm9jZXNzaW5nIGNvbmZpZ3VyYXRpb24KCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIEV4
ZWN1dGluZzogcXhvby1zb3VyY2UKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo+Pj4gU2Nhbm5pbmcgbGli
cmFyaWVzLi4uCj4+PiBXYXJuaW5nOiBFeGNsdWRlcyBtYXkgYnJlYWsgY29kZSAoW3UncXguZXZl
bnQuR2xvYmFsRXJyb3InXSkKPj4+IENvbGxlY3RpbmcgY2xhc3NlcyAgLW1heGltdW0gcmVjdXJz
aW9uIGRlcHRoIGV4Y2VlZGVkIHdoaWxlIHBpY2tsaW5nIGFuIG9iamVjdApqb2hucy1tYWM6YWZ0
b2dvIGpvaG4kIC4vZ2VuZXJhdGUucHkgLXMgcXhvby1zb3VyY2UKCi0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KICAgIEluaXRpYWxpemluZzogYWZ0b2dvCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KPj4+IFByb2Nl
c3NpbmcgY29uZmlndXJhdGlvbgoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgRXhlY3V0aW5nOiBx
eG9vLXNvdXJjZQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCj4+PiBTY2FubmluZyBsaWJyYXJpZXMuLi4K
Pj4+IFdhcm5pbmc6IEV4Y2x1ZGVzIG1heSBicmVhayBjb2RlIChbdSdxeC5ldmVudC5HbG9iYWxF
cnJvciddKQo+Pj4gQ29sbGVjdGluZyBjbGFzc2VzICAvCkVycm9yOiBDb3VsZCBub3QgcmVhZCBj
YWNoZSBmcm9tIC9Wb2x1bWVzL01JUlJPUi9Vc2Vycy9qb2huL2Rldi9HcmFzc2hvcHBlci9zbWFy
dC9HcmFzc2hvcHBlcjIvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3Nob3BwZXIvYWZ0b2dvL2NhY2hl
ClRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0KToKICBGaWxlICIvVm9sdW1lcy9NSVJS
T1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJs
aWMvZ3Jhc3Nob3BwZXIvcW9veGRvby1zdm4vdG9vbC9iaW4vZ2VuZXJhdG9yLnB5IiwgbGluZSAy
MjUsIGluIDxtb2R1bGU+CiAgICBtYWluKCkKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNlcnMv
am9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3No
b3BwZXIvcW9veGRvby1zdm4vdG9vbC9iaW4vZ2VuZXJhdG9yLnB5IiwgbGluZSAyMTksIGluIG1h
aW4KICAgIGdlbmVyYXRvck9iai5ydW4oKQogIEZpbGUgIi9Wb2x1bWVzL01JUlJPUi9Vc2Vycy9q
b2huL2Rldi9HcmFzc2hvcHBlci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1YmxpYy9ncmFzc2hv
cHBlci9xb294ZG9vLXN2bi90b29sL3B5bGliL2dlbmVyYXRvci9HZW5lcmF0b3IucHkiLCBsaW5l
IDU4NiwgaW4gcnVuCiAgICBpbmNsdWRlTm9EZXBzLCB2YXJpYW50c2V0LCBzY3JpcHQ9c2NyaXB0
LCB2ZXJpZnlEZXBzPVRydWUpCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2
L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNzaG9wcGVyL3Fv
b3hkb28tc3ZuL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL0dlbmVyYXRvci5weSIsIGxpbmUgMTk3LCBp
biBjb21wdXRlQ2xhc3NMaXN0CiAgICBjbGFzc0xpc3QgPSBzZWxmLl9kZXBMb2FkZXIuZ2V0Q2xh
c3NMaXN0KGluY2x1ZGVXaXRoRGVwcywgZXhjbHVkZVdpdGhEZXBzLCBpbmNsdWRlTm9EZXBzLCBb
XSwgdmFyaWFudHMsIHZlcmlmeURlcHMsIHNjcmlwdCkKICBGaWxlICIvVm9sdW1lcy9NSVJST1Iv
VXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMv
Z3Jhc3Nob3BwZXIvcW9veGRvby1zdm4vdG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9EZXBlbmRl
bmN5TG9hZGVyLnB5IiwgbGluZSAxMDMsIGluIGdldENsYXNzTGlzdAogICAgcmVzdWx0ID0gcmVz
b2x2ZURlcHNTbWFydENsdWRlcygpCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4v
ZGV2L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNzaG9wcGVy
L3Fvb3hkb28tc3ZuL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxvYWRlci5w
eSIsIGxpbmUgNzcsIGluIHJlc29sdmVEZXBzU21hcnRDbHVkZXMKICAgIHJlc3VsdCA9IHNlbGYu
Y2xhc3NsaXN0RnJvbUluY2x1ZGUoaW5jbHVkZVdpdGhEZXBzLCBleGNsdWRlV2l0aERlcHMsIHZh
cmlhbnRzLCB2ZXJpZnlEZXBzLCBzY3JpcHQpCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJz
L2pvaG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNz
aG9wcGVyL3Fvb3hkb28tc3ZuL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxv
YWRlci5weSIsIGxpbmUgMjM3LCBpbiBjbGFzc2xpc3RGcm9tSW5jbHVkZQogICAgY2xhc3NsaXN0
RnJvbUNsYXNzUmVjdXJzaXZlKGRlcHNJdGVtLCBleGNsdWRlV2l0aERlcHMsIHZhcmlhbnRzLCBy
ZXN1bHQsIHdhcm5fZGVwcywgW10sIGFsbG93QmxvY2tMb2FkZGVwcykKICBGaWxlICIvVm9sdW1l
cy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVu
dC9wdWJsaWMvZ3Jhc3Nob3BwZXIvcW9veGRvby1zdm4vdG9vbC9weWxpYi9nZW5lcmF0b3IvY29k
ZS9EZXBlbmRlbmN5TG9hZGVyLnB5IiwgbGluZSAxODAsIGluIGNsYXNzbGlzdEZyb21DbGFzc1Jl
Y3Vyc2l2ZQogICAgY2xhc3NsaXN0RnJvbUNsYXNzUmVjdXJzaXZlKHN1Yml0ZW0sIGV4Y2x1ZGVX
aXRoRGVwcywgdmFyaWFudHMsIHJlc3VsdCwgd2Fybl9kZXBzLCBsb2FkRGVwc0NoYWluLCBhbGxv
d0Jsb2NrTG9hZGRlcHMpCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2L0dy
YXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNzaG9wcGVyL3Fvb3hk
b28tc3ZuL3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxvYWRlci5weSIsIGxp
bmUgMTUxLCBpbiBjbGFzc2xpc3RGcm9tQ2xhc3NSZWN1cnNpdmUKICAgIGRlcHMsIGNhY2hlZCA9
IHNlbGYuZ2V0Q29tYmluZWREZXBzKGRlcHNJdGVtLm5hbWUsIHZhcmlhbnRzLCBidWlsZFR5cGUp
CiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0
L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNzaG9wcGVyL3Fvb3hkb28tc3ZuL3Rvb2wvcHls
aWIvZ2VuZXJhdG9yL2NvZGUvRGVwZW5kZW5jeUxvYWRlci5weSIsIGxpbmUgMzE0LCBpbiBnZXRD
b21iaW5lZERlcHMKICAgIHN0YXRpYywgY2FjaGVkID0gY2xhc3NPYmouZGVwZW5kZW5jaWVzICh2
YXJpYW50cykKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3Nob3Bw
ZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3Nob3BwZXIvcW9veGRvby1zdm4v
dG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9jbGF6ei9NQ2xhc3NEZXBlbmRlbmNpZXMucHkiLCBs
aW5lIDE3OCwgaW4gZGVwZW5kZW5jaWVzCiAgICBjbGFzc1ZhcmlhbnRzICAgID0gc2VsZi5jbGFz
c1ZhcmlhbnRzKCkKICBGaWxlICIvVm9sdW1lcy9NSVJST1IvVXNlcnMvam9obi9kZXYvR3Jhc3No
b3BwZXIvc21hcnQvTG9jYWwvV2ViQ29udGVudC9wdWJsaWMvZ3Jhc3Nob3BwZXIvcW9veGRvby1z
dm4vdG9vbC9weWxpYi9nZW5lcmF0b3IvY29kZS9jbGF6ei9NQ2xhc3NDb2RlLnB5IiwgbGluZSAx
MzUsIGluIGNsYXNzVmFyaWFudHMKICAgIHRyZWUgPSBzZWxmLnRyZWUoe30pICAjIGdldCBjb21w
bGV0ZSB0cmVlCiAgRmlsZSAiL1ZvbHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2L0dyYXNzaG9w
cGVyL3NtYXJ0L0xvY2FsL1dlYkNvbnRlbnQvcHVibGljL2dyYXNzaG9wcGVyL3Fvb3hkb28tc3Zu
L3Rvb2wvcHlsaWIvZ2VuZXJhdG9yL2NvZGUvY2xhenovTUNsYXNzQ29kZS5weSIsIGxpbmUgNTQs
IGluIHRyZWUKICAgIHRyZWUgPSBzZWxmLl9nZXRTb3VyY2VUcmVlKHVub3B0Q2FjaGVJZCwgdHJh
ZGVTcGFjZUZvclNwZWVkKQogIEZpbGUgIi9Wb2x1bWVzL01JUlJPUi9Vc2Vycy9qb2huL2Rldi9H
cmFzc2hvcHBlci9zbWFydC9Mb2NhbC9XZWJDb250ZW50L3B1YmxpYy9ncmFzc2hvcHBlci9xb294
ZG9vLXN2bi90b29sL3B5bGliL2dlbmVyYXRvci9jb2RlL2NsYXp6L01DbGFzc0NvZGUucHkiLCBs
aW5lIDEwOSwgaW4gX2dldFNvdXJjZVRyZWUKICAgIGNhY2hlLndyaXRlKGNhY2hlSWQsIHRyZWUs
IG1lbW9yeT10cmFkZVNwYWNlRm9yU3BlZWQsIHdyaXRlVG9GaWxlPVRydWUpCiAgRmlsZSAiL1Zv
bHVtZXMvTUlSUk9SL1VzZXJzL2pvaG4vZGV2L0dyYXNzaG9wcGVyL3NtYXJ0L0xvY2FsL1dlYkNv
bnRlbnQvcHVibGljL2dyYXNzaG9wcGVyL3Fvb3hkb28tc3ZuL3Rvb2wvcHlsaWIvZ2VuZXJhdG9y
L3J1bnRpbWUvQ2FjaGUucHkiLCBsaW5lIDMxMCwgaW4gd3JpdGUKICAgIHBpY2tsZS5kdW1wKGNv
bnRlbnQsIGZvYmosIDIpClJ1bnRpbWVFcnJvcjogbWF4aW11bSByZWN1cnNpb24gZGVwdGggZXhj
ZWVkZWQgd2hpbGUgcGlja2xpbmcgYW4gb2JqZWN0CmpvaG5zLW1hYzphZnRvZ28gam9obiQgCgo=
</data>

          </attachment>
      

    </bug>