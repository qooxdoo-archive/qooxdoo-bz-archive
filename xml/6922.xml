<bug>
          <bug_id>6922</bug_id>
          
          <creation_ts>2012-10-23 14:29:00 +0200</creation_ts>
          <short_desc>object pooling: wired console outputs</short_desc>
          <delta_ts>2012-10-24 08:28:30 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31030</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-10-23 14:29:07 +0200</bug_when>
            <thetext>We are using object pooling. Which is very useful to decrease the memory usage of browser. Even event objects are pooled and reused by qx. 

But this can highly confuse developers on debugging. E.g. console.log(eventObject) is a common use to debug a event chain in time. The crux is that the browser consoles (Firebug + Chrome, since last update) are not only showing a dump of the object at time of logging. They are able to hold objects in log entries synchronous with the memory. That effects on strange logs, cause of reusing. Even though you expect an &quot;change&quot; event type your console can show you an &quot;mouseover&quot; event.

I can&#39;t remember if this browser behavior was present in the near past. But we should rethink about reusing of objects in debug mode.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31031</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-10-23 15:18:04 +0200</bug_when>
            <thetext>A &quot;best practice&quot; solution could be to use .clone() for qooxdoo objects: e.g. console.log(e.clone())</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31037</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-10-24 08:28:30 +0200</bug_when>
            <thetext>I totally disagree. We should not bring in an even greater difference between build and source version just to keep and ond behavior of console.log. Even if that would be a reasonable way, it would require some work to get that changed which is sure not worth the effort.</thetext>
          </long_desc>
      
      

    </bug>