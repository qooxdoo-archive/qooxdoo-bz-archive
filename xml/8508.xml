<bug>
          <bug_id>8508</bug_id>
          
          <creation_ts>2014-07-29 19:08:00 +0200</creation_ts>
          <short_desc>Check if &quot;querySelectorAll&quot; is an alternative to Sizzle for modern browsers</short_desc>
          <delta_ts>2014-12-15 13:43:12 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Tobias Oberrauch">tobias.oberrauch</assigned_to>
          <cc>tobias.oberrauch</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40884</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-07-29 19:08:36 +0200</bug_when>
            <thetext>Sizzle is heavy-weight compared to our other functionalities within qxWeb. Please check how far one can get with &quot;querySelectorAll&quot; in modern browsers.

A mixed setup with Sizzle support for older browsers and querySelectorAll might be an option. Of course, the qxWeb core has to be aware of this.

As a result the size might decrease for all modern browsers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40887</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-07-30 10:00:13 +0200</bug_when>
            <thetext>Some infos which might help:

- http://www.impressivewebs.com/browser-support-css3-selectors/
- http://css3test.com/#css3-selectors
- http://selectivizr.com/</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40920</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-08-06 14:26:17 +0200</bug_when>
            <thetext>Here are the results of my research:

- IE9 fully support all css3 selectors (tested with VM)
- Sizzle uses internally querySelectorAll after filtering out Sizzle(&#39;#id&#39;), Sizzle(&#39;tag&#39;) and Sizzle(&#39;.class&#39;)
- Sizzle also ships helper methods like isXML, setter and getter for attributes, assertation
- The setDocument methods sets document-related variables once based on the current document. This methods also provides pollyfills for selecting and sorting elements in IE6 and IE7. The best example is querySelector and querySelectorAll.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40922</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-08-06 16:07:12 +0200</bug_when>
            <thetext>There are several pseudo selector that is not supported by querySelector:

- :last | Selects the last matched element.
- :eq | Select the element at index n within the matched set.
- :lt | Select all elements at an index less than index within the matched set.
- :gt | Select all elements at an index greater than index within the matched set.
- :first | Selects the first matched element.

- :even | Selects even elements, zero-indexed. See also odd.
- :odd | Selects odd elements, zero-indexed. See also even.

- :has | Selects elements which contain at least one element that matches the specified selector.

- :checkbox | Selects all elements of type checkbox.
- :button | Selects all button elements and elements of type button.
- :submit | Selects all elements of type submit.
- :password | Selects all elements of type password.
- :text | Selects all elements of type text.
- :input | Selects all input, textarea, select and button elements.
- :file | Selects all elements of type file.
- :reset | Selects all elements of type reset.
- :image | Selects all elements of type image.

- :header | Selects all elements that are headers, like h1, h2, h3 and so on.

- Attribute Not Equal Selector [name!=&quot;value&quot;] | Select elements that either donâ€™t have the specified attribute, 
or do have the specified attribute but not with a certain value.</thetext>
          </long_desc>
      
      

    </bug>