<bug>
          <bug_id>4830</bug_id>
          
          <creation_ts>2011-03-21 13:11:00 +0100</creation_ts>
          <short_desc>TabView new feature request</short_desc>
          <delta_ts>2014-03-03 15:25:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jagget">d.v.a.n.n.i.k</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          <cc>derrell.lipman</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23436</commentid>
            <who name="Jagget">d.v.a.n.n.i.k</who>
            <bug_when>2011-03-21 13:11:14 +0100</bug_when>
            <thetext>As we see, in current time, exist only difficult and not transparent ways to add Page in TabView, but not in last position. For example, check this code:
-------
var tv = new qx.ui.tabview.TabView;
var page = new qx.ui.tabview.Page;
var pos = 1; // position where to add the page
tv.getChildControl(&quot;bar&quot;).getChildControl(&quot;content&quot;)._addAt(page.getButton(),pos); 
-------

May be it feature should be more transparent? May be something like that: 
var tv = new qx.ui.tabview.TabView;
var page = new qx.ui.tabview.Page;
tv.add(page, position);
//position - is optional parameter, by default = last.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23442</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-22 08:07:21 +0100</bug_when>
            <thetext>Sounds reasonable. Thanks for the report.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24088</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-04-18 09:09:52 +0200</bug_when>
            <thetext>Please take care of the already scheduled bugs first.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24615</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-19 11:40:14 +0200</bug_when>
            <thetext>fixed on trunk with rev. 27320</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24679</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-05-23 23:23:18 +0200</bug_when>
            <thetext>The changes in r27320 cause a crash during rendering. I get the following error:

The layout properties &#39;row&#39; and &#39;column&#39; of the child widget &#39;qx.ui.tabview.TabButton[218]&#39; must be defined!

Since this happens during rendering, I can&#39;t provide any more details as to what portion of my code is doing it, but reverting the qx.ui.tabview.TabView portion of the patch applied by r27320 fixes the problem.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24681</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-24 08:18:55 +0200</bug_when>
            <thetext>Gabriel, please check that ASAP!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24684</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-24 09:29:12 +0200</bug_when>
            <thetext>Derrell, is it a public app where you encounter this problem? can I access it and test? i just did a check on demobrowser and apiviewer - both make use of TabView - and couldn&#39;t reproduce the problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24687</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-24 10:02:33 +0200</bug_when>
            <thetext>i have prepared a small example in the playground
http://tinyurl.com/3ddm5ty
maybe you can tweak it to resemble your situation, and i can figure out the bug.
the rev. 27320 was committed thursday, so it is there up on the devel playground.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24690</commentid>
            <who name="Jagget">d.v.a.n.n.i.k</who>
            <bug_when>2011-05-24 10:52:34 +0200</bug_when>
            <thetext>Let me draw your attention to the following example. http://tinyurl.com/3wuyywj

widget.add(new qx.ui.tabview.Page(&quot;Page Q&quot;), 0) put page on last position. Why not first?

And may be in this example http://tinyurl.com/3zkk2k3 app do not throw error, but add page on last position?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24691</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-24 11:15:57 +0200</bug_when>
            <thetext>thanks Jagget, i fixed the first issue you raised.
as for the second one, i think i better throw an error to alert the programmer of the situation, maybe his intention would not be to place the page at the last position. maybe he just miscomputed the position before, and my error helps him find the problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24710</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-05-24 15:14:21 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; Derrell, is it a public app where you encounter this problem? can I access it
&gt; and test? i just did a check on demobrowser and apiviewer - both make use of
&gt; TabView - and couldn&#39;t reproduce the problem.

I&#39;ve located a portion of my code that causes the crash with the recent commit. It appears the problem is one of backward compatibility for extending classes. This subclass has been working well for years, until the recent change to TabView.

Here&#39;s a playground example.

http://tinyurl.com/3pl5vna

Note that it crashes the very first time you run the app. Pressing &quot;Run&quot; again does not generate the error.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24713</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-05-24 15:48:14 +0200</bug_when>
            <thetext>BTW, I don&#39;t have my theme included in the playground example so it looks awful, and the demo doesn&#39;t have any content in the page, making it look even worse, but here, using the 1.4.1 demobrowser, is what should happen (without a crash) when running the program:

http://tinyurl.com/3cl46eq

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24714</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-05-24 15:48:44 +0200</bug_when>
            <thetext>(In reply to comment #11)
&gt; worse, but here, using the 1.4.1 demobrowser, is what should happen (without a

s/demobrowser/playground</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24721</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-25 09:21:58 +0200</bug_when>
            <thetext>Hi Derrell,

here is a solution to your problem:

http://tinyurl.com/3j383pp

the reason it fails, is that row and column properties are computed by you in the radioview, and visible only to add method of the control which you override.
the change i made to the tabview, is that i use now addAt method for the bar [in my case] / control variable in your case.
all you have to do is to override it and you will be fine.

get back to me if this is not satisfactory, and I will check it again.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24727</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-05-25 14:26:02 +0200</bug_when>
            <thetext>
Thanks, Gabriel. I&#39;m not sure whether to consider this change inappropriate for a patch release. The behavior of the widget changes in a non-backward-compatible way (it now requires overriding a method that previously it did not, to avoid a crash), but the extent of the problem it creates will depend on how many people are doing something like I did.

It may be worth considering postponing this change to 1.5 rather than putting it into patch release 1.4.x

Thanks for looking into this.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24805</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-31 14:24:40 +0200</bug_when>
            <thetext>fixed on trunk with rev. 27467.
Tabview has now both &quot;add&quot; and &quot;addAt&quot; methods.
implementing the protected methods from MChildrenHandling was not compatible with the _add, _addAt ... methods of qx.ui.core.Widget, which are used in TabView to add control children.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38750</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:26 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>