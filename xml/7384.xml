<bug>
          <bug_id>7384</bug_id>
          
          <creation_ts>2013-05-03 11:03:00 +0200</creation_ts>
          <short_desc>tool\pylib\ecmascript\frontend\treegenerator_2.py is stricter on list syntax then generator</short_desc>
          <delta_ts>2013-12-16 12:45:22 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>2.0.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>oliverst</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32681</commentid>
            <who name="">oliverst</who>
            <bug_when>2013-05-03 11:03:12 +0200</bug_when>
            <thetext>lint seems to be more strict about the code then the generator itself. I get several errors when running lint on code, that works fine with the generator. It was mainly dangling commas in lists and in one case a list where there was an empty entry ([,&quot;&quot;]).

Traceback (most recent call last):
  File &quot;../../../qooxdoo-2.0.2-sdk\tool\bin\ecmalint.py&quot;, line 430, in &lt;module&gt;
    rc = main()
  File &quot;../../../qooxdoo-2.0.2-sdk\tool\bin\ecmalint.py&quot;, line 406, in main
    lint = Lint(filename)
  File &quot;../../../qooxdoo-2.0.2-sdk\tool\bin\ecmalint.py&quot;, line 52, in __init__
    self.tree = treegenerator.createSyntaxTree(tokenizer.parseStream(content))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 295, in createSyntaxTree
    rootBlock.addChild(readStatement(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 323, in readStatement
    variable = readObjectOperation(stream, variable)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 682, in readObjectOperation
    readParamList(item, stream)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 725, in readParamList
    lastExpr = readExpression(stream)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 308, in readExpression
    return readStatement(stream, True, **kwargs)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 429, in readStatement
    item = readMap(stream)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 786, in readMap
    keyvalue.addListChild(&quot;value&quot;, readExpression(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 308, in readExpression
    return readStatement(stream, True, **kwargs)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 429, in readStatement
    item = readMap(stream)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 786, in readMap
    keyvalue.addListChild(&quot;value&quot;, readExpression(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 308, in readExpression
    return readStatement(stream, True, **kwargs)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 358, in readStatement
    item.addListChild(&quot;body&quot;, readBlock(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 749, in readBlock
    item.addChild(readStatement(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 467, in readStatement
    assign.addChild(readExpression(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 308, in readExpression
    return readStatement(stream, True, **kwargs)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 434, in readStatement
    item = readArray(stream)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 815, in readArray
    item.addChild(readExpression(stream))
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 308, in readExpression
    return readStatement(stream, True, **kwargs)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 535, in readStatement
    raiseSyntaxException(stream.curr(), expectedDesc)
  File &quot;p:\qooxdoo-2.0.2-sdk\tool\pylib\ecmascript\frontend\treegenerator_2.py&quot;, line 272, in raiseSyntaxException
    raise SyntaxException(msg)
ecmascript.frontend.SyntaxException.SyntaxException: Expected expression but found token/RB: &#39;]&#39;. file:, line:104, column:13

The errors also don&#39;t contain a filename, since the parsing is done on a stream, so you need to modify the lint code to have it print the filename to detect these issues.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32687</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-06 15:55:27 +0200</bug_when>
            <thetext>For one thing lint is supposed to be stricter than the normal compiler, that&#39;s the whole purpose of lint :-).

But in this particular case you hit the old parser infrastructure that is still used in 2.0.x for linting and Api data extraction. This was a compatibility solution before all these features were migrated to the new parser. Unsurprisingly, the behavior of the old and the new parser are not identical (as e.g. the new parser tries to avoid the bugs of the old :-). But the old parser modules are no longer used and have since been removed.

If you have no hard requirements to stick with 2.0.x I suggest you move on to 2.1.x.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32688</commentid>
            <who name="">oliverst</who>
            <bug_when>2013-05-06 16:01:11 +0200</bug_when>
            <thetext>Yeah, I get that lint should be stricter, but in this case it looked like the generator overlooked stuff, that might actually issues with some browsers like older version of IE, that are pretty anal about dangling commas.

And I have to stick with 2.0.x until the issue preventing me from migrating (bug 7240) is fixed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32689</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-05-06 16:41:30 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; Yeah, I get that lint should be stricter, but in this case it looked like the 
generator overlooked stuff, that might actually issues with some browsers like 
older version of IE, that are pretty anal about dangling commas.

In fact, dangling commas in lists are a language feature (called &#39;elision&#39;) 
that is well supported even in IE6, with some deviation (e.g. with .length 
properties). Empty entries like [..., &quot;&quot;] are no issue at all so complaining 
about them in lint is actually dubious.

&gt; 
&gt; And I have to stick with 2.0.x until the issue preventing me from migrating 
(bug 7240) is fixed.

I&#39;ll be looking into that soon. But a fix will only be available with 2.1.2 
which puts you into another waiting loop. Maybe you would be willing to apply a 
hot fix to your 2.1.1 SDK?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32690</commentid>
            <who name="">oliverst</who>
            <bug_when>2013-05-06 19:08:19 +0200</bug_when>
            <thetext>(In reply to comment #3)

&gt; I&#39;ll be looking into that soon. But a fix will only be available with 2.1.2 
&gt; which puts you into another waiting loop. Maybe you would be willing to apply a 
&gt; hot fix to your 2.1.1 SDK?!

A hot fix is fine. I would have pulled it from the repository anyways to test it.</thetext>
          </long_desc>
      
      

    </bug>