<bug>
          <bug_id>181</bug_id>
          
          <creation_ts>2006-10-02 12:52:00 +0200</creation_ts>
          <short_desc>IE endless loop on opening qx.ui.window</short_desc>
          <delta_ts>2012-05-16 09:35:53 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>master</version>
          <rep_platform>IE 6</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.6.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dietrich Streifert">dietrich.streifert</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          <cf_browser_version>6</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>515</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2006-10-02 12:52:21 +0200</bug_when>
            <thetext>I&#39;ve created a typical login window with an additional combobox. When trying to open this window IE hangs and consumes more and more memory while cpu usage is at 100%.

This seems to happen when I have a certain combination of a combobox in the documents background AND a combobox in the window AND trying to set the focus to the username field with .setFocused(true).

A testcase which is intended to run from frontend/demo/source/html/test is attached.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>516</commentid>
              <attachid>52</attachid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2006-10-02 12:54:17 +0200</bug_when>
            <thetext>Created attachment 52
Testcase which shows the bug

Please put this in the frontend/demo/source/html/test/ directory and open it in IE (6 or 7). Be aware that this causes IE to hang.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>517</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2006-10-02 13:08:09 +0200</bug_when>
            <thetext>This line is suspected to be the &quot;hang&quot;:

		  this._username.addEventListener(&quot;appear&quot;, function(e) {
		     this.setFocused(true);
		  });

if the setFocused(true) is commented out the loop is avoided.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>522</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-10-05 10:05:36 +0200</bug_when>
            <thetext>Seems to be fixed in the current SVN version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1945</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2007-07-09 11:27:23 +0200</bug_when>
            <thetext>Closed.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>52</attachid>
            <date>2006-10-02 12:54:00 +0200</date>
            <delta_ts>2006-10-02 12:54:17 +0200</delta_ts>
            <desc>Testcase which shows the bug</desc>
            <filename>Window_7.html</filename>
            <type>text/html</type>
            <size>3131</size>
            <attacher>dietrich.streifert</attacher>
            
              <data encoding="base64">PGh0bWw+CjxoZWFkPgogIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0i
dGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgogIDx0aXRsZT5xb294ZG9vICZyYXF1bzsgRGVt
bzwvdGl0bGU+CiAgPGxpbmsgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0i
Li4vLi4vcmVzb3VyY2UvY3NzL2xheW91dC5jc3MiLz4KICA8IS0tW2lmIElFXT4KICA8bGluayB0
eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9yZXNvdXJjZS9jc3Mv
bGF5b3V0X2llLmNzcyIvPgogIDwhW2VuZGlmXS0tPgogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZh
c2NyaXB0IiBzcmM9Ii4uLy4uL3NjcmlwdC9xeC5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+
CiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLi4vLi4vc2NyaXB0L2xheW91
dC5qcyI+PC9zY3JpcHQ+CgogIDxkaXYgaWQ9ImRlbW9EZXNjcmlwdGlvbiI+CiAgICA8cD5Mb2dp
biBkaWFsb2cgaW1wbGVtZW50ZWQgYXMgY2xhc3MuPC9wPgogIDwvZGl2PgoKCiAgPHNjcmlwdCB0
eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGxhbmd1YWdlPSJKYXZhU2NyaXB0Ij4KCgkJcXguT08uZGVm
aW5lQ2xhc3MoIm15LkxvZ2luIiwgcXgudWkud2luZG93LldpbmRvdywgZnVuY3Rpb24oKQoJCXsK
CQkJcXgudWkud2luZG93LldpbmRvdy5jYWxsKHRoaXMsICJMb2dpbiIsICJpY29uLzE2L2dyb3Vw
LWV2ZW50LnBuZyIpOwoJCQoJCSAgdGhpcy5faW5pdGlhbExheW91dCgpOwkKCQl9KTsKCQkKCQlx
eC5Qcm90by5faW5pdGlhbExheW91dCA9IGZ1bmN0aW9uKCkgewoJCSAgdGhpcy5zZXQoe3dpZHRo
OjIyMCxoZWlnaHQ6MjAwfSk7CgkJICB2YXIgZ3JpZCA9IHRoaXMuX2dyaWQgPSBuZXcgcXgudWku
bGF5b3V0LkdyaWRMYXlvdXQ7CgkJCgkJCXRoaXMuX3VzZXJuYW1lX2xhYmVsID0gbmV3IHF4LnVp
LmJhc2ljLkxhYmVsKCd1c2VybmFtZScpOwoJCQl0aGlzLl91c2VybmFtZSA9IG5ldyBxeC51aS5m
b3JtLlRleHRGaWVsZDsKCQkJCgkJCXRoaXMuX3Bhc3N3b3JkX2xhYmVsID0gbmV3IHF4LnVpLmJh
c2ljLkxhYmVsKCdwYXNzd29yZCcpOwoJCQl0aGlzLl9wYXNzd29yZCA9IG5ldyBxeC51aS5mb3Jt
LlBhc3N3b3JkRmllbGQ7CgkJCgkJICB0aGlzLl9va2J1dHRvbiA9IG5ldyBxeC51aS5mb3JtLkJ1
dHRvbignbG9naW4nLCdpY29uLzE2L3Bhc3N3b3JkLnBuZycpOwoJCSAgdGhpcy5fb2tidXR0b24u
c2V0KHtyaWdodDoxMCxib3R0b206MTB9KTsKCQkgIAoJCQl0aGlzLl9hcHBsaWNhdGlvbl9sYWJl
bCA9IG5ldyBxeC51aS5iYXNpYy5MYWJlbCgnYXBwbGljYXRpb24nKTsKCQkJdGhpcy5fYXBwbGlj
YXRpb24gPSBuZXcgcXgudWkuZm9ybS5Db21ib0JveCgpOwoJCQl0aGlzLl9hcHBsaWNhdGlvbi5h
ZGRFdmVudExpc3RlbmVyKCJiZWZvcmVJbml0aWFsT3BlbiIsIGZ1bmN0aW9uKGUpCgkJCXsKCQkJ
ICB2YXIgaXRlbTsKCQkJICBmb3IodmFyIGk9MTsgaTw9MzA7IGkrKykKCQkJICB7CgkJCSAgICBp
dGVtID0gbmV3IHF4LnVpLmZvcm0uTGlzdEl0ZW0oImFwcGxpY2F0aW9uICMiICsgaSk7CgkJCSAg
ICB0aGlzLl9hcHBsaWNhdGlvbi5hZGQoaXRlbSk7CgkJCSAgfQoJCQl9KTsKCQkJCQkKCQkgIHdp
dGgoZ3JpZCkgewoJCQkgIHNldCh7IGxlZnQ6MCwgd2lkdGg6MjAwLCBoZWlnaHQ6MTAwIH0pOwoJ
CSAgICBzZXRDb2x1bW5Db3VudCgyKTsKCQkgICAgc2V0Um93Q291bnQoMyk7CgkJCSAgc2V0Q29s
dW1uV2lkdGgoMCwgODApOwoJCSAgICBzZXRDb2x1bW5XaWR0aCgxLCAxMDApOwoJCSAgICBzZXRI
b3Jpem9udGFsU3BhY2luZyg0KTsKCQkgICAgc2V0Um93SGVpZ2h0KDAsIDMwKTsKCQkgICAgc2V0
Um93SGVpZ2h0KDEsIDMwKTsKCQkgICAgc2V0Um93SGVpZ2h0KDIsIDMwKTsKCQkgICAgc2V0VmVy
dGljYWxTcGFjaW5nKDgpOwoJCSAgICBzZXRQYWRkaW5nKDgpOwoJCQoJCSAgICBzZXRDb2x1bW5I
b3Jpem9udGFsQWxpZ25tZW50KDAsICJyaWdodCIpOwoJCSAgICBzZXRDb2x1bW5WZXJ0aWNhbEFs
aWdubWVudCgwLCAibWlkZGxlIik7CgkJICAgIHNldENvbHVtblZlcnRpY2FsQWxpZ25tZW50KDEs
ICJtaWRkbGUiKTsKCQkgIAoJCQkgIGFkZCh0aGlzLl91c2VybmFtZV9sYWJlbCwwLDApOwoJCQkg
IGFkZCh0aGlzLl91c2VybmFtZSwxLDApOwoJCQoJCQkgIGFkZCh0aGlzLl9wYXNzd29yZCwxLDEp
OwoJCQkgIGFkZCh0aGlzLl9wYXNzd29yZF9sYWJlbCwwLDEpOwoKCQkJICBhZGQodGhpcy5fYXBw
bGljYXRpb24sMSwyKTsKCQkJICBhZGQodGhpcy5fYXBwbGljYXRpb25fbGFiZWwsMCwyKTsKCQkg
IH0KCQkJCgkJCXRoaXMuYWRkKGdyaWQpOwoJCQl0aGlzLmFkZCh0aGlzLl9va2J1dHRvbik7CgkJ
CQoJCQl0aGlzLnNldENlbnRlcmVkKHRydWUpOwoJCQkKCQkgIHRoaXMuX3VzZXJuYW1lLmFkZEV2
ZW50TGlzdGVuZXIoImFwcGVhciIsIGZ1bmN0aW9uKGUpIHsKCQkgICAgIHRoaXMuc2V0Rm9jdXNl
ZCh0cnVlKTsKCQkgIH0pOwoJCX07CgoKCQlxeC5jb3JlLkluaXQuZ2V0SW5zdGFuY2UoKS5kZWZp
bmVNYWluKGZ1bmN0aW9uKCkgewoJCQoJCXZhciBkID0gcXgudWkuY29yZS5DbGllbnREb2N1bWVu
dC5nZXRJbnN0YW5jZSgpOwoJCQoJCXZhciBjYjEgPSBuZXcgcXgudWkuZm9ybS5Db21ib0JveDsK
CQl3aXRoKGNiMSkKCQl7CgkJICBzZXRUb3AoNDM2KTsKCQkgIHNldExlZnQoMjApOwoJCSAgc2V0
RWRpdGFibGUodHJ1ZSk7CgkJfTsKCQkKCQlkLmFkZChjYjEpOwoJCQoJCWNiMS5hZGRFdmVudExp
c3RlbmVyKCJiZWZvcmVJbml0aWFsT3BlbiIsIGZ1bmN0aW9uKGUpCgkJewoJCSAgdmFyIGl0ZW07
CgkJCgkJICBmb3IodmFyIGk9MTsgaTw9MzA7IGkrKykKCQkgIHsKCQkgICAgaXRlbSA9IG5ldyBx
eC51aS5mb3JtLkxpc3RJdGVtKCJJdGVtIE5vICIgKyBpKTsKCQkgICAgIShpICUgMTApICYmIChp
dGVtLnNldEVuYWJsZWQoZmFsc2UpKTsKCQkgICAgdGhpcy5hZGQoaXRlbSk7CgkJICB9OwoJCX0p
OwoKICAgIHZhciBsb2dpbiA9IG5ldyBteS5Mb2dpbigpOwogICAgZC5hZGQobG9naW4pOwogICAg
bG9naW4ub3BlbigpOwoKCiAgIH0pOwoKICA8L3NjcmlwdD4KCjwvYm9keT4KPC9odG1sPgo=
</data>

          </attachment>
      

    </bug>