<bug>
          <bug_id>6132</bug_id>
          
          <creation_ts>2012-02-10 14:01:00 +0100</creation_ts>
          <short_desc>Add a throwError method to the GlobalError event</short_desc>
          <delta_ts>2014-03-03 08:46:45 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Mustafa Sak">mustafa.sak</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28501</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-02-10 14:01:36 +0100</bug_when>
            <thetext>Following scenario:

When someone would like to implement a custom error classes to react on certain errors in the global error handling, he will not have access to the original error instance. The problem is that the global error handler, when the error is not fired in an method with &quot;qx.event.GlobalError.observeMethod&quot;, will handle the error in the window.onError handler. This handler will call the the custom error handler and will pass an instance of qx.core.WindowError. Unfortunately the WindowError has no access to the original exception, as you can not get the real exc object in the window.onError function.

That is why we should add a &quot;throwError&quot; method to the GlobalError event class, e.g.:

    throwError : qx.event.GlobalError.observeMethod(function (error)
    {
         throw error;
    });

By observing the method we can have access to the real exception by the GlobalError.getSourceException function.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31501</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-11-28 16:13:44 +0100</bug_when>
            <thetext>Martin, do you agree with that? If you do, I will implement it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31529</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-29 10:20:53 +0100</bug_when>
            <thetext>Is it urgent to have that fixed?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35652</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:45 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>