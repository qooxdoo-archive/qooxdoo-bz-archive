<bug>
          <bug_id>2078</bug_id>
          
          <creation_ts>2009-03-09 15:31:00 +0100</creation_ts>
          <short_desc>Allow custom serialization of objects</short_desc>
          <delta_ts>2014-03-03 15:25:31 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Matthew">matthew+qooxdoo</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8435</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-03-09 15:31:28 +0100</bug_when>
            <thetext>I need a way to override the serialization of certain objects (currently only Date but this is a generic request). The upcoming JSON object in IE8 allows you to define a function OBJECTTYPE.prototype.toJSON. I think we should include something similar in qx.util.Json 

Something similar is covered in http://bugzilla.qooxdoo.org/show_bug.cgi?id=1400 but this bug does not depend on it

Personal Plea: Would really appreciate a quick turn around for this as I am part of a team that develops against the trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8436</commentid>
              <attachid>461</attachid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-03-09 15:32:13 +0100</bug_when>
            <thetext>Created attachment 461
Proposed Patch

.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8459</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-10 09:43:15 +0100</bug_when>
            <thetext>I would just look out for toJSON instead of $$serialize, but other than that this seems to be OK.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8466</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-03-10 11:04:28 +0100</bug_when>
            <thetext>(In reply to comment #2)
&gt; I would just look out for toJSON instead of $$serialize, but other than that
&gt; this seems to be OK.
&gt; 

Sorry I uploaded my old patch. I used $$serialize to begin with but changed it to toJSON after reading bug 1400.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8520</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-11 12:55:16 +0100</bug_when>
            <thetext>I&#39;ve named the serialize function &quot;toJSON&quot; like in the EcmaScript 3.1 spec. In addition I pass in a &quot;key&quot; argument to be more complient with the native implementations.

We really should try to be compatible with the native JSON parser/serializer.

fixed in rev. 18392</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12172</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-10 14:00:53 +0200</bug_when>
            <thetext>reopen to correct</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12173</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-10 14:01:15 +0200</bug_when>
            <thetext>assign</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12174</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-10 14:01:34 +0200</bug_when>
            <thetext>resolve fixed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38777</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:31 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>461</attachid>
            <date>2009-03-09 15:32:00 +0100</date>
            <delta_ts>2009-03-09 15:32:13 +0100</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>json.patch</filename>
            <type>text/plain</type>
            <size>805</size>
            <attacher>matthew+qooxdoo</attacher>
            
              <data encoding="base64">SW5kZXg6IGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvdXRpbC9Kc29uLmpzDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQotLS0gZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC91dGlsL0pzb24uanMJKHJldmlzaW9uIDE3
OTg1KQ0KKysrIGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvdXRpbC9Kc29uLmpzCSh3b3JraW5n
IGNvcHkpDQpAQCAtMzUxLDcgKzM1MSw5IEBADQogICAgICAgewogICAgICAgICAvLyBmb3Igb2Jq
ZWN0cyBkZWZpbmVkIGluIG90aGVyIGZyYW1lcyB0aGUgaW5zdGFuY2VvZiBjaGVjayBmYWlsZXMu
CiAgICAgICAgIHZhciBjb25zdHJ1Y3Rvck5hbWUgPSBpbmNvbWluZy5jb25zdHJ1Y3Rvci5uYW1l
OwotICAgICAgICBpZiAoaW5jb21pbmcgaW5zdGFuY2VvZiBBcnJheSB8fCBjb25zdHJ1Y3Rvck5h
bWUgPT0gIkFycmF5IikgeworICAgICAgICBpZiAoaW5jb21pbmcuJCRzZXJpYWxpemUpIHsKKyAg
ICAgICAgICByZXR1cm4gaW5jb21pbmcuJCRzZXJpYWxpemUoKTsKKyAgICAgICAgfSBlbHNlIGlm
IChpbmNvbWluZyBpbnN0YW5jZW9mIEFycmF5IHx8IGNvbnN0cnVjdG9yTmFtZSA9PSAiQXJyYXki
KSB7CiAgICAgICAgICAgcmV0dXJuIHRoaXMuX19jb252ZXJ0QXJyYXkoaW5jb21pbmcpOwogICAg
ICAgICB9IGVsc2UgaWYgKGluY29taW5nIGluc3RhbmNlb2YgRGF0ZSB8fCBjb25zdHJ1Y3Rvck5h
bWUgPT0gIkRhdGUiKSB7CiAgICAgICAgICAgcmV0dXJuIHRoaXMuX19jb252ZXJ0RGF0ZShpbmNv
bWluZyk7Cg==
</data>

          </attachment>
      

    </bug>