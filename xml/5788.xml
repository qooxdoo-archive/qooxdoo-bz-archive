<bug>
          <bug_id>5788</bug_id>
          
          <creation_ts>2011-11-09 15:18:00 +0100</creation_ts>
          <short_desc>Create a portable Testrunner</short_desc>
          <delta_ts>2014-03-03 15:18:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.testrunner</component>
          <version>1.5.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27473</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-11-09 15:18:37 +0100</bug_when>
            <thetext>It would be useful to have a Testrunner that does not require the Generator to run, e.g. for scenarios where pre-built qooxdoo libraries are used instead of an application skeleton. Ideally, this would consist of a single .js file to be included in an HTML page (or, alternatively, loaded in a node.js or Rhino application). Users would then define tests by calling a global function:

  testrunner.define({
    testFoo : function() {
      this.assert(true);
    }
  });

where testrunner.define is defined in the testrunner&#39;s loader so that it&#39;s available before the actual Testrunner application has finished loading. It simply pushes the test definition map into a global Array. Once it&#39;s ready, the Testrunner then creates test classes by calling qx.Class.define, using the definition map as the members section.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27477</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-11-10 07:34:23 +0100</bug_when>
            <thetext>+1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27596</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-11-23 17:45:34 +0100</bug_when>
            <thetext>The portable Test Runner build is now included in the Makefile for the weekly demos. Also added a section to the Test Runner page in the manual (464e050ad0996226cb32e11c9f7e834dce0f5f90 on master).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28682</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-02-29 16:52:07 +0100</bug_when>
            <thetext>&#39;make distclean&#39; (and as a consequence &#39;make release&#39;) was not running with 
testrunner-portable; also, the link from the demo index.html was broken. 
Re-worked most of the testrunner-portable integration in Makefile.release, 
removing &#39;testrunner-portable&#39; as a separate application/component, and adding 
specific actions for it, to test, create and upload the artifact. File location 
in the published demos is now testrunner/script/testrunner-portable.js.

master: a49bf00</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36250</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:18:52 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>