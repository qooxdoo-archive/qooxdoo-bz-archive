<bug>
          <bug_id>7228</bug_id>
          
          <creation_ts>2013-02-12 16:08:00 +0100</creation_ts>
          <short_desc>qx.ui.mobile.form.SelectBox.setSelection method do not produces &quot;changeSelection&quot; event</short_desc>
          <delta_ts>2014-03-03 15:21:33 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>2.1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Voronin">alexander.voronin</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32219</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-12 16:08:42 +0100</bug_when>
            <thetext>It looks like setting selection mannualy using qx.ui.mobile.form.SelectBox.setSelection method did not lead to changeSelection event.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32231</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-13 14:54:37 +0100</bug_when>
            <thetext>Master:
13be00a9c8fbc4af20431837643e79436b748af1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32235</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-13 16:09:28 +0100</bug_when>
            <thetext>I&#39;ve just checked new behaviour. Event is fired, getValue() and getSelection() of SelectBox element returned correct value, but when I click this element and open selection dialog I see previously set value. Check new screenshot and this situation. Thanx.

(In reply to comment #1)
&gt; Master:
&gt; 13be00a9c8fbc4af20431837643e79436b748af1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32236</commentid>
              <attachid>1236</attachid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-13 16:10:41 +0100</bug_when>
            <thetext>Created attachment 1236
Selection dialog value does not match form value.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32237</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-13 16:27:00 +0100</bug_when>
            <thetext>Branch_2_1_x:

0a2ba7b14169dad27df004ad5809ca0930b1e4aa</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32239</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-13 17:15:38 +0100</bug_when>
            <thetext>Please check the latest commit:

67cbd8ad7880248903463bfbf58544ae53d66344

It will fix that problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32244</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-13 23:08:50 +0100</bug_when>
            <thetext>
Here is another problem after update. Calling method setModel now fires changeSelection event. Is it by design?

(In reply to comment #5)
&gt; Please check the latest commit:
&gt; 
&gt; 67cbd8ad7880248903463bfbf58544ae53d66344
&gt; 
&gt; It will fix that problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32252</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-14 14:29:22 +0100</bug_when>
            <thetext>Could you please confirm this behaviour? It&#39;s critical to continue my work. Thanx.

(In reply to comment #6)
&gt; Here is another problem after update. Calling method setModel now fires
&gt; changeSelection event. Is it by design?
&gt; 
&gt; (In reply to comment #5)
&gt; &gt; Please check the latest commit:
&gt; &gt; 
&gt; &gt; 67cbd8ad7880248903463bfbf58544ae53d66344
&gt; &gt; 
&gt; &gt; It will fix that problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32254</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-14 15:03:05 +0100</bug_when>
            <thetext>I will check if this behaviour occurs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32255</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-14 15:12:57 +0100</bug_when>
            <thetext>Since SelectBox still not working in playground please use this test page code - http://pastebin.com/vR0L7hq2 

After FIRST initialization and setting model data SelectBox fires unexpected event.

(In reply to comment #8)
&gt; I will check if this behaviour occurs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32256</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-14 18:20:08 +0100</bug_when>
            <thetext>Fix of the setModel problem on Master:

&quot;9bce09524a92c739bc6d5c19e4ccb98025b0abab&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32259</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-15 14:04:55 +0100</bug_when>
            <thetext>Well, for now i MUST call setSelection(0) for each new SelectBox I guess? There is no default selection anymore and getSelection returns null.

(In reply to comment #10)
&gt; Fix of the setModel problem on Master:
&gt; 
&gt; &quot;9bce09524a92c739bc6d5c19e4ccb98025b0abab&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32260</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-15 14:18:54 +0100</bug_when>
            <thetext>Yes. If you change the value to &quot;setNullable(false)&quot;, you also have to set a new selection manually through setSelection().

The old implementation changed the value automatically to &quot;0&quot; if nullable == false. But this behaviour might be not wanted by the developers, so you have to set the new selected value by your own.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32261</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-15 14:22:39 +0100</bug_when>
            <thetext>It&#39;s quiet unexpected logic - setNullable(false) object returns null on getSelection(). Is that a rwally big problem internally set selected index to 0 and did not fire and selectionChanged event like in all &quot;normal&quot; selectbox implementations?

(In reply to comment #12)
&gt; Yes. If you change the value to &quot;setNullable(false)&quot;, you also have to set a
&gt; new selection manually through setSelection().
&gt; 
&gt; The old implementation changed the value automatically to &quot;0&quot; if nullable ==
&gt; false. But this behaviour might be not wanted by the developers, so you have to
&gt; set the new selected value by your own.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32262</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-02-15 15:08:26 +0100</bug_when>
            <thetext>It is not a problem to set the default selection to index 0. But it is not that clear, that adjusting of nullable property also triggers a selection change. (When you did not know the previous behaviour)
Another solution could be: let the user set a default value, which is chosen when nullable value changes. But this would also need a separate method call. Instead of this property, &quot;setSelection&quot; does the same.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32263</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-15 15:26:52 +0100</bug_when>
            <thetext>So we now have SelectBox object that have no default selection index and value before user call setSelection, then (pay attention on this, please!) handle selectionChange event (and each time make a descision - is that model changed or user selected new value?), and just then have some value on screen...? Ok. Then any form with few SelectBoxes with dependent value lists becomes hell!

It&#39;s obvious that default selection index value is 0 but not null for not nullable SelectBox. This is common and standard behaviour for any selectbox implementation I know - MFC, QT, WinForms, WPF, ASP and even HTML. Why not make the same?

(In reply to comment #14)
&gt; It is not a problem to set the default selection to index 0. But it is not that
&gt; clear, that adjusting of nullable property also triggers a selection change.
&gt; (When you did not know the previous behaviour)
&gt; Another solution could be: let the user set a default value, which is chosen
&gt; when nullable value changes. But this would also need a separate method call.
&gt; Instead of this property, &quot;setSelection&quot; does the same.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32303</commentid>
            <who name="Alexander Voronin">alexander.voronin</who>
            <bug_when>2013-02-20 13:08:11 +0100</bug_when>
            <thetext>Hello? Do you really going to leave all this insane behavior as it is?

(In reply to comment #15)
&gt; So we now have SelectBox object that have no default selection index and value
&gt; before user call setSelection, then (pay attention on this, please!) handle
&gt; selectionChange event (and each time make a descision - is that model changed
&gt; or user selected new value?), and just then have some value on screen...? Ok.
&gt; Then any form with few SelectBoxes with dependent value lists becomes hell!
&gt; 
&gt; It&#39;s obvious that default selection index value is 0 but not null for not
&gt; nullable SelectBox. This is common and standard behaviour for any selectbox
&gt; implementation I know - MFC, QT, WinForms, WPF, ASP and even HTML. Why not make
&gt; the same?
&gt; 
&gt; (In reply to comment #14)
&gt; &gt; It is not a problem to set the default selection to index 0. But it is not that
&gt; &gt; clear, that adjusting of nullable property also triggers a selection change.
&gt; &gt; (When you did not know the previous behaviour)
&gt; &gt; Another solution could be: let the user set a default value, which is chosen
&gt; &gt; when nullable value changes. But this would also need a separate method call.
&gt; &gt; Instead of this property, &quot;setSelection&quot; does the same.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37333</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:33 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1236</attachid>
            <date>2013-02-13 16:10:00 +0100</date>
            <delta_ts>2013-02-13 16:10:41 +0100</delta_ts>
            <desc>Selection dialog value does not match form value.</desc>
            <filename>sbevent.png</filename>
            <type>image/png</type>
            <size>14945</size>
            <attacher>alexander.voronin</attacher>
            
              <data encoding="base64">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
AAAASUVORK5CYII=
</data>

          </attachment>
      

    </bug>