<bug>
          <bug_id>5831</bug_id>
          
          <creation_ts>2011-11-25 16:40:00 +0100</creation_ts>
          <short_desc>qx.bom.request.Xhr: Timeout is not canceled after exception in handler</short_desc>
          <delta_ts>2011-12-02 10:14:35 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27627</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-11-25 16:40:31 +0100</bug_when>
            <thetext>When the ready state is set to &quot;DONE&quot; the timeout that handles the xhr timeout is canceled. When an exception occurs in the called hander method, the timeout will never be cleared and an subsequent, hard to debug, error will occur when the timeout handler function is called.

We should clear the timeout before we call the done handler. At least an ugly subsequent error can be reduced by this.

Other things I have noticed:

* we have a lot of timeouts in the xhr class. We should at least add  &quot;if (this.__disposed) return;&quot; checks to them or better, cancel them in the dispose method.

* in methods that only can be called by the user, we have  &quot;if (this.__disposed) return;&quot; checks. As this methods are only called by the user, we should fail silently (this might lead to hard debuggable code). Instead we should throw an error (as it is one).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27647</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-28 11:25:09 +0100</bug_when>
            <thetext>c61c922 (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27649</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-28 11:43:41 +0100</bug_when>
            <thetext>(In reply to comment #0)
&gt; When the ready state is set to &quot;DONE&quot; the timeout that handles the xhr timeout
&gt; is canceled. When an exception occurs in the called hander method, the timeout
&gt; will never be cleared and an subsequent, hard to debug, error will occur when
&gt; the timeout handler function is called.
&gt; 
&gt; We should clear the timeout before we call the done handler. At least an ugly
&gt; subsequent error can be reduced by this.

Also applied fix (for this part of the report) to branch.

c53c666 (branch_1_5_x)</thetext>
          </long_desc>
      
      

    </bug>