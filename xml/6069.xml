<bug>
          <bug_id>6069</bug_id>
          
          <creation_ts>2012-01-23 16:04:00 +0100</creation_ts>
          <short_desc>Reminder: Exceptions don&#39;t have stack traces in PhantomJS</short_desc>
          <delta_ts>2014-03-03 15:19:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.testing</component>
          <version>1.6</version>
          <rep_platform>WebKit</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <keywords>Reminder</keywords>
          <priority>P5</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>2.0.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>sandro</cc>
    
    <cc>tristan.koch</cc>
    
    <cc>vladimir.dobriakov</cc>
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>WebKit</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28344</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-01-23 16:04:24 +0100</bug_when>
            <thetext>Newer versions of PhantomJS (or the QtWebKit engine it uses) don&#39;t attach stack trace information to exceptions:

http://code.google.com/p/phantomjs/issues/detail?id=335

In qooxdoo, this can be verified by querying the &quot;ecmascript.stacktrace&quot; environment setting: The value will be null instead of &quot;stack&quot;, which would be expected for WebKit.

For our unit testing system, we can work around this issue by using qx.dev.StackTrace.getStackTraceFromCaller as a fallback in qx.type.BaseError&#39;s constructor (qx.core.AssertionError already does that). This at least gives us the function names but no line numbers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28345</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-01-23 16:58:43 +0100</bug_when>
            <thetext>Applied workaround with 7513a096 on master. Leaving this issue open as a reminder: Once the PhantomJS bug is fixed, the workaround can be removed completely.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28409</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-01 10:29:56 +0100</bug_when>
            <thetext>With commit 1bc799cd, the messages for failed tests include the type of exception that was thrown.

qx.core.AssertionError: Well, what did you expect?: Called assertTrue with &#39;false&#39;
qx.core.AssertionError.constructor()
qx.core.AssertionError.constructor()
qx.core.Assert.__fail()
qx.core.Assert.assertTrue()
[...]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28423</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-03 13:51:46 +0100</bug_when>
            <thetext>The Console view now shows the same stack trace format for failed results as the HTML view (c94b3437 on master).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30390</commentid>
            <who name="Sandro">sandro</who>
            <bug_when>2012-08-16 00:54:33 +0200</bug_when>
            <thetext>Seems to be fixed on June 18th in http://code.google.com/p/phantomjs/issues/detail?id=166 Bug-335 is marked as duplicate.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31255</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-11-07 11:51:56 +0100</bug_when>
            <thetext>Confirmed, removed the workaround. I also had to modify our stacktrace feature detection since exceptions in PhantomJS only have traces if they&#39;ve been thrown.

Fixed with
1426a1ce38fca6e2d5206b57484f3c430740173c (master)
1bdcb03f699cb5c76d69ffe4f77ee2efc39ca89b (branch_2_0_x)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36486</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:26 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>