<bug>
          <bug_id>1443</bug_id>
          
          <creation_ts>2008-10-02 08:47:00 +0200</creation_ts>
          <short_desc>Optimize filesize of PNGs and remove color profiles</short_desc>
          <delta_ts>2014-03-03 15:26:05 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.theming</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>christian.schuff</cc>
    
    <cc>helder.magalhaes</cc>
    
    <cc>tinobutz</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>5686</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-02 08:47:00 +0200</bug_when>
            <thetext>As Tino pointed out on the mailing list, there are some tools to optimize PNGs lossless. Check if this is advantageous for the built-in theme images. From Tino&#39;s post:

After I have found this cool online tool &quot;http://www.smushit.com/&quot; on Ajxaxian to minimize images lossless, I searched for an command line tool to optimize our png files in the build process of our qooxdoo application and found:

http://optipng.sourceforge.net/

We added it to our build process and it saved us &gt; 100 kB only for the combined images.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10648</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-06-29 16:06:16 +0200</bug_when>
            <thetext>Alex, this could indeed save some bytes when optimizing all theme images.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11382</commentid>
            <who name="Helder MagalhÃ£es">helder.magalhaes</who>
            <bug_when>2009-08-18 16:03:44 +0200</bug_when>
            <thetext>As Christian has stated in the mailing list [1], punypng could/should also be considered for this purpose. :-)

I&#39;d only add, in the scope of bug 2540, that tweaking optimizer options to always generate (PNG-8) indexed images could even hold more potential than simple space shrinking. ;-)

[1] http://www.nabble.com/Image-optimizing-via-punypng-td25020772.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14716</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:25:46 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15431</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-12-09 10:56:21 +0100</bug_when>
            <thetext>A larger problem is that some image tools like GIMP save PNG and JPEG images with color profiles, which can result in broken colors in Firefox 3.x and Safari. This is because those browsers support color correction. We should make sure that no release of qooxdoo has any png images with embedded color profiles.

&lt;http://stackoverflow.com/questions/1108476/firefox-3-5-color-correction-hack&gt;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15432</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-12-09 10:56:47 +0100</bug_when>
            <thetext>We could do this e.g. in the &quot;./generate fix&quot; task.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15626</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-12-09 18:13:03 +0100</bug_when>
            <thetext>accepting</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15651</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-12-10 12:47:59 +0100</bug_when>
            <thetext>Daniel can you optimize/correct all PNG images of the framework manually. Later on this can be added to the toolchain.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15851</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-14 15:01:32 +0100</bug_when>
            <thetext>Only one framework image had color profile information, I used pngcrush to remove it. We decided to postpone filesize optimization until after the 1.0 release.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16442</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:30:15 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17879</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-04-20 14:57:54 +0200</bug_when>
            <thetext>I used a script that runs both optipng and pngcrush on each file and keeps the smaller file on the framework images. Looking at some files revealed that the optimized versions look far more blurry when scaled up significantly (&gt; 200%). Since we use scaled images in some of the decorators, we decided to only optimize the &quot;icon&quot; subfolder for now.

Moving this to 1.2 for the toolchain integration.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19492</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-07-28 19:09:48 +0200</bug_when>
            <thetext>Moved to 1.3 due to lack of time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19936</commentid>
            <who name="Christian Schuff">christian.schuff</who>
            <bug_when>2010-08-20 13:31:12 +0200</bug_when>
            <thetext>Hi guys.

Running 
find . -name *.png | xargs optipng -o7
on a fresh download of qooxdoo-sdk-1.2.0 reduced its size
from 62,768,552 bytes
to   62,078,979 bytes

--&gt;     689,573 bytes

Thats worth just executing it once and adding it to the toolchain anytime later. It might not tremendously reduce download time of the framework itself but in the realm of web applications the 700kB saving could make a difference for the single application.

Regards</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21239</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-11-11 14:59:55 +0100</bug_when>
            <thetext>After some discussion, we decided to drop the toolchain integration since we don&#39;t want to include any more additional third-party tools such as optipng and/or pngcrush in the framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38983</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:05 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>