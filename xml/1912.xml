<bug>
          <bug_id>1912</bug_id>
          
          <creation_ts>2009-02-06 14:30:00 +0100</creation_ts>
          <short_desc>Examine global JavaScript evaluation</short_desc>
          <delta_ts>2014-03-03 08:48:10 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7639</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-06 14:30:26 +0100</bug_when>
            <thetext>Some browsers seem to misbehave when evaluating JavaScript in global context. Sebastian provided a solution that should be examined as a replacement or rather an alternative to the existing solution (API change involved due to a changed return value). It might be worth keeping the specific solutions for browsers not affected.

    /**
     * Evaluates JavaScript code globally
     *
     * Inspired by code by Andrea Giammarchi
     * http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html
     *
     * @param data {String} JavaScript commands
     * @return {void}
     */
    globalEval : function(data)
    {
      var head = document.getElementsByTagName(&quot;head&quot;)[0] || document.documentElement;
      var script = document.createElement(&quot;script&quot;);

      script.type = &quot;text/javascript&quot;;
      if (qx.core.Variant.isSet(&quot;qx.client&quot;, &quot;mshtml&quot;)) {
        script.text = data;	
      } else {
        script.appendChild(document.createTextNode(data));  
      }	

      // Use insertBefore instead of appendChild to circumvent an IE6 bug.
      // This arises when a base node is used (see jQuery Bug #2709).
      head.insertBefore(script, head.firstChild);
      head.removeChild(script);
    },</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8040</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-25 11:42:41 +0100</bug_when>
            <thetext>to me for review (upcoming release)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8295</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-05 11:28:05 +0100</bug_when>
            <thetext>Certainly a good idea to take this into account, possibly as an additional solution for script evaluation. The validity of the current implementation also needs to be reviewed (i.e. the actual &quot;return&quot; of the evaluation, unlike the proposed solution). This needs more elaboration, doesn&#39;t fit into the 0.8.2 release scope.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11985</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 09:58:36 +0200</bug_when>
            <thetext>moved to 0.9 and unassigned for being reviewed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12509</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-22 11:02:20 +0200</bug_when>
            <thetext>to Daniel for evaluation</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14738</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:25:59 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17267</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-03-16 10:02:46 +0100</bug_when>
            <thetext>To Fabian.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17298</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-17 13:21:26 +0100</bug_when>
            <thetext>Back to the pool.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36161</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:48:10 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>