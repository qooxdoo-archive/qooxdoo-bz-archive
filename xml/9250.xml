<bug>
          <bug_id>9250</bug_id>
          
          <creation_ts>2016-01-29 19:37:00 +0100</creation_ts>
          <short_desc>FormValidator is not reset by the FormController when the model changes.</short_desc>
          <delta_ts>2016-01-29 19:37:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>5.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>UNCONFIRMED</bug_status>
          
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          
          <reporter name="Hugues Lefebvre">samael</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43687</commentid>
            <who name="Hugues Lefebvre">samael</who>
            <bug_when>2016-01-29 19:37:21 +0100</bug_when>
            <thetext>When using qx.data.controller.Form to bind a model to a Form which use some validation, if the model assigned to the controller changes, the Validator of the Form is not reset thus fields are still marked as invalid.

To reproduce: select the &quot;wrong&quot; entry, press validate and then choose the &quot;right&quot; entry =&gt; form is still in error

http://demo.qooxdoo.org/current/playground/#%7B%22code%22%3A%22%250Avar%2520model%2520%253D%2520qx.data.marshal.Json.createModel%28%255B%250A%2520%2520%257B%2520text%253A%2520%2522good%2522%2520%2520%257D%252C%250A%2520%2520%257B%2520text%253A%2520%2522wrong%2522%2520%257D%250A%255D%29%253B%250A%250Avar%2520sbox%2520%253D%2520new%2520qx.ui.form.VirtualSelectBox%28model%29%253B%250Asbox.setLabelPath%28%2522text%2522%29%253B%250A%250Avar%2520form%2520%253D%2520new%2520qx.ui.form.Form%28%29%253B%250Avar%2520field%2520%253D%2520new%2520qx.ui.form.TextField%28%29%253B%250Afield.setRequired%28true%29%253B%250Aform.add%28field%252C%2520%2522Text%2522%252C%2520function%2520%28value%252C%2520item%29%2520%257B%250A%2520%2520if%2520%28value%2520%253D%253D%2520%2522wrong%2522%29%250A%2520%2520%257B%250A%2520%2520%2520%2520item.setInvalidMessage%28%2522input%2520is%2520wrong%2522%29%253B%250A%2520%2520%2520%2520return%2520false%253B%250A%2520%2520%257D%250A%2520%2520return%2520true%253B%250A%257D%252C%2520%2522text%2522%29%253B%250A%250Avar%2520button%2520%253D%2520new%2520qx.ui.form.Button%28%2522validate%2522%29%253B%250Abutton.addListener%28%2522execute%2522%252C%2520function%28%29%250A%257B%250A%2520%2520form.validate%28%29%253B%250A%257D%29%253B%250A%250Avar%2520cont%2520%253D%2520new%2520qx.ui.container.Composite%28new%2520qx.ui.layout.VBox%2810%29%29%253B%250Acont.add%28sbox%29%253B%250Acont.add%28new%2520qx.ui.form.renderer.Single%28form%29%29%253B%250Acont.add%28button%29%253B%250A%250Athis.getRoot%28%29.add%28cont%252C%2520%257Bedge%253A%25200%257D%29%253B%250A%250Avar%2520fc%2520%253D%2520new%2520qx.data.controller.Form%28model%252C%2520form%252C%2520true%29%253B%250Asbox.bind%28%2522selection%255B0%255D%2522%252C%2520fc%252C%2520%2522model%2522%29%253B%250A%22%2C%20%22mode%22%3A%22ria%22%7D


Subclassing like this fixes the issue.

qx.Class.define(&quot;test.FormController&quot;,
{
  extend: qx.data.controller.Form,

  members:
  {
    _applyModel: function(value, old)
    {
      if (this.getTarget() != null)
        this.getTarget().getValidationManager().reset();
      this.base(arguments, value, old);
    }
  }
});</thetext>
          </long_desc>
      
      

    </bug>