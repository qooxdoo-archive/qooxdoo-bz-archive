<bug>
          <bug_id>3659</bug_id>
          
          <creation_ts>2010-04-29 15:50:00 +0200</creation_ts>
          <short_desc>Show the toolchain API doc to the API viewer</short_desc>
          <delta_ts>2013-12-16 10:05:16 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>358</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18103</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-29 15:50:53 +0200</bug_when>
            <thetext>It would be a nice feature to have the whole toolchain API and its comments into a readable form. Maybe we could use the API viewer as app to show the doc of the toolchain?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18749</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-17 16:15:08 +0200</bug_when>
            <thetext>-&gt; unspec</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24201</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-04-23 13:22:30 +0200</bug_when>
            <thetext>As I think it is missing elsewhere, this bug should include a documentation of what has been done in 2007/8 with regards to exposing generator API doc in Apiviewer. (Something along the line 
   pythondoc (from effbot.org) -&gt; XML -&gt; XSLT -&gt; apidata.json
).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24202</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-04-23 15:07:03 +0200</bug_when>
            <thetext>Here is a quick re-cap of the work done with pythondoc:

- All relevant files are in tool/data/apidoc
- You use pythondoc.py (from http://effbot.org/zone/pythondoc.htm) to extract comment docs from Python source files (pythondoc.py -x &lt;input&gt;.py). The output is XML. The pythondoc.py executable can be found in tool/admin/bin. (The format for the doc comments is documented in tool/data/py/_*_head.py files, and in pythondoc itself of course).
- You use pydoc2qx-xml.xsl to transform the pythondoc output to Apiviewer-compliant XML: xsltproc pydoc2qx-xml.xsl &lt;pydoc-output&gt;.xml
  This step does not include the top-most &lt;doctree&gt;&lt;packages&gt; elements, to allow to concat multiple outputs together. In any case the &lt;doctree&gt;&lt;packages&gt; elements have to be added eventually, to create well-formed XML.
- You use qx-xml2qx-json.xsl to transform Apiviewer-compliant XML to Apidata-compliant Json: xsltproc qx-xml2qx-json.xsl &lt;file&gt;.xml

(That also means that the last step can be applied to any Apiviewer-compliant XML, not just that generated with the previous steps). The two .xsl files contain extensive documentation for a more thorough read.</thetext>
          </long_desc>
      
      

    </bug>