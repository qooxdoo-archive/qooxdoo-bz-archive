<bug>
          <bug_id>6843</bug_id>
          
          <creation_ts>2012-09-21 18:37:00 +0200</creation_ts>
          <short_desc>Altering behaviour of qx.ui.core.FocusHandler</short_desc>
          <delta_ts>2014-03-03 08:45:55 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Zdenko Turcan">qooxdoo-bugzilla</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30774</commentid>
            <who name="Zdenko Turcan">qooxdoo-bugzilla</who>
            <bug_when>2012-09-21 18:37:33 +0200</bug_when>
            <thetext>It&#39;s very hard to override/replace the standard qx.ui.core.FocusHandler with an alternative focus handler in an application (or to alter the functionality of it). 

For example in my case I need to alter the private method qx.ui.core.FocusHandler.__compareTabOrder in a way that it will not prefer top position over left position in every case, but there will be some delta limit in which borders 2 widgets will be considered in a same row (in equal top position). I need to change a standard behaviour of a tabbing in this case.

For instance, the standard tab ordering behaviour of the example listed bellow is that the first focused component will be BUTTON_1, then BUTTON_2, then TEXTFIELD_1 and finally TEXTFIELD_2. But a common order that one can see as a natural order would rather be: TEXTFIELD_1, BUTTON_1, TEXTFIELD_2, BUTTON_2

Example:
                    /----------\                   /----------\
   [ TEXTFIELD_1 ]  | BUTTON_1 |  [ TEXTFIELD_2 ]  | BUTTON_2 |
                    \----------/                   \----------/

The possible solution of this case would be either a parametrization of the FocusHandler by some variable to define top border delta variability or a possibility to use own implementation of FocusHandler (maybe overridden). 

I wanted to make my own implementation of FocusHandler, but the standard FocusHandler is too incorporated into QooXDoo framework that it can be done only with a big effort if ever. Here are listed classes where qx.ui.core.FocusHandler is used:
  - qx.ui.root.Abstract
  - qx.ui.root.Application
  - qx.ui.root.Inline
  - qx.ui.root.Page
  - qx.ui.virtual.layer.WidgetCell
  - qx.ui.window.Window

Now i need to have in qx.ui.core.FocusHandler.__compareTabOrder something like this:

...
  // Sort-Check #2: Top-Position

  // OLD CODE:
  // if (loc1.top != loc2.top) {
  //  return loc1.top - loc2.top;
  // }
      
  // NEW CODE:
  if (loc1.top != loc2.top) {
    var dif = loc2.top - loc1.top;

    // if the top coordinates of the both widgets are approximately
    // equal (+-5 pixels) then rather decide by left coordinates
    if (dif &gt;= -5 &amp;&amp; dif &lt;= 5 &amp;&amp; loc1.left != loc2.left)
      return loc1.left - loc2.left;
        
    return loc1.top - loc2.top;
  }

  // Sort-Check #3: Left-Position
...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35344</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:55 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>