<bug>
          <bug_id>6758</bug_id>
          
          <creation_ts>2012-08-30 09:01:00 +0200</creation_ts>
          <short_desc>Removing all items from SelectBox causes form Resetter to always throw exception</short_desc>
          <delta_ts>2012-12-10 09:19:34 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>2.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michal Dvorak">mikee</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30531</commentid>
            <who name="Michal Dvorak">mikee</who>
            <bug_when>2012-08-30 09:01:23 +0200</bug_when>
            <thetext>Overview:
Resetter remembers selection of the SelectBox (and all other selectables) - that is its currently selected ListItem or whatever. SelectBox has always one selected at least first item.

Steps to Reproduce:
When you remove (replace) all items in SelectBox after creating form, calling forms reset() method causes resetter to throw exception like this

Error: Could not select qx.ui.form.ListItem[undefined], because it is not a child element!

since it tries to set disposed item as selected back to SelectBox. Since Resetter is not exposed, you can&#39;t directly avoid it. 

Solution:
Expose Resetter itself (no reason to hide it), or its redefineItem method. This will allow rewriting resetters stored &quot;init&quot; value to newly created items in SelectBox, after its modification.

Reason: As I analyzed the code, it would be hard and inefficient to detect such changes in Resetter or SelectBox itself. Allowing app to do this explicitly should be enough.

Workaround: Never remove all items from SelectBox, leave there first one and just remove its model/label/icon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30563</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-09-03 09:16:57 +0200</bug_when>
            <thetext>Thanks for the good report!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31253</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-07 11:02:21 +0100</bug_when>
            <thetext>I decided to expose the redefineItem method as suggested.

As the solution of this bug is a API addition, it is more like an enhancement so I only applied it to the current master branch.

master: 9cf9bf3db63e8e118a017cb07e12e183e1f08954</thetext>
          </long_desc>
      
      

    </bug>