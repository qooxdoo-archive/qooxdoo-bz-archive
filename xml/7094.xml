<bug>
          <bug_id>7094</bug_id>
          
          <creation_ts>2012-12-12 14:14:00 +0100</creation_ts>
          <short_desc>_loadRowData() Error message is incorrect</short_desc>
          <delta_ts>2014-03-03 15:21:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>2.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="ScoPi">sknick</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31713</commentid>
            <who name="ScoPi">sknick</who>
            <bug_when>2012-12-12 14:14:32 +0100</bug_when>
            <thetext>I spent a good half hour trying to figure out why the Firebug console was telling me &quot;Error: _loadRowCount is abstract&quot; when I had implemented that method in my Remote subclass. Turns out that I had not implemented the _loadRowData() method and that was the real error. I looked at the source of Remote.js and discovered that the error message was referencing the wrong method:

/**
 * Loads some row data from the server.
 *
 * Implementing classes have to call {@link #_onRowDataLoaded} when the server
 * response arrived. That method has to be called! Even when there was an error.
 *
 * @abstract
 * @param firstRow {Integer} The index of the first row to load.
 * @param lastRow {Integer} The index of the last row to load.
 * @throws {Error} the abstract function warning.
 */
_loadRowData : function(firstRow, lastRow) {
    throw new Error(&quot;_loadRowCount is abstract&quot;);
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31726</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2012-12-13 14:07:22 +0100</bug_when>
            <thetext>Fixed. Thanks for the bug!

master: c9fc04bcc49f890214850f7c809c1bdc56bcd061
2.1.x: db7a2a01bb55f03800031a58105f255a544777e9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37440</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:50 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>