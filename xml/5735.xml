<bug>
          <bug_id>5735</bug_id>
          
          <creation_ts>2011-10-22 22:01:00 +0200</creation_ts>
          <short_desc>File parsing though files are not linked</short_desc>
          <delta_ts>2014-03-03 08:45:58 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27296</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-10-22 22:01:30 +0200</bug_when>
            <thetext>The generator parses all files in the namespace directories regardless if there exist a linkage to them or a compulsory directive exist in config.json

This is a behaviour which is not wished, because then you can not have files in development, not ready, in the directory. It blocks the progress and generation can not be done before the files have been moved to a directory outside the namespace path.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27301</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-10-24 08:17:14 +0200</bug_when>
            <thetext>Thanks for the report. Currently, thats how it is and you already wrote a workaround yourself. Still, I think that could be changed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27306</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-10-24 09:34:36 +0200</bug_when>
            <thetext>This is by design. We take into account *all* files during library scanning, in order to have a complete list of available classes before generating any potential application which uses this library. This happens *before* any application is built, and is independent of any particular application, hence independent of references to library classes in code or in config files.

What you suggest is an individual and on-demand class lookup in libraries during application generation which could slow down generator run time. On the other hand, you could save generator time, e.g. when a library is big, but the classes used in a particular application from it are few. Hence, keeping this as an enhancement issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35364</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:58 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>