<bug>
          <bug_id>8324</bug_id>
          
          <creation_ts>2014-05-13 09:49:00 +0200</creation_ts>
          <short_desc>Generator does not consider all possible function names on this.base(arguments) optimization.</short_desc>
          <delta_ts>2014-09-05 14:31:04 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40200</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-05-13 09:49:11 +0200</bug_when>
            <thetext>Mind you have a member function called &quot;.appearance is good&quot;, you will override this function on a extending class, but want to call the base function as well, via this.base(arguments). In source version it works well. But the generator tries to optimize this.base(arguments) to someting like &quot;clazzNamespace.prototype..appearance is good&quot;, which breaks the generator build job.

Recommended to handle that optimization more progressive &quot;clazzNamespace.prototype[&#39;.appearance is good&#39;]&quot; would be fine.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41136</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-09-05 14:31:04 +0200</bug_when>
            <thetext>Richard is currently working on a new generator support. There is a good workaround for the meantime:

instead of:
this.base(arguments)

use:
var args = arguments;
this.base(args);</thetext>
          </long_desc>
      
      

    </bug>