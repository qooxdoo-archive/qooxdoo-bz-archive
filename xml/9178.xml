<bug>
          <bug_id>9178</bug_id>
          
          <creation_ts>2015-06-30 17:08:00 +0200</creation_ts>
          <short_desc>generator &quot;hides&quot; keys beginning with &quot;__&quot; in object literals</short_desc>
          <delta_ts>2015-07-03 14:11:04 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Deacon">dfrost999</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43428</commentid>
            <who name="Deacon">dfrost999</who>
            <bug_when>2015-06-30 17:08:00 +0200</bug_when>
            <thetext>In build mode with optimize &quot;privates&quot; (default) the generator mangles keys of (non qx-) object literals. This can lead to difficult to track errors when using 3rd party libs that expect underscored keys.

Example: ODATA expects a request = { __batchrequets: [ { __changeRequests: [...] ... } } map, wich generator happily converts to garbage.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43438</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-07-03 13:59:27 +0200</bug_when>
            <thetext>Hi Deacon, sorry you hit a rather specific situation: leading double underscores indicate qooxdoo private variables. If this naming convention is also used for map keys e.g. in 3rd party code, those keys would have to change by the &quot;privates&quot; optimization of the generator. There&#39;s no generic or practical way to differentiate.

Suggestion would be to either:
* disable &quot;privates&quot; optimization or
* keep &quot;privates&quot; optimization enabled for your own code (not accessing those external keys); 3rd party code should be integrated without being preprocessed by qooxdoo &quot;privates&quot; optimization

Hope this helps.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43439</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-07-03 14:11:04 +0200</bug_when>
            <thetext>BTW, if you need accessing those private keys, but still want qooxdoo &quot;privates&quot; turned optimization on, you might want to use the following idea:

request[&quot;__&quot; + &quot;batchrequets&quot;] = ...</thetext>
          </long_desc>
      
      

    </bug>