<bug>
          <bug_id>3666</bug_id>
          
          <creation_ts>2010-04-30 16:34:00 +0200</creation_ts>
          <short_desc>qooxdoo Themes are drawing in too many Resources</short_desc>
          <delta_ts>2014-07-29 07:53:44 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.system</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>qooxdoo</cc>
    
    <cc>richard.sternagel</cc>
    
    <cc>schnepe2</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18121</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-04-30 16:34:53 +0200</bug_when>
            <thetext>When compiling a stock gui skeleton app, a *lot* of resources are registered in 
the script (around 450). Most of them (mostly decorations) are never used by 
the app, e.g.

&quot;qx/decoration/Modern/arrows-combined.png&quot;:[87,8,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/arrows/down-invert.png&quot;:[8,5,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/arrows-combined.png&quot;,-74,0],
...
&quot;qx/decoration/Modern/checkradio-combined.png&quot;:[504,14,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/colorselector-combined.gif&quot;:[46,11,&quot;gif&quot;,&quot;qx&quot;],
...
&quot;qx/decoration/Modern/cursors-combined.gif&quot;:[71,20,&quot;gif&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/cursors/alias.gif&quot;:[19,15,&quot;gif&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/cursors-combined.gif&quot;,-52,0],
&quot;qx/decoration/Modern/cursors/copy.gif&quot;:[19,15,&quot;gif&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/cursors-combined.gif&quot;,-33,0],
...
&quot;qx/decoration/Modern/form/checkbox-checked-disabled.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/checkradio-combined.png&quot;,-126,0],
&quot;qx/decoration/Modern/form/checkbox-checked-focused-invalid.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/checkradio-combined.png&quot;,-322,0],
...
&quot;qx/decoration/Modern/form/input-focused.png&quot;:[40,12,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/form/input.png&quot;:[84,12,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/form/radiobutton-checked-disabled.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/checkradio-combined.png&quot;,-196,0],
&quot;qx/decoration/Modern/form/radiobutton-checked-focused-invalid.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/checkradio-combined.png&quot;,-168,0],
&quot;qx/decoration/Modern/form/radiobutton-checked-focused.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/checkradio-combined.png&quot;,-98,0],
...
&quot;qx/decoration/Modern/groupbox-lr-combined.png&quot;:[8,51,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/groupbox-tb-combined.png&quot;:[4,24,&quot;png&quot;,&quot;qx&quot;],
...
&quot;qx/decoration/Modern/menu-background-combined.png&quot;:[80,49,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/menu-checkradio-combined.gif&quot;:[64,7,&quot;gif&quot;,&quot;qx&quot;],
...
&quot;qx/decoration/Modern/pane-lr-combined.png&quot;:[12,238,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/pane-tb-combined.png&quot;:[6,36,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/pane/pane-b.png&quot;:[6,6,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/pane-tb-combined.png&quot;,0,-30],
&quot;qx/decoration/Modern/pane/pane-bl.png&quot;:[6,6,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/pane-tb-combined.png&quot;,0,-18],
...
&quot;qx/decoration/Modern/scrollbar-combined.png&quot;:[54,12,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/scrollbar/scrollbar-bg-horizontal.png&quot;:[76,15,&quot;png&quot;,&quot;qx&quot;],
...
&quot;qx/decoration/Modern/splitpane-knobs-combined.png&quot;:[8,9,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/splitpane/knob-horizontal.png&quot;:[1,8,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/splitpane-knobs-combined.png&quot;,0,-1],
&quot;qx/decoration/Modern/splitpane/knob-vertical.png&quot;:[8,1,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/splitpane-knobs-combined.png&quot;,0,0],
&quot;qx/decoration/Modern/table-combined.png&quot;:[94,18,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/table/ascending.png&quot;:[8,5,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/table-combined.png&quot;,0,0],
&quot;qx/decoration/Modern/table/boolean-false.png&quot;:[14,14,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/table-combined.png&quot;,-80,0],
...
&quot;qx/decoration/Modern/tabview-button-bottom-active-lr-combined.png&quot;:[10,14,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png&quot;:[5,30,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/tabview-button-bottom-inactive-b-combined.png&quot;:[3,9,&quot;png&quot;,&quot;qx&quot;],
...
&quot;qx/decoration/Modern/tabview/tabview-pane-tl.png&quot;:[30,30,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/tabview-pane-tb-combined.png&quot;,0,-30],
&quot;qx/decoration/Modern/tabview/tabview-pane-tr.png&quot;:[30,30,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/tabview-pane-tb-combined.png&quot;,0,-90],
&quot;qx/decoration/Modern/tabview/tabview-pane.png&quot;:[185,250,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/toolbar-combined.png&quot;:[80,130,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/toolbar/toolbar-gradient-blue.png&quot;:[40,130,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/toolbar-combined.png&quot;,-40,0],
...
&quot;qx/decoration/Modern/tooltip-error-lr-combined.png&quot;:[12,18,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/tooltip-error-tb-combined.png&quot;:[6,36,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/tree-combined.png&quot;:[32,8,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/tree/closed-selected.png&quot;:[8,8,&quot;png&quot;,&quot;qx&quot;,&quot;qx/decoration/Modern/tree-combined.png&quot;,-24,0],
...
&quot;qx/decoration/Modern/window-captionbar-buttons-combined.png&quot;:[108,9,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/decoration/Modern/window-captionbar-lr-active-combined.png&quot;:[12,9,&quot;png&quot;,&quot;qx&quot;],
...
&quot;qx/icon/Tango/16/actions/dialog-cancel.png&quot;:[16,16,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/icon/Tango/16/actions/dialog-ok.png&quot;:[16,16,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/icon/Tango/16/actions/view-refresh.png&quot;:[16,16,&quot;png&quot;,&quot;qx&quot;],
...
&quot;qx/icon/Tango/22/places/folder.png&quot;:[22,22,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/icon/Tango/32/mimetypes/office-document.png&quot;:[32,32,&quot;png&quot;,&quot;qx&quot;],
&quot;qx/icon/Tango/32/places/folder-open.png&quot;:[32,32,&quot;png&quot;,&quot;qx&quot;],


All these resources are (a) copied to the build version, enlarging the deploy 
package, and (b) their resource infos blow up the application script.

The reason is the wild card include of all those resources by gratuitous #asset 
hints in the theme:

qx.theme.modern.Decoration:
   ...
   #asset(qx/decoration/Modern/*)

A possible cure would be to move the #asset hints from the theme to the 
corresponding widgets. This way, each widget would bring in just the resources 
it needs, and only those would be generated into the app. E.g.

qx.ui.groupbox.GroupBox.js:
   ...
   #asset(qx/decoration/{qx.theme}/groupbox/*)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18129</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-03 15:13:24 +0200</bug_when>
            <thetext>Sounds like a problem not easy to fix because moving the assets into the widget code breaks the idea of the theming and of &quot;not knowing&quot; anything about the theme in the widget code. Maybe we have to split up the theme? That would help but could be hard.

--&gt; Thomas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18141</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-05-03 18:06:29 +0200</bug_when>
            <thetext>Good idea of a more tailor-made resource handling for theming. But the explicit configuration within a widget&#39;s code won&#39;t work for the reasons Martin also mentioned. 

Best we should probably do is taking advantage of the indirection introducted by the appearance id. By determining (or configuring) the resources per appearance id and &quot;linking&quot; the actually used ids for a certain app, we could get the desired result. 

This linking of appearance ids is IMHO similar to the linking of static methods, so we could probably tackle this task, i.e. a link granularity below class level, maybe simultaneously. In a first step, this would mean using explicit exclude lists for appearance ids or static methods, respectively. Thomas, do you think that&#39;s feasible?

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18176</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-04 14:13:37 +0200</bug_when>
            <thetext>Actually, I don&#39;t quite get what both of you are saying.

-&gt; Martin:
The widget code does not have to know about which Theme is being used. Maybe 
you overlooked the use of {qx.theme} in  
&quot;#asset(qx/decoration/{qx.theme}/groupbox/*)&quot;?!
But the widget code knows and has, IMO, to explicate which resources it needs. 
So the #asset hint belongs to the widget. This is also what we recommend for 
custom applications. But maybe we need a new way to encode which resources are 
used. 

-&gt; Andreas:
How should this &quot;linking of appearance ids&quot; look like? What is the use case for 
having &quot;a link granularity below class level&quot;?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32178</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-02-07 14:12:20 +0100</bug_when>
            <thetext>Quoting bug #7045 (which reports the same issue):

&gt; This fixes the issue as far as icons are concerned.
&gt; Inside the build directory are still many probably unneeded decoration files.
&gt; I&#39;m ignoring them for now, cause it&#39;s not clear how our Theming will evolve,
&gt; so it would be a waste of effort.

I leave this bug open as a reminder to revisit this issue (too many decoration imgs) after a Theming revamp.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33198</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-07-03 10:21:21 +0200</bug_when>
            <thetext>The decoration images are still drawn into the build of the Desktop skeleton 
(400+ files), even after the changes that came with diet. Martin and Daniel are 
looking into that.

Taking this on 3.0.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33240</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-05 14:32:04 +0200</bug_when>
            <thetext>Cleaned up the modern theme and removed the asset hint which included all decoration images for the modern theme:
d49c5a92d28c017bcd662d1173f56f587dc92dba</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33243</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-05 15:24:15 +0200</bug_when>
            <thetext>Also cleaned up the appearance of the modern theme which included all decoration images as well:
4bccae5ef221e69aa2591639e97c1bf253a35bbb

The classic theme&#39;s appearance still has its include for all decoration images of the classic theme. But there are only 155 files in the skeletons resource build which seems not too much.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33345</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-07-11 19:04:31 +0200</bug_when>
            <thetext>Despite the gains in the Modern theme we should try the same method for 
Classic. 

Beyond that, shouldn&#39;t we consider a more general approach of avoiding unneeded 
image resources in app builds?! If you want the widgets to be 
&quot;resource-agnostic&quot;, maybe we could split up e.g. the &quot;Appearance&quot; theme class 
in multiple classes, where each such class only hold the definitions - and 
@asset hints - for a *single* framework class. And then find a way to only 
include those that refer to classes that are actually used.

-&gt; Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40872</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-07-29 07:53:44 +0200</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>