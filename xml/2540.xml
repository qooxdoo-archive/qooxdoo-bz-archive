<bug>
          <bug_id>2540</bug_id>
          
          <creation_ts>2009-07-01 18:08:00 +0200</creation_ts>
          <short_desc>IE: improve alpha loader PNG trick and(or) allow getting rid of it</short_desc>
          <delta_ts>2014-03-03 08:46:54 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>unspecified</version>
          <rep_platform>IE</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Helder Magalhães">helder.magalhaes</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10716</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2009-07-01 18:08:25 +0200</bug_when>
            <thetext>During the research for bug 2521 (apparently specific to IE8), I&#39;ve noticed that the memory leak seemed to be more serious whenever the use of the alpha loader to achieve PNG transparency was in use. I investigated a bit and propose that:
 1. The PNG alpha loader trick is improved so it&#39;s only used on the IE versions that need it (IE6 and before, apparently, as PNG transparency should work since IE7 [1]);
 2. Convert all PNG images in the framework to indexed so the trick isn&#39;t even needed [2];
 3. Create a (new?) qooxdoo setting to allow getting rid of the &#39;AlphaImageLoader&#39; altogether (the idea here was to allow an advanced user which made sure sure its own PNG images were all indexed being able to support IE6 also without all of this trickery), defaulted to false do avoid breaking most sites but also explained through a blog post or similar so users would get aware of it.

I&#39;m convinced that also relevant performance improvements (specially CPU, memory usage maybe also) will arise from avoiding the &#39;AlphaImageLoader&#39;: more profiling is needed to confirm this. Also, this might help fixing bug 1896 and maybe some others.

I can help with steps 1 and 2, specially for the legacy (0.7.x) branch. In fact, I&#39;ve already some related changes in my local repository (for testing purposes) while doing research for bug 2521.

I&#39;d like to get some feedback on whether this was desired before trying to marsh up patches, adding attachments with converted PNG images, etc.. Also, I may be missing something which may already exist in the trunk (0.8.x), as I&#39;ve seen some related work in &quot;qx.bom.element.Decoration&quot;, reason why I&#39;m leaving the &quot;Version&quot; and &quot;Target Milestone&quot; properties unset for now.


[1] http://blogs.msdn.com/ie/archive/2005/04/26/412263.aspx
[2] http://www.sitepoint.com/blogs/2007/09/18/png8-the-clear-winner/</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35708</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:54 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>