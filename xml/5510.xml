<bug>
          <bug_id>5510</bug_id>
          
          <creation_ts>2011-08-11 16:41:00 +0200</creation_ts>
          <short_desc>lint job fails to detect undefined variable &#39;console&#39;</short_desc>
          <delta_ts>2014-03-03 08:47:44 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>martin.wittemann</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26471</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-08-11 16:41:12 +0200</bug_when>
            <thetext>The lint job fails to identify console.log calls as having &#39;console&#39; being undefined. 

Identifying usages of &#39;console&#39; is critically important, since applications will just silently fail in environments that do not have a console, if any usages of that variable remain in a deployed version of code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30469</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-08-22 17:44:39 +0200</bug_when>
            <thetext>*** Bug 6655 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30471</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-08-22 18:16:19 +0200</bug_when>
            <thetext>Well, I sort of agree. But somebody has entered &#39;console&#39; as a known global in 
our defaults module (lang.py) long ago, so it is treated like &#39;window&#39; and 
&#39;document&#39;. As not even all browsers support &#39;console&#39; this is questionable, 
but we sort of always managed to handle this by checking for typeof console == 
undefined etc. We could remove it from the default list of built-ins, but I 
wonder what the consequences were?! Code using &#39;console&#39; would then need to 
explicitly &#39;@ignore&#39; it. Alternatively, we could add a list of negative globals 
to the lint configuration, as to say &quot;Do always complain about those&quot;, so you 
could add &#39;console&#39; in there.
I&#39;m open to discussion.

I think the strategy in general must be to split up lang.py and create 
different sets of known globals for different runtime environments (s. 
bug#6734). That is, we will then have a built-ins set for browsers, pot. 
different ones for different browsers, one for node.js, one for rhino, and 
maybe others. 

Which set to use will then be part of the generator configuration, and one way 
to set this could be through the choice of the skeleton used for the 
application.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31094</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-10-29 09:26:08 +0100</bug_when>
            <thetext>Martin says:

It could also be nice that the user can edit a configurable list of symbols to 
accept (e.g.  &#39;console&#39; is ok in the source build, but not in the optimized 
build).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36006</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:44 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>