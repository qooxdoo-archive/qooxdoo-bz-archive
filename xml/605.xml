<bug>
          <bug_id>605</bug_id>
          
          <creation_ts>2007-08-29 17:58:00 +0200</creation_ts>
          <short_desc>dblclick event is not fired when showCellFocusIndicator = false</short_desc>
          <delta_ts>2014-03-03 15:24:33 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.treevirtual</component>
          <version>0.7.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          <blocked>2021</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Denis">nomus</reporter>
          <assigned_to name="Derrell Lipman">derrell.lipman</assigned_to>
          <cc>derrell.lipman</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2157</commentid>
            <who name="Denis">nomus</who>
            <bug_when>2007-08-29 17:58:09 +0200</bug_when>
            <thetext>dblclick event is not fired/dispatched (at least always) for TreeVirtual if showCellFocusIndicator = false.

Code snippet:

var tree = new qx.ui.treevirtual.TreeVirtual([&quot;Name&quot;]);
tree.set({
    backgroundColor : &quot;white&quot;,
    border : &quot;inset-thin&quot;,
    left : 10,
    top : 10,
    width : &quot;40%&quot;,
    height : &quot;70%&quot;
});
tree.setOpenCloseClickSelectsRow(true);
tree.setShowCellFocusIndicator(false);
tree.setStatusBarVisible(false);
var resizeBehavior = tree.getTableColumnModel().getBehavior();
resizeBehavior.set(0, { width:&quot;1*&quot; });
tree.addToDocument();
tree.addEventListener(&quot;dblclick&quot;, function(oEvent) {
    alert(&quot;dblclick - &quot; + this.getSelectedNodes()[0].label);
}, tree);

var dataModel = tree.getDataModel();
var root = dataModel.addBranch(null, &quot;Root&quot;, true);
var f1 = dataModel.addBranch(root, &quot;Folder 1&quot;, false);
for (var i = 1; i &lt; 10; i++) {
    dataModel.addLeaf(f1, &quot;File 1&quot; + i);
}
var f2 = dataModel.addBranch(root, &quot;Folder 2&quot;, false);
for (var i = 1; i &lt; 5; i++) {
    dataModel.addLeaf(f2, &quot;File 2&quot; + i);
}
dataModel.setData();


Best regards,
Dioc</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2163</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-08-30 16:05:27 +0200</bug_when>
            <thetext>I&#39;m not able to reproduce this problem.  You say that it only sometimes doesn&#39;t work.  Can you find some sequence of clicks or events that reliably makes it fail?  I&#39;ll close this ticket for now, but please re-open it if you can find some reproducible sequence.  I&#39;d love to fix it if there&#39;s really a generic problem.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2165</commentid>
            <who name="Denis">nomus</who>
            <bug_when>2007-08-30 16:36:44 +0200</bug_when>
            <thetext>Hello,

I suppose I found a reproducible sequence so I will reopen this bug.
If a user double clicks on empty space of row (not to node&#39;s label), then dblclick event is fired.
But if the user tries to double click on node&#39;s label, the event is not fired.
If showCellFocusIndicator = true, double clicking causes firing of the event but sometimes with some delay.

Best regards,
Dioc
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2166</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-08-30 16:42:16 +0200</bug_when>
            <thetext>&gt; But if the user tries to double click on node&#39;s label, the event is not fired.

Consistently not fired if the double click is on the label?  I can&#39;t make it fail.  Hmmm...  What browser are you using?  What OS?

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2171</commentid>
            <who name="Denis">nomus</who>
            <bug_when>2007-08-31 09:38:30 +0200</bug_when>
            <thetext>Yes, the event is never fired if the double click is on a node&#39;s label. I am using Windows XP Professional SP2 Russian. The problem is noticed in Firefox 2.0.0.6, Internet Explorer 6, Opera 9.22.
Did you test mentioned code snippet?

Dioc</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2177</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-08-31 14:24:01 +0200</bug_when>
            <thetext>&gt; Yes, the event is never fired if the double click is on a node&#39;s label. I am
&gt; using Windows XP Professional SP2 Russian.
&gt; The problem is noticed in Firefox
&gt; 2.0.0.6, Internet Explorer 6, Opera 9.22.

All right.  I&#39;m testing on Linux, not Windows which may be a difference.  I&#39;ll see if I can test on Windows later today.

&gt; Did you test mentioned code snippet?

Yes, that&#39;s exactly what I&#39;m using for my tests.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2244</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-09-11 14:40:00 +0200</bug_when>
            <thetext>What is the status of this bug, Derrell? Planned for 0.7.2.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2249</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2007-09-11 14:45:51 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; What is the status of this bug, Derrell? Planned for 0.7.2.
&gt; 

I haven&#39;t had a chance to get back to it.  Feel free to pursue, as my &quot;qooxdoo time&quot; is still quite limited.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2369</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-09-18 18:25:42 +0200</bug_when>
            <thetext>Mass move of bugs to target 0.7.3</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2750</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-01-14 10:09:21 +0100</bug_when>
            <thetext>move to 0.7.4</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3052</commentid>
            <who name="Denis">nomus</who>
            <bug_when>2008-05-12 12:47:40 +0200</bug_when>
            <thetext>I cannot reproduce this problem in Firefox 2.0.0.14, Opera 9.26 and Safari 3.1.1 by using qooxdoo 0.7.3. 
But the problem still takes place in IE 7. Dblclick event is not fired when user clicks on a node that is not currently selected. If a node is selected then dblclick event is fired properly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5346</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-06 16:08:28 +0200</bug_when>
            <thetext>TreeVirtual development continues in 0.8.x. To 0.8.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7188</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-12-18 12:25:54 +0100</bug_when>
            <thetext>to 0.8.2. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8385</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-09 11:32:55 +0100</bug_when>
            <thetext>to 0.8.3 as discussed with Derrell.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8528</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-11 16:11:20 +0100</bug_when>
            <thetext>Ok, the problem here is that no &quot;dblclick&quot; event is being generated by the DOM in IE7. I&#39;ll reassign it to Fabian whose expertise in this area is the eighth wonder of the world. :-)

To reproduce my test results, apply this small patch then run the program that follows the patch. Click on the label in the tree, in a row that is NOT already selected, click on OK if an alert box pops up immediately (it will in FF but not in IE) and then wait 10 seconds for the timer&#39;s alert box to appear. In FF it&#39;ll display a series of DOM events with mousedown, mouseup, mousedown, mouseup, click, dblclick. In IE, however, it will display mousedown, mouseup, mouseup. I&#39;m not sure why there are two consecutive mouseup events without an intervening mousedown, and note that no click or dblclick events occurred. They&#39;re either occurring on some object that isn&#39;t listening for these DOM events, or they&#39;re not occuring at all.

Derrell


--------------------------------------------------------------------------------------------------------

--- a/qooxdoo/framework/source/class/qx/event/handler/Mouse.js
+++ b/qooxdoo/framework/source/class/qx/event/handler/Mouse.js
@@ -341,7 +341,7 @@ qx.Class.define(&quot;qx.event.handler.Mouse&quot;,
     {
       var type = domEvent.type;
       var target = domEvent.target || domEvent.srcElement;
-
+custom.Application.output.push(&quot;Mouse.js: &quot; + type + &quot; on &quot; + target);
       // Safari (and maybe gecko) takes text nodes as targets for events
       // See: http://www.nczonline.net/archive/2008/2/556
       if (qx.core.Variant.isSet(&quot;qx.client&quot;, &quot;gecko|webkit&quot;))

--------------------------------------------------------------------------------------------------------
and then use this test application:

/*
#require(qx.log.appender.Native)
#require(qx.log.appender.Console)
*/

qx.Class.define(&quot;custom.Application&quot;,
{
  extend : qx.application.Standalone,

  statics :
  {
    output : []
  },

  members :
  {
    main : function()
    {
      this.base(arguments);

      var tree = new qx.ui.treevirtual.TreeVirtual([&quot;Name&quot;]);
      tree.setOpenCloseClickSelectsRow(true);
      tree.setShowCellFocusIndicator(false);
      tree.setStatusBarVisible(false);

      var resizeBehavior = tree.getTableColumnModel().getBehavior();
      resizeBehavior.set(0, { width:&quot;1*&quot; });

      this.getRoot().add(tree, { edge : 10 });

      tree.addListener(&quot;dblclick&quot;, function(e)
                       {
                         alert(&quot;dblclick - &quot; +
                               this.getSelectedNodes()[0].label);
                       },
                       tree);

      var dataModel = tree.getDataModel();
      var root = dataModel.addBranch(null, &quot;Root&quot;, true);

      var f1 = dataModel.addBranch(root, &quot;Folder 1&quot;, false);
      for (var i = 1; i &lt; 10; i++)
      {
          dataModel.addLeaf(f1, &quot;File 1&quot; + i);
      }
      
      var f2 = dataModel.addBranch(root, &quot;Folder 2&quot;, false);
      for (var i = 1; i &lt; 5; i++)
      {
          dataModel.addLeaf(f2, &quot;File 2&quot; + i);
      }
      
      dataModel.setData();

      var timer = qx.util.TimerManager.getInstance();
      timer.start(function(userData, timerId)
                  {
                    alert(custom.Application.output.join(&quot;\n&quot;));
                  },
                  0,
                  this,
                  null,
                  10000);
    }
  }
});

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8581</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-13 09:54:03 +0100</bug_when>
            <thetext>accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8598</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-13 13:01:58 +0100</bug_when>
            <thetext>Derrell,

the reason for the IE bug is that the first mouse down event happens on an element, which is removed from the DOM during the &quot;mousedown&quot; event handler. IE cannot handle this case and thus does not fire the &quot;mouseup&quot; and &quot;click&quot; events for this element. The second click is OK but it is not recognized as double click. 

The reason for the removal of the first mousedown target is the &quot;alwaysUpdateCells&quot; , which forces a complete update even on selection changes. This complete update is performed on the first click of the double click and causes the trouble. 

This  bug occurs only in the tree virtual because in the tree this property defaults to &quot;true&quot;.


Derrell, does the tree depend on this property? If not we could just deprecate it since it is probably not used widely by table users. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8601</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-13 13:32:14 +0100</bug_when>
            <thetext>&gt; Derrell, does the tree depend on this property? If not we could just deprecate
it since it is probably not used widely by table users. 

Unfortunately, I don&#39;t think we can simply deprecate it. When a node is added to a tree, two icons can be provided: one for when the node is not selected, and one for when it is selected. The icon must be refreshed when the row is selected, which is why TreeVirtual sets the &#39;alwaysUpdateCells&#39; property to true.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8602</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-13 13:58:36 +0100</bug_when>
            <thetext>BTW, IIRC, that feature was implemented to copy a similar feature in Tree. The only use I can think of for it would be if you were using the icon to indicate selections, and were disabling the normal selection styling (highlighting). That&#39;s reasonable, I suppose, and it&#39;s possible someone is doing it. 

I&#39;d still be quite hesitant to deprecate a feature that&#39;s been in both Table and TreeVirtual for years...

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8608</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-13 15:07:42 +0100</bug_when>
            <thetext>(In reply to comment #18)
 
&gt; I&#39;d still be quite hesitant to deprecate a feature that&#39;s been in both Table and
&gt; TreeVirtual for years...

Me, too. What about changing the default to &quot;false&quot;?

I don&#39;t see how we can fix the dblclick problem if &quot;alwaysUpdateCells&quot; is true. Do you have any idea?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8610</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-13 15:28:07 +0100</bug_when>
            <thetext>&gt; Me, too. What about changing the default to &quot;false&quot;?

I think I&#39;d be ok with that, A big note should be added to the release notes about the change.

Hmmm... What about having it default to false unless a selectedIcon is provided (meaning they need the feature that turning on this property was intended to provide), and setting it to true only in that case?

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8611</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-13 15:45:10 +0100</bug_when>
            <thetext>Nope, scratch that. It&#39;ll be nasty. Each time the model data is changed we&#39;d have to reapply the property or not do so but risk needing to have done so. I think maybe we should just document what won&#39;t work properly if they specify a separate selected icon, and let them set the property to true.

Let me know your thoughts. I can make the changes if you&#39;d like.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8615</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-13 16:47:24 +0100</bug_when>
            <thetext>Sounds good to me. I&#39;ll assign it back to you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8617</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-03-13 17:34:39 +0100</bug_when>
            <thetext>Fixed with r18438 and r18439 by leaving the default value of
&#39;alwaysUpdateCells&#39; at Table&#39;s default of false. If users want to be able to
provide a unique icon for display in a TreeVirtual they&#39;ll now have to manually
set this property to true, but incur a failure of double click events in IE and
also of immediate selection of a row upon right-click (and sometimes left-click
too).

I&#39;ve reassigned this bug to Andreas to create an entry in the next Release
Notes regarding this change.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10625</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-06-29 13:41:16 +0200</bug_when>
            <thetext>Added a section to the preliminary 0.8.3 release notes as suggested, http://qooxdoo.org/about/release_notes/0.8.3 . Unfortunately, there doesn&#39;t seem to be a solution possible without drawbacks for all situations ...

@Derrell, I think it would be the best that you (not me) added some info to the appropriate JSdocs of TreeVirtual, and close the bug afterwards, thanks.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10922</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-07-15 18:00:50 +0200</bug_when>
            <thetext>I just confirmed that I had already added appropriate notes in the API documentation. We&#39;re set to go. Closing this bug.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38428</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:33 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>