<bug>
          <bug_id>4136</bug_id>
          
          <creation_ts>2010-09-29 12:09:00 +0200</creation_ts>
          <short_desc>Addition to new manual for i18n localization - using of this.tr(xxx)</short_desc>
          <delta_ts>2014-03-03 15:23:58 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>documentation</component>
          <version>1.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20398</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-09-29 12:09:37 +0200</bug_when>
            <thetext>Don&#39;t split a localized string because then the localisation does not work for that widget.

var str1 = this.tr(&quot;Here we come&quot;);
var str2 = this.tr(&quot;with a cake to the core team&quot;);

var label = new qx.ui.basic.Label(str1 + str2);

does not translate....
instead...

var str1 = &quot;Here we come&quot;;
var str2 = &quot;with a cake to the core team&quot;;

var label = new qx.ui.basic.Label(this.tr(str1 + str2));

which works.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20401</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-09-29 13:37:18 +0200</bug_when>
            <thetext>*** Bug 4137 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20422</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-09-30 15:22:41 +0200</bug_when>
            <thetext>Actually, both versions work if you look at what you are doing. I&#39;ve re-created 
both cases in a standard gui skeleton.

&gt; var str1 = this.tr(&quot;Here we come&quot;);
&gt; var str2 = this.tr(&quot;with a cake to the core team&quot;);
&gt; 
&gt; var label = new qx.ui.basic.Label(str1 + str2);
&gt; 
&gt; does not translate....

This works perfectly fine. The two keys, &quot;Here we come&quot; and &quot;with a cake to the 
core team&quot;, are entered in the .po files and can be translated individually. 
The argument to basic.Label is then the concatenation of the translations of 
those keys, according to the current locale.

&gt; instead...
&gt; 
&gt; var str1 = &quot;Here we come&quot;;
&gt; var str2 = &quot;with a cake to the core team&quot;;
&gt; 
&gt; var label = new qx.ui.basic.Label(this.tr(str1 + str2));
&gt; 
&gt; which works.

Indeed, but it&#39;s a bit harder to get working. Here, the key to this.tr() is 
dynamically created at run time, and will always be &quot;Here we comewith a cake to 
the core team&quot;. Unfortunately, the generator has no way of knowing this key, so 
it cannot enter it into the .po files based on the given information. As only 
recognized keys will be considered for the generated application, you have to 
make this key known *somewhere* in your application code, e.g. with a line like 
this:

  this.marktr(&quot;Here we comewith a cake to the core team&quot;);

Now the key will be entered into .po files, can be translated there, and will 
be picked up for the generated application.

So the main difference between the two code samples is *value* concatenation 
vs. *key* concatenation. See here for more details:
http://news.qooxdoo.org/the-week-in-qooxdoo-2010-05-07</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20657</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:16 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38215</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:58 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>