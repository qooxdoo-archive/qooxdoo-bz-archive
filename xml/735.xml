<bug>
          <bug_id>735</bug_id>
          
          <creation_ts>2007-12-02 17:47:00 +0100</creation_ts>
          <short_desc>Rework tool structure</short_desc>
          <delta_ts>2014-03-03 15:24:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2571</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-12-02 17:47:16 +0100</bug_when>
            <thetext>With every new feature in our toolchain the folders become more unstructured. We should definitely come up with a new structural solution. Some of our modules are use by the new toolchain, some will not be used anymore etc. Also we mix different types of content e.g. Python, Shell-Scripts, JavaScript files. This is definitely not a good idea. It would also be good to keep the &quot;external&quot; packages like &quot;simplejson&quot; or &quot;ElementTree&quot; out of our structure. Maybe using an svn:external, too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2652</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-01-10 16:48:36 +0100</bug_when>
            <thetext>Moved to 0.8.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3319</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-12 17:14:23 +0200</bug_when>
            <thetext>to thomas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3736</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-07-10 11:32:24 +0200</bug_when>
            <thetext>- Created &#39;tool/bin&#39; for (top-level) executable programs/scripts (both .py and .sh)
- Created &#39;tool/app&#39; for self-contained applications (currently: batserver)
- Created &#39;tool/pylib&#39; for python modules (both third-party and self-written)
- Moved to &#39;tool/data/apidoc&#39; files relating to Apiviewer XML transformations

There are still open issues with the old &#39;framework/tool&#39; tree:
- some files have been moved to the new &#39;tool&#39; tree
- some files need evaluation whether they are needed in the new tree or not, then moved accordingly
- some functionality from the *new* &#39;tool&#39; structure still links into the old tree; dependencies of this kind have to be moved to the new tree
- the old &#39;make&#39; structure should be dispensable as soon as no make targets are run during builds anymore
- the &#39;framework/tool/migration&#39; data should be moved; SW suggested that each &#39;library&#39; (framework, apps, contribs,...) maintain their own migration data, and the build process provides a generic way of using them (see dedicated bug #1036)

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4513</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-21 09:26:34 +0200</bug_when>
            <thetext>to 0.8.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4516</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-08-21 09:29:47 +0200</bug_when>
            <thetext>Thomas, what parts of the bugs you want to move to 0.8.1? I think we should then open up another one for these enhancements but let the original bug be for milestone 0.8.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4530</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-21 10:13:35 +0200</bug_when>
            <thetext>I&#39;m quite contempt with what we have achieved in the current &#39;tool&#39; folder. What remains is the clean-up of &#39;framework/tool&#39; up to its final demise, as described in comment#3. Since all changes there could break existing functionality, and would involve a lot of re-testing, I wouldn&#39;t want to touch this before 0.8-final.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4535</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-21 11:08:57 +0200</bug_when>
            <thetext>Newly commited changes:

- framework/make deleted
- framework/migration moved to tool/data/migration
- framework/generator.py, migrator.py deleted

Open:
- framework/modules
- framework/manifest.py</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4840</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-08-29 12:16:11 +0200</bug_when>
            <thetext>I think we can remove the last files from framework/tool now.

What do you think Tomas?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4841</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-29 15:37:12 +0200</bug_when>
            <thetext>Thanks for the reminder ;-), and I&#39;m very much looking forward doing this (migrate, that is), but I also insist that I do it, because I want to do a couple of checks beforehand, which I consider necessary for my own understanding and also for my undisturbed sleep at night. Since Andreas insisted on putting clean-up jobs behind in the near future, I&#39;m making no promises as to when this will happen :-).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5639</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-09-24 14:58:15 +0200</bug_when>
            <thetext>removed framework/tool from trunk :)

- framework/tool/modules has been revised 
  - most of the modules (like compiler.py, treeutil.py,...) were already 
present in the new structure
  - a couple of stand-alone scripts/modules were deleted (like graph.py, 
resources.py, variants.py,...); they are currently not used
     in 0.8, but can easily be restored from legacy_0_7_x if needed.
  - loader.py and config.py have been ported to the new tool/ structure 
(pylib/misc), since they are used by tool/bin/migrator.py and can be revised 
    in this context; esp. config.py is a near copy of ecmascript.frontend.lang 
and could probably be easily removed.

- framework/tool/manifest.py is only relevant for 0.7-level Makefile/generator 
interaction, and can thus be removed from the 0.8 branch.

closing this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38225</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:00 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>