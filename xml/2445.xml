<bug>
          <bug_id>2445</bug_id>
          
          <creation_ts>2009-05-29 23:29:00 +0200</creation_ts>
          <short_desc>Add API method to access object methods, data types, etc.</short_desc>
          <delta_ts>2009-11-24 20:15:08 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dan Hummon">hummon+qooxdoo</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          <cc>fabian.jakobs</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10244</commentid>
            <who name="Dan Hummon">hummon+qooxdoo</who>
            <bug_when>2009-05-29 23:29:15 +0200</bug_when>
            <thetext>I am currently building a visual qooxdoo form designer and I would like to be able to access information on an object&#39;s properties from the designer itself. There is some support for this within $$properties on an object, but I have read that this structure is not meant for general use. I would like an API method for determining a list of all properties (and maybe methods, constants, etc) and data types.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10296</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-06-08 11:46:11 +0200</bug_when>
            <thetext>Christian, how do extract this information in the inspector? I would suggest we expose this
functionality in qx.util.PropertyUtil.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10303</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-06-08 12:12:46 +0200</bug_when>
            <thetext>Fabian, the inspector use $$properties to access the property list. (It&#39;s Martins old qx 0.7.x code, I have never touched this)

I have seen a static method getProperties(Class clazz) on qx.Class [1], this returns a list of all properties. Should we also implement a functionality in qx.util.PropertyUtil?

[1] http://demo.qooxdoo.org/current/apiviewer/#qx.Class~getProperties</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10368</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-06-15 10:24:37 +0200</bug_when>
            <thetext>I wasn&#39;t aware that qx.Class already provides much of the requested functionality:

getPropertyDefinition
getProperties
getByProperty
hasProperty

In combination with qx.util.PropertyUtil this should be sufficient for a property editor. 

I&#39;m closing this bug. Dan, please reopen if you are missing something in the public API.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12574</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-09-23 11:44:21 +0200</bug_when>
            <thetext>Closed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14509</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:15:08 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
      
      

    </bug>