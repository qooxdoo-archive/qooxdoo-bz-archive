<bug>
          <bug_id>1964</bug_id>
          
          <creation_ts>2009-02-18 10:44:00 +0100</creation_ts>
          <short_desc>Improve the configurability of the file structure for applications.</short_desc>
          <delta_ts>2014-03-03 15:24:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.system</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://forum.chip.de/html-css-javascript/qooxdoo-inline-app-verzeichnisproblem-1127556.html</bug_file_loc>
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7884</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-02-18 10:44:14 +0100</bug_when>
            <thetext>At the moment is isn&#39;t possible to change the name for &quot;resource&quot; and &quot;script&quot; in the source and build version. 

If a project has a other file structure, they has problems to run qooxdoo in source and build.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8877</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-24 19:08:32 +0100</bug_when>
            <thetext>Thomas, is this a valid issue? Not all variants of system integration can/should probably be solved by the qooxdoo configuration itself. Custom jobs and the likes could be a fair solution to integrate qooxdoo into very specific environments. 

Since Chris talks about &quot;low level applications&quot;, does this suggest to involve Alex as a BOM/low-level domain expert? </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8927</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-25 19:49:13 +0100</bug_when>
            <thetext>The bug stems from an online discussion (s. URL). I have talked with Chris, and 
several things seem to be involved here. There is nothing particular to 
low-level apps, so I&#39;ve changed the bug&#39;s summary accordingly. 

On a general level, if you deviate from the standard skeleton folder layout you 
might need to do things by hand. The various aspects can be seen when looking 
at the different jobs run to build an app version:

1. &#39;source-script&#39; job: You can rearrange the paths in your source folder. If 
you do so you must adapt the Manifest.json of your application, to match the 
changes. The generator should then pick up the new settings fine. According to 
Chris he made no observations to the contrary.

2. &#39;build-script&#39; job: You can rearrange your build version, using the 
compile-dist/uris config key. This will influence under which URIs the 
*generated code* will look for further application packages or resources. Ie. 
these URIs will be in the generated code, and they simply expect that the 
environment in which the code is eventually run reflects these URIs correctly. 
The config settings only affect the build-script job.

3. &#39;build-resources&#39; and &#39;build-files&#39; job: These jobs do the copying of files 
into the build folder structure. The target folder is configurable. Still the 
&#39;build-resources&#39; job will force a &#39;resource&#39; subfolder under the target, and 
the &#39;build-files&#39; job will mirror the relative paths from the source folder 
under the target. So there is some restriction here. When specifying special 
URIs for the build-script job with the compile-dist/uris config key, then 
generated code will honor them. But this doesn&#39;t affect the copying of build 
files. You have to tweak these jobs separately. This might seem like a bit of 
inconsistency, but it was implemented under the assumption that the various 
folders of the build version will be copied to some deployment path  (which 
might be on another machine) manually, and there is no attempt made to keep the 
targets for the copy files in automatic sync with the custom URIs of the 
generated script. You can make them match through corresponding config entries, 
given the restrictions noted above.

4. &#39;build-files&#39; job: Of special concern is the &#39;index.html&#39; which is copied 
over from the source folder to the build folder by the &#39;build-files&#39; job. If 
you rearranged your source structure, you have to adapt the default index file 
to match that (e.g. load the script loader from the new path). If you *also* 
rearranged the paths of your build folder, and the two environments differ, the 
copied index.html from the source folder will most likely not work. Again, 
adapt it manually, or better, maintain a special index.html for the build 
environment in the source environment, and copy *this* with the build-files job.

Other than adding this information to the manual in one way or the other, I 
don&#39;t see a particular bug worth fixing here. If there is a concrete change 
enhancement relating to this stuff it should be filed in a more specific bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11599</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-26 19:18:46 +0200</bug_when>
            <thetext>I think this can go with minimal prio. Haven&#39;t heard of other cases that 
stumbled upon this, and a big in-house project does all the folder magic 
outside the generator (ant), but not with it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11975</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 09:41:39 +0200</bug_when>
            <thetext>moved from 0.8.3 to 0.9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14739</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:00 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15026</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-27 11:30:53 +0100</bug_when>
            <thetext>I see the issue here, but it is such a corner case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38243</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:03 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>