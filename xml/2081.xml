<bug>
          <bug_id>2081</bug_id>
          
          <creation_ts>2009-03-09 18:11:00 +0100</creation_ts>
          <short_desc>qx.ui.form.RadioGroup does not fire changeValue event</short_desc>
          <delta_ts>2014-03-03 15:27:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8448</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-03-09 18:11:24 +0100</bug_when>
            <thetext>If the selection of a radio group is set via the select method, no changeValue 
event will be thrown. 
Give the appended code a try in the 0.8.2 Playground to reproduce the bug.



var manager = new qx.ui.form.RadioButton(&quot;Manager&quot;);
var client = new qx.ui.form.RadioButton(&quot;Client&quot;);

var mgr = new qx.ui.form.RadioGroup;
mgr.add(manager, client);

mgr.addListener(&quot;changeValue&quot;, function(e) {
  console.log(e);
}, this);

mgr.select(manager);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8451</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-09 18:27:28 +0100</bug_when>
            <thetext>Ouch.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8458</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-10 09:42:05 +0100</bug_when>
            <thetext>Try to add a value to the RadioButtons. Value != Label. If you listen for value changes but have not given any value to the items it might really not work well.

&quot;changeSelected&quot; would be an alternative to use when not dealing with values. Then you could still do a selected.getLabel() or something.

In my opinion this is invalid, but I keep it open for a moment to get your impression on this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8460</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-03-10 09:54:06 +0100</bug_when>
            <thetext>But i guess there is still something wrong even if there is set a value, the change event will not be fired. Give that code a try in the playground and you will see. 

But this brings another question to my mind. Do we really need two events, changeValue and changeSelected additionally with different behaviors? As we could see, this causes some misunderstandings of the usage of the events.



var manager = new qx.ui.form.RadioButton(&quot;Manager&quot;);
manager.setValue(&quot;v1&quot;);
var client = new qx.ui.form.RadioButton(&quot;Client&quot;);
client.setValue(&quot;v2&quot;);

var mgr = new qx.ui.form.RadioGroup;
mgr.add(manager, client);

mgr.addListener(&quot;changeValue&quot;, function(e) {
  console.log(e);
}, this);

mgr.select(manager);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8474</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-03-10 14:31:57 +0100</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8479</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-10 14:59:05 +0100</bug_when>
            <thetext>Normally selection is the better property for all objects natively dealing with this storage format. The value is just generated by the selection and fired when the selection is modified.

Still it&#39;s part of the IFormElement Interface to support the &quot;value&quot; as well. This basic understanding shouldn&#39;t be a problem. Even in HTML both exist: value and checked - just an example. Don&#39;t see a problem there.

Maybe it would be better to have some kind of fallback value when reading out radio-buttons. In HTML select boxes for example the label of the option is used, when no value is available. This is also done by most serialization engines for HTML (jQuery, qooxdoo), ... - so this might be a good fallback for the widget engine as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8481</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-03-10 15:07:39 +0100</bug_when>
            <thetext>If I use the code sipped from #3, I have the issue that the event is fired twice.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8482</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-03-10 15:20:54 +0100</bug_when>
            <thetext>I could life with such a fallback solution because this would make also the value event work always. But different behaviors of the events is not really a good idea.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9076</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-04-02 10:10:39 +0200</bug_when>
            <thetext>The both code examples (description and comment #3) can&#39;t working as expected. The problem in both examples is that the first &quot;changeValue&quot; and &quot;changeSelected&quot; event is fired after calling the add() method, but the listeners are registered after that. So the first event (changeVale) is never caught by the listener function.

The RadioGroup (manager) implements a one of N selection if the first item is added to the manager is will be selected 	automatically. So the &quot;mgr.select(manager)&quot; has no effect, because it is already selected.

In my opinion the RadioGroup works like expected. The only problem is that the &quot;changeValue&quot; event is fired twice if an item has a value like in comment #3. 

Thus I close the bug as invalid and opened a new bug report for the other problem (bug #2191)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39560</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:42 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>