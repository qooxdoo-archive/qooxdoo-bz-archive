<bug>
          <bug_id>133</bug_id>
          
          <creation_ts>2006-08-21 14:27:00 +0200</creation_ts>
          <short_desc>ComboBox ignores the scrolling of its parent container</short_desc>
          <delta_ts>2014-03-03 15:23:48 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.layout</component>
          <version>0.6-rc1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>64</dup_id>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Perez">craquerpro</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>294</commentid>
            <who name="David Perez">craquerpro</who>
            <bug_when>2006-08-21 14:27:50 +0200</bug_when>
            <thetext>When you place a ComboBox in a container that has a vertical scroll bar (i.e. a BoxLayout) and the position of the scroll bar != &#39;top&#39;, then:
when you click the combo, the list of the combobox, is placed in a wrong position, exactly lower than the distance scrolled in the container.

Clearly, the scrolling of containers aren&#39;t taken into account when positioning.

This bug should be very easy to solve, once is located the place of positioning in the code.

This behaviour happens in 0.5.3 and 0.6RC1.

Here is a routine that calculates the position of an element, taking into account the scrolling of each parent container, that I used to use successfully:

function getAbsolutePosition(el) {
	var SL = 0, ST = 0;
	var is_div = /^div$/i.test(el.tagName);
	if (is_div &amp;&amp; el.scrollLeft)
		SL = el.scrollLeft;
	if (is_div &amp;&amp; el.scrollTop)
		ST = el.scrollTop;
	var r = { x: el.offsetLeft - SL, y: el.offsetTop - ST };
	if (el.offsetParent) {
		var tmp = arguments.callee(el.offsetParent);
		r.x += tmp.x;
		r.y += tmp.y;
	}
	return r;
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>304</commentid>
              <attachid>32</attachid>
            <who name="David Perez">craquerpro</who>
            <bug_when>2006-08-31 08:54:04 +0200</bug_when>
            <thetext>Created attachment 32
Proposed patch

Probably something similar must be done to horizontal scrolling.
Maybe a new routine in qx.dom.DomLocation must be done.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>308</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-08-31 13:54:40 +0200</bug_when>
            <thetext>It seems that getPageBoxTop don&#39;t respect the scrolling. I think we should better fix it this way. @David: Can you migrate your idea into DomLocation instead?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>315</commentid>
            <who name="David Perez">craquerpro</who>
            <bug_when>2006-09-01 12:34:17 +0200</bug_when>
            <thetext>Should I change qx.dom.DomLocation.getPageBoxXXX()?
I didn&#39;t do that, because I didn&#39;t know exactly what they were supposed to do.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>356</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-09-04 14:08:06 +0200</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 64 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38151</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:48 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>32</attachid>
            <date>2006-08-31 08:54:00 +0200</date>
            <delta_ts>2006-08-31 08:54:04 +0200</delta_ts>
            <desc>Proposed patch</desc>
            <filename>ComboBox.diff</filename>
            <type>text/plain</type>
            <size>571</size>
            <attacher>craquerpro</attacher>
            
              <data encoding="base64">SW5kZXg6IENvbWJvQm94LmpzCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIENvbWJvQm94LmpzCShyZXZpc2lvbiA0
MDcyKQorKysgQ29tYm9Cb3guanMJKHdvcmtpbmcgY29weSkKQEAgLTU3Miw3ICs1NzIsNyBAQAog
ICB9CiAKICAgcC5zZXRMZWZ0KHF4LmRvbS5Eb21Mb2NhdGlvbi5nZXRQYWdlQm94TGVmdChlbCkr
MSk7Ci0gIHAuc2V0VG9wKHF4LmRvbS5Eb21Mb2NhdGlvbi5nZXRQYWdlQm94VG9wKGVsKSArIHF4
LmRvbS5Eb21EaW1lbnNpb24uZ2V0Qm94SGVpZ2h0KGVsKSk7CisgIHAuc2V0VG9wKHF4LmRvbS5E
b21Mb2NhdGlvbi5nZXRDbGllbnRBcmVhVG9wKGVsKStxeC5kb20uRG9tRGltZW5zaW9uLmdldEJv
eEhlaWdodChlbCktKHF4LnN5cy5DbGllbnQuZ2V0SW5zdGFuY2UoKS5pc0dlY2tvKCkgPyBxeC5k
b20uRG9tU3R5bGUuZ2V0Qm9yZGVyVG9wKGVsKTowKSk7CiAgIHAuc2V0V2lkdGgodGhpcy5nZXRC
b3hXaWR0aCgpLTIpOwogCiAgIHAuc2V0UGFyZW50KHRoaXMuZ2V0VG9wTGV2ZWxXaWRnZXQoKSk7
Cg==
</data>

          </attachment>
      

    </bug>