<bug>
          <bug_id>9071</bug_id>
          
          <creation_ts>2015-04-13 14:58:00 +0200</creation_ts>
          <short_desc>Check new module builds for class duplications</short_desc>
          <delta_ts>2015-04-20 22:04:15 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>tool</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43072</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-13 14:58:57 +0200</bug_when>
            <thetext>As soon as we have fixed bug 9069, we should check the new module build that no duplicate classes are in the modules.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43090</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-04-14 16:18:36 +0200</bug_when>
            <thetext>I redefined the qxWeb modules by splitting Core up into several smaller modules (Bug #9061). The generated modules work when using the Python toolchain but not when the same configuration is used with the new Grunt-based tooling:
In the old system, qx.core.Environment is included in the Environment module even though it is also a dependency of qxWeb, which is excluded from the module using the = prefix. This is not the case in Grunt-based builds so the class is missing from the generated file.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43135</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-04-20 22:04:15 +0200</bug_when>
            <thetext>Done - but couldn&#39;t remove the class duplications. This isn&#39;t possible without more fine-grained manual dependency management. For example &quot;qx.module.Io&quot; and &quot;qx.module.Rest&quot; bring along very similar dependencies:

  |  [ &#39;qx.module.Io&#39;,
  |    &#39;qx.io.request.AbstractRequest&#39;,
  |    &#39;qx.io.request.Jsonp&#39;,
  |    &#39;qx.util.Request&#39;,
  |    &#39;qx.util.Serializer&#39;,
  |    &#39;qx.util.PropertyUtil&#39;,
  |    &#39;qx.io.request.Script&#39;,
  |    &#39;qx.io.request.Xhr&#39;,
  |    &#39;qx.util.ResponseParser&#39; ]

  |  [ &#39;qx.module.Rest&#39;,
  |    &#39;qx.io.rest.Resource&#39;,
  |    &#39;qx.core.ObjectRegistry&#39;,
  |    &#39;qx.io.request.AbstractRequest&#39;,
  |    &#39;qx.io.request.Xhr&#39;,
  |    &#39;qx.util.Request&#39;,
  |    &#39;qx.util.Serializer&#39;,
  |    &#39;qx.util.PropertyUtil&#39;,
  |    &#39;qx.util.ResponseParser&#39; ]

However, this has been done:
* added equal sign (&#39;=&#39;) processing for excludes (during &quot;source&quot;- and &quot;build&quot;-task run).
* rectified includes and excludes for module builds
* added testrunner which tests the module builds (&quot;index-module.html&quot;)

After a test run the testrunner a) displays 176 passes with 5 failures and b) is cluttered with dummy html elements - this should be addressed in a follow up bug. Will open one.

The issue from comment #1 is fixed, but only testable in the &quot;module&quot; branch (in order to test that, the grunt task for &quot;qx.module.Environment&quot; could also be copied over to &quot;framework/Gruntfile.js&quot; from one branch to the other: &quot;module&quot; -&gt; &quot;master&quot;)

master: ac1e24361e3672b87ebb42e0d7bb8cf60cd86434</thetext>
          </long_desc>
      
      

    </bug>