<bug>
          <bug_id>3355</bug_id>
          
          <creation_ts>2010-01-21 16:20:00 +0100</creation_ts>
          <short_desc>qx.bom.Window resp. showModalDialog breaks window.opener</short_desc>
          <delta_ts>2014-03-03 15:22:38 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>1.0</version>
          <rep_platform>IE</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Schuff">christian.schuff</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>16325</commentid>
            <who name="Christian Schuff">christian.schuff</who>
            <bug_when>2010-01-21 16:20:43 +0100</bug_when>
            <thetext>The use of qx.bom.Window resp. the method showModalDialog like it is done in line 124:
window.showModalDialog(url, null, configurationString);
breaks the use of window.opener in those dialogs within IE (8, others?).

You could partly solve this problem by setting self as the opener/parent.
window.showModalDialog(url, self, configurationString);

It is now possible to reach to object formerly known as window.opener by window.dialogArguments in IE.

see http://p2p.wrox.com/html-code-clinic/6425-referencing-parent-page-modal-dialog.html#post85383

Well, better than nothing :) A hint in the API-docs might be helpful.

Greets
Christian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16326</commentid>
            <who name="Christian Schuff">christian.schuff</who>
            <bug_when>2010-01-21 16:37:44 +0100</bug_when>
            <thetext>The best solution the framework could provide would be to let the developer decide whether qx.bom.Window should use a native modal dialog or should use its yet implemented mechanism to fake modal behaviour.

Developers that need window.opener in their modal dialogs or simply dont like the native behaviour of modal dialogs (like i do :) that way could have the full comfort of automatically blocking the parent window.

Something like:
open : function(url, name, options, modal, useNativeModalDialog) {
...
if (this.__isCapableToOpenModalWindows() &amp;&amp; useNativeModalDialog) {
          return window.showModalDialog(url, null, configurationString);
        } else {
// fake behaviour with framework blocker.
}
}

should do the job.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16327</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-01-21 16:48:10 +0100</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16329</commentid>
            <who name="Christian Schuff">christian.schuff</who>
            <bug_when>2010-01-21 17:06:46 +0100</bug_when>
            <thetext>Access to the contained blocker e.g. for styling reasons is also desirable :)

And one last thing:
In our former implementation we had set an onclick listener on the blocker and
refocused the modal dialog everytime the user clicked in the parent
application/window-viewport. That imho was a helpful and user-friendly
behaviour.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16402</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-01-25 16:57:47 +0100</bug_when>
            <thetext>moving on to milestone 1.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16796</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-02-11 15:51:05 +0100</bug_when>
            <thetext>accepting</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16800</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-02-12 14:47:50 +0100</bug_when>
            <thetext>(In reply to comment #3)
&gt; And one last thing:
&gt; In our former implementation we had set an onclick listener on the blocker and
&gt; refocused the modal dialog everytime the user clicked in the parent
&gt; application/window-viewport. That imho was a helpful and user-friendly
&gt; behaviour.
This behaviour is not cross-browser available and will not be included in the window class.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16804</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-02-12 16:29:11 +0100</bug_when>
            <thetext>Fixed with Revision #21561

  * a reference to the window opener is passed to the modal window to use &quot;window.dialogArguments&quot; for retrieving
  * added a public API method to get the blocker instance
  * let the application developer decide whether he wants to use native modal windows or the &quot;faked&quot; implementation of them
  
This feature will be available with the upcoming 1.1 release and is *not* part of the 1.0.2 release.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37750</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:38 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>