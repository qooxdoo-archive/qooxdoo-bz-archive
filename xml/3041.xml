<bug>
          <bug_id>3041</bug_id>
          
          <creation_ts>2009-11-10 16:45:00 +0100</creation_ts>
          <short_desc>qx.lang.String.pad is slow (also: qx.lang.String.repeat)</short_desc>
          <delta_ts>2010-03-11 09:58:02 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>0.8.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Matthew">matthew+qooxdoo</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>14028</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-10 16:45:05 +0100</bug_when>
            <thetext>The qx.lang.String.pad function is quite slow and could be greatly improved. Also, it can be used as a kind of stringOfChar function.
Would be nice to impliment a stringOfChar and have pad call this</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14029</commentid>
              <attachid>651</attachid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-10 16:47:43 +0100</bug_when>
            <thetext>Created attachment 651
Proposed Patch

This is what I&#39;ve come up with, tested in firefox and IE and it works great!

In short:
stringOfChar : function(ch, length)
  return length &gt;= 0 ? new Array(length + 1).join(ch) : &quot;&quot;;

pad : function(str, length, ch)
  return this.stringOfChar(ch || &quot;0&quot;, str.length - length) + str;


BTW: I created the patch using an svn vendor branch we have for qooxdoo. It means the revision numbers don&#39;t match, hope that doesn&#39;t cause a problem applying it :s</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14032</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-10 18:44:49 +0100</bug_when>
            <thetext>Nice little gem.

Daniel, Matt, could you come up with a name that better fits into qooxdoo (i.e. less Delphi than String.stringOfChar())? What about qx.lang.String.fromChar()?

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14035</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-11 10:13:38 +0100</bug_when>
            <thetext>I thought stringFromChar was generic? (I did get the name from the Delphi VCL, although I would like to point out I&#39;m a C++ man, just for the record).

Personally I think fromChar is too similar to String.fromCharCode which is completely different. Only personal preference though, I&#39;m happy with any name as long as it&#39;s reasonable :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14040</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-11 10:47:13 +0100</bug_when>
            <thetext>Forgot to mention that this function also works great with a full string passed in

stringOfChar(&quot;Abc&quot;, 5) === &quot;AbcAbcAbcAbcAbc&quot;

So a possible name for it could be something along the lines of qx.lang.String.multiply ?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14042</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-11 14:11:39 +0100</bug_when>
            <thetext>Great, didn&#39;t know about that, so what about String.repeat() then?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14046</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-11 14:47:15 +0100</bug_when>
            <thetext>I&#39;m happy with qx.lang.String.repeat</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14199</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-18 16:19:43 +0100</bug_when>
            <thetext>Oops just realised a mistake in this patch.

Should be

    return this.stringOfChar(ch || &quot;0&quot;, length - str.length) + str;

not

    return this.stringOfChar(ch || &quot;0&quot;, str.length - length) + str;

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14325</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-11-23 15:56:57 +0100</bug_when>
            <thetext>Matthew, thank your for this patch. I&#39;ve applied a slightly modified version of it (including unit tests) in r20739.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14681</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:16:34 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15037</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-11-27 16:41:28 +0100</bug_when>
            <thetext>Thanks Fabian.
My collegue isn&#39;t very happy though that we didn&#39;t get a mention the release notes

http://qooxdoo.org/about/release_notes/1.0-beta1

Framework
  Performance
    * Disposing of objects takes less time
    * Assertions are faster now
    * qx.html.element.Style.setStyles has been improved
    * !!! Improved qx.lang.String.pad !!!

Ah well! Thanks again :)</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>651</attachid>
            <date>2009-11-10 16:47:00 +0100</date>
            <delta_ts>2009-11-10 16:47:43 +0100</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>3041.patch</filename>
            <type>text/plain</type>
            <size>1282</size>
            <attacher>matthew+qooxdoo</attacher>
            
              <data encoding="base64">SW5kZXg6IGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvbGFuZy9TdHJpbmcuanMNCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NCi0tLSBmcmFtZXdvcmsvc291cmNlL2NsYXNzL3F4L2xhbmcvU3RyaW5nLmpzCShyZXZpc2lv
biAxMTM5MikNCisrKyBmcmFtZXdvcmsvc291cmNlL2NsYXNzL3F4L2xhbmcvU3RyaW5nLmpzCSh3
b3JraW5nIGNvcHkpDQpAQCAtMTcxLDYgKzE3MSwxNyBAQA0KICAgICAgIHJldHVybiBmdWxsc3Ry
LnN1YnN0cmluZyhmdWxsc3RyLmxlbmd0aCAtIHN1YnN0ci5sZW5ndGgsIGZ1bGxzdHIubGVuZ3Ro
KSA9PT0gc3Vic3RyOwogICAgIH0sCiAKKyAgICAvKioKKyAgICAgKiBSZXR1cm5zIGEgc3RyaW5n
IGNvbnRhaW5pbmcgYSByZXBlYXRpbmcgY2hhcmFjdGVyIHN0cmluZyBvZiB0aGUgbGVuZ3RoIHNw
ZWNpZmllZC4KKyAgICAgKgorICAgICAqIEBwYXJhbSBjaCB7U3RyaW5nfSBjaGFyYWN0ZXIgdXNl
ZCB0byBidWlsZCB0aGUgc3RyaW5nCisgICAgICogQHBhcmFtIGxlbmd0aCB7SW50ZWdlcn0gdGhl
IGZpbmFsIGxlbmd0aCBvZiB0aGUgc3RyaW5nCisgICAgICogQHJldHVybiB7U3RyaW5nfSBwYWRk
ZGVkIHN0cmluZworICAgICAqLworICAgIHN0cmluZ09mQ2hhciA6IGZ1bmN0aW9uKGNoLCBsZW5n
dGgpCisJCXsKKyAgICAgIHJldHVybiBsZW5ndGggPj0gMCA/IG5ldyBBcnJheShsZW5ndGggKyAx
KS5qb2luKGNoKSA6ICIiOworICAgIH0sCiAKICAgICAvKioKICAgICAgKiBQYWQgYSBzdHJpbmcg
dXAgdG8gYSBnaXZlbiBsZW5ndGguIFBhZGRpbmcgY2hhcmFjdGVycyBhcmUgYWRkZWQgdG8gdGhl
IGxlZnQgb2YgdGhlIHN0cmluZy4KQEAgLTE4MSwxOCArMTkyLDggQEANCiAgICAgICogQHJldHVy
biB7U3RyaW5nfSBwYWRkZGVkIHN0cmluZwogICAgICAqLwogICAgIHBhZCA6IGZ1bmN0aW9uKHN0
ciwgbGVuZ3RoLCBjaCkKLSAgICB7Ci0gICAgICBpZiAodHlwZW9mIGNoID09PSAidW5kZWZpbmVk
IikgewotICAgICAgICBjaCA9ICIwIjsKLSAgICAgIH0KLQotICAgICAgdmFyIHRlbXAgPSAiIjsK
LQotICAgICAgZm9yICh2YXIgaT1zdHIubGVuZ3RoOyBpPGxlbmd0aDsgaSsrKSB7Ci0gICAgICAg
IHRlbXAgKz0gY2g7Ci0gICAgICB9Ci0KLSAgICAgIHJldHVybiB0ZW1wICsgc3RyOworICAgIHsJ
CQorICAgICAgcmV0dXJuIHRoaXMuc3RyaW5nT2ZDaGFyKGNoIHx8ICIwIiwgc3RyLmxlbmd0aCAt
IGxlbmd0aCkgKyBzdHI7CiAgICAgfSwKIAogCg==
</data>

          </attachment>
      

    </bug>