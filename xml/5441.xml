<bug>
          <bug_id>5441</bug_id>
          
          <creation_ts>2011-07-25 15:18:00 +0200</creation_ts>
          <short_desc>Native scrollbars look ugly on OSX lion</short_desc>
          <delta_ts>2011-10-24 08:52:11 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>thron7</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26235</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-07-25 15:18:05 +0200</bug_when>
            <thetext>We should get that fixed maybe by reducing the size of the scrollbar itself or by just applying a transparent background color or something like that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26771</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-09-13 11:52:42 +0200</bug_when>
            <thetext>That one had more impact than I thought in the first place. I had to change the layout of the abstract scroll area to canvas to make it possible to position the scroll bars on top of the content. That means, that the layout will be set depending on the new introduced environment check.
I also had to implement almost the same for the table because the common baseclass is not used there.

trunk: r28638
1.5.x: r28639</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26855</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-09-20 17:43:44 +0200</bug_when>
            <thetext>r28662 broke the basic skeleton: qx.bom.client.OperatingSystem.scollBarOverlayed now depends on qx.bom.element.Overflow, which pulls a number of qx.bom classes that assume a browser environment into the basic application.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26858</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-09-21 11:11:50 +0200</bug_when>
            <thetext>Moved the feature check into a separate class which simply fixed the issue. :)

trunk: r28709
1.5.x: r28710</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26961</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-09-26 19:12:31 +0200</bug_when>
            <thetext>Martin,

I fixed the generator in 1.5.x (r28782), so the Feedreader is fine again.

Still, the same problem Daniel reported earlier applies in the branch as well: 
The basic skeleton is now broken, as there are a number of extra classes being 
drawn in:

&quot;qx:qx/bom/element/Overflow.js&quot;,
&quot;qx:qx/bom/element/Cursor.js&quot;,
&quot;qx:qx/bom/element/BoxSizing.js&quot;,
&quot;qx:qx/bom/Document.js&quot;,
&quot;qx:qx/bom/Viewport.js&quot;,
&quot;qx:qx/bom/element/Clip.js&quot;,
&quot;qx:qx/bom/element/Opacity.js&quot;,
&quot;qx:qx/bom/element/Style.js&quot;

This creates a dependency to &quot;document&quot; (&quot;Viewport&quot; is the first to bomb). I 
don&#39;t know if you want to re-apply your fix from trunk here as well, or if it 
should be fixed through other means. Let me know.

BTW: There is a typo in some classes: *.scollBarOverlayed -&gt; 
*.scrollBarOverlayed, both in trunk and branch.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27038</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-09-29 10:18:51 +0200</bug_when>
            <thetext>Fixed that typo.

trunk: r28824
1.5.x: r28825


Assign the bug to thomas to check why the basic skeleton is not working in the source version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27121</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-10-06 16:48:02 +0200</bug_when>
            <thetext>We decided to explicitly exclude qx.bom.element.Overflow from the basic 
skeleton. This way, qx.bom.client.Scroll gets in, as qx.core.Environment needs 
it in the source version, where no useCheck optimization is applied. I don&#39;t 
see a good alternative in the branch, which still relies on useCheck 
dependencies for feature checks.

As a consequence, people with existing 1.5 basic skeletons will need to add 
qx.bom.element.Overflow to their config.json (this will be documented in the 
release notes). The rational behind this is that we deemed it more important 
that 1.5.x users get the benefit of the Lion scrollbar patch. On the other 
side, people working with the 1.5 basic skeleton are probably few, and more 
likely to go to 1.6 directly, as the node/Rhino support in qooxdoo is fairly 
new and more in flux.

With r28862.</thetext>
          </long_desc>
      
      

    </bug>