<bug>
          <bug_id>7521</bug_id>
          
          <creation_ts>2013-07-09 11:54:00 +0200</creation_ts>
          <short_desc>Focus doesn&#39;t work on iOS</short_desc>
          <delta_ts>2013-08-26 09:13:59 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>iOS</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>dietrich.streifert</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33280</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-09 11:54:48 +0200</bug_when>
            <thetext>Taping on a input field does not focus the input field on iOS which means that you don&#39;t get a virtual keyboard.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33282</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-09 12:01:43 +0200</bug_when>
            <thetext>Thank you Martin.

Just wanted to remind that this only happens if qx.emulatemouse is set to true. 

If qx.emulatemouse is set to false the focus is working as expected.

Regards
Dietrich</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33284</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-09 12:43:51 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; Thank you Martin.
&gt; 
&gt; Just wanted to remind that this only happens if qx.emulatemouse is set to true. 
&gt; 
&gt; If qx.emulatemouse is set to false the focus is working as expected.
&gt; 
&gt; Regards
&gt; Dietrich

iOS has some restriction that focusing not triggered by a UI Interaction like a click does not focus the input field and with that, does not bring up the keyboard. If mouse emulation is of, we use the native click event and everything is fine. As soon as we enable the mouse emulation, we fake the click event based on the touch events and thats where the problem comes in. Still, I found a fix by setting the native focus directly.

master: 8bedcbbb83a55767b7b3982d9138f2b8776a35fd</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33288</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-09 17:20:39 +0200</bug_when>
            <thetext>Sorry for reopening again.

The fix does not work if a field gets programmatically focused by calling field.focus().

The focus state is visualized correct, but without showing the caret and without opening the virtual keyboard. If you try to focus the field by tapping on the field, nothing happens because it already has the focus state (from the qx point of view).

Regards
Dietrich</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33289</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-09 17:21:38 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; Sorry for reopening again.
&gt; 
&gt; The fix does not work if a field gets programmatically focused by calling
&gt; field.focus().
&gt; 
&gt; The focus state is visualized correct, but without showing the caret and
&gt; without opening the virtual keyboard. If you try to focus the field by tapping
&gt; on the field, nothing happens because it already has the focus state (from the
&gt; qx point of view).
&gt; 
&gt; Regards
&gt; Dietrich

Tested with master 9f15726cfe4171808993d12745df819e669f6d27</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33296</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-10 12:58:04 +0200</bug_when>
            <thetext>This seems to be a restriction of iOS. I did read a bit about all that topic and it seems that the keyboard will only be shown if the first entry in the stacktrace is triggered by a user interaction. I did not found a workaround which would enable us to fix that issue.
But I found another bug with the two combo boxes not showing the keyboard as well. Fixed that on master:
a4806a938de86fce3e6f317047dedcf240454c4f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33300</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-10 14:10:58 +0200</bug_when>
            <thetext>Hi Martin,

I&#39;m sorry for reopening again.

OK so programatically setting the focus does not work, but the field gets the &quot;focused&quot; state and appearance.

Taping on the field in this state does not focus the field because the event is blocked (I suspect by calling preventDefault or similar) due to being, from the qooxdoo point of view, already focused (?!?!?).

It would be great to have the tap on the already focused field (in this state) show the caret and have the virtual keyboard appear.

Otherwise the user has to tap on another field and then tap the field again to get the keyboard.

Regards
Dietrich</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33302</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-10 15:02:33 +0200</bug_when>
            <thetext>Wait! I WAS able to set the focus to a text field programatically!

After reading about the problem and a vague hint in the sencha forum:

http://www.sencha.com/forum/showthread.php?253822-Does-the-Focus-method-work-in-iOS5-Safari-Mobile-for-form-fields

I searched in the the qooxdoo sources and found the method qx.ui.form.AbstractField._onMouseDownPlaceholder

    /**
     * Remove the fake placeholder
     */
    _onMouseDownPlaceholder : function() {
      this.focus();
      /*
      window.setTimeout(function() {
        this.focus();
      }.bind(this), 0);
      */
    },

where the focus was set throug a window.setTimeout call.

If I directly set the focus here via this.focus it works.

On the way through my app logic I also had a timer where I set the focus after a short delay. I removed this timer as well and set the focus directly. Then it worked!

This is for iOS 6.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33303</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-10 15:19:04 +0200</bug_when>
            <thetext>(In reply to comment #7)
&gt; Wait! I WAS able to set the focus to a text field programatically!
&gt; 
&gt; After reading about the problem and a vague hint in the sencha forum:
&gt; 
&gt; http://www.sencha.com/forum/showthread.php?253822-Does-the-Focus-method-work-in-iOS5-Safari-Mobile-for-form-fields
&gt; 
&gt; I searched in the the qooxdoo sources and found the method
&gt; qx.ui.form.AbstractField._onMouseDownPlaceholder
&gt; 
&gt;     /**
&gt;      * Remove the fake placeholder
&gt;      */
&gt;     _onMouseDownPlaceholder : function() {
&gt;       this.focus();
&gt;       /*
&gt;       window.setTimeout(function() {
&gt;         this.focus();
&gt;       }.bind(this), 0);
&gt;       */
&gt;     },
&gt; 
&gt; where the focus was set throug a window.setTimeout call.
&gt; 
&gt; If I directly set the focus here via this.focus it works.
&gt; 
&gt; On the way through my app logic I also had a timer where I set the focus after
&gt; a short delay. I removed this timer as well and set the focus directly. Then it
&gt; worked!
&gt; 
&gt; This is for iOS 6.

This code should never run on an iPad because its only used for browsers not supporting the HTML placeholder attribute which is supported by iOS as far as I know. But yes, removing the timeout would fix the problem if the timeout is triggered by a user input (e.g. mousedown). But if not, this is not supposed to work, according to apple.

I see tomorrow if I can fix the issue with the tap on the already focused field.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33307</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-10 16:08:53 +0200</bug_when>
            <thetext>(In reply to comment #8)

&gt; This code should never run on an iPad because its only used for browsers not
&gt; supporting the HTML placeholder attribute which is supported by iOS as far as I
&gt; know. But yes, removing the timeout would fix the problem if the timeout is
&gt; triggered by a user input (e.g. mousedown). But if not, this is not supposed to
&gt; work, according to apple.

Yes your right :-/

So the fix in my case simply was NOT the change in the placeholder related method but in my own code where I removed the timer and set the focus directly.

I&#39;m setting the focus within an execute event listener of a button.

&gt; 
&gt; I see tomorrow if I can fix the issue with the tap on the already focused
&gt; field.

Thank you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33336</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-07-11 14:54:18 +0200</bug_when>
            <thetext>Could fix that issue with a blur of the focus target in case the target is already focused. That brings up the keyboard if you tap on a field which has been focused by code.

master: f275e35bd56f8251450ad7b2ea2e25d82d5f2ed6</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33352</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2013-07-12 10:02:12 +0200</bug_when>
            <thetext>(In reply to comment #10)
&gt; Could fix that issue with a blur of the focus target in case the target is
&gt; already focused. That brings up the keyboard if you tap on a field which has
&gt; been focused by code.
&gt; 
&gt; master: f275e35bd56f8251450ad7b2ea2e25d82d5f2ed6

Fix verified on iPad 3 with iOS 6.1.3 and Safari.

Thank you for the fix.

Regards
Dietrich</thetext>
          </long_desc>
      
      

    </bug>