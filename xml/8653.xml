<bug>
          <bug_id>8653</bug_id>
          
          <creation_ts>2014-10-24 10:33:00 +0200</creation_ts>
          <short_desc>Performance problem in MEmitter</short_desc>
          <delta_ts>2014-11-24 16:32:08 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41445</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2014-10-24 10:33:07 +0200</bug_when>
            <thetext>MEmitter uses sparse Arrays to store the listeners registered for each event type where the listener id is used as the Array index. MEmitter.off uses forEach to traverse the storage Arrays which is faster than a for loop but can still be noticeably slow if an application registers many listeners and the listener ids start to reach five figures. This can be observed in ui.mobile.control.Calendar where re-rendering to display a different month takes longer each time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41679</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2014-11-24 16:32:08 +0100</bug_when>
            <thetext>off() now iterates over the storage array from behind. This is much faster since the storage length increases over time and only the last items have values.

Fixed on next with 9dfc50743aabf13a867dfbd7932ac7514e96d663</thetext>
          </long_desc>
      
      

    </bug>