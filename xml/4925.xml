<bug>
          <bug_id>4925</bug_id>
          
          <creation_ts>2011-04-03 11:59:00 +0200</creation_ts>
          <short_desc>Knowing what locales in parts are available for loading</short_desc>
          <delta_ts>2013-12-16 12:46:33 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.locale</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>4090</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23778</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-04-03 11:59:10 +0200</bug_when>
            <thetext>if an application is generated with the locale information in the boot package, the following line:

qx.locale.Manager.getInstance().getAvailableLocales()

gives all locales translated, loaded and available.

The same is not true for an application generated by 

&quot;i18n-with-boot&quot; : false

in the config.json, instead ONLY the locales loaded are available.

This is how it should be, but we also need to know what locales are available in the separate parts available for loading, not yet available for using but translated residing in separate parts. We can not find a way to find out about it else than this:

var knownParts = qx.Part.getInstance().getParts();

qx.$$loader

which is giving an Array of ALL parts, also the non-i18n ones, available for loading.

In a boot part with no i18n info gives empty:

qx.$$translations
and
qx.$$locales

There is no way to get to know the locales available for loading. It must be hard coded in the application, which is not a good way to achieve this.

Proposal:
1. It would be good to restructure this in the generated file
2. use the empty qx.$$locales, containing all locales available for loading, in the boot after adding a switch like: i18n in parts
3. change: use getAvailableLocales for locales available for loading from parts and a new getAccessibleLocales for the ones you can use directly in the application</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23779</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-04-03 17:06:36 +0200</bug_when>
            <thetext>to keep integrity with previous getAvailableLocales, keep that as it is though the naming is ambiguous

and

extend with getAccessibleLocales which means all locals in boot and all parts if any. These locals can be saved in the boot part if

1. no parts with i18n
2. parts with i18n

and a switch added like i18nInBoot to differ between the two cases!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23780</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-04-03 17:33:38 +0200</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 4090 ***</thetext>
          </long_desc>
      
      

    </bug>