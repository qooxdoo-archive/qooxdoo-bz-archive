<bug>
          <bug_id>7804</bug_id>
          
          <creation_ts>2013-10-18 16:42:00 +0200</creation_ts>
          <short_desc>Issue with focused column on tables</short_desc>
          <delta_ts>2014-10-21 07:59:22 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>1.4.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jeroen">Jeroen.Smit</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34109</commentid>
            <who name="Jeroen">Jeroen.Smit</who>
            <bug_when>2013-10-18 16:42:30 +0200</bug_when>
            <thetext>I am running into trouble around runtime changes of the colums behind a table.
When the focused column has been set (e.g. by a user clicking the table) and it is for example the 10th column we experience runtime crashes when any kind of focus adjustment is done after the set of available columns is changed such that we have less columns than where the focus currently is.

Below the code that is executed in setFocusedCell. It first checks on isEditing which uses “getTableColumnModel().getVisibleX” given the focused column. This crashes because the column index is no longer valid.

In my opinion handling a change in metadata on the table should also look at the set of available columns and when the current focus is no longer valid reset it. Is this also a bug according to you? If so I will open a bugreport.

By the way, I am currently working with version 1.4.1 but the current code seems to do the same.

/**
 * Returns whether currently a cell is editing.
 *
 * @return {var} whether currently a cell is editing.
 */
isEditing : function()
{
  if (this.__focusedCol != null)
  {
    var x = this.getTableColumnModel().getVisibleX(this.__focusedCol);
    var metaColumn = this._getMetaColumnAtColumnX(x);
    return this.getPaneScroller(metaColumn).isEditing();
  }
  return false;
},

/**
 * Sets the currently focused cell. A value of &lt;code&gt;null&lt;/code&gt; hides the
 * focus cell.
 *
 * @param col {Integer?null} the model index of the focused cell&#39;s column.
 * @param row {Integer?null} the model index of the focused cell&#39;s row.
 * @param scrollVisible {Boolean ? false} whether to scroll the new focused cell
 *          visible.
 * @return {void}
 */
setFocusedCell : function(col, row, scrollVisible)
{
  if (!this.isEditing() &amp;&amp; (col != this.__focusedCol || row != this.__focusedRow))
  {
    if (col === null) {
      col = 0;
    }

    this.__focusedCol = col;
    this.__focusedRow = row;

    var scrollerArr = this._getPaneScrollerArr();

    for (var i=0; i&lt;scrollerArr.length; i++) {
      scrollerArr[i].setFocusedCell(col, row);
    }

    if (col !== null &amp;&amp; scrollVisible) {
      this.scrollCellVisible(col, row);
    }
  }
},</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41417</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-10-21 07:59:22 +0200</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>