<bug>
          <bug_id>3194</bug_id>
          
          <creation_ts>2009-12-07 16:04:00 +0100</creation_ts>
          <short_desc>Statics don&#39;t appear in API Viewer</short_desc>
          <delta_ts>2014-03-03 15:23:34 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.apidata</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan Weiß">qooxdoo-bugs</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>derrell.lipman</cc>
    
    <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15377</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-12-07 16:04:56 +0100</bug_when>
            <thetext>The data isn&#39;t in the JSON file either.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15389</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-12-07 16:51:33 +0100</bug_when>
            <thetext>Johnny noticed that for qx.util.fsm.FiniteStateMachine, but other classes could also be affected. Looks like a more general issue of API generation, so assigned it to you, Daniel, as we just talked about, potentially (but hopefully not) revealing more issues before 1.0. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15409</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-08 14:45:58 +0100</bug_when>
            <thetext>Fixed in r20989: The generator ignored constants with names containing lowercase letters. Removed this restriction after discussing with Thomas and Andreas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15666</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-10 16:24:09 +0100</bug_when>
            <thetext>Reopened: After some more discussion with the other core devs, we decided to undo this change. The APIViewer should primarily reflect the public API while the camel case-named constants generally are for internal use only.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15667</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-10 16:25:42 +0100</bug_when>
            <thetext>Reverted in r21064.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15671</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-12-11 04:34:05 +0100</bug_when>
            <thetext>Those constants in qx.util.fsm.FiniteStateMachine are very much a part of the external interface. The are used as parameters to the Transition constructor. Although their use is documented with the Transition constructor, they should also appear in the FiniteStateMachine API docs.

More importantly, that format is used to group related constants, and should not be discouraged by having those constants not shown in the API viewer.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15672</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-12-11 08:16:28 +0100</bug_when>
            <thetext>Derrell, if the constants are meant to be part of the API, just write them uppercase and they will appear in the API documentation. ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15673</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-12-11 08:17:19 +0100</bug_when>
            <thetext>-&gt; WONTFIX</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15680</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-11 10:26:45 +0100</bug_when>
            <thetext>Derrell, you&#39;re right, setting it to wontfix wasn&#39;t quite right. We just 
intended to do it after the 1.0 release, so there wouldn&#39;t be so much API doc 
need fixing for 1.0 in the framework. Could you, for the sake of API 
completeness and for the time being, turn this three (if I&#39;m right) static 
members, &quot;StateChange&quot;, &quot;EventHandling&quot; and &quot;DebugFlags&quot;, to all-uppercase, 
until this has been settled?!

To 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15733</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-12-11 12:57:43 +0100</bug_when>
            <thetext>I could change them to upper case (although that would be an incompatible change). I don&#39;t think it&#39;s appropriate, though. Those camelcase names are objects. The constants are all upper case, but are within the objects. This is the grouping I referred to, that I believe should be encouraged.

I&#39;m going to leave this alone for the time being so as not to break existing code, and we can further this discussion after the 1.0 release. The use of those constants is at least properly documented in Transition.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16450</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:30:20 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20589</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:09 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21511</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-23 16:40:39 +0100</bug_when>
            <thetext>Hey Derrell,
just read through that discussion and wanted to pick up that issue. I checked your usage of the statics and it&#39;s an interesting idea to group the statics in objects. I&#39;m surprised that its working because I thought we had this upper case restriction also in the code base.
Just as a reminder, if we ever want to change anything on statics, it is a incompatible code change. But we can deprecate it (more or less). I added some time ago a method which uses __definegetter__ to print out warnings on usage of statics. As this is most likely supported by the developers browser, we will get this warning and can change the static access. So that should not be a reason for not changing statics.
Do you have these groups of statics only to get a cleaner API and they are grouped or does this have some other reasons? Would it be possible on a technical basis to rename them and add them in upper case as single statics?
Best,
Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21512</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-11-23 16:51:22 +0100</bug_when>
            <thetext>(In reply to comment #12)
&gt; Do you have these groups of statics only to get a cleaner API and they are
&gt; grouped or does this have some other reasons? 

I haven&#39;t looked at that particular code in quite a while, but I do this sort of thing all the time to make clean, easily readable code. I group related definitions in an object to make it clear and clean and obvious for the reader that they are related. We are no longer constrained to depth=1 global variables from days of yore. :-)

&gt; Would it be possible on a technical basis to rename them and add them in upper case as single statics?

Technically, yes, I think it could be done. I&#39;d be very, very opposed to doing so, however. I don&#39;t believe in making code less readable just to conform to limitations (read that loosely, not as a criticism) of the tools I&#39;m using, and I feel very strongly that the code would be less readable by moving all of those constants to the top level.

Cheers,

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21520</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-24 08:56:50 +0100</bug_when>
            <thetext>(In reply to comment #13)
&gt; I haven&#39;t looked at that particular code in quite a while, but I do this sort
&gt; of thing all the time to make clean, easily readable code. I group related
&gt; definitions in an object to make it clear and clean and obvious for the reader
&gt; that they are related. We are no longer constrained to depth=1 global variables
&gt; from days of yore. :-)
Totally agree. :)


&gt; Technically, yes, I think it could be done. I&#39;d be very, very opposed to doing
&gt; so, however. I don&#39;t believe in making code less readable just to conform to
&gt; limitations (read that loosely, not as a criticism) of the tools I&#39;m using, and
&gt; I feel very strongly that the code would be less readable by moving all of
&gt; those constants to the top level.

I don&#39;t think you would loose much if you prefix the constants with the group name. But having that statics really grouped is nice too so I totally get why you want to keep it. 
But somehow we have that restriction which is in general the right thing in my opinion. It classifies all data attached to a class. Having said that, this would also apply to the objects grouping you &quot;real&quot; statics. What do you think about that?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21521</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-24 08:57:46 +0100</bug_when>
            <thetext>(In reply to comment #13)
&gt; (read that loosely, not as a criticism)

Sure. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21533</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-11-24 14:28:02 +0100</bug_when>
            <thetext>(In reply to comment #14)
&gt; But somehow we have that restriction which is in general the right thing in my
&gt; opinion. It classifies all data attached to a class. Having said that, this
&gt; would also apply to the objects grouping you &quot;real&quot; statics. What do you think
&gt; about that?

One can already create statics that are multi-level objects, and doing so can, in many instances, be good design. Those &quot;real&quot; (as you call them) statics _work_ just fine, as do the constants in the code in question. My understanding is that the only issue we have is that the sub-levels don&#39;t get picked up for entry into the API docs. I would contend that it should be possible to comment the sub-levels for entry into API documentation. I understand that adds some complication to the generator.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21543</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-24 15:33:23 +0100</bug_when>
            <thetext>(In reply to comment #12)
&gt; I&#39;m surprised that its working because I thought we had this upper case 
restriction also 
&gt; in the code base.

Why do we have this upper-case restriction on statics, again?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21550</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-25 09:28:39 +0100</bug_when>
            <thetext>(In reply to comment #17)
&gt; Why do we have this upper-case restriction on statics, again?

It improves readability:
http://stackoverflow.com/questions/838929/naming-why-should-named-constants-be-all-uppercase-in-c-java</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21551</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-25 09:38:19 +0100</bug_when>
            <thetext>(In reply to comment #18)
&gt; (In reply to comment #17)
&gt; &gt; Why do we have this upper-case restriction on statics, again?
&gt; 
&gt; It improves readability:
&gt; http://stackoverflow.com/questions/838929/naming-why-should-named-constants-be-all-uppercase-in-c-java

Oh yeah, right. But we have other coding styles (like how to indent code, place braces, how to name event handlers, asf.) without suppressing deviations from it in custom code. Why do we do this for statics?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21700</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-12-02 16:02:28 +0100</bug_when>
            <thetext>After some more discussion, we finally decided not to enforce the all-uppercase convention any longer. The Generator should only skip statics beginning with &quot;$$&quot; as those really are internal and users shouldn&#39;t mess with them.

This means any additional statics that will now appear in the API Viewer will have to be documented.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21701</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-12-02 16:03:55 +0100</bug_when>
            <thetext>Martin and I added (more or less rudimentary) documentation for the newly displayed statics in r24166.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21702</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-12-02 16:05:44 +0100</bug_when>
            <thetext>Changed api data generation to only skip constants if they begin with &quot;$$&quot; in 24167.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38065</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:34 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>