<bug>
          <bug_id>3738</bug_id>
          
          <creation_ts>2010-05-29 05:50:00 +0200</creation_ts>
          <short_desc>Error when a from contains an element which the model doesn&#39;t using a form controller</short_desc>
          <delta_ts>2010-10-04 09:39:06 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Guilherme Krycek">gradinf</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18528</commentid>
            <who name="Guilherme Krycek">gradinf</who>
            <bug_when>2010-05-29 05:50:42 +0200</bug_when>
            <thetext>Binding a store&#39;s model to a form-controller&#39;s model should bind all properties that match. Even though they aren&#39;t exactly the same.

Currently, if the store&#39;s model has a properties that is not present into the controller&#39;s model, it throws an error because it doesn&#39;t find the property to bind in the target object.

More info about my use case: http://qooxdoo.678.n2.nabble.com/Form-Controller-and-Store-bindings-td5114312.html#a5114660</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18529</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-31 08:54:13 +0200</bug_when>
            <thetext>Looks like the form controller uses all items in the from and binds them to the model. If one of the elements is missing in the model, the binding fails.

Here is the code to reproduce the behavior:


// create some dummy data
var data = {
  // firstname: &quot;Martin&quot;,
  lastname: &quot;Wittemann&quot;
};

var form = new qx.ui.form.Form();
form.add(new qx.ui.form.TextField(), &quot;Firstname&quot;);
form.add(new qx.ui.form.TextField(), &quot;Lastname&quot;);
this.getRoot().add(new qx.ui.form.renderer.Single(form), {left: 30, top: 20});

var model = qx.data.marshal.Json.createModel(data);
var controller = new qx.data.controller.Form(model, form);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19997</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-08-26 13:58:12 +0200</bug_when>
            <thetext>Added a try-catch to the binding setup because its not easy to check if a binding will work due to the fact we can have a chain. All not working bindings will now print out a warning if qx.debug is set to on.

trunk: r23157</thetext>
          </long_desc>
      
      

    </bug>