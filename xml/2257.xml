<bug>
          <bug_id>2257</bug_id>
          
          <creation_ts>2009-04-17 15:21:00 +0200</creation_ts>
          <short_desc>Grid with rowspan do not support lazy loaded images (unknown initial size)</short_desc>
          <delta_ts>2009-04-28 11:09:27 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.layout</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9355</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-17 15:21:03 +0200</bug_when>
            <thetext>When building a grid like this one:

|        | message |
| icon | ------------ 
|        | date       |

where the icon is loaded from twitter e.g. http://s3.amazonaws.com/twitter_production/profile_images/137091004/fs_normal.jpg the Grid collapses to the height of the text. 

When using a HBox (sure, without the &quot;date&quot; in this case) this works perfectly. So this might be an refresh-issue in the Grid layout.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9358</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-17 15:34:05 +0200</bug_when>
            <thetext>Mhh, do not seem to be an issue with the reflow, but more an issue with the rowSpan itself. Disabling the row-span let auto-sizing work OK, but with row-span enabled it breaks? Is this a missing / or badly implemented feature?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9361</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-17 15:35:30 +0200</bug_when>
            <thetext>Even layouted wrong when adding static sizes to the image e.g. 48x48. Is basically seems to ignore this and only shows the half icon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9386</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-20 15:02:54 +0200</bug_when>
            <thetext>This issue is new to me. Can you post a small snippet, which demonstrates this issue?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9715</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-28 10:54:56 +0200</bug_when>
            <thetext>Still wondering how to reproduce this issue</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9717</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-28 11:09:27 +0200</bug_when>
            <thetext>I think this might be a falsy-report. The issue is that when adding a rowspan to the first column this means that somewhere in the second column there needs to be a flexible height row. Otherwise there is a layout issue when the icon on the left column is larger (regarding height) than both rows on the right. The restrictions regarding height of the right side are higher priorized than the content on the left. This means that the Grid automatically shrinks - even ignoring cells which have higher requirements - instead of grows - ignoring the rows configured with now flex value.

I&#39;m not sure if this is intuitive or not for others, but for me it was an issue where I came not up for a fix until today.</thetext>
          </long_desc>
      
      

    </bug>