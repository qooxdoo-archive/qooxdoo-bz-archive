<bug>
          <bug_id>1286</bug_id>
          
          <creation_ts>2008-08-27 17:26:00 +0200</creation_ts>
          <short_desc>Documentation on packages/parts</short_desc>
          <delta_ts>2014-03-03 15:27:31 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>website</product>
          <component>documentation</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.1</target_milestone>
          <dependson>1303</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4791</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-08-27 17:26:04 +0200</bug_when>
            <thetext>I know that the plans for completing package/part functionality is still a ways off.  It would be great, though, if applications we are writing now can initially be loaded all as a single unit, but when the package functionality is complete, can be easily switched to loading packages on demand. If you could just provide enough documentation right now to show what the entry points need to look like (maybe with an extremely simple example), that would be incredibly useful to avoid redesign later.

Thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4931</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-01 17:39:50 +0200</bug_when>
            <thetext>This definitely needs more cleanup in the implementation first before being 
considered to be useable for the masses.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5453</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-09 15:55:40 +0200</bug_when>
            <thetext>to Thomas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5642</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-09-25 13:49:45 +0200</bug_when>
            <thetext>I don&#39;t know, I feel the overview article at

http://qooxdoo.org/documentation/0.8/generator_config_articles#packages_key

together with the reference section

http://qooxdoo.org/documentation/0.8/generator_config_ref#packages

says all there is to say currently about packages/parts handling!?

Derrell, can you confirm this?

The good news is that you don&#39;t have to consider packages when writing your 
application. There might be some optimization considerations, but in general 
packages can be introduced at any time later in the development process and 
should just work. That said, packages will probably benefit from a modular 
application design, if dependencies can be separated easily.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5643</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-09-25 14:46:03 +0200</bug_when>
            <thetext>The overview section is fine, I think.  The reference section is quite sparse.  For example, is it necessary to list ALL classes for each part, or is it adequate to list a single class (an entry point to a part) and have the generator figure out all of the other requisite classes for that part?  There are likely many more such details that could use more explanation.

A real working example would likely go a long way towards helping to explain this, but short of that, just expanding the current reference section to provide more details would help a lot.

Additionally, a comment in the overview section about the state of readiness of this capability would be nice.  Sebastian&#39;s comment #1 indicates that even if one knows how to use it, it&#39;s not really ready.  How far off from being truly usable is it?

Thanks.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7845</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-17 16:44:26 +0100</bug_when>
            <thetext>This is a larger topic that is to be properly addressed (implementation + docs) in a release beyond 0.8.2. It also depends on the consolidation of the loading script/phase, e.g. bug #1177.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14883</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:48:37 +0100</bug_when>
            <thetext>mass renaming of 0.9 target for documentation issues to 1.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15681</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-11 10:48:48 +0100</bug_when>
            <thetext>to me for 1.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15926</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-16 17:00:48 +0100</bug_when>
            <thetext>Derrell, is this document (particularly the first part of it) what you were 
looking for?:
http://qooxdoo.org/documentation/1.0/parts_using</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15927</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-16 17:04:20 +0100</bug_when>
            <thetext>forwarded to 1.1, after Derrell&#39;s feedback</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15971</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-12-21 20:59:35 +0100</bug_when>
            <thetext>Yes, this is very much the kind of thing I&#39;m looking for. It gives enough info, I believe, to organize code now to be able to use parts later (once they&#39;re ready for prime time) with hopefully little reorganization. Thanks.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16571</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-01-28 17:52:56 +0100</bug_when>
            <thetext>closing this</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39498</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:31 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>