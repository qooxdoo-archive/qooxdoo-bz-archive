<bug>
          <bug_id>9251</bug_id>
          
          <creation_ts>2016-02-03 17:50:00 +0100</creation_ts>
          <short_desc>qx.ui.core.Widget#fadeIn / #fadeOut issue</short_desc>
          <delta_ts>2016-02-03 18:08:37 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>UNCONFIRMED</bug_status>
          
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          
          <reporter name="Peter Schneider">schnepe2</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43688</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2016-02-03 17:50:14 +0100</bug_when>
            <thetext>Whenever fadeOut() and fadeIn() are issued on &quot;text-input&quot; elements,
it seems that no more input focus handling is done on that element.

However if the fading is done on a button e.g. the click still works

Here&#39;s a simple playground example to demonstrate this:

------------------------------------------------------------------------
Short-URL: http://tinyurl.com/hukglgt
------------------------------------------------------------------------
var help1 = new qx.ui.basic.Label(
   &quot;Once the input is faded-out and -in again&lt;br/&gt;&quot; +
   &quot;the input can not get focus again!&quot;).set({ rich: true });

var button1 = new qx.ui.form.Button(&quot;fade&quot;);
var input1 = new qx.ui.form.TextField();

button1.addListener(&quot;execute&quot;, function ()
{
   input1.fadeOut().addListener(&quot;end&quot;, function () {
     input1.fadeIn();
   });
});

var doc = this.getRoot();
doc.add(button1, {left: 20, top: 20});
doc.add(input1 , {left: 20, top: 60});
doc.add(help1  , {left: 140, top: 20});
------------------------------------------------------------------------</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43689</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2016-02-03 17:51:34 +0100</bug_when>
            <thetext>A work-around proposed by Dietrich Streifert on the forum:

&gt; As a workarraound you could use animation based on qx.bom.element.Animation:
&gt; 
&gt; http://tinyurl.com/znwl9zs
&gt; 
&gt; Regards
&gt; Dietrich</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43690</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2016-02-03 18:08:37 +0100</bug_when>
            <thetext>The pull request[1] seems to fix the issue (at least for me).


[1] https://github.com/qooxdoo/qooxdoo/pull/167</thetext>
          </long_desc>
      
      

    </bug>