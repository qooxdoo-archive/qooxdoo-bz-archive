<bug>
          <bug_id>2336</bug_id>
          
          <creation_ts>2009-05-05 12:33:00 +0200</creation_ts>
          <short_desc>Enhance qx.event.Command</short_desc>
          <delta_ts>2014-03-03 15:26:53 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          <blocked>2335</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Matthew">matthew+qooxdoo</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9791</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-05-05 12:33:00 +0200</bug_when>
            <thetext>It would be nice to enhance qx.event.Command so it supports more than just the enabled property. This has been discussed before on the mailing list.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9792</commentid>
              <attachid>504</attachid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-05-05 12:48:25 +0200</bug_when>
            <thetext>Created attachment 504
Initial Patch

This patch adds the basic support. It is far from complete but shows the basic idea.
It provides extra properties for label, icon, autoCheck, checked and menu to qx.event.Command. It also changes qx.ui.core.MExecutable to support all of these properties and takes advantage of the SingleValueBinding.

Note: autoCheck it a property local to the command that does not get copied to widgets. By setting this property to true, calling execute will first toggle the checked property before firing an event. This works well, but will need to be taking into account as it is incompatible with the current ToggleButton.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9793</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-05-05 12:50:11 +0200</bug_when>
            <thetext>It might be worth chaning _bindableProperties to a map, so we can also specify things like alias (label-&gt;content?) and also so checked and enabled are flagged as two way bindings</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9800</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-05-05 16:48:00 +0200</bug_when>
            <thetext>Not sure if I correctly understand what &quot;autoCheck&quot; should do and where the typical use case is. Can you explain it further? Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9801</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-05-05 16:50:06 +0200</bug_when>
            <thetext>It would be nice to have support for different icon sizes. So a ToolbarButton can use a 22px icon while the menu uses a 16px icon.

Sometime ago I thought about a special &quot;Icon&quot; class which is basically an image with an additional size property which automatically selects the right image to show based on the given size. If the Atom and this way most other widgets use Icon instead of image this multi-icon size issue might be solved as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9802</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-05-05 16:56:38 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; Not sure if I correctly understand what &quot;autoCheck&quot; should do and where the
&gt; typical use case is. Can you explain it further? Thanks.
&gt; 

Firstly for this to work, it would require ToggleButton (and checkbox) to first have an autoCheck property set to true and then call execute instead of toggleChecked(). This way you could create a single command with autoCheck set to true, assign it to a button, a menu item and a checkbox and have the logic to toggleChecked in one place. This would then fire the execute event immediately after the checked event.

The idea is we don&#39;t have to distinguish between a Button and a ToggleButton, will simply rely on the command to do this.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9858</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-05-08 10:04:45 +0200</bug_when>
            <thetext>to martin as it is related to the toolbar overflow bug</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10253</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-06-02 12:50:15 +0200</bug_when>
            <thetext>hi martin,
have you had change to look into this yet?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10267</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-06-04 08:22:19 +0200</bug_when>
            <thetext>Hi Matthew,
im sorry i had not the chance to take a look t it. I broke my hand 2 weeks ago so im still at home one handed. :( Hope to be back soon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12404</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-17 16:39:12 +0200</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12541</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-22 16:36:54 +0200</bug_when>
            <thetext>I have added most of the suggested properties to the command. With these additional capabilities, the former namespace for the command is not fitting anymore so we moved the implementation containing the shortcut handling to &#39;&#39;qx.bom.Shortcut&#39;&#39; and added the full featured command to &#39;&#39;qx.ui.core.Command&#39;&#39;.
A demo has been added with the last commit (20165).
@Matthew
Could you please check the feature and set the bug to verified?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12545</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-09-22 16:48:43 +0200</bug_when>
            <thetext>Thanks! Had a look at your changes and I&#39;m happy with them (I haven&#39;t tested yet but will reopen if there any problems, looks good though).

Shame my name didn&#39;t make it to the authors list though :(

We still have some things that are specific to us and not generic enough to include in the framework, with your changes it;s easy to append values to _bindableProperties, nice one!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12546</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-22 16:50:43 +0200</bug_when>
            <thetext>CLOSED</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13453</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2009-10-23 13:41:45 +0200</bug_when>
            <thetext>Just noticed whilst debugging some memory problems that __executableBindingIds isn&#39;t disposed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13512</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-10-26 12:26:41 +0100</bug_when>
            <thetext>This has already been fixed in trunk</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14496</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:14:59 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39266</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:53 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>504</attachid>
            <date>2009-05-05 12:48:00 +0200</date>
            <delta_ts>2009-05-05 12:48:25 +0200</delta_ts>
            <desc>Initial Patch</desc>
            <filename>command.patch</filename>
            <type>text/plain</type>
            <size>3137</size>
            <attacher>matthew+qooxdoo</attacher>
            
              <data encoding="base64">SW5kZXg6IGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvZXZlbnQvQ29tbWFuZC5qcw0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KLS0tIGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvZXZlbnQvQ29tbWFuZC5qcwkocmV2
aXNpb24gMTg2NjQpDQorKysgZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC9ldmVudC9Db21tYW5k
LmpzCSh3b3JraW5nIGNvcHkpDQpAQCAtMTEzLDYgKzExMywzOCBAQA0KICAgICAgIGNoZWNrIDog
IlN0cmluZyIsCiAgICAgICBhcHBseSA6ICJfYXBwbHlTaG9ydGN1dCIsCiAgICAgICBudWxsYWJs
ZSA6IHRydWUKKyAgICB9LAorICAgIAorICAgIGxhYmVsIDogCisgICAgeworICAgICAgY2hlY2sg
OiAiU3RyaW5nIiwKKyAgICAgIGV2ZW50IDogImNoYW5nZUxhYmVsIgorICAgIH0sCisgICAgCisg
ICAgaWNvbiA6CisgICAgeworICAgICAgY2hlY2sgOiAiU3RyaW5nIiwKKyAgICAgIGV2ZW50IDog
ImNoYW5nZUljb24iCisgICAgfSwKKyAgICAKKyAgICBhdXRvQ2hlY2sgOiAKKyAgICB7CisgICAg
ICBjaGVjayA6ICJCb29sZWFuIiwKKyAgICAgIGluaXQgIDogZmFsc2UKKyAgICB9LAorICAgIAor
ICAgIGNoZWNrZWQgOiAKKyAgICB7CisgICAgICBjaGVjayAgICA6ICJCb29sZWFuIiwKKyAgICAg
IGV2ZW50ICAgIDogImNoYW5nZUNoZWNrZWQiLAorICAgICAgbnVsbGFibGUgOiB0cnVlCisgICAg
fSwKKyAgICAKKyAgICBtZW51IDoKKyAgICB7CisgICAgICBjaGVjayAgICA6ICJxeC51aS5tZW51
Lk1lbnUiLAorICAgICAgZXZlbnQgICAgOiAiY2hhbmdlTWVudSIsCisgICAgICBudWxsYWJsZSA6
IHRydWUKICAgICB9CiAgIH0sCiAKQEAgLTE0Myw2ICsxNzUsOCBAQA0KICAgICAgKiBAcGFyYW0g
dGFyZ2V0IHtPYmplY3R9IE9iamVjdCB3aGljaCBpc3N1ZWQgdGhlIGV4ZWN1dGUgZXZlbnQKICAg
ICAgKi8KICAgICBleGVjdXRlIDogZnVuY3Rpb24odGFyZ2V0KSB7CisgICAgICBpZiAodGhpcy5p
c0F1dG9DaGVjaygpKQorICAgICAgICB0aGlzLnRvZ2dsZUNoZWNrZWQoKTsKICAgICAgIHRoaXMu
ZmlyZURhdGFFdmVudCgiZXhlY3V0ZSIsIHRhcmdldCk7CiAgICAgfSwKIApJbmRleDogZnJhbWV3
b3JrL3NvdXJjZS9jbGFzcy9xeC91aS9jb3JlL01FeGVjdXRhYmxlLmpzDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQot
LS0gZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC91aS9jb3JlL01FeGVjdXRhYmxlLmpzCShyZXZp
c2lvbiAxODY2NCkNCisrKyBmcmFtZXdvcmsvc291cmNlL2NsYXNzL3F4L3VpL2NvcmUvTUV4ZWN1
dGFibGUuanMJKHdvcmtpbmcgY29weSkNCkBAIC02OSw2ICs2OSwxOCBAQA0KIAogICBtZW1iZXJz
IDoKICAgeworICAgIF9iaW5kYWJsZVByb3BlcnRpZXMgOgorICAgIFsKKyAgICAgICJlbmFibGVk
IiwKKyAgICAgICJpY29uIiwKKyAgICAgICJtZW51IiwKKyAgICAgICJsYWJlbCIsCisvLyAgICAg
ICJ2aXNpYmlsaXR5Iiwgbm8gZXZlbnQgZm9yIHRoaXMgeWV0IAorICAgICAgImNoZWNrZWQiCisg
ICAgXSwKKyAgICAKKyAgICBfYm91bmRQcm9wZXJ0aWVzIDogbnVsbCwKKyAgICAKICAgICAvKioK
ICAgICAgKiBJbml0aWF0ZSB0aGUgZXhlY3V0ZSBhY3Rpb24uCiAgICAgICoKQEAgLTg4LDMwICsx
MDAsMzAgQEANCiAgICAgLy8gcHJvcGVydHkgYXBwbHkKICAgICBfYXBwbHlDb21tYW5kIDogZnVu
Y3Rpb24odmFsdWUsIG9sZCkKICAgICB7Ci0gICAgICBpZiAob2xkKSB7Ci0gICAgICAgIG9sZC5y
ZW1vdmVMaXN0ZW5lcigiY2hhbmdlRW5hYmxlZCIsIHRoaXMuX29uQ2hhbmdlRW5hYmxlZENvbW1h
bmQsIHRoaXMpOwotICAgICAgfQorICAgICAgdmFyIHN2YiA9IHF4LmRhdGEuU2luZ2xlVmFsdWVC
aW5kaW5nOworICAgICAgdmFyIGJvdW5kID0gdGhpcy5fYm91bmRQcm9wZXJ0aWVzOyAgICAgIAor
ICAgICAgaWYgKG9sZCAmJiBib3VuZCkKKyAgICAgIHsgCisgICAgICAgIGZvciAodmFyIGkgPSAw
LCBsID0gYm91bmQubGVuZ3RoOyBpIDwgbDsgaSsrKQorICAgICAgICB7CisgICAgICAgICAgc3Zi
LnJlbW92ZUJpbmRpbmdGcm9tT2JqZWN0KG9sZCwgYm91bmRbaV0pOworICAgICAgICB9CisgICAg
ICB9ICAKIAogICAgICAgaWYgKHZhbHVlKQogICAgICAgewotICAgICAgICB2YWx1ZS5hZGRMaXN0
ZW5lcigiY2hhbmdlRW5hYmxlZCIsIHRoaXMuX29uQ2hhbmdlRW5hYmxlZENvbW1hbmQsIHRoaXMp
OwotCi0gICAgICAgIGlmICh0aGlzLmdldEVuYWJsZWQoKSA9PT0gZmFsc2UpIHsKLSAgICAgICAg
ICB2YWx1ZS5zZXRFbmFibGVkKGZhbHNlKTsKLSAgICAgICAgfSBlbHNlIGlmICh2YWx1ZS5nZXRF
bmFibGVkKCkgPT09IGZhbHNlKSB7Ci0gICAgICAgICAgdGhpcy5zZXRFbmFibGVkKGZhbHNlKTsK
KyAgICAgICAgYm91bmQgPSB0aGlzLl9fcHJvcGVydHlCaW5kaW5ncyA9IFtdOyAgIAorICAgICAg
ICB2YXIgcHJvcHMgPSB0aGlzLl9iaW5kYWJsZVByb3BlcnRpZXMKKyAgICAgICAgZm9yICh2YXIg
aSA9IDAsIGwgPSBwcm9wcy5sZW5ndGg7IGkgPCBsOyBpKyspCisgICAgICAgIHsKKyAgICAgICAg
ICBpZiAocXguQ2xhc3MuaGFzUHJvcGVydHkodGhpcy5jb25zdHJ1Y3RvciwgcHJvcHNbaV0pKQor
ICAgICAgICAgICAgYm91bmQucHVzaChzdmIuYmluZCh2YWx1ZSwgcHJvcHNbaV0sIHRoaXMsIHBy
b3BzW2ldKSk7CiAgICAgICAgIH0KICAgICAgIH0KLSAgICB9LAotCi0KLSAgICAvKioKLSAgICAg
KiBFdmVudCBMaXN0ZW5lci4gTGlzdGVuIGZvciBlbmFibGVkIGNoYW5nZXMgaW4gdGhlIGFzc29j
aWF0ZWQgY29tbWFuZAotICAgICAqCi0gICAgICogQHBhcmFtIGUge3F4LmV2ZW50LnR5cGUuRGF0
YX0gVGhlIGNoYW5nZSBldmVudAotICAgICAqLwotICAgIF9vbkNoYW5nZUVuYWJsZWRDb21tYW5k
IDogZnVuY3Rpb24oZSkgewotICAgICAgdGhpcy5zZXRFbmFibGVkKGUuZ2V0RGF0YSgpKTsKKyAg
ICAgIGVsc2UgCisgICAgICB7CisgICAgICAgIHRoaXMuX19wcm9wZXJ0eUJpbmRpbmdzID0gbnVs
bDsKKyAgICAgIH0KICAgICB9CiAgIH0KIH0pOw0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
DQo=
</data>

          </attachment>
      

    </bug>