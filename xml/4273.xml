<bug>
          <bug_id>4273</bug_id>
          
          <creation_ts>2010-11-03 14:10:00 +0100</creation_ts>
          <short_desc>Evaluate the Demjson Python Package as an Alternative to Simplejson</short_desc>
          <delta_ts>2014-03-03 15:18:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.config</component>
          <version>1.2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.1</target_milestone>
          
          <blocked>6585</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>daniel.wagner</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>21049</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-03 14:10:17 +0100</bug_when>
            <thetext>We since long use the third-party Python package Simplejson for Json parsing 
and dumping. This has the disadvantage of not being capable of handling 
comments in Json files. This, among other things, results in error messages 
referring to bogus line numbers. The Demjson package is able to handle this, 
and is already used for the Contrib Demobrowser for this reason. It shouldn&#39;t 
be too hard to use Demjson as a drop-in replacement for Simplejson in the 
entire tool chain, so we could add Demjson to the framwork without increasing 
the number of third-party modules. There is already an abstraction module 
pylib/misc/json.py in the tool chain, to abstract away the Json implementation 
in use from the rest of the tool chain. Even for environments running on Python 
2.6 or higher, which come with a standard Json module, it would be easy to 
incorporate this.

Demjson also provides a very useful &#39;jsonlint&#39; command line utility, to verify 
(and format, if so desired) Json files, which helps in tracking down config 
issues.

Demjson uses LGPL 3.0 license, which should be fine for a use-only tool module.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21075</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-11-04 09:34:27 +0100</bug_when>
            <thetext>Actually, need to check licensing.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22946</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-02-24 16:29:06 +0100</bug_when>
            <thetext>*** Bug 3959 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22948</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-02-24 16:35:45 +0100</bug_when>
            <thetext>IMHO, as long as we provide the demjson module as a library, i.e. using Python imports to merely use it without mixing source code sections, it should be fine.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30115</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-07-12 15:33:09 +0200</bug_when>
            <thetext>- added demjson package to master
- demjson is now used to parse (load/decode) JSON content
- for serialization (dump/encode) actions STILL the simplejson module is used!
- therefore it has to remain IN
- the reason for this is that unlike demjson simplejson allows sorting of keys
  when serializing a JSON data structure (which we need to have e.g. stable
  resource infos/provider info/... across builds)

See if it works out, and then the affected code can be cleaned up a little.

master: 08579f7</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30790</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-09-24 17:15:14 +0200</bug_when>
            <thetext>Replaced tool/bin/jsonlint.sh with more portable jsonlint.py wrapper skript.

master: d140b37</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30791</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-09-24 17:18:52 +0200</bug_when>
            <thetext>Closing this as everything seems to be fine. The split demjson - parsing, 
simplejson - writing seems to be a good fit. This resolves a few other issues.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36244</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:18:52 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>