<bug>
          <bug_id>7997</bug_id>
          
          <creation_ts>2013-12-12 10:29:00 +0100</creation_ts>
          <short_desc>Replace pyScss with the default Sass compiler based on Ruby</short_desc>
          <delta_ts>2014-05-22 14:54:51 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <keywords>Cleanup</keywords>
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>christian.hagendorn</cc>
    
    <cc>christopher.zuendorf</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34628</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-12-12 10:29:21 +0100</bug_when>
            <thetext>We currently include a tool named pySCSS to parse the SCSS files for mobile development. Having that tool included for some month now and fixing some critical bugs I tend to think that we should give up on using pySCSS and use the reference implementation in ruby.
We would introduce a new dependency for mobile development the developer has to install but in my opinion, its a better approach than working around the pySCSS bugs and missing features.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34629</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-12-12 10:29:53 +0100</bug_when>
            <thetext>Btw. we already use the ruby based compiler for qx.Website via the grunt infrastructure.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34630</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2013-12-12 10:44:46 +0100</bug_when>
            <thetext>I also agree to use the reference implementation in ruby. My main issue is that I could not use the pySCSS, because the implementation is so buggy. As long as I can remember the pySCSS has never worked for me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34672</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-12-16 16:39:04 +0100</bug_when>
            <thetext>Requirements
------------
- Mobile development without theme changes should not need ruby on their system

Pro
---
- No maintaining / bug fixing of pyScss
- We can rely on the newest features and not only a subset which is supported by pyScss
- Our documentation can focus on one compiler and that usage
- Easy integration in future grunt toolchain
- Already in use for qx.Website widgets

Con
---
- Additional dependency for application developers
- Might get some conflicts with version in the future</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34700</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-01-02 17:28:19 +0100</bug_when>
            <thetext>Intro: There is a working draft [1] for cascading variables which can already be used in Firefox [2a, 2b] and Chrome [3] Nightlies or the like. For me this is a first sign, that some features which were introduced by Sass could/will finally creep into the native browser implementations of CSS. So the features Sass or CSS preprocessor in general are offering are already relevant and here to stay.

IMO the pyScss version we ship has a decent Sass feature coverage right now, but every pro bullet point from Martin (comment #3) is correct and important. The most annoying part is certainly that pyScss is not the RI and therefore always trying to catch up with Sass. They now share a test suite, but there will always be a diff. But Christian (comment #2) and Christopher really used pyScss more than others, so they probably have the most valuable experience on that.

I&#39;m happy with ditching pyScss and I think that having to install Ruby and Sass is fine but we should always ship releases with initial CSS files so people can start right away. 

Then there&#39;s a choice in mobile dev: Easily customize things we offer (but Ruby and Sass needed) OR work on the initial CSS files with bare CSS.

--

[1] http://www.w3.org/TR/css-variables/

[2a] https://bugzilla.mozilla.org/show_bug.cgi?id=773296
[2b] https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables

[3] http://stackoverflow.com/questions/18466569/enable-experimental-webkit-features-chrome-css-css3-variables</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34712</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2014-01-07 16:27:12 +0100</bug_when>
            <thetext>Only a hint. The next ruby implementation (3.3.0) will have source map support:
https://developers.google.com/chrome-developer-tools/docs/css-preprocessors?utm_medium=email&amp;utm_source=html5weekly</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39997</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-04-16 20:16:57 +0200</bug_when>
            <thetext>Done: pyScss is now gone.

master: c412da8bcf0c9347fbbeded582dd0f752817a30c</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40009</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-04-17 12:50:58 +0200</bug_when>
            <thetext>Please make sure to add some migration help for the user.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40018</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-04-17 16:01:59 +0200</bug_when>
            <thetext>Added &quot;missing features&quot; doc passage and introduced error messages with instructions on what to do (namely install Sass).

http://qooxdoo.org/project/release_notes/4.0#missing_features

master: 51392db0a9f5218a7bf2ce172cb11bc873505b14</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40071</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-04-28 13:13:15 +0200</bug_when>
            <thetext>Improved error message.

master: a2e0dac2ab9181c1978d5c2bf04281aa879135a0</thetext>
          </long_desc>
      
      

    </bug>