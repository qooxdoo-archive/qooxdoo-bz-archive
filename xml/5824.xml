<bug>
          <bug_id>5824</bug_id>
          
          <creation_ts>2011-11-24 10:31:00 +0100</creation_ts>
          <short_desc>Alternative view for Class docs</short_desc>
          <delta_ts>2014-03-03 08:46:28 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27599</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-11-24 10:31:11 +0100</bug_when>
            <thetext>We have currently ordered out content of a class doc by its type which means:, methods, events, statics, ... In this groups the entries e.g. methods are order alphabetically. Turning on all includes in the view, this leads to very long lists of alphabetical ordered entries which is hard to read. One good example is how getter and setter are organized. as they start with different letters, it is most likely that you have to scroll and search for the counterpart manually in the long list. This could be improved!

1. Group setter, getter, adder, resetter, initer, ... inot groups
2. offer an alternative view grouped by its origin class.

Maybe there are other alternatives how we can get a faster way to find the desired content in the viewer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35547</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:28 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>