<bug>
          <bug_id>4580</bug_id>
          
          <creation_ts>2011-01-26 11:49:00 +0100</creation_ts>
          <short_desc>Add &quot;Working&quot; Indicator</short_desc>
          <delta_ts>2014-03-03 15:22:30 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>1.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://demo.qooxdoo.org/current/apiviewer/#qx.ui.form.TextField</bug_file_loc>
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          
          <qa_contact name="Adrian Olaru">adrian.olaru</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22433</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-26 11:49:13 +0100</bug_when>
            <thetext>Various actions in the Apiviewer have a natural latency, of course depending on 
browser and hardware in use. E.g. loading a class doc, or displaying inherited 
items in a class, etc.; see the attached URL and toggle &quot;Inherited&quot; on 
qx.ui.form.TextField. For those platforms taking a little longer (like IE7), it 
would be nice to have a little &quot;working&quot; indicator (like a spinning cursor) 
that would indicate something is going on. Currently, nothing happens until the 
result is ready, and impatient users might get the impression the application 
has stalled.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22444</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-27 08:10:16 +0100</bug_when>
            <thetext>That sounds like a good idea in deed! I have added a loading indicator for the part loading in the feedreader. Maybe thats a good starting point to get some impression how to do it. And btw. there is even a noticeable delay in chrome!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22448</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-27 09:12:28 +0100</bug_when>
            <thetext>I noticed there might be other places where such an indicator makes sense, both within and outside the Apiviewer. Maybe it&#39;s worth having something generic, like a indicator wrapper method so you could say e.g. &quot;withIndicatorDo(&lt;realfunction&gt;, &lt;realarguments&gt;,...);&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22454</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-27 14:12:32 +0100</bug_when>
            <thetext>Hm, this may work for regular buttons but what if you want to show the indicator somewhere else? But maybe there is a good way to come up with some generic. I don&#39;t know.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22455</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-27 14:26:19 +0100</bug_when>
            <thetext>E.g. if the indicator is an animated cursor, you could bring that up in all kind of &#39;laborous&#39; situations, independent of which widget or which interaction triggered the action. You could use it in any event handler where you expect a delay.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22461</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-28 08:50:19 +0100</bug_when>
            <thetext>But putting the loading indicator on the mouse is so 1995 and is, in my opinion, the wrong pattern here. It tells the user that the whole system is working and he can&#39;t do or click anything else which not necessarily has to be the case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22463</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-28 09:51:24 +0100</bug_when>
            <thetext>What about changing the cursor back to normal when the mouse is moved, and re-applying the working cursor when the mouse has not been moved for a given time (e.g. 1sec)?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22475</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-31 07:59:40 +0100</bug_when>
            <thetext>(In reply to comment #6)
&gt; What about changing the cursor back to normal when the mouse is moved, and
&gt; re-applying the working cursor when the mouse has not been moved for a given
&gt; time (e.g. 1sec)?!

Still don&#39;t think thats a good pattern because some people might not move the mouse if they see the loading indicator.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24227</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-04-28 10:40:06 +0200</bug_when>
            <thetext>fixed on trunk with rev. 26944.

when selecting an item in the left menu, before loading the json data a blocker with a &quot;loading&quot; animated gif is shown over the detailedViewFrame, and it gets hidden away when the panels are shown.
same thing happens when toggleButtons are clicked.
only these 2 situations were identified as &quot;time consuming&quot;, hence, the loading indicator.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37700</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:30 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>