<bug>
          <bug_id>5813</bug_id>
          
          <creation_ts>2011-11-16 17:29:00 +0100</creation_ts>
          <short_desc>Change Request for qx.io.rest.Resource</short_desc>
          <delta_ts>2011-12-02 10:14:29 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          <cc>alexander.steitz</cc>
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27560</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-11-16 17:29:06 +0100</bug_when>
            <thetext>Current situation:

* Requests of the same action are getting aborted, when invoked concurrent. 
  - The action will be aborted, even when the parameters are different
  - Theoretical: When the user has a slow connection and presses a reload button several times, he will never get an answer (as the reload action is always aborted) and keep on pressing the button (think about bad mobile connections)
  
* Right now it is not possible to register a concrete callback for a action with certain parameters. The only way to do this is by using the configureRequest delegate as a workaround (but this is not elegant, as requests can be  aborted right now / you have to know what you are doing).

Proposal:

* We shouldn&#39;t abort requests. When developers want to have only one request of an action in a time, they should make sure of that on their own. Otherwise this is an unnecessary limitation.

* We should have a mechanism to handle concrete actions with certain parameters, e.g. by introducing a callback or event emitter or an requestId (which is returned by the invoke action method - remember: sync. requests are with the requestId variant not possible anymore).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27564</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-17 13:25:26 +0100</bug_when>
            <thetext>Allow concurrent requests per action; invoke() returns Id.

9cfd0e3 (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27569</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-17 16:11:14 +0100</bug_when>
            <thetext>Returned Id is a number, allow to abort specific invocation of action.

d5143c7 (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27583</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-22 16:00:03 +0100</bug_when>
            <thetext>Minor f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27584</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-11-22 16:00:41 +0100</bug_when>
            <thetext>1c3d843 (master)</thetext>
          </long_desc>
      
      

    </bug>