<bug>
          <bug_id>7635</bug_id>
          
          <creation_ts>2013-08-08 10:46:00 +0200</creation_ts>
          <short_desc>Building Libraries without Dependencies</short_desc>
          <delta_ts>2014-03-03 09:46:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>3.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>alexander.steitz</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33588</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-08-08 10:46:44 +0200</bug_when>
            <thetext>It is currently very tedious to create libraries of qooxdoo classes that sit on 
top of other libraries like qx-oo, q-core etc. In the build jobs one must 
carefully tailor the &#39;include&#39; and &#39;exclude&#39; keys to obtain a result script 
file that contains only the desired classes.

To better support this kind of development users should be able to just name 
the pre-build libraries that should be considered given, so all of their 
classes are treated as &quot;known globals&quot;. 

This could be achieved by just naming the base library file (like 
&quot;source/resource/myapp/qx-oo-3.0.js&quot;) and the Generator extracts the contained 
symbols for library building. Or, together with the base library file a 
separate file is generated with the list of the contained symbols, and the user 
names this file in his config (like &quot;source/resource/myapp/qx-oo-3.0.syms&quot;). 
Both could be supported.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36201</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 09:46:20 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year or we don&#39;t think it will be fixed in the near future.</thetext>
          </long_desc>
      
      

    </bug>