<bug>
          <bug_id>393</bug_id>
          
          <creation_ts>2007-05-04 12:34:00 +0200</creation_ts>
          <short_desc>getLabelObject returns null</short_desc>
          <delta_ts>2014-03-03 15:22:38 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8-alpha2</target_milestone>
          
          <blocked>116</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rüdiger Herrmann">rherrmann</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1232</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2007-05-04 12:34:31 +0200</bug_when>
            <thetext>The labelObject property returns null when no string or an empty string was set to the label property.

This requires a workaround (ensure labelObject exists, change, reset label to its previous value) every time one wants to change e.g. the font or color of a labelObject.

The described behaviour applies to the following classes:
- on qx.ui.basic.Atom
- qx.ui.menu.Button
- qx.ui.menu.Menu
- qx.ui.tree.AbstractTreeElement
- qx.ui.treefullcontrol.AbstractTreeElement</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1251</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-09 14:01:24 +0200</bug_when>
            <thetext>Instantiation of widgets is pretty expensive and thus the label widget is only created on demand.

The two examples you mention can now be set using the inheritable &quot;font&quot; and &quot;color&quot; properties. In the current trunk you can set &quot;font&quot; and &quot;color&quot; on the button and it will be propagated to the label object. This minimizes the use cases to access the labelObject and I think it&#39;s OK to return null if it is not created.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1431</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2007-05-29 12:02:21 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; Instantiation of widgets is pretty expensive and thus the label widget is only
&gt; created on demand.
&gt; 
&gt; The two examples you mention can now be set using the inheritable &quot;font&quot; and
&gt; &quot;color&quot; properties. In the current trunk you can set &quot;font&quot; and &quot;color&quot; on the
&gt; button and it will be propagated to the label object. This minimizes the use
&gt; cases to access the labelObject and I think it&#39;s OK to return null if it is not
&gt; created.
&gt; 

I understand that if instantiating a widget is an expensive operation it should be deferred. But I can hardly think of a use case of getLabelObject where the subsequent code wouldn&#39;t create the labelObject anyway. Thus the saving is of very short time only.

A quick research in our code came up with ten places where we use the described workaround. Right, the font and color are now mostly settable on the Atom, but setMode, setTextOverflow and setTextAlign still require the workaround.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1825</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-07-05 11:42:31 +0200</bug_when>
            <thetext>made this bug a dependency of the API cleanup bug. We will take this into account, when poloshing the widget API</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3431</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-17 16:11:38 +0200</bug_when>
            <thetext>In our attempt to streamline the API in 0.8 we don&#39;t provide this method on Atoms anymore. If we decide to put it back it will solve the mentioned problem because the Atom now uses the new sub widget handling layer, which manages the widget creation.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37748</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:38 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>