<bug>
          <bug_id>8019</bug_id>
          
          <creation_ts>2013-12-19 20:52:00 +0100</creation_ts>
          <short_desc>SelectBox should request focus when tapped</short_desc>
          <delta_ts>2014-01-14 13:58:33 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile.widget</component>
          <version>3.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>3.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>itkach</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34686</commentid>
            <who name="">itkach</who>
            <bug_when>2013-12-19 20:52:36 +0100</bug_when>
            <thetext>On a form with a text field and select box, enter some text into the text field and tap select box. Selection dialog pops up, but keyboard focus remain in the text field, virtual keyboard remains open and selection dialog doesn&#39;t fit the remaining tiny portion of the screen, gets chopped off. This looks especially ugly on iOs where caret shows through selection dialog.

As a workaround, SelectBox can be subclassed like this:

qx.Class.define(&quot;my.SelectBox&quot;, {

  extend: qx.ui.mobile.form.SelectBox,

  construct: function() {
    this.base(arguments);
    this.addListener(&quot;tap&quot;, function(e) {
      //request focus so that it leaves previous widget
      //such as text field and makes virtual keyboard go away
      e.getTarget().getContainerElement().focus();
    }, this);
  }

});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34770</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-01-14 13:53:26 +0100</bug_when>
            <thetext>Good solution. I implemented it in our framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34771</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-01-14 13:55:59 +0100</bug_when>
            <thetext>Master:

7a368715d8b80781c17f7533475abb33228b9ca5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34772</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-01-14 13:56:54 +0100</bug_when>
            <thetext>Branch_3_5_x:

a10195c393b9014264a16b035804571d27d1a898</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34773</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-01-14 13:58:33 +0100</bug_when>
            <thetext>Branch_3_5_x:
a10195c393b9014264a16b035804571d27d1a898</thetext>
          </long_desc>
      
      

    </bug>