<bug>
          <bug_id>334</bug_id>
          
          <creation_ts>2007-03-12 15:42:00 +0100</creation_ts>
          <short_desc>pretty print: function header comments get mixed up</short_desc>
          <delta_ts>2008-06-05 14:37:52 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.migration</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1025</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-12 15:42:43 +0100</bug_when>
            <thetext>Code like this:

//---------------------------------------------------------------
/**
* Handle observer update for configuration
*
* Handle block of data from the server
*
* @param dUpdate {Map} new data 
* @param oObserver {abling.ui.CObserver} observer
*/
//---------------------------------------------------------------

qx.Proto._HandleObserverUpdateForConfiguration = function(dUpdate, oObserver)

gets turned into this:

      // ---------------------------------------------------------------
      // ---------------------------------------------------------------
      /**
       * Handle observer update for configuration
       * 
       * Handle block of data from the server
       *
       * @type member
       * @param dUpdate {Map} new data
       * @param oObserver {abling.ui.CObserver} observer
       * @return {void} 
       */
      _HandleObserverUpdateForConfiguration : function(dUpdate, oObserver)

It would appear the place for the header comment is lost - it is assumed that it is going to go into the code immediately before the function.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1026</commentid>
              <attachid>137</attachid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-12 15:45:31 +0100</bug_when>
            <thetext>Created attachment 137
Fixes the problem

The attached patch fixes the problem. The sequence of comments prior to the function is preserved, by replacing the comment node which was the original function header with the new node.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1043</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-03-14 10:06:15 +0100</bug_when>
            <thetext>&lt;assign&gt;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1044</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-03-14 10:06:48 +0100</bug_when>
            <thetext>&lt;accept&gt;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1047</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-14 12:11:59 +0100</bug_when>
            <thetext>I note that SVN checkin 6882 does some work in this area, but it doesn&#39;t address the problem that I have. Try the test case - the comment which comes after the header is moved to before.

Using lines of &quot;-&quot; before and after file headers is a very long-standing part of our coding standards (going back 15 or more years) and is unlikely to change. Pretty-printing must support this.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1048</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-03-14 13:17:58 +0100</bug_when>
            <thetext>Yes, 6882, was just a quick fix by Sebastian while we were discussing things, but it&#39;s not the solution. I&#39;m still working on it.

I&#39;m not sure we can support any coding standard that is out there, but we try to supply a few common options and reasonable default behaviour. And mixing up the sequence of coherent comment elements without good reason doesn&#39;t look very reasonable ... ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1049</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-03-14 14:44:26 +0100</bug_when>
            <thetext>Supplied new comment.py (r6883). - This is close to Hugh&#39;s patch, but resorting to array index rather than object reference, to maintain sequence of comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1057</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-03-14 16:37:18 +0100</bug_when>
            <thetext>Fix confirmed here. Looks fine now.

Hugh</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>137</attachid>
            <date>2007-03-12 15:45:00 +0100</date>
            <delta_ts>2007-03-12 15:45:31 +0100</delta_ts>
            <desc>Fixes the problem</desc>
            <filename>qxBug334.patch</filename>
            <type>text/plain</type>
            <size>1371</size>
            <attacher>hgibson</attacher>
            
              <data encoding="base64">SW5kZXg6IGNvbW1lbnQucHkNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBjb21tZW50LnB5CShyZXZpc2lvbiA2
ODQ1KQ0KKysrIGNvbW1lbnQucHkJKHdvcmtpbmcgY29weSkNCkBAIC04ODMsNiArODgzLDcgQEAN
CiAKICAgICAgICAgICAgIGlmIG5vdCBoYXNhdHRyKHRhcmdldCwgImRvY3VtZW50YXRpb25BZGRl
ZCIpIGFuZCB0YXJnZXQucGFyZW50LnR5cGUgIT0gInBhcmFtcyI6CiAgICAgICAgICAgICAgICAg
b2xkID0gW10KKyAgICAgICAgICAgICAgICBvbGRDaGlsZCA9IE5vbmUKIAogICAgICAgICAgICAg
ICAgICMgY3JlYXRlIGNvbW1lbnRzQmVmb3JlCiAgICAgICAgICAgICAgICAgaWYgdGFyZ2V0Lmhh
c0NoaWxkKCJjb21tZW50c0JlZm9yZSIpOgpAQCAtODkyLDcgKzg5Myw3IEBADQogICAgICAgICAg
ICAgICAgICAgICAgICAgZm9yIGNoaWxkIGluIGNvbW1lbnRzQmVmb3JlLmNoaWxkcmVuOgogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNoaWxkLmdldCgiZGV0YWlsIikgaW4gWyJqYXZh
ZG9jIiwgInF0ZG9jIl06CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9sZCA9IHBh
cnNlVGV4dChjaGlsZC5nZXQoInRleHQiKSwgRmFsc2UpCi0gICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIGNvbW1lbnRzQmVmb3JlLnJlbW92ZUNoaWxkKGNoaWxkKQorICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBvbGRDaGlsZCA9IGNoaWxkCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIGJyZWFrCiAKICAgICAgICAgICAgICAgICBlbHNlOgpAQCAtOTEzLDkgKzkx
NCwxMiBAQA0KIAogICAgICAgICAgICAgICAgIGNvbW1lbnROb2RlLnNldCgiZGV0YWlsIiwgImph
dmFkb2MiKQogICAgICAgICAgICAgICAgIGNvbW1lbnROb2RlLnNldCgibXVsdGlsaW5lIiwgVHJ1
ZSkKKyAgICAgICAgICAgICAgICAKKyAgICAgICAgICAgICAgICBpZiBvbGRDaGlsZDoKKyAgICAg
ICAgICAgICAgICAgICAgY29tbWVudHNCZWZvcmUucmVwbGFjZUNoaWxkKG9sZENoaWxkLCBjb21t
ZW50Tm9kZSkKKyAgICAgICAgICAgICAgICBlbHNlOgorICAgICAgICAgICAgICAgICAgICBjb21t
ZW50c0JlZm9yZS5hZGRDaGlsZChjb21tZW50Tm9kZSkKIAotICAgICAgICAgICAgICAgIGNvbW1l
bnRzQmVmb3JlLmFkZENoaWxkKGNvbW1lbnROb2RlKQotCiAgICAgICAgICAgICAgICAgIyBpbiBj
YXNlIG9mIGFsdGVybmF0aXZlIG1ldGhvZHMsIHVzZSB0aGUgZmlyc3Qgb25lLCBpZ25vcmUgdGhl
IG90aGVycwogICAgICAgICAgICAgICAgIHRhcmdldC5kb2N1bWVudGF0aW9uQWRkZWQgPSBUcnVl
CiAK
</data>

          </attachment>
      

    </bug>