<bug>
          <bug_id>2343</bug_id>
          
          <creation_ts>2009-05-06 19:31:00 +0200</creation_ts>
          <short_desc>Add additonal output formats to dependency logging</short_desc>
          <delta_ts>2014-03-03 15:18:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9826</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-05-06 19:31:35 +0200</bug_when>
            <thetext>Add additional output formats to dependency logging, such as dot and json 
output. These features will be available under the &quot;log/dependencies&quot; config 
key.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9827</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-05-06 19:34:48 +0200</bug_when>
            <thetext>Most of it has been implemented during the last couple of days, under the 
banner of bug#1455, to which it was a supporting action.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9828</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-05-06 19:41:04 +0200</bug_when>
            <thetext>Thomas, it would be great you&#39;d take into account the file size of the _compiled_ classes rather than the source code size. This seems to be of a more practical value, particularly if it also respects any configured variants (client, debug, ...).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9845</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-05-07 17:47:06 +0200</bug_when>
            <thetext>Using compiled class sizes is in (r19054).

This is configurable via the config key 
log/dependencies/dot/compiled-class-size=(true|false), since there is a 
potential runtime penalty for the log job if classes have to be compiled on the 
fly (the default is true).

Make sure you also add in log/dependencies/dot/optimize the optimization 
options you would use in your build-script job. Repeating the optimization 
settings in this config key is a trade-off for keeping the &quot;log&quot; and 
&quot;compile-*&quot; actions independent (The alternative would be to require that they 
appear in the same job, and then the dependency logging would need to poke into 
the compile-* key settings, which is also not nice). You can easily assure this 
by using the OPTIMIZE macro for this config key (as the framework config files 
do), so the settings will be the same in all places. If you choose different 
optimization settings the calculated class sizes might not reflect the sizes 
you get when compiling your application. (The same applies for variants but 
there is no separate config key to specify variants for the dependency logging; 
the general &quot;variants&quot; key is used here).

CAVEAT: There is another setting that affects compiled sizes, the 
compile-dist/code/format key. Here, true is assumed as it is the default for 
framework applications. In an application that sets format to false in 
compile-dist, this would again decrease class sizes, but hopefully in a more 
linear manner so that the dot output is not affected so badly. If this becomes 
an issue, another config key for that is needed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9859</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-05-08 10:45:56 +0200</bug_when>
            <thetext>All the shiny new output options are currently only implemented for the &#39;using&#39; 
dependency type. &#39;used-by&#39; only supports txt output. Adding the new outputs 
also for this depedency type is left open for future demands.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36251</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:18:52 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>