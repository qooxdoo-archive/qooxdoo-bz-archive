<bug>
          <bug_id>6892</bug_id>
          
          <creation_ts>2012-10-11 22:26:00 +0200</creation_ts>
          <short_desc>AbstractField fails to sync the cached old values after setValue call</short_desc>
          <delta_ts>2012-12-03 14:58:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>2.0.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Wayne">w.si</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30936</commentid>
            <who name="Wayne">w.si</who>
            <bug_when>2012-10-11 22:26:23 +0200</bug_when>
            <thetext>AbstractField caches the value from setValue and the content element&#39;s &quot;change&quot; event in the __oldValue field, and the value from the content element&#39;s &quot;input&quot; event in the __oldInputValue field. These two fields are not properly synced when needed, and thus the control omits &quot;input&quot; and &quot;changeValue&quot; events when the user input and setValue are used in a mixed way. Please check the playground example. 

http://tinyurl.com/9v3kpef

Follow the instructions, then you will find the TextField doesn&#39;t fire changeValue and input events after step3.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30940</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-10-12 13:07:15 +0200</bug_when>
            <thetext>Wow, nice demo. Thanks! This seems to be a regression because it used to work in qooxdoo 1.5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31108</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-10-29 15:56:21 +0100</bug_when>
            <thetext>As you already have written, it was the internal cache __oldInputValue which held the wrong value and therefore prevented a firing of the events. We added this event blocking with bug #5309.
Fixing it was easy. I reset the input value on setValue.

master: 6c531b8af373a3b1613e7768485e6a373b7b9486
2.0.x: 5d92093a3c5d028a1945618a4e657d59020dbd4d</thetext>
          </long_desc>
      
      

    </bug>