<bug>
          <bug_id>3551</bug_id>
          
          <creation_ts>2010-03-26 12:36:00 +0100</creation_ts>
          <short_desc>Unexpected behavior of form controller</short_desc>
          <delta_ts>2010-03-29 15:11:07 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>1.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.0.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="saaj">id</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17555</commentid>
            <who name="saaj">id</who>
            <bug_when>2010-03-26 12:36:15 +0100</bug_when>
            <thetext>On the 3rd load too-much-recursion error happens. I&#39;ve checked in FF3.6, IE8, Chrome4.1, and Opera10.10 with the same results. In FireFox a concurrent flicker could be seen and 3rd attempt. I&#39;m not sure whether this behavior is designed - the 3 number is confusing in sense of determinacy.

Also my example has a workaround for this issue. 


var fieldFormatter = function(field, formatter)
{
  field.addListener(&quot;changeValue&quot;, function(event)
  {
    if(field.getUserData(&quot;formatted&quot;) != event.getData())
    {
      var value = formatter.call(this, event.getData());

      field.setUserData(&quot;formatted&quot;, value);
      field.setValue(value);
    }
  }, this);
};    

var form = new qx.ui.form.Form();

var field = new qx.ui.form.TextField();     
fieldFormatter.call(this, field, function(value)
{
  return &quot;$ &quot; + value;  
});      
form.add(field, &quot;Field&quot;, null, &quot;field&quot;);

var ok = new qx.ui.form.Button(&quot;load&quot;);
form.addButton(ok);  

var controller = new qx.data.controller.Form(null, form);

ok.addListener(&quot;execute&quot;, function()
{              
  this.debug(&quot;before&quot;);
  
  var model = qx.data.marshal.Json.createModel({field : Math.random().toFixed(4)});
  
  //controller.resetTarget(); //workaround
  controller.setModel(model);
  //controller.setTarget(form); //workaround
  
  this.debug(&quot;after&quot;);
}, this);    

this.getRoot().add(new qx.ui.form.renderer.Single(form));</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17560</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-29 09:16:04 +0200</bug_when>
            <thetext>to Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17561</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-29 09:21:46 +0200</bug_when>
            <thetext>Its really kind of odd that hitting the load button three times causes the bug. But anyway, this bug seems already beed fixed. I could reproduce the bug with 1.0 and 1.0.1 but not with trunk (future 1.1) or branch_1_0_x (future 1.0.2). Could you please check if thats also true for you and mark the bug as validated if so?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17573</commentid>
            <who name="saaj">id</who>
            <bug_when>2010-03-29 11:39:44 +0200</bug_when>
            <thetext>It works fine against the trunk. 
I have a question, ought I file a report in case there&#39;s a bug in old branch (say 1.0) but no bug in trunk?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17581</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-29 15:11:07 +0200</bug_when>
            <thetext>Sure, why not. Even if it is already fixed, we have a documentation what bugs we fixed. :)</thetext>
          </long_desc>
      
      

    </bug>