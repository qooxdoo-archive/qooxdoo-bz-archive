<bug>
          <bug_id>4795</bug_id>
          
          <creation_ts>2011-03-20 19:39:00 +0100</creation_ts>
          <short_desc>Refactoring of navigation manager</short_desc>
          <delta_ts>2012-07-09 09:28:48 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          <dependson>4709</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>mustafa.sak</cc>
          <qa_contact name="Tino Butz">tinobutz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23389</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-03-20 19:39:38 +0100</bug_when>
            <thetext>Right now the navigation manager is just a proof of concept.

Things to do:

 * Integration with RIA framework (move it away from the ui.mobile namespace)
 * Navigation Event (right now only a map is given as an attribute)
 * Combination with new REST layer (delete should perform a real REST delete)?
 * Mobile framework should have an &lt;a&gt; tag that can perform actions automatically (instead of firing the action during a tap event)
 * PageNavigationManager (GET  should directly route to an page.show)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25798</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-07-06 14:01:59 +0200</bug_when>
            <thetext>REST Layer just finished -&gt; 1.6</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28495</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-02-10 12:48:08 +0100</bug_when>
            <thetext>We should add some kind of middleware, for the routes. The express js framework has a nice implementation for that:

http://expressjs.com/guide.html#route-middleware

By adding the middleware to the routes we can e.g. check if a user is authenticated and abort any further execution.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28496</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-02-10 12:49:55 +0100</bug_when>
            <thetext>We should also use the same URI syntax for the parameters like the rest layer:

http://tools.ietf.org/html/draft-gregorio-uritemplate-08</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28615</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-02-22 15:15:29 +0100</bug_when>
            <thetext>Please think about not using singleton. Allow more instances of manager.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28618</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-02-22 20:37:06 +0100</bug_when>
            <thetext>The Manager has __getFromHistory to determine that we are getting an entry from history. This indicator (data.customData.fromHistory) is very useful. But this function removes that given entry from history array, this causes a problem on forwarding the history and than get back again. In that case the property fromHistory lies. So it would be very useful, to move the entry from history (back) array to another array, which holds all forward able entries. Would be nice to now that the route comes from history and which action (back or forward) is responsible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28633</commentid>
              <attachid>1129</attachid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-02-24 13:50:56 +0100</bug_when>
            <thetext>Created attachment 1129
IE 8/9 reloads on history back even though just hash values are changing

We should solve that issue with using a dummy iframe to handle hash chages.
A small example wich shows that use is attached.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28634</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2012-02-24 13:55:45 +0100</bug_when>
            <thetext>(In reply to comment #6)
The navigation handler should be configure able to listen any frame location. So a environment check could solve that for IE.

By the the way using of an iframe as container for hash changes solves problems with missing onhashchange event on IE 6 and 7.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28635</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-24 13:59:43 +0100</bug_when>
            <thetext>(In reply to comment #6)
&gt; Created attachment 1129 [details]
&gt; IE 8/9 reloads on history back even though just hash values are changing
&gt; 
&gt; We should solve that issue with using a dummy iframe to handle hash chages.
&gt; A small example wich shows that use is attached.

Sounds similar to what qx.bom.IframeHistory does, maybe we can use that implementation?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29310</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-05-02 17:42:01 +0200</bug_when>
            <thetext>Added two new classes:
The class &#39;qx.event.Messaging&#39; features the general messaging approach used for the routing.
&#39;qx.application.Routing&#39; offers the routing for applications which are connected to the browsrs history.

maser: 48128d1ad5f66f083c23ace56b641f8ab94d9d99</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1129</attachid>
            <date>2012-02-24 13:50:00 +0100</date>
            <delta_ts>2012-02-24 13:50:56 +0100</delta_ts>
            <desc>IE 8/9 reloads on history back even though just hash values are changing</desc>
            <filename>ieHashHistroyIframeBug.zip</filename>
            <type>application/zip</type>
            <size>1072</size>
            <attacher>mustafa.sak</attacher>
            
              <data encoding="base64">UEsDBBQAAAAIACdfWEB6yeWhsQAAAOgAAAAMAAAAd3JhcHBlci5odG1sTY/NCsIwEITPKfQdlgXB
IvQHvJkWFBU8eBFfIG1jErBJSSLRtzetgt5md/l2Zqj0w71JkzQhtDX9K0pCTsfL9nyoaGvnkbrO
qtHPmvSmewxc+zxY5fkSjZbMyU5qJjgoBwgr+G2ZFhxBaQhK9yZk8ah5gD2LaJYL7q9qiCrbzD7F
nxFVN8sGDs52Ne7yKSbGL72XNVZluUCQXAnpa1yX5fjEhhYfYqJp8e2SJrSYG74BUEsDBBQAAAAI
ADddWEAgd/88tAEAANgDAAAGAAAAQi5odG1sjVPLbtswEDwrQP5hw5N9sAijlzomfagboAEKtECF
FD0yEm0SlUiVWlo2iv57SUlpJccJsgeJj5nlPmbZzccv2+zH1ztQWJWb6ysW/3CsStNwohDrW0rb
tk3bd6l1e7pcrVb0GDEkgm5LYfacSEMCFYIxJUUxrLt9JVFA9LOQv7w+cLK1BqXBRXaqJYG833GC
8og0+l1DroRrJHKPu8V7AnTsrsmdrnF0Eq3VprBtao0SjQpss5fAobCZ0s13JU2m5Kdws+1umvX1
1ZS+8yZHbQ301AE9m09Rv6fbaAfhwMg2oh9E6ftHc1+FhNK9xLtSxuWH030xIwPu3tQeyTw9RPz6
ssvcOxd4n20uurD4U4LlcJLWApUR1SUH59BYkuBhHOYZ68+L9Xipgm8ojSilwxkJPOgiCJ+hvMUN
mT+P4GnJ6KTDjI70xB5tcdrACKyWmxgW9HFBJhsMjOVYMDvrqjO5MB2bABgE2OuOgC74tEMgPNpd
aGbzGvnRI1pDoOsmJ99kIFqTlzr/ycmZmuKEJMl/ASdJ8k8srdMoZ5daN+/UGnj0mfIZHeXGaFec
ML/dEG3+AlBLAwQUAAAACACgXlhALhp6MZkAAADUAAAACgAAAGluZGV4Lmh0bWxNj9EKwiAYha8d
7B3kh6ARTIPu+rd3cfo3heZEDevt2yyou48D5+MctHm5j23TNgyn1bw2ZCxTyjjFyph0dCFXZmbV
j4V87kt0mY6wequS1darmbhLHPiJ/1LlZwLuPC/Om7V03bUKxZ8R3S2qhXiKeoASVQgU+30SbCWT
7QBnKQ/ALbnZ5gEuUoYnjCg+vd2B4ru7bVDUN29QSwECFAAUAAAACAAnX1hAesnlobEAAADoAAAA
DAAAAAAAAAABACAAAAAAAAAAd3JhcHBlci5odG1sUEsBAhQAFAAAAAgAN11YQCB3/zy0AQAA2AMA
AAYAAAAAAAAAAQAgAAAA2wAAAEIuaHRtbFBLAQIUABQAAAAIAKBeWEAuGnoxmQAAANQAAAAKAAAA
AAAAAAEAIAAAALMCAABpbmRleC5odG1sUEsFBgAAAAADAAMApgAAAHQDAAAAAA==
</data>

          </attachment>
      

    </bug>