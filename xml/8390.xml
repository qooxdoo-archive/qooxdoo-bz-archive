<bug>
          <bug_id>8390</bug_id>
          
          <creation_ts>2014-05-29 11:15:00 +0200</creation_ts>
          <short_desc>Wrong NaN check when formatting String from Number.</short_desc>
          <delta_ts>2015-05-20 13:09:07 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>3.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>4.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sergey Dvoynikov">svdvoynikov</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40430</commentid>
            <who name="Sergey Dvoynikov">svdvoynikov</who>
            <bug_when>2014-05-29 11:15:36 +0200</bug_when>
            <thetext>There is format method in qx.util.format.NumberFormat class. It starts this way:


format : function(num)
    {
      // handle special cases
      switch (num) {
        case Infinity:
          return &quot;Infinity&quot;;

        case -Infinity:
          return &quot;-Infinity&quot;;

        case NaN:
          return &quot;NaN&quot;;
      }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Since NaN != NaN, lats case branch will never happens.
This code should be rewritten like that:


format : function(num)
    {
      // handle special cases
      if (isNaN(num)) {
        return &quot;NaN&quot;;
      }

      switch (num) {
        case Infinity:
          return &quot;Infinity&quot;;

        case -Infinity:
          return &quot;-Infinity&quot;;
      }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40440</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-06-02 09:27:08 +0200</bug_when>
            <thetext>Thanks for the report.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43303</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-05-20 13:09:07 +0200</bug_when>
            <thetext>I just checked the code and you are ofc right. But the method worked anyway as the calculation resulted in the NaN sting as well. But thats not necessary so I added your proposed fix.

master: 64bcf997e52970d7e5ab1987563c550821f0daa8
4.1.x: f9a01d3913654ab4b409e34ffd4d1e687b0bd918</thetext>
          </long_desc>
      
      

    </bug>