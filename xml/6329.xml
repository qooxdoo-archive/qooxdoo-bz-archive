<bug>
          <bug_id>6329</bug_id>
          
          <creation_ts>2012-04-17 09:31:00 +0200</creation_ts>
          <short_desc>Improve q.ready() to fire on DOM ready</short_desc>
          <delta_ts>2014-03-03 15:18:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.bom</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Alexander Steitz">alexander.steitz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>29192</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-04-17 09:31:11 +0200</bug_when>
            <thetext>Currently, the callback passed to q.ready is fired on &quot;load&quot; of the document. All resources (including images) need to be loaded before the &quot;load&quot; is fired. This can slow down qx.Website applications considerably. I suggest to listen to the DOM &quot;ready&quot; event. Sadly the exact name of the event is implementation specific and older browsers do not support it at all. From what I remember, a work around for older browsers (namely IE) can be provided by periodically checking DOM properties.

To sum up:
1) Listen to the DOM &quot;ready&quot; event
2) Provide a work around for browsers not supporting the native &quot;ready&quot; event
3) As a last resort, fall back to the old behavior listening to the &quot;load&quot; event

Some implementations:
https://github.com/jquery/jquery/blob/master/src/core.js#L423-466
https://github.com/ded/domready/blob/master/ready.js</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29193</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2012-04-17 09:38:18 +0200</bug_when>
            <thetext>AFAIK, we already have such an implementation available (not within the scope of q). For IEs qooxdoo is trying to scroll the document. Once this is possible the DOM is ready.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29195</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-04-17 09:49:57 +0200</bug_when>
            <thetext>Good. But is it tested properly? From glancing over the implementation found in jQuery it looks like there are a number of browser quirks to be aware of. Since a normalization of the ready event is among the most important features of a low-level lib I suggest we take the opportunity to double check. I assume the ready event was not a priority in qx.Desktop because here the script is adding all the resources.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29297</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-04-27 13:22:28 +0200</bug_when>
            <thetext>jQuery, ready.js and qx.event.handler.Application all use the algorithm described by Tristan, with minor variations. Implemented the same for q.ready with 8e08ef31</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36248</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:18:52 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>