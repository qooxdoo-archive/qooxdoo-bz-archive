<bug>
          <bug_id>1789</bug_id>
          
          <creation_ts>2008-12-17 19:33:00 +0100</creation_ts>
          <short_desc>Document child controls</short_desc>
          <delta_ts>2014-03-03 15:27:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>0.8.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.1</target_milestone>
          
          <blocked>2133</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabian Jakobs">fabian.jakobs</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7132</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-12-17 19:33:33 +0100</bug_when>
            <thetext>To write custom themes it is important to know, which sib widgets a widget has and of which type they are. This information must be documented in the code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8396</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-09 11:50:21 +0100</bug_when>
            <thetext>Alex, ideas how to complement this? Is it a manual task (at least for the time being)?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8740</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-19 10:14:46 +0100</bug_when>
            <thetext>I guess there is no way to gather the information directly from the implementation since one cannot rely on that the code structure (e.g. always using a &quot;switch&quot; statement within the &quot;createChildControlImpl&quot; method) to fetch infos of the sub widgets.

I&#39;d recommend to put the information about child controls in the documentation section of the class header. If a special syntax is used the toolchain can easily extract this info and add it to the API data of a class. 

A possible syntax could be:

--snip--
@childControl ID {CLASS} DESCRIPTION

// example for Atom widget
@childControl label {qx.ui.basic.Label} label child control
@childControl icon {qx.ui.basic.Image} icon child control
--snip--

Together with information about the appearance ID it would be possible to visualize the appearance ID of the sub widgets at the API-Viewer. Once this information is present in the classes the generator has to aware of the info and the API Viewer at last needs to visualize the infos.
The latter two steps will be filed under separate bug reports.

Moving this issue to 0.9 since it does not fit into the scope of 0.8.3</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8750</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-19 11:51:39 +0100</bug_when>
            <thetext>We want to document the styling options here in first instance. So it might be good to know which ID represents what class base. Basically only the themable properties are interesting here. Also interesting is which child controls the control itself has. I could imagine some kind of tree (like the inheritance tree here):

- Window (qx.ui.window.Window)
  - captionbar (qx.ui.core.Widget)
    - title (qx.ui.basic.Label)
    - close-button (qx.ui.basic.Image)
  - statusbar (qx.ui.core.Widget)
    - status-text (qx.ui.basic.Label)

This would give the user a good impression of the structure of the widget to style. In my opinion this should be quite on-top of the documentation (maybe somewhere between the inheritance tree and the main description of the class).

To be more JavaDoc like I would simplify the naming of the &quot;attribute&quot; from &quot;@childControl&quot; to &quot;@child&quot; or &quot;@control&quot; with slightly preference to the first one. Not sure if really a documentation after the class is needed. Most time the direct child controls are quite self-explaining. I wouldn&#39;t enfore a description block at least.

It would be nice to have some kind of Filter option for displaying only &quot;themable&quot; properties then. Some kind of theming view of the API, optimized for theme authors. A switch like the ones for private, protected etc. might be enough. The links inside these child control tree may automatically toggle this option active so that following a class there only offers the themable properties together with the child control structure of that class e.g.:

&quot;Class qx.ui.window.Window

Description...

Child-Structure:
  - captionbar (qx.ui.core.Widget)
    - title (qx.ui.basic.Label)
    - close-button (qx.ui.basic.Image)
  - statusbar (qx.ui.core.Widget)
    - status-text (qx.ui.basic.Label)&quot;

In this view all methods are hidden as well as events and other stuff. This way this view is highly focused on the styling of an application.

What do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8774</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-19 16:08:11 +0100</bug_when>
            <thetext>Definitely a very good idea to show the structure of the child controls. Thanks for this additional info!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8797</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-20 14:48:52 +0100</bug_when>
            <thetext>It would also be nice to document if the child control is optional and if so what property does control the showing/hiding of the child control.
E.g. the minimize/maximize/close buttons at the window captionbar are only showed when the corresponding properties are set. This should be mentioned at the documentation because it&#39;s a valuable information for developers and helps to understand the behaviour of the widget.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13128</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-10-12 18:05:51 +0200</bug_when>
            <thetext>Prio down to P3.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14026</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-10 14:22:59 +0100</bug_when>
            <thetext>marked as enhancement, P2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14730</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:25:53 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15111</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-11-30 16:08:52 +0100</bug_when>
            <thetext>Moving on to target 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16278</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-01-18 14:47:16 +0100</bug_when>
            <thetext>accepting</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16395</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-01-25 16:08:22 +0100</bug_when>
            <thetext>back to my pool and to milestone 1.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16899</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-02-19 15:58:16 +0100</bug_when>
            <thetext>accepting</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17169</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-03-09 14:59:31 +0100</bug_when>
            <thetext>added comments with Revision #21730
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39329</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:03 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>