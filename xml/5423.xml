<bug>
          <bug_id>5423</bug_id>
          
          <creation_ts>2011-07-20 11:48:00 +0200</creation_ts>
          <short_desc>User extensions do not work in FF5/Selenium IDE 1.1.0</short_desc>
          <delta_ts>2014-03-03 15:23:22 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.test.automation</component>
          <version>1.5</version>
          <rep_platform>Firefox 5.0</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          <blocked>5433</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>Firefox</cf_browser>
          <cf_browser_version>5</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>26125</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-07-20 11:48:30 +0200</bug_when>
            <thetext>Even simple locators like qxhv=child[0] do not work in Firefox 5/Selenium IDE 1.1.0. From the debug messages, it looks like not all child widgets of the application root are found. This could be related to new security features in FF5: The JS object wrapper is now XrayWrapper instead of XPCNativeWrapper.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26491</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-08-16 11:48:38 +0200</bug_when>
            <thetext>The problems were caused whenever the items of an Array from the AUT (returned e.g. by calling getChildren on a widget) were added to an Array created within the user extensions using concat(). In these cases, concat behaved like push, adding a single item containing the AUT Array.
Not sure what causes this since the AUT Array doesn&#39;t seem to be a wrapped object and autArray instanceof Array returns true in the extensions&#39; context.

Added a workaround for trunk and branch_1_5_x with r28480.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26498</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-08-16 15:09:13 +0200</bug_when>
            <thetext>Found another problem: qx.lang.Array.contains does not work when used to compare an AUT-side Array with one created within the extension context.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26499</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-08-16 15:45:43 +0200</bug_when>
            <thetext>Replaced qx.lang.Array.contains with a custom function that uses qx object hashes to determine if an array contains an object (r28485).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37990</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:22 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>