<bug>
          <bug_id>7381</bug_id>
          
          <creation_ts>2013-05-02 10:56:00 +0200</creation_ts>
          <short_desc>A new property to be able to respect image size ratio qx.ui.basic.Image</short_desc>
          <delta_ts>2014-05-26 12:34:34 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32671</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-05-02 10:56:22 +0200</bug_when>
            <thetext>It would be nice to be able to enable repecting of image size ratios on qx.ui.basic.Image widgets.

Here an expamle code:

qx.Class.define(&quot;RatioImage&quot;, 
{
  extend: qx.ui.basic.Image,


  /** Members */
  members: 
  {
    //overridden
    renderLayout : function(left, top, width, height) 
    {
      var imgDim = this._getContentHint(); // get image dimensions
      var dimensions = this.__computeDimensionRespectingRatio(
        imgDim.width, // image original width
        imgDim.height, // image original height
        width, // max width by layout
        height // max height by layout
      );

      // only if image should be centered
      left += Math.ceil((width - dimensions.width) / 2); // make it centered
      top += Math.ceil((height - dimensions.height) / 2); // make it centered

      width = dimensions.width;
      height = dimensions.height;

      this.base(arguments, left, top, width, height);
    },

    
    __computeDimensionRespectingRatio : function(width, height, maxWidth, maxHeight)
    {
      var ratio = 0;  // Used for aspect ratio

      // Check if the current width is larger than the max
      if(width &gt; maxWidth) {
          ratio = maxWidth / width;   // get ratio for scaling image
          width = maxWidth; // Set new width
          height = Math.ceil(height * ratio);  // Scale height based on ratio
      }

      // Check if current height is larger than max
      if(height &gt; maxHeight) {
          ratio = maxHeight / height; // get ratio for scaling image
          height = maxHeight;   // Set new height
          width = Math.ceil(width * ratio);    // Scale width based on ratio
      }

      return {
        width : width,
        height : height
      };
    }
  }
});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40401</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-05-26 12:34:34 +0200</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>