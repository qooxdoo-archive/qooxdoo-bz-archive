<bug>
          <bug_id>8633</bug_id>
          
          <creation_ts>2014-10-14 16:39:00 +0200</creation_ts>
          <short_desc>qx.lang.String.format does not escape native replace short hands</short_desc>
          <delta_ts>2014-12-16 11:44:19 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Mustafa Sak">mustafa.sak</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41387</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-10-14 16:39:39 +0200</bug_when>
            <thetext>Native .replace() function handles short hands like &#39;$&amp;&#39;, see: http://bclary.com/2004/11/07/#a-15.5.4.11

This is a good feature at using .replace() directly. But the implementation of qx.lang.String.format is also based on replace, which will handle the same short hands. 

I highly recommend to avoid such short hands handling from qx.lang.String.format, since it is a highly used function by qx.locale.Manager#translate. Escaping with &#39;$$&#39; on application side is surely possible but not what I&#39;m expecting on using the translation function.

Here is a demonstration how .replace works:

&quot;foo %1 bar&quot;.replace(new RegExp(&quot;%1&quot;, &quot;g&quot;), &quot;x$&amp;y&quot;);
=&gt; &quot;foo x%1y bar&quot;

Here is a way to avoid short hand handling:
&quot;foo %1 bar&quot;.replace(new RegExp(&quot;%1&quot;, &quot;g&quot;), function(){return &quot;x$&amp;y&quot;;});
=&gt; &quot;foo x$&amp;y bar&quot;

Tested with IE7 and above.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41388</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-10-15 07:54:49 +0200</bug_when>
            <thetext>Thanks for the good bug report.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41390</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-10-15 10:52:08 +0200</bug_when>
            <thetext>Fixed by wrapping the second argument of replace with a function. This avoids short hand strings.

Committed into master e6e828660e621f6fa0e43f05fd26dc19be57974a</thetext>
          </long_desc>
      
      

    </bug>