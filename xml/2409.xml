<bug>
          <bug_id>2409</bug_id>
          
          <creation_ts>2009-05-25 08:56:00 +0200</creation_ts>
          <short_desc>Problem in qx.util.StringSplit.split</short_desc>
          <delta_ts>2014-03-03 15:26:40 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.util</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ilkka Oksanen">iao</reporter>
          <assigned_to name="Adrian Olaru">adrian.olaru</assigned_to>
          <cc>derrell.lipman</cc>
    
    <cc>iao</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10087</commentid>
            <who name="Ilkka Oksanen">iao</who>
            <bug_when>2009-05-25 08:56:48 +0200</bug_when>
            <thetext>My example below (enhanced by Derrell Lipman) shows how qooxdoo split() works differently compared to native split(). This is not expected behavior.

Qooxdoo split seem to circumvent several browser bugs and is therefore quite complex. I&#39;m not able to suggest a patch.

-----------------
var line = &quot;one two three&quot;;

var names = qx.util.StringSplit.split(line, / /, 300);
this.debug(&quot;qx.util.StringSplit.split yields length &quot; + names.length);
for (var i = 0; i &lt; names.length; i++)
  this.debug(&quot;qx: &quot; + i + &quot;: &quot; + names[i]);

names = line.split(/ /, 300);
this.debug(&quot;native split yields length &quot; + names.length);
for (var i = 0; i &lt; names.length; i++)
  this.debug(&quot;native: &quot; + i + &quot;: &quot; + names[i]);
-----------------</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12294</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-15 10:48:38 +0200</bug_when>
            <thetext>to Daniel. I recall a discussion on the ML that could give you add&#39;tl input. Please see if qooxdoo&#39;s split is consistent, add unit tests for it. Also make sure documentation is clear about possible differences to the native split(). </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14783</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:31 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19112</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-02 11:40:16 +0200</bug_when>
            <thetext>--&gt; Adrian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19179</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-07-08 12:49:12 +0200</bug_when>
            <thetext>accept.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19264</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-07-12 18:20:05 +0200</bug_when>
            <thetext>The problem was the limit parameter. If used without the limit parameter,
the split method works as expected.

It seems that the StringSplit uses and older version of Steven Levithan&#39;s 
cross-browser split (0.1).  In the meantime, the limit parameter was fixed,
and the script refactored and optimized. So, I&#39;ve kept using the Steven&#39;s split
method but updated it to the newest version (1.0.1). 
http://blog.stevenlevithan.com/archives/cross-browser-split

I&#39;ve also implemented his demo tests as unit tests. 
http://stevenlevithan.com/demo/split.cfm</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39193</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:40 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>