<bug>
          <bug_id>1171</bug_id>
          
          <creation_ts>2008-08-14 10:39:00 +0200</creation_ts>
          <short_desc>qx.lang.Array.max qx.lang.Array.min</short_desc>
          <delta_ts>2014-03-03 15:19:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Petr Kobalíček">kobalicek.petr</reporter>
          <assigned_to name="Jonathan Weiß">qooxdoo-bugs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4354</commentid>
            <who name="Petr Kobalíček">kobalicek.petr</who>
            <bug_when>2008-08-14 10:39:20 +0200</bug_when>
            <thetext>This bug was introduced in mailing list.

Array min and max implementation will return Number.MIN_VALUE or Number.MAX_VALUE if array has zero elements (empty - []).

Quick solution for this is this code that will return undefined instead of MIN_VALUE and MAX_VALUE if array has no elements.

     max : function(arr)
     {
       var i, len=arr.length, result = arr[0];
       for (i = 1; i &lt; len; i++) if (arr[i] &gt; result) result = arr[i];
       return result;
     }

     min : function(arr)
     {
       var i, len=arr.length, result = arr[0];
       for (i = 1; i &lt; len; i++) if (arr[i] &lt; result) result = arr[i];
       return result;
     }

Please check this code carefully. It should work for strings, but I don&#39;t know behavior if arr will be object and length will be set to some numeric value.

This is my idea how it works:
 arr[0] will give undefined if arrray length is zero and for loop will
 be never executed. We are starting loop from 1, because zero
 element was already set to result. So if array has exactly one element,
 loop will not be executed, but result will be correct - arr[0].</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4563</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-08-21 15:57:16 +0200</bug_when>
            <thetext>.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4567</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2008-08-21 16:23:57 +0200</bug_when>
            <thetext>Accedpted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4658</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2008-08-25 11:51:07 +0200</bug_when>
            <thetext>Fixed in r16029.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36411</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:15 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>