<bug>
          <bug_id>5458</bug_id>
          
          <creation_ts>2011-07-28 15:30:00 +0200</creation_ts>
          <short_desc>Create playground widget</short_desc>
          <delta_ts>2011-08-02 08:31:30 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26296</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-07-28 15:30:40 +0200</bug_when>
            <thetext>The playground is really useful for playing with core widgets. It would be even more useful if it could be embedded in an application under development, to try out new code that makes use of classes already included in the application.

This request is for a widget that can be added to an application that provides basic playground functionality (ace, output window, log window).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26310</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-07-29 08:29:06 +0200</bug_when>
            <thetext>Thanks for the report, Derrell. Thats an interesting idea but comes with some side effects. The playground only works because we do have all classes included. You would need that too in your custom app to use all the benefits from the playground.
Thinking of it for a second, I asked myself why we would need to have a output windwo if we are already in a custom application. We could apply the code directly to the app... but then, I also aks myself why we would need a console because the browsers console should be there anyway when developing an app... So  only ace is left which brings me to the question, why not use the browsers build in console fur such things... Hm!
On the other side, if we strip out the output window, it is more or less the inspector application.
What would be you use case to use that? Or did I get something wrong?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26359</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-08-01 22:44:42 +0200</bug_when>
            <thetext>I&#39;ve been thinking about this, and I now see that it is, in fact, unnecessary. You&#39;re right about the output window and log. As to the code window, since I&#39;d only ever used the single-line console input in Firebug, which executes commands immediately upon pressing Enter, it didn&#39;t occur to me that opening it to the larger window would not also leave it in immediate-mode execution. I now see that I can enter whole snippets of code in that larger Firebug console and then run them at button press, as I&#39;d wanted to do with Ace. That obviates the need for my request.

I&#39;ve marked this bug as invalid.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26360</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-08-02 08:31:30 +0200</bug_when>
            <thetext>Agreed and closed.</thetext>
          </long_desc>
      
      

    </bug>