<bug>
          <bug_id>3013</bug_id>
          
          <creation_ts>2009-10-30 21:33:00 +0100</creation_ts>
          <short_desc>Serialize to native object</short_desc>
          <delta_ts>2009-11-24 20:16:28 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>13752</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-10-30 21:33:12 +0100</bug_when>
            <thetext>In my use of databinding, I need to get back a native object rather than a URI- or JSON-encoding.
The attachment to this bug contains a patch to add a new toNativeObject() method to qx.util.Serializer. I&#39;ll commit this if no one has any objections.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13753</commentid>
              <attachid>640</attachid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-10-30 21:34:27 +0100</bug_when>
            <thetext>Created attachment 640
patch to add static method qx.util.Serializer.toNativeObject()</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13764</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-02 10:39:56 +0100</bug_when>
            <thetext>Martin, please have a look.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13770</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-11-02 10:51:41 +0100</bug_when>
            <thetext>Looks like mostly a copy of the JSON Serializer but based on a older revision. I added the serialization of JavaScript objects (not only qooxdoo Objects) some time ago. Can your algorithm handle JavaScript Maps too?
I also wrote a lot of unit tests for the other two serializer in qx.test.util.Serializer. It would be nice if you implement some tests for your algorithm too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13787</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-02 15:48:44 +0100</bug_when>
            <thetext>Looks like mostly a copy of the JSON Serializer but based on a older revision.
I added the serialization of JavaScript objects (not only qooxdoo Objects) some
time ago. Can your algorithm handle JavaScript Maps too?
I also wrote a lot of unit tests for the other two serializer in
qx.test.util.Serializer. It would be nice if you implement some tests for your
algorithm too.

Yes, I apparently didn&#39;t have the latest version of Serializer so I was missing the JavaScript object serialization. I&#39;ve added that and a whole series of tests (which all pass), and committed the lot. Thanks.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13788</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-11-02 15:56:05 +0100</bug_when>
            <thetext>Just looked at the test and the look good and all pass. --&gt; CLOSED</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14666</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:16:28 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>640</attachid>
            <date>2009-10-30 21:34:00 +0100</date>
            <delta_ts>2009-10-30 21:34:27 +0100</delta_ts>
            <desc>patch to add static method qx.util.Serializer.toNativeObject()</desc>
            <filename>yyy</filename>
            <type>text/plain</type>
            <size>3766</size>
            <attacher>derrell.lipman</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL3Fvb3hkb28vZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC91dGlsL1Nlcmlh
bGl6ZXIuanMgYi9xb294ZG9vL2ZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvdXRpbC9TZXJpYWxp
emVyLmpzCmluZGV4IGIyZGJiYWMuLjZiYTkyMDEgMTAwNjQ0Ci0tLSBhL3Fvb3hkb28vZnJhbWV3
b3JrL3NvdXJjZS9jbGFzcy9xeC91dGlsL1NlcmlhbGl6ZXIuanMKKysrIGIvcW9veGRvby9mcmFt
ZXdvcmsvc291cmNlL2NsYXNzL3F4L3V0aWwvU2VyaWFsaXplci5qcwpAQCAtODQsNiArODQsMTIw
IEBAIHF4LkNsYXNzLmRlZmluZSgicXgudXRpbC5TZXJpYWxpemVyIiwKIAogCiAgICAgLyoqCisg
ICAgICogU2VyaWFsaXplcyB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gcW9veGRvbyBvYmpl
Y3QgaW50byBhIG5hdGl2ZQorICAgICAqIG9iamVjdC4KKyAgICAgKgorICAgICAqIEBwYXJhbSBv
YmplY3Qge3F4LmNvcmUuT2JqZWN0fQorICAgICAqICAgQW55IHFvb3hkb28gb2JqZWN0CisgICAg
ICoKKyAgICAgKiBAcGFyYW0gcXhTZXJpYWxpemVyIHtGdW5jdGlvbn0KKyAgICAgKiAgIEZ1bmN0
aW9uIHVzZWQgZm9yIHNlcmlhbGl6aW5nIHFvb3hkb28gb2JqZWN0cyBzdG9yZWQgaW4gdGhlIHBy
b3BlcnR5cworICAgICAqICAgb2YgdGhlIG9iamVjdC4gQ2hlY2sgZm9yIHRoZSB0eXBlIG9mIGNs
YXNzZXMgPG91IHdhbnQgdG8gc2VyaWFsaXplCisgICAgICogICBhbmQgcmV0dXJuIHRoZSBzZXJp
YWxpemVkIHZhbHVlLiBJbiBhbGwgb3RoZXIgY2FzZXMsIGp1c3QgcmV0dXJuCisgICAgICogICBu
b3RoaW5nLgorICAgICAqCisgICAgICogQHJldHVybiB7U3RyaW5nfQorICAgICAqICAgVGhlIHNl
cmlhbGl6ZWQgb2JqZWN0LgorICAgICAqLworICAgIHRvTmF0aXZlT2JqZWN0IDogZnVuY3Rpb24o
b2JqZWN0LCBxeFNlcmlhbGl6ZXIpCisgICAgeworICAgICAgdmFyIHJlc3VsdDsKKworICAgICAg
Ly8gbnVsbCBvciB1bmRlZmluZWQKKyAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkKKyAgICAgIHsK
KyAgICAgICAgcmV0dXJuIG51bGw7CisgICAgICB9CisKKyAgICAgIC8vIGRhdGEgYXJyYXkKKyAg
ICAgIGlmIChxeC5DbGFzcy5oYXNJbnRlcmZhY2Uob2JqZWN0LmNvbnN0cnVjdG9yLCBxeC5kYXRh
LklMaXN0RGF0YSkpCisgICAgICB7CisgICAgICAgIHJlc3VsdCA9IFtdOworICAgICAgICBmb3Ig
KHZhciBpID0gMDsgaSA8IG9iamVjdC5nZXRMZW5ndGgoKTsgaSsrKQorICAgICAgICB7CisgICAg
ICAgICAgcmVzdWx0LnB1c2gocXgudXRpbC5TZXJpYWxpemVyLnRvTmF0aXZlT2JqZWN0KG9iamVj
dC5nZXRJdGVtKGkpLAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBxeFNlcmlhbGl6ZXIpKTsKKyAgICAgICAgfQorCisgICAgICAgIHJldHVy
biByZXN1bHQ7CisgICAgICB9CisKKyAgICAgIC8vIG90aGVyIGFycmF5cworICAgICAgaWYgKHF4
LmxhbmcuVHlwZS5pc0FycmF5KG9iamVjdCkpCisgICAgICB7CisgICAgICAgIHJlc3VsdCA9IFtd
OworICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iamVjdC5sZW5ndGg7IGkrKykKKyAgICAg
ICAgeworICAgICAgICAgIHJlc3VsdC5wdXNoKHF4LnV0aWwuU2VyaWFsaXplci50b05hdGl2ZU9i
amVjdChvYmplY3RbaV0sCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHF4U2VyaWFsaXplcikpOworICAgICAgICB9CisKKyAgICAgICAgcmV0
dXJuIHJlc3VsdDsKKyAgICAgIH0KKworICAgICAgLy8gcW9veGRvbyBvYmplY3QKKyAgICAgIGlm
IChvYmplY3QgaW5zdGFuY2VvZiBxeC5jb3JlLk9iamVjdCkKKyAgICAgIHsKKyAgICAgICAgaWYg
KHF4U2VyaWFsaXplciAhPSBudWxsKQorICAgICAgICB7CisgICAgICAgICAgdmFyIHJldHVyblZh
bHVlID0gcXhTZXJpYWxpemVyKG9iamVjdCk7CisgICAgICAgICAgCisgICAgICAgICAgLy8gaWYg
d2UgaGF2ZSBzb21ldGhpbmcgcmV0dXJuZWQsIHJldHVybiB0aGF0CisgICAgICAgICAgaWYgKHJl
dHVyblZhbHVlICE9IHVuZGVmaW5lZCkKKyAgICAgICAgICB7CisgICAgICAgICAgICByZXR1cm4g
cmV0dXJuVmFsdWU7CisgICAgICAgICAgfQorICAgICAgICAgIAorICAgICAgICAgIC8vIGNvbnRp
bnVlIG90aGVyd2lzZQorICAgICAgICB9CisKKyAgICAgICAgcmVzdWx0ID0ge307CisgICAgICAg
IAorICAgICAgICB2YXIgcHJvcGVydGllcyA9CisgICAgICAgICAgcXgudXRpbC5Qcm9wZXJ0eVV0
aWwuZ2V0UHJvcGVydGllcyhvYmplY3QuY29uc3RydWN0b3IpOworICAgICAgICAKKyAgICAgICAg
Zm9yICh2YXIgbmFtZSBpbiBwcm9wZXJ0aWVzKQorICAgICAgICB7CisgICAgICAgICAgLy8gaWdu
b3JlIHByb3BlcnR5IGdyb3VwcworICAgICAgICAgIGlmIChwcm9wZXJ0aWVzW25hbWVdLmdyb3Vw
ICE9IHVuZGVmaW5lZCkKKyAgICAgICAgICB7CisgICAgICAgICAgICBjb250aW51ZTsKKyAgICAg
ICAgICB9CisgICAgICAgICAgCisgICAgICAgICAgdmFyIHZhbHVlID0gb2JqZWN0WyJnZXQiICsg
cXgubGFuZy5TdHJpbmcuZmlyc3RVcChuYW1lKV0oKTsKKyAgICAgICAgICByZXN1bHRbbmFtZV0g
PSBxeC51dGlsLlNlcmlhbGl6ZXIudG9OYXRpdmVPYmplY3QodmFsdWUsCisgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF4U2VyaWFsaXpl
cik7CisgICAgICAgIH0KKworICAgICAgICByZXR1cm4gcmVzdWx0OworICAgICAgfQorCisgICAg
ICAvLyBTdHJpbmdzLiBFc2NhcGUKKyAgICAgIGlmIChxeC5sYW5nLlR5cGUuaXNTdHJpbmcob2Jq
ZWN0KSkKKyAgICAgIHsKKyAgICAgICAgb2JqZWN0ID0gb2JqZWN0LnJlcGxhY2UoLyhbXFxdKS9n
LCAnXFxcXCcpOworICAgICAgICBvYmplY3QgPSBvYmplY3QucmVwbGFjZSgvKFsiXSkvZywgJ1xc
IicpOworICAgICAgICBvYmplY3QgPSBvYmplY3QucmVwbGFjZSgvKFtccl0pL2csICdcXHInKTsK
KyAgICAgICAgb2JqZWN0ID0gb2JqZWN0LnJlcGxhY2UoLyhbXGZdKS9nLCAnXFxmJyk7CisgICAg
ICAgIG9iamVjdCA9IG9iamVjdC5yZXBsYWNlKC8oW1xuXSkvZywgJ1xcbicpOworICAgICAgICBv
YmplY3QgPSBvYmplY3QucmVwbGFjZSgvKFtcdF0pL2csICdcXHQnKTsKKyAgICAgICAgb2JqZWN0
ID0gb2JqZWN0LnJlcGxhY2UoLyhbXGJdKS9nLCAnXFxiJyk7CisKKyAgICAgICAgcmV0dXJuIG9i
amVjdDsKKyAgICAgIH0KKworICAgICAgLy8gRGF0ZSBhbmQgUmVnRXhwCisgICAgICBpZiAocXgu
bGFuZy5UeXBlLmlzRGF0ZShvYmplY3QpIHx8cXgubGFuZy5UeXBlLmlzUmVnRXhwKG9iamVjdCkp
CisgICAgICB7CisgICAgICAgIHJldHVybiBvYmplY3QudG9TdHJpbmcoKTsKKyAgICAgIH0KKwor
ICAgICAgLy8gYWxsIG90aGVyIHN0dWZmCisgICAgICByZXR1cm4gb2JqZWN0OworICAgIH0sCisK
KworICAgIC8qKgogICAgICAqIFNlcmlhbGl6ZXMgdGhlIHByb3BlcnRpZXMgb2YgdGhlIGdpdmVu
IHFvb3hkb28gb2JqZWN0IGludG8gYSBqc29uIG9iamVjdC4KICAgICAgKgogICAgICAqIEBwYXJh
bSBvYmplY3Qge3F4LmNvcmUuT2JqZWN0fSBBbnkgcW9veGRvbyBvYmplY3QKQEAgLTE4MSw2ICsy
OTUsNSBAQCBxeC5DbGFzcy5kZWZpbmUoInF4LnV0aWwuU2VyaWFsaXplciIsCiAgICAgICAvLyBh
bGwgb3RoZXIgc3R1ZmYKICAgICAgIHJldHVybiBvYmplY3QgKyAiIjsKICAgICB9Ci0KICAgfQog
fSk7Cg==
</data>

          </attachment>
      

    </bug>