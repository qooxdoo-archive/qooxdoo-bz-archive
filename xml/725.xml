<bug>
          <bug_id>725</bug_id>
          
          <creation_ts>2007-11-12 06:53:00 +0100</creation_ts>
          <short_desc>Better DateFormat/Parser</short_desc>
          <delta_ts>2014-03-03 08:46:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>0.7.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2558</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-11-12 06:53:22 +0100</bug_when>
            <thetext>Model new DateFormat implementation like Steven Levithan&#39;s implementation at:
http://blog.stevenlevithan.com/archives/date-time-format
but still support the i18n features of qooxdoo.

It seems to be a good idea to me to split the parse and formatting code. (the parser is the larger one normally).

The Code by Steve is MIT which is compatible to both LGPL and EPL.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2746</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-01-14 09:48:48 +0100</bug_when>
            <thetext>Fixed target</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3252</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-10 09:52:58 +0200</bug_when>
            <thetext>Is there a need for this? Up to now there have been no complains about the current DateFormat and it has done everything we wanted it to do?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3253</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-10 10:09:04 +0200</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5152</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:51 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5338</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-06 15:52:20 +0200</bug_when>
            <thetext>I think about something like DateJs which supports dynamic rules for parsing 
instead of hard-coded formats.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9182</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-04-07 14:47:11 +0200</bug_when>
            <thetext>Another nice open source implementation of a date parser has been done by the 
guys at omnigroup. They use it in their product called omnifocus and its 
working really well.
The objective-C code ist hostet here:
http://github.com/omnigroup/omnigroup/blob/5582216948ade7dcc79e23fe0cfbc837d322c1de/Frameworks/OmniFoundation/OFRelativeDateParser.h
http://github.com/omnigroup/omnigroup/blob/5582216948ade7dcc79e23fe0cfbc837d322c1de/Frameworks/OmniFoundation/OFRelativeDateParser.m

This code also has the MIT Licence:
http://www.omnigroup.com/developer/sourcelicense</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35501</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:21 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>