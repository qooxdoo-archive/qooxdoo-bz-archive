<bug>
          <bug_id>3884</bug_id>
          
          <creation_ts>2010-07-24 23:34:00 +0200</creation_ts>
          <short_desc>Try a Non-recursive Algorithm to traverse Syntax Trees</short_desc>
          <delta_ts>2014-03-03 15:21:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19418</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-24 23:34:29 +0200</bug_when>
            <thetext>Traversing the syntax tree is a common operation during JS processing, for example during dependency analysis. This is usually done recursing the tree structure, but could benefit from a non-recursive approach.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19468</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-28 15:11:13 +0200</bug_when>
            <thetext>At least in the case where I tried it (_analyzeClassDepsNode), an iterative 
version doesn&#39;t provide performance benefits over the recursive version (which 
is somewhat surprising). I might re-evaluate this approach in other areas in 
the future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37445</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:50 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>