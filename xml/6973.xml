<bug>
          <bug_id>6973</bug_id>
          
          <creation_ts>2012-11-07 10:30:00 +0100</creation_ts>
          <short_desc>Search for an alternative for cssmin.py job</short_desc>
          <delta_ts>2014-12-16 11:44:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile.theming</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <keywords>CSS-Compiler</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christopher Zuendorf">christopher.zuendorf</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>richard.sternagel</cc>
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31251</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-07 10:30:18 +0100</bug_when>
            <thetext>As described in bug #6150, the cssmin.py has some bugs with transformations. As yui compressor will not improved further, it is not expected that cssmin.py will be updated anymore. The last version was built in 2010.

SHOULD:
We should look after a python-wrapped or python-based css minifying solution, which fits to our license (MIT or LGPL v2), and is allowed to be shipped with our framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31533</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-29 10:39:33 +0100</bug_when>
            <thetext>If we move to SASS with bug #7047, could we use the compression contained in SASS?
http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#id17</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31534</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-29 10:43:52 +0100</bug_when>
            <thetext>We shouldn&#39;t abandon this bug, as we might still deal with plain CSS files which are not generated from SCSS. As long as CSS remains part of our programming model, we should have a native CSS compressor around.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34660</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-12-16 10:57:13 +0100</bug_when>
            <thetext>As we moved to SCSS we do not need this job anymore. The compression can be fully handled by SCSS compiler.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34743</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-01-10 12:32:53 +0100</bug_when>
            <thetext>Hmm, I just wanted to remove cssmin but when we really get rid of pyScss (see bug #7997), what&#39;s about cssmin then?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40947</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-08-08 12:49:43 +0200</bug_when>
            <thetext>We moved to SASS and using the compression feature of the SASS compiler.
I would assume this task as resolved.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40952</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-08-08 13:35:02 +0200</bug_when>
            <thetext>Agreed - cssmin.py can be deleted. The following places need to be adapted/deleted:

* component/testrunner/tool/injectcss.py
* component/tutorials/mobiletweets/step1/config.json
* documentation/manual/source/pages/introduction/third_party_components.rst
* tool/bin/cssmin.py
* tool/pylib/cssmin/*</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41222</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-09-23 12:55:26 +0200</bug_when>
            <thetext>Done.

master: 79a9bbe9e50dc2fa2fb507e6a2632ace82d1a9df</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41244</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2014-09-24 16:16:56 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; * component/testrunner/tool/injectcss.py

This is still used to build the &#39;portable&#39; version of the Test Runner, e.g. for the &#39;test&#39; job in component/standalone/website. It concatenates CSS and injects it into the generated JavaScript file. We should replace this with an appropriate Grunt task.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41291</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-10-01 11:11:15 +0200</bug_when>
            <thetext>Fixed with two new Grunt tasks (&#39;test&#39; and &#39;test-module&#39;) as replacement for the same-named Generator jobs.

Note:
It could also have been resolved by using Sass on the command line, but it got pretty complex and that wouldn&#39;t be good for maintaining it.

master: a2b837d1727082acfaec50543c950215de3ef686</thetext>
          </long_desc>
      
      

    </bug>