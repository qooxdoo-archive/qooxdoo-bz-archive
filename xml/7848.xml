<bug>
          <bug_id>7848</bug_id>
          
          <creation_ts>2013-11-05 18:15:00 +0100</creation_ts>
          <short_desc>Retrieve the max / min value of width and height for a collection of elements</short_desc>
          <delta_ts>2014-03-03 15:23:01 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.modules</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          <cc>daniel.wagner</cc>
    
    <cc>richard.sternagel</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34226</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-05 18:15:06 +0100</bug_when>
            <thetext>Suppose you have a couple of elements in your collection and you want to know 
how

* wide the widest element
* narrow the narrowest element
* tall the tallest element
* short the shortest element 

is. These convienent methods should return a number just like e.g. &quot;getWidth&quot; 
does. 

Keep in mind: &quot;getMaxWidth&quot; / &quot;getMinWidth&quot; etc. won&#39;t be good candidates, 
since these method names are confusing regarding the CSS style properties 
&quot;max-width&quot; / &quot;min-width&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34227</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-05 18:17:26 +0100</bug_when>
            <thetext>What about

- getWidthMax
- getWidthMin
- getHeightMax
- getHeightMin

to solve the naming collisions?

@Martin, @Daniel
What&#39;s you opinion?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34228</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-11-06 09:48:00 +0100</bug_when>
            <thetext>My suggestion is to offer neither of those methods. Instead, we can offer a way to get the widths and eights of all elements in the collection as a array and the developer can then, work an the array in whatever way he likes.

The code sample would look like this:

q.array.max(q(&quot;div&quot;).getWidths())
q.array.min(q(&quot;div&quot;).getWidths())
q.array.max(q(&quot;div&quot;).getHeights())
q.array.min(q(&quot;div&quot;).getHeights())</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34231</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-11-06 13:02:33 +0100</bug_when>
            <thetext>What about:

var widths = [];
q(&quot;div&quot;).getChildren().forEach(function(item) {
    widths.push(q(item).getWidth());
});
q.array.max(widths);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34237</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-06 18:13:53 +0100</bug_when>
            <thetext>@Richard
Completely right. This can be easily achieved using the existing API. The focus is more on convenience here. 

So I would go for the proposal of Martin: &quot;getWidths&quot; and &quot;gehHeights&quot; and let the developer use the array methods to get the value he wants.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34242</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-07 10:48:39 +0100</bug_when>
            <thetext>Fixed by adding the API documentation as well as an unit test.

a3d2e834c1e26feb42ce71dbb5e6e6b6e8727eca (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34243</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-07 11:36:43 +0100</bug_when>
            <thetext>Wrong bug report - ignore the last comment.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34260</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-08 13:53:13 +0100</bug_when>
            <thetext>Added methods &quot;getWidths&quot; and &quot;getHeights&quot; to return the width / height values 
of the collection elements.

a9dbcaf3886844c6cf8f79a443cb6dd3effb4955 (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34266</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-11-08 17:13:08 +0100</bug_when>
            <thetext>Reverted the commit and removed the methods. They will be implemented locally using the framework functionality.

43dc117a37945e6c3620a6b67df160d8e096809c (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37861</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:01 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>