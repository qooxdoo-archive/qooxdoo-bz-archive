<bug>
          <bug_id>3150</bug_id>
          
          <creation_ts>2009-12-01 14:17:00 +0100</creation_ts>
          <short_desc>jsonrpc server extension: system.getCapabilities</short_desc>
          <delta_ts>2011-10-07 22:04:47 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>contrib</product>
          <component>RpcExample</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Boulanger">info</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Derrell Lipman">derrell.lipman</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15136</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2009-12-01 14:17:32 +0100</bug_when>
            <thetext>This is a proposal for the extension of the “core” standard. Each server should implement a service “system” with a method “system.getCapabilities()” (similar to http://tech.groups.yahoo.com/group/xml-rpc/message/2897), which returns the extensions that it supports. Server implementations which do not support extensions simply return an an empty object ({}).

Servers which support extensions return information on these extensions with the following return value structure (still to be discussed):

{
  &quot;introspection&quot; : {
    &quot;specUrl&quot; : &quot;http://qooxdoo.org/documentation/jsonrpc_extensions&quot;,
    &quot;specVersion&quot; : &quot;0.1&quot;,
    &quot;specServices&quot; : [],
    &quot;specMethods&quot; : [&quot;*.listMethods&quot;,&quot;*.methodSignature&quot;,&quot;*.methodHelp&quot;]
  },
  &quot;authentication&quot; : {
    &quot;specUrl&quot; : &quot;http://path.to/information/on/authentication/extension.html&quot;,
    &quot;specVersion&quot; : &quot;1.0&quot;,
    &quot;specServices&quot; : [&quot;authentication&quot;,&quot;authorization&quot;],
    &quot;specMethods&quot; : []
  },
  &quot;foo&quot; : {
    &quot;specUrl&quot; : &quot;http://path.to/information/on/foo/extension.html&quot;,
    &quot;specVersion&quot; : &quot;1.0&quot;,
    &quot;specServices&quot; : [&quot;foo&quot;],
    &quot;specMethods&quot; : [&quot;foo.dothis&quot;,&quot;foo.dothat&quot;]
  }
}

In the first example, the “introspection”, the server supports the three given methods for *all* services offered. The second example, an “authentication” capability offers two services, “authentication” and “authorization”. The third capability provides for the “foo” service and details the methods that this service contains. All services can be queried for the supported methods using the “listMethods”, “methodSignature” and “methodHelp” methods that are part of the “introspection” feature.

system.getCapabilities is implemented in the RpcPython and RpcPhp servers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15756</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-12-11 17:32:50 +0100</bug_when>
            <thetext>marked as enhancement</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27140</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2011-10-07 22:04:47 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; marked as enhancement

no longer relevant</thetext>
          </long_desc>
      
      

    </bug>