<bug>
          <bug_id>5260</bug_id>
          
          <creation_ts>2011-06-20 09:53:00 +0200</creation_ts>
          <short_desc>Remote table model doesn&#39;t trigger a &quot;changeSelection&quot; event after reloading a block of data</short_desc>
          <delta_ts>2014-03-03 08:47:41 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Răzvan Mocanu">Razvan.Mocanu</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>25164</commentid>
            <who name="Răzvan Mocanu">Razvan.Mocanu</who>
            <bug_when>2011-06-20 09:53:06 +0200</bug_when>
            <thetext>When the table reloads one or more blocks of it&#39;s cache and the current selection holds some or all of it&#39;s rows from the same block(s), the &quot;changeSelection&quot; event is not fired after the data arrives even though new data is now in the cache at the indexes of the selection.

I have made a playground example to demonstrate two situations when this happens.
It can be accessed here: http://tinyurl.com/6k9wwxr

The example sets up a table with the possibility to choose from a simple and remote table model. It also adds three buttons to the top of the page: a &quot;Delete row&quot; button, a &quot;Show selection&quot; button and a &quot;Reload data&quot; button. The simple table model is there for observing the differences in functionality between the two models. Please make sure that the Log is displayed.

1) Removing a row:
Selecting a row and then clicking the &quot;Delete row&quot; button forces the table to reload the block that the removed row belonged to and as a result the row after the removed row becomes selected. However, as can be seen in the debug log from the lack of the &quot;changed selection&quot; text, the &quot;changeSelection&quot; handler is not called.

This does not happen for a simple table model. In this case, the selection is cleared after one or more rows are removed.

2) The more general case, reloading a block of rows:
Clicking the &quot;Reload data&quot; button forces the table to clear it&#39;s cache and to issue a reload for the block that is currently displayed. If a selection was part of the block, the same behaviour from the previous example can be observed: the &quot;changeSelection&quot; event is not fired even though the data under the selection changes.

To reproduce this behaviour in the example that I&#39;ve set up, deleting a row and then clicking &quot;Reload data&quot; will bring the old row back, but without firing the &quot;changeSelection&quot; event.

This bug holds true, of course, for other selection modes too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25188</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-06-21 09:30:18 +0200</bug_when>
            <thetext>Thank you very much for that excellent report!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35989</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:41 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>