<bug>
          <bug_id>8945</bug_id>
          
          <creation_ts>2015-02-16 11:34:00 +0100</creation_ts>
          <short_desc>Linting for JS toolchain code</short_desc>
          <delta_ts>2015-03-23 16:56:13 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>tool</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>8900</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Richard Sternagel">richard.sternagel</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>sabrina.metzger</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>42530</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-02-16 11:34:55 +0100</bug_when>
            <thetext>There are several possibilities:

* jshint only (agree on a set of rules)
* use eslint (agree on a set of rules) and (later on) write custom (next specific) rules
* use something else

Ideally the linting for the toolchain and the framework should be
technically driven by the same (third party) tool (e.g. eslint).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42867</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-03-17 08:15:31 +0100</bug_when>
            <thetext>Sounds like a good idea. Could it be possible to use the same linting (rules + custom rules) for the tooling as well as for the frontend code?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42871</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-17 12:03:52 +0100</bug_when>
            <thetext>Yes, this should be possible and makes totally sense.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42916</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-23 12:44:25 +0100</bug_when>
            <thetext>Enabled eslint within toolchain.

$ cd tool/grunt
$ grunt eslint

XOR

top-level Gruntfile:
$ grunt eslint   
(runs apps, framework and toolchain)

Next step is fixing the (~200) issues, which
should be done within the scope of this bug.

master: 893059d4446a4aacdb0c682d7b4f4f09e3669d53</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42926</commentid>
            <who name="Sabrina Metzger">sabrina.metzger</who>
            <bug_when>2015-03-23 16:56:13 +0100</bug_when>
            <thetext>fixed in 067c9bbc08d99922c4ee8372534b27b23c06f623</thetext>
          </long_desc>
      
      

    </bug>