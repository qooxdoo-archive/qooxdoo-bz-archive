<bug>
          <bug_id>4147</bug_id>
          
          <creation_ts>2010-10-01 17:22:00 +0200</creation_ts>
          <short_desc>IFrame problem on Chrome</short_desc>
          <delta_ts>2011-01-11 07:52:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>1.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jean-Noel Rivasseau">elvanor</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20441</commentid>
            <who name="Jean-Noel Rivasseau">elvanor</who>
            <bug_when>2010-10-01 17:22:01 +0200</bug_when>
            <thetext>Currently using an iframe transport always throw an exception on Chrome.

This is because of the following code in IFrame.js:

      if (this.__form.src) {
        return;
      }

This code makes no sense whatsoever. I changed it to:

      if (! this.__form) {
        return;
      }

and it works on all browsers I tested (Firefox, Chrome, Internet Explorer 8). Note that this code is needed because Chrome fires an onLoad event on the iframe as soon as it is created (that&#39;s also why the exception is thrown on Chrome, as this.__form does not yet exist so we cannot read from it the src property). When this.__form does not yet exist, we just return from the handler.

One other way to handle this would be to attach the callback after we add the iframe to the DOM (and not before like now) and remove this test altogether. But iframe management is something quite sensitive so I give the choice to the core devs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20453</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-04 10:05:03 +0200</bug_when>
            <thetext>Thanks for the details and good report. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20636</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:14 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20777</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2010-10-19 17:33:41 +0200</bug_when>
            <thetext>Fixed with r23551.

The purpose of the check for this.__form.src you were referring to is to work around a browser issue in gecko browsers. Therefore, I followed your second suggestion to attach the listener after adding the iframe to the document.

Also, I added some unit tests that should cover the basic functionality of io.remote.transport.Iframe and io.remote.Request (with iframe transport).

Please note, we now use the qx.bom layer for creating the iframe (and other elements).</thetext>
          </long_desc>
      
      

    </bug>