<bug>
          <bug_id>3297</bug_id>
          
          <creation_ts>2010-01-04 19:10:00 +0100</creation_ts>
          <short_desc>Tree methods addBefore() and addAfter() not working as expected in drag&amp;drop scenario</short_desc>
          <delta_ts>2010-10-13 07:54:18 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.tree</component>
          <version>0.8.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          <blocked>3298</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Lukas Pilny">lp1051</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>martin.wittemann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>16024</commentid>
            <who name="Lukas Pilny">lp1051</who>
            <bug_when>2010-01-04 19:10:18 +0100</bug_when>
            <thetext>Steps to repro addBefore():
1. Create new project &quot;dragdrop&quot; and place the code below into Application.js
2. generate source and open in browser
3. try to drag folder &quot;Files&quot; and drop it on folder &quot;Network&quot;. The folder &quot;Files&quot; is inserted after folder &quot;Network&quot;, although expected result is before folder &quot;Network&quot;.
4. drag folder &quot;Files&quot; and drop it on folder &quot;Network&quot; again. Now the behavior is correct.

To reproduce addAfter() behavior uncomment line 149 and comment line 153:
1. try to drag folder &quot;Files&quot; and drop it on folder &quot;Workspace&quot;. The folder &quot;Files&quot; is inserted after folder &quot;Network&quot;, although expected result is after folder &quot;Workspace&quot;.
2. drag folder &quot;Files&quot; and drop it on folder &quot;Workspace&quot; again. Now the behavior is correct.
3. try to drag folder &quot;Files&quot; and drop it on the folder &quot;Network&quot;. Error appears: Assertion error! The &#39;before&#39; widget is not a child of this widget! and the drop event is idle until we repeat it. Then warning appears: Cannot remove treeitem &#39;qx.ui.tree.TreeFolder[2x]&#39;. It is not a child of this tree item.

It is very strange behavior, also because when I look into demobrowser - http://demo.qooxdoo.org/current/demobrowser/#animation~Tree_Highlight.html all methods seems to work properly

qx.Class.define(&quot;dragdrop.Application&quot;,
{
  extend : qx.application.Standalone,

  members :
  {
    tree : null,
    
    indicator : null,
      
    main : function()
    {
      this.base(arguments);

      if (qx.core.Variant.isSet(&quot;qx.debug&quot;, &quot;on&quot;))
      {
        qx.log.appender.Native;
        qx.log.appender.Console;
      }
    
      this.createTree();
      this.createIndicator();
      this.initializeDragAndDrop();
    },
    
    /* ************************************************************************

      Methods for creating tree example

    ************************************************************************ */
    
    createTree : function()
    {
      this.tree = new qx.ui.tree.Tree().set({width : 200, height : 400});
      this.getRoot().add(this.tree, {left : 20, top : 20});
      
      var root = new qx.ui.tree.TreeFolder(&quot;root&quot;);
      root.setOpen(true);
      this.tree.setRoot(root);
      
      this.createSubfoldersForTreeRoot(&quot;Desktop&quot;);
      this.createSubfoldersForTreeRoot(&quot;Remote Desktop&quot;);
    },
    
    createSubfoldersForTreeRoot : function(name)
    {
      var subChildren = [&quot;Files&quot;, &quot;Workspace&quot;, &quot;Network&quot;, &quot;Trash&quot;];
      
      var parentFolder = new qx.ui.tree.TreeFolder(name)
      parentFolder.setOpen(true);
      this.tree.getRoot().add(parentFolder);
      
      var length = subChildren.length;
      for (var i = 0; i &lt; length; i++)
      {
        var folder = new qx.ui.tree.TreeFolder(subChildren[i])
        parentFolder.add(folder);
      } 
    },
    
    createIndicator : function()
    {
      this.indicator = new qx.ui.core.Widget;
      this.indicator.setDecorator(new qx.ui.decoration.Single().set({
        top : [ 1, &quot;solid&quot;, &quot;#33508D&quot; ]}));
      
      this.indicator.setHeight(0);
      this.indicator.setOpacity(0.5);
      this.indicator.setLayoutProperties({left: -1000, top: -1000});
      this.getRoot().add(this.indicator);
    },
    
    /* ************************************************************************

       Methods for Drag &amp; Drop

    ************************************************************************ */
    
    initializeDragAndDrop : function()
    {
      this.tree.setDraggable(true);
      this.tree.setDroppable(true);
      
      this.tree.addListener(&quot;dragstart&quot;, function(e) {
        e.addAction(&quot;move&quot;);
        
        e.addType(&quot;qx/tree-items&quot;);
      });

      this.tree.addListener(&quot;droprequest&quot;, function(e)
      {
        var type = e.getCurrentType();
        var treeFolder = this.getSelection();
        
        e.addData(type, treeFolder);
      });

      this.tree.addListener(&quot;dragend&quot;, function(e)
      {
        this.setDomPosition(-1000, -1000);
      }, this.indicator);

      this.tree.addListener(&quot;drag&quot;, function(e)
      {
        var orig = e.getOriginalTarget();
        
        if (!qx.ui.core.Widget.contains(this.tree, orig)) {
          return;
        }

        var treeFolder = this.getTreeFolder(orig);
        if (!treeFolder) {
          return;
        }
        
        var origCoords = treeFolder.getContainerLocation();
        this.indicator.setWidth(treeFolder.getBounds().width);
        this.indicator.setDomPosition(origCoords.left, origCoords.top);
      }, this);

      this.tree.addListener(&quot;dragover&quot;, function(e)
      {
        if (e.getRelatedTarget()) {
          e.preventDefault();
        }
      });

      this.tree.addListener(&quot;drop&quot;, function(e)
      {
        var orig = e.getOriginalTarget();
        
        var treeFolderTarget = this.getTreeFolder(orig);
        var treeFolderSource = e.getData(&quot;qx/tree-items&quot;)[0];
        
        if (!treeFolderTarget || treeFolderTarget === treeFolderSource) { //prevents inserting into itself
          return;
        }
        
				//allow drag&amp;drop only under same parent
        if (treeFolderSource !== treeFolderTarget.getParent() &amp;&amp; treeFolderTarget.getParent() === treeFolderSource.getParent()) {
					var targetChildren = treeFolderTarget.getParent().getChildren();
					var targetIndex = targetChildren.indexOf(treeFolderTarget);
					
					//if the target is lastChild of parent folder =&gt; addAfter() else addBefore()
					if( targetIndex == (targetChildren.length - 1) ) {
						treeFolderTarget.getParent().addAfter(treeFolderSource, treeFolderTarget);
					} else {
						//bug?? addAfter() is adding after nexSibling of treeFolderTarget; uncomment to test
						//treeFolderTarget.getParent().addAfter(treeFolderSource, treeFolderTarget);
						
						this.info(&#39;current treeItem = &#39;+treeFolderTarget.getLabel());
						//bug?? addBefore() inserts after the treeFolderTarget, which I expect to be behavior of addAfter()
						treeFolderTarget.getParent().addBefore(treeFolderSource, treeFolderTarget);
					}
        }
      }, this);
    },
    
    getTreeFolder : function (instance) {
      if (instance == null) {
        return null;
      }
      
      if (instance.classname === &quot;qx.ui.tree.TreeFolder&quot;) {
        return instance;
      } else {
        return this.getTreeFolder(instance.getLayoutParent());
      }
    }
  }
});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16155</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-13 15:37:03 +0100</bug_when>
            <thetext>to Chris</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17910</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-21 16:36:34 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17916</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-21 18:24:01 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17930</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-22 14:55:31 +0200</bug_when>
            <thetext>Moved to 1.2, because it is out of the time frame.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18169</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-04 10:38:05 +0200</bug_when>
            <thetext>*** Bug 3599 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19938</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-08-20 14:46:05 +0200</bug_when>
            <thetext>Fixed on trunk with r23118 and branch with r23119.

Lukas, could you please verify that the fix also works for you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19940</commentid>
            <who name="Lukas Pilny">lp1051</who>
            <bug_when>2010-08-22 14:27:02 +0200</bug_when>
            <thetext>YES! Verified on trunk. Both methods addBefore() and addAfter() work as expected. Thanks</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20670</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:18 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
      
      

    </bug>