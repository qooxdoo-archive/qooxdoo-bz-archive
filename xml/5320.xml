<bug>
          <bug_id>5320</bug_id>
          
          <creation_ts>2011-07-03 09:15:00 +0200</creation_ts>
          <short_desc>sequenceNumber for qx.io.request.* missing in current trunk</short_desc>
          <delta_ts>2011-09-20 07:41:40 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="ibu">ibu</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>25706</commentid>
            <who name="ibu">ibu</who>
            <bug_when>2011-07-03 09:15:54 +0200</bug_when>
            <thetext>qx.io.remote.Request had a method getSequenceNumber(), which is not available in the new qx.io.request.* classes. The sequence number is however very useful in a situation like this: Before sending the request I store passThrough data (which are too big to send to the server and back again) in an array indexed by the sequenceNumber, and in the callback function I can retrieve these passThrough data from the array because I know the sequenceNumber.

I hope you can take over the getSequenceNumber method from qx.io.remote.Request, probably to qx.io.request.AbstractRequest, before the release of qooxdoo 1.5.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25731</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-07-04 17:16:17 +0200</bug_when>
            <thetext>Jumping cursor and entering multiple new lines fixed with r27984 on trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25733</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-07-04 17:16:57 +0200</bug_when>
            <thetext>Please ignore the previous comment. Sorry.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25736</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-07-04 17:37:21 +0200</bug_when>
            <thetext>Have you considered using qx.core.Object#toHashCode?

While the hash code does not increase in all circumstances, it is unique and could be used to retrieve pass-through data. You will have to stick to the rule to send only one request per object to have an unambiguous mapping of request and hash code. However, I believe that was the case in the old implementation anyway.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25762</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-07-05 15:08:15 +0200</bug_when>
            <thetext>After giving it another thought, I believe there is a better solution.

1) Create a request
2) Attach pass-through data to the request using #setUserData (see qx.core.Object)
3) Send the request
4) In your handler, get the request you attached the handler to by calling the event&#39;s getTarget() method
5) Read the request&#39;s user data with #getUserData (that is, the pass-through data attached before send)

Please give us a hint if this approach works for you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25779</commentid>
            <who name="ibu">ibu</who>
            <bug_when>2011-07-05 23:19:11 +0200</bug_when>
            <thetext>Thank you very much, I expect both of your solutions to work.</thetext>
          </long_desc>
      
      

    </bug>