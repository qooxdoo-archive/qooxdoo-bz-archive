<bug>
          <bug_id>1358</bug_id>
          
          <creation_ts>2008-09-02 15:14:00 +0200</creation_ts>
          <short_desc>Web 2.0 Messaging Layer</short_desc>
          <delta_ts>2014-03-03 15:24:37 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4992</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-02 15:14:33 +0200</bug_when>
            <thetext>Web-2.0 messaging layer brings the important consideration of not creating 
contention for connections, resulting in blocked and inefficient 
communications, which can exist with XmlHttpRequest. The article 
&quot;XmlHttpRequest BAD - Messaging GOOD&quot; 
(http://blogs.webtide.com/gregw/2006/10/18/1161164940000.html) explains this 
subject. In this objective, taking a look on Cometd and for example support of 
the BEEP (http://www.beepcore.org/) protocol would be welcomed, furthermore, 
there is a JavaScript implementation of BEEP protocol for BEEP clients called 
JsBEEP (http://www.beepcore.org/jsbeep.html)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5158</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:54 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22246</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-14 10:57:56 +0100</bug_when>
            <thetext>Tristan, please check if that report is still valid.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25075</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-06-14 08:13:53 +0200</bug_when>
            <thetext>In the article Sebastian linked, the author talks about sharing connections between multiple windows and tabs to save connections. He argues that sharing connections is vital for complex web applications (I guess he means applications holding a connection). Back then, browsers only supported 2 connections per server â€“ so this fear was understandable. Nowadays, however, browsers usually allow up to 6 connections per server. Moreover, it&#39;s possible to work-around by distributing content to many servers.

I believe what the author envisioned is very close to the HTML 5 WebSockets API. See bug 5243.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38453</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:37 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>