<bug>
          <bug_id>1177</bug_id>
          
          <creation_ts>2008-08-14 14:23:00 +0200</creation_ts>
          <short_desc>Rework loader script to be based on regular qooxdoo classes</short_desc>
          <delta_ts>2014-03-03 15:25:44 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.2</target_milestone>
          
          <blocked>1653</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Andreas Ecker">qooxdoo</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>info</cc>
    
    <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4362</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-08-14 14:23:20 +0200</bug_when>
            <thetext>According to comments in Generator.py:

    # wpbasti: This needs a lot of work. What&#39;s about the generation of a small bootstrap script
    # from normal qooxdoo classes (include io2.ScriptLoader) and starting the variant selection etc.
    # from there. This would be somewhat comparable to the GWT way.
    # Finally &quot;loader.js&quot; should be completely removed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5136</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:41 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5814</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-10 12:31:43 +0200</bug_when>
            <thetext>Goal is to have a single script file again for the build version of a regualr app (as was the case in previous qooxdoo versions). 

A possible solution could be to move some of the needed info (that is now generated into the loader script (e.g. settings, resources, etc.)) directly to the main boot part and removing the loader script entirely. Being loaded in one piece this could allow for a DOMReady event triggering the initialization of the app (i.e. core.Init). Such a DOMReady event is also important for low-level BOM-oriented apps.

The boot part would contain the loading logic (possibly, but not necessarily based on io2) for the other parts. Using parts is an advanced (and somewhat experimental) topic that isn&#39;t &quot;officially&quot; supported right now, but it should continue to work when the loading scheme changes as described above are being made.

This task may involve several people, so lets collaborate on this one, also using this bug for concepts/discussion.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7936</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-02-19 14:51:02 +0100</bug_when>
            <thetext>The loader has been changed to be only used in the source version. The part loading code will be moved directly into qx.core.Package. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7937</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-19 14:56:13 +0100</bug_when>
            <thetext>That&#39;s a great idea. Maybe it&#39;s also a good idea to change the configuration section a bit.

Instead of defining a boot part and configuring it to be the boot part, it may be better to keep the include list for the boot process outside the other declaration. As there is no package boot then anymore. The boot part is automatically loaded and this at least includes the application class and qx.core.Package.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7959</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-02-20 14:29:58 +0100</bug_when>
            <thetext>fixed. See related bug #1974</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7961</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-02-20 14:32:53 +0100</bug_when>
            <thetext>fixed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38852</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:44 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>