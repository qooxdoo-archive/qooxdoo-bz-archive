<bug>
          <bug_id>810</bug_id>
          
          <creation_ts>2008-03-26 17:35:00 +0100</creation_ts>
          <short_desc>Interface hierarchy breaks APIViewer</short_desc>
          <delta_ts>2014-03-03 15:22:25 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>chase-r</reporter>
          <assigned_to name="Jonathan Weiß">qooxdoo-bugs</assigned_to>
          
          
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2915</commentid>
            <who name="">chase-r</who>
            <bug_when>2008-03-26 17:35:41 +0100</bug_when>
            <thetext>I am using a simple interface hierarchy like this:

qx.Interface.define(&quot;org.example.ISuperInterface&quot;, {
    members : {
        /**
         * Test function.
         *
         * @type member
         * @return {void}
         */
        test : function() {
            return true;
        }
    }
});

qx.Interface.define(&quot;org.example.ISubInterface&quot;, {
    extend : org.example.ISuperInterface,

    members : {
        /**
         * Test function.
         *
         * @type member
         * @return {void}
         */
        test : function() {
            return true;
        }
    }
});

qx.Class.define(&quot;org.example.TestClass&quot;, {
    extend : qx.core.Object,
    implement : [org.example.ISubInterface],

    members : {
        test : function() {
            return true;
        }
    }
});


Displaying the org.example.ISubInterface or any Class implementing that interface like org.example.TestClass for the first time, everything is fine. But when trying to display the interface or any implementing class after that, the cursor will change to the sandglass and nothing happens. Firebug will display an error, saying that in line 167 of the apiviewer.js $1 has no properties. As location.href (the history) changes, pressing Ctrl+R for reloading the webapp will display the requested class or interface (because it is for the first time). Obviously, loading a sub interface for the second time breaks something internally.

Now I changed the subinterface the following way, where the extends are named in an array (which is allowed by the interface definition syntax according to http://qooxdoo.org/documentation/0.7/interface_quickref .

qx.Interface.define(&quot;org.example.ISubInterface&quot;, {
    extend : [org.example.ISuperInterface],

    members : {
        /**
         * Test function.
         *
         * @type member
         * @return {void}
         */
        test : function() {
            return true;
        }
    }
});

Now, the APIViewer breaks immediately when loading the org.example.ISubInterface for the very first time.

There is a way to get a working APIViewer: using &quot;implement&quot; instead of &quot;extend&quot; in the sub interface. That is not correct, however one is able to use the APIViewer to browse to the interface&#39;s API.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2916</commentid>
              <attachid>296</attachid>
            <who name="">chase-r</who>
            <bug_when>2008-03-26 17:50:08 +0100</bug_when>
            <thetext>Created attachment 296
test application with mentioned interfaces+classes

Extract test application. Edit qooxdoo path in &quot;Makefile&quot;. run &quot;make api&quot; and open the created APIViewer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5090</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:10:03 +0200</bug_when>
            <thetext>Severity is not enhancement so this might be defects. Please re-categorize if needed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5312</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-05 20:01:44 +0200</bug_when>
            <thetext>Johnny, can you have a look at this issue?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5486</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2008-09-11 12:48:03 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5489</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2008-09-11 14:36:43 +0200</bug_when>
            <thetext>I could not reproduce this issue in 0.8 trunk. Could you test again with the trunk version and re-open the bug, if this issue is still present?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37671</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:25 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>296</attachid>
            <date>2008-03-26 17:50:00 +0100</date>
            <delta_ts>2008-03-26 17:50:08 +0100</delta_ts>
            <desc>test application with mentioned interfaces+classes</desc>
            <filename>apiviewer-bug810.zip</filename>
            <type>application/zip</type>
            <size>2147</size>
            <attacher>chase-r</attacher>
            
              <data encoding="base64">UEsDBBQAAAAIAMCNejgCS6o32AMAAP0JAAAZAAAAYXBpdmlld2VyLWJ1ZzgxMC9NYWtlZmlsZbVV
TW/jNhA9b4D8h8Gm6NpFLCd76AIBClRIlKxbr+3WBra3gBZHFtcUySUpy/73HVKS46TooUXiOIlN
zrz5eG9GFxev+zo/C2+A71rvudYwAl8iKGwALQNdQINr4LhDqU2Fyvf2pffmZjzu3BJtN/3NrTYH
Kzalv4lfAT5eXf08oj+f4PrHa5goj1ahh/ThEh7QVkwdLnu4pmmS61rx64RjjzcVOSqHPdr0YTG9
ObXfqDqEH8vWzo3lxsik9JXsPLIXDphLYRxGp/DLdV6H0twYjRztrq8SU5rOd4kYGzKd3GazZQaF
kAhCxTNj9TfM/QcHXpuRDD0CLiwdaXuAQlvqm2dCuqQvJa19qa3rS/mJ4NfMecEUfA1NsTBoTDwZ
Hk1SxS0yB1m+DfcY/j3d3rN18P6NbfXawaD4Fj8M24CvLpW3wLyAZbZaTWYPyzfKOIRYMF8SS5G2
QktOnSRpH3Rtj8Lnwnkr1rUXWgXC4Jb6ioI8LKyDGIENgYFFybzYEfsnkFLnLPgFUF8KB1/YFqNU
BsZigdYiH4K2AWVNKArY2mlZ+w7GeWa9UBtgPuJZrf0xwYjjDs5jFfyzPauMxBuYxHswdevjtijR
Uw5dfQr3vs+vr3F593t3fRmggntOydQO+85I3YQ8nlUZ5frHfP7X3Xz+uEhXn+EXSJIxvTvc0VXy
aeT4NnZaklhpgWgfMKmer0Jx3bgQxDpwpa4lByYbdohnz0PFUYGJ7+1QcWhEaHToMg3G04AlfShd
CU/EeEujFnJ3ZFe2I/ci6cU0S5fZ4112P5llj6eXR6HMWIXOsByP7WfG0GZp6cVkk0BeO69bKnao
INeBjj113Pm6KIDYN9o5sSbWpNgSUbTsElckR7/zs3SxoIWSribz2eMs/ZItF+ltRgn2Jl0y98S8
a7vYCClJhhTNCORQWF21rFOKlOzT2hGq43xdC8kDytPdoK3MoWGWeYKRpPlhAisy51iwWvp4FGrA
yvhD8o9s7yfTbEmZEqm475YsGY1e9xWLp/3JoKip7pgTIylwdLkVph81tiPKWWj0KUkOfZgldwmm
FUhAc90eP6kFdsyK4O3CQo9TFix/GJwKYzimVtMTS3H6QNpotN2OvdZyXNGIj0/iJlXUf8pJ3erQ
bgJN0Z+ihCdClFRLM3GpCrGpbZs27Zn4jHv1VvY/r79caVJnq+zPWTpdwqAdLribw2y+gtvP6ewh
G77NSheFwu8weMHU5b+PN+XxTqhc1hz/G7+0lzfoXeT2/yG8VAjZiSIUQQ8FbYnwd79iXmp4H57m
3UbrhYHPtu7787O/AVBLAwQUAAAACADyjXo4UI+puZwAAAA1AQAAOgAAAGFwaXZpZXdlci1idWc4
MTAvc291cmNlL2NsYXNzL29yZy9leGFtcGxlL0lTdWJJbnRlcmZhY2UuanNdjs0Kg0AMhO+C7xA8
qch6t5dePbcv4M9YhLramC0W8d270sWfziUk82WS16RyLeCmqKBqNK1GGPT8UJiKbnhC5TdTbkSQ
0Ox7ZIVJoGvK6I8dwBud+N4P7tCV4NHSbntVGsd7QzHdMQo1RlfS9lodrRN2lc8Al3g2GGJY0/zu
23o5WuneyHok286E0fGjVS5E2OCyOy7OliWy4y9QSwMEFAAAAAgA7I16OJcLMIiNAAAACgEAADwA
AABhcGl2aWV3ZXItYnVnODEwL3NvdXJjZS9jbGFzcy9vcmcvZXhhbXBsZS9JU3VwZXJJbnRlcmZh
Y2UuanNVTssKgzAQvBf6D4snlRLv9tKr5/oDVidFqNGum2IR/70GUo1zWebBzL4nVRgB66qGaqBb
gzjq+akwVd3wgirudgBvmehC8/lEKzp0D/BI+V9wyNJ0J5RSiVFIW1NL2xsVWofYTb4DfOPRYIhl
Q/Onb5sltLKdiBvJt5k4CT9y8CXCFtfd8XXrWZJV/gFQSwMEFAAAAAgA9416OKzBMXuSAAAA1wAA
ADYAAABhcGl2aWV3ZXItYnVnODEwL3NvdXJjZS9jbGFzcy9vcmcvZXhhbXBsZS9UZXN0Q2xhc3Mu
anNNjbEOgkAMhncT3+HCBIm5B5DRiclBN+MAx4/BcEV6veQSw7tbxET+pU2/r+2U7GmoQ7Atup6Q
ZyM/LFLtXwPsFUG+NDuY935nNEgCas3RTMm6kWHPzRNODivtlzUPEhVu20vVJTYVCbirHe5qr76H
b8BB7d/5JaJfddJFctKPlBdbuIQhkckIR5R/Mq+tlrkoP1BLAQIUABQAAAAIAMCNejgCS6o32AMA
AP0JAAAZAAAAAAAAAAEAIAAAAAAAAABhcGl2aWV3ZXItYnVnODEwL01ha2VmaWxlUEsBAhQAFAAA
AAgA8o16OFCPqbmcAAAANQEAADoAAAAAAAAAAQAgAAAADwQAAGFwaXZpZXdlci1idWc4MTAvc291
cmNlL2NsYXNzL29yZy9leGFtcGxlL0lTdWJJbnRlcmZhY2UuanNQSwECFAAUAAAACADsjXo4lwsw
iI0AAAAKAQAAPAAAAAAAAAABACAAAAADBQAAYXBpdmlld2VyLWJ1ZzgxMC9zb3VyY2UvY2xhc3Mv
b3JnL2V4YW1wbGUvSVN1cGVySW50ZXJmYWNlLmpzUEsBAhQAFAAAAAgA9416OKzBMXuSAAAA1wAA
ADYAAAAAAAAAAQAgAAAA6gUAAGFwaXZpZXdlci1idWc4MTAvc291cmNlL2NsYXNzL29yZy9leGFt
cGxlL1Rlc3RDbGFzcy5qc1BLBQYAAAAABAAEAH0BAADQBgAAAAA=
</data>

          </attachment>
      

    </bug>