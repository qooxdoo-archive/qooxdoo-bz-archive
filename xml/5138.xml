<bug>
          <bug_id>5138</bug_id>
          
          <creation_ts>2011-05-18 09:54:00 +0200</creation_ts>
          <short_desc>Make qooxdoo source code &quot;JSLint&quot;-able</short_desc>
          <delta_ts>2014-03-03 08:48:06 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>1.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dennis Ploeger">qooxdoo.dennis</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>24582</commentid>
            <who name="Dennis Ploeger">qooxdoo.dennis</who>
            <bug_when>2011-05-18 09:54:24 +0200</bug_when>
            <thetext>Hi!

I know, this is a big wish, but...

When you just copy and paste your code in JSLint, it doesn&#39;t comply. The biggest thing is the nested comment thing.

As you&#39;re using text in comments as parser instructions anyway, couldn&#39;t you use another syntax for assets and stuff like

/****

@asset()

*/

I think, that JSLint is THE code quality tool for anything Javascript and as qooxdoo is THE framework for any good application based on Javascript, the two should work together flawlessly. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24583</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-18 10:12:32 +0200</bug_when>
            <thetext>Thanks for the report. Are you aware of the lint tool that comes with qooxdoo itself? The whole framework and every app we deliver is checked every night with that tool and even trunk does usually not have any lint warning at all. So I&#39;m not sure if we should really use JSLint to check the framework because thats pretty restrictive, as you can see in the case you mentioned with the comments.
To be honest, I doubt that the quality of the framework would be better if JSLint would not print any warnings.

I still keep the bug poen and put it into our enhancement pool for feedback and further discussion.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24609</commentid>
            <who name="Dennis Ploeger">qooxdoo.dennis</who>
            <bug_when>2011-05-19 09:17:28 +0200</bug_when>
            <thetext>Yes, I am aware of the lint function. What I like about JSLint is that it not only warns you about possible errors, it also tells you, how to write good code and that&#39;s nearly as important as the other thing.

Furthermore, some things aren&#39;t catched by the qooxdoo lint like for example the additional IF-clase in for/in-statements (documented at http://www.jslint.com/lint.html), that I find kind of important.

However, qooxdoo&#39;s lint cathes things, JSlint finds okay, so it&#39;s basically a matter of taste.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36137</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:48:06 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>