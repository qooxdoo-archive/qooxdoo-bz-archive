<bug>
          <bug_id>1842</bug_id>
          
          <creation_ts>2009-01-14 11:39:00 +0100</creation_ts>
          <short_desc>Generator: add an &quot;all&quot; option to browser-specific variants</short_desc>
          <delta_ts>2011-07-22 13:54:43 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7346</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-01-14 11:39:06 +0100</bug_when>
            <thetext>At the moment one can create browser-specific variants by adding a &quot;qx.client&quot; variant to the configuration.

--snip--
&quot;qx.client&quot; : [ &quot;gecko&quot;, &quot;mshtml&quot;, &quot;webkit&quot;, &quot;opera&quot; ]
--snip--

These &quot;qx.client&quot; values can be used to create different files.

--snip--
 &quot;compile-dist&quot; :
      {
        &quot;paths&quot; :
        {
          &quot;file&quot; : &quot;qx-animation-{qx.client}.js&quot;
        },
--snip--

It would be a nice feature if one can add e.g. a &quot;all&quot; value to the &quot;qx.client&quot; array which results in file which is *not* variant-optimized. This way one can build browser-specific applications *and* a fallback application which is suitable for all browsers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12985</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-08 13:44:55 +0200</bug_when>
            <thetext>marked as enhancement. Thomas, would you please comment on how feasible this is?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15142</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-01 14:55:51 +0100</bug_when>
            <thetext>Can&#39;t comment on the feasibility off the top of my head, have to dig deeper. So 
far, we achieved this with separate jobs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26076</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-18 12:55:26 +0200</bug_when>
            <thetext>We&#39;ve decided to WONTFIX this. In the face of the recent feature sets and 
feature editor, it feels clunky to add additional syntax to the &quot;environment&quot; 
settings to express an explicit &quot;unspec&quot; value for a feature. And if you have 
like 10 features listed with multiple values, and you add &#39;unspec&#39; to *some* of 
them, what would that mean?  Would you add another N builds with only the 
remaining features combined? E.g. like

&quot;environment&quot; : {
 &quot;foo1&quot; : [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;__unspec__&quot;],
 &quot;foo2&quot; : [&quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;__unspec__&quot;],
 &quot;foo3&quot; : [&quot;g&quot;, &quot;h&quot;, &quot;i&quot;],
 &quot;foo4&quot; : [&quot;j&quot;, &quot;k&quot;, &quot;l&quot;]
}

would cause the generator to create 3**4 giving 81 different builds, *plus* 
3**2 giving 9 additional builds where foo1 and foo2 are unspec&#39;ed. Plus, you&#39;d 
have to find a symbolic value, like &quot;__unspec__&quot;, that can *never* show up as a 
real value for any feature.

Martin and I thought it much cleaner to just add a different job with those 
environment settings unspec&#39;ed that you want unspec&#39;ed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26199</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-07-22 13:54:43 +0200</bug_when>
            <thetext>closing</thetext>
          </long_desc>
      
      

    </bug>