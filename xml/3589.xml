<bug>
          <bug_id>3589</bug_id>
          
          <creation_ts>2010-04-16 12:37:00 +0200</creation_ts>
          <short_desc>Load Framework classes ahead of Custom classes</short_desc>
          <delta_ts>2014-03-03 08:47:18 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.dependencies</component>
          <version>1.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>info</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17813</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-04-16 12:37:12 +0200</bug_when>
            <thetext>This is a follow-up bug from bug#2838. #2838 addressed an issue when a custom 
theme class contained an error and qx.log.Logger tried to provide a stack 
trace. But qx.dev.StackTrace was not yet loaded, as the custom theme was loaded 
before it, and it was &quot;only&quot; a use-dependency of qx.log.Logger. The fix was to 
add #require(qx.dev.StackTrace) in qx.log.Logger.

Another way to look at this problem is to question why a custom class is loaded 
so early in the load sequence. It seems unnecessary early. There is no reason 
to load a custom class as early as e.g. on position 15, when it could just as 
well be loaded at position 50 or 75, given that dependency ordering of all 
classes is maintained. The current ordering algorithm loads classes sometimes 
as early as possible, while a later loading would work just as well.

The question is if an approach can be found that makes loading of custom 
classes more &quot;lazy&quot;, e.g. loading them as late as possible rather than as early 
as possible. A possible approach might be that within a loading unit (ie. a 
package) all framework classes are loaded first, before any custom class. This 
should work in all cases as no framework class depends on any custom class, so 
there should never be the need to load a custom class prior to a framework 
class.

Of course you would want to do this only within a loading unit and not on the 
overall list of classes, so that packages that are loaded later may still 
contain framework classes that are only necessary for the accompanying custom 
classes.

This general scheme might allow that all potentially necessary framework 
classes are available when the first custom class is loaded (like the presence 
of qx.dev.StackTrace when a problem with a custom class should be logged by 
qx.log.Logger). And it might obliviate the need for a specific #require in 
qx.log.Logger.

An alternative, defining a set of core classes that should always be loaded 
first  (containing loggers, StackTrace, etc.) seems much more complicated, as 
this list of classes had to be maintained by hand, and might vary between 
different application types (gui, inline, native,...).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18771</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-17 16:41:44 +0200</bug_when>
            <thetext>-&gt; unspec</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35861</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:18 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>