<bug>
          <bug_id>607</bug_id>
          
          <creation_ts>2007-08-30 13:08:00 +0200</creation_ts>
          <short_desc>Property init value using index notation crashes API generator</short_desc>
          <delta_ts>2008-06-05 14:27:29 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.apidata</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2160</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-08-30 13:08:09 +0200</bug_when>
            <thetext>I had a property definition like this:

      DefaultChildTypeID :
         {
         nullable     : true,
         check        : &quot;Integer&quot;,
         init         : abling.constants.CFragment.dTypes[&quot;eMessage&quot;]
         },

On generating the API, there is a crash:

.....Traceback (most recent call last):
  File &quot;../../Widgets/qooxdoo_source/frontend/framework/tool/generator.py&quot;, line
 1246, in ?
    main()
  File &quot;../../Widgets/qooxdoo_source/frontend/framework/tool/generator.py&quot;, line
 324, in main
    argparser(sys.argv[1:])
  File &quot;../../Widgets/qooxdoo_source/frontend/framework/tool/generator.py&quot;, line
 309, in argparser
    execute(fileDb, moduleDb, options, options.packageId)
  File &quot;../../Widgets/qooxdoo_source/frontend/framework/tool/generator.py&quot;, line
 987, in execute
    docTree = api.createDoc(loader.getTree(fileDb, fileId, options), docTree)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/api.py&quot;, line 101, in createDoc
    handleClassDefinition(docTree, defineNode, variant)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/api.py&quot;, line 218, in handleClass
Definition
    handleProperties(valueItem, classNode)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/api.py&quot;, line 657, in handlePrope
rties
    node = handlePropertyDefinitionNew(propName, propDefinition, classNode)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/api.py&quot;, line 512, in handlePrope
rtyDefinitionNew
    node.set(&quot;defaultValue&quot;, getValue(propDefinition[&quot;init&quot;].getFirstChild()))
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/api.py&quot;, line 1241, in getValue
    value = assembleVariable(item)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/treeutil.py&quot;, line 341, in assemb
leVariable
    assembled += child.get(&quot;name&quot;)
  File &quot;/cygdrive/d/abling/source_svn/trunk/abling/system/webserver/www/Widgets/
qooxdoo_source/frontend/framework/tool/modules/tree.py&quot;, line 84, in get
    raise NodeAccessException(&quot;Node &quot; + self.type + &quot; has no attribute &quot; + key,
self)
tree.NodeAccessException: Node accessor has no attribute name
make: *** [exec-api-data] Error 1

Changing the definition to this:

      DefaultChildTypeID :
         {
         nullable     : true,
         check        : &quot;Integer&quot;,
         init         : abling.constants.CFragment.dTypes.eMessage
         },

means the API generation can proceed through smoothly.

Either the API generator should give a meaningful error message including the file and line number of the problem, or it should cope with indexing notation (using square brackets) in treeutil.py, function assembleVariable.

Note that the same problem occurs for a definition of a _legacy property in the defaultValue entry.

As it was, I had to search through all my code to find a defaultValue that looked a little non-standard, and then experiment tracking it down. A simple try/catch block around the class parsing, with a message to say there was a problem, giving the class name and line number of the latest parsed object, would make it much easier to track down syntax that the api generator doesn&#39;t cope with.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2223</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-09-11 14:03:31 +0200</bug_when>
            <thetext>Planned for 0.7.2.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2376</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-09-18 18:27:03 +0200</bug_when>
            <thetext>Mass move of bugs to target 0.7.3</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2734</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-01-11 17:43:51 +0100</bug_when>
            <thetext>Fixed in trunk, legacy_0_7_x (r11141).

The bug was actually not reproducable in current legacy_0_7_x anymore, in the form reported: API doc generation went through smoothly, but the value shown for &#39;init&#39; (from the example) would be truncated to &#39;abling.constants.CFragment&#39;. We thought this to be misleading and replaced it with a &quot;[Complex expression]&quot; hint (since it could in fact get even more complex). People now need to check the source code if they want to know the exact init expression. I hope this finds general approval.</thetext>
          </long_desc>
      
      

    </bug>