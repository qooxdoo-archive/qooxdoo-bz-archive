<bug>
          <bug_id>5512</bug_id>
          
          <creation_ts>2011-08-12 10:11:00 +0200</creation_ts>
          <short_desc>rest.Resource: Embed params in request body when appropriate</short_desc>
          <delta_ts>2014-03-03 15:20:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26473</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-08-12 10:11:36 +0200</bug_when>
            <thetext>Provide a way to declare expected params that should be found in request body (#requestData). Base on implementation of positional params and offer the same feature set (e.g. checks). Support combination of positional and body params. Applies to POST, PUT, DELETE but not GET.

Example:

var description = {&quot;create&quot;, {method: &quot;POST&quot;, url: &quot;/:version/items&quot;, data: [&quot;id&quot;], check: /\d+/}
var res = new qx.io.rest.Resource(description);

// Sends request with requestData == {id: 1} to v1/items
res.create({id: 1, version: &quot;v1&quot;});

Along the way, consider to change params of the map method in order to improve extensibility. Seems sensible to use fragment of description (map instead of listed params).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27031</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-09-29 08:07:42 +0200</bug_when>
            <thetext>With recent changes the processing of parameters has changed in subtle details. Also, parameters not part of the URL template are passed to the requests setRequestData() method. Those parameters will be serialized and included in the request body (unless the method is GET in which case parameters will be appended to the URL as query string).

To accomplish the use case described in the example above:

var description = {&quot;post&quot;: {method: &quot;POST&quot;, url: &quot;/{version}/items&quot;, check: {id: /\d+/}} }
var res = new qx.io.rest.Resource(description);

// Sends request with requestData == {id: 1} (serialized) to /v1/items
res.create({id: 1, version: &quot;v1&quot;});

Note that no data property is required in the description. If parameters should be part of the URL (when the method is other than GET), they must be part of the URL template.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27079</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-10-04 10:17:33 +0200</bug_when>
            <thetext>Also note bug 5661.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36718</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:00 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>