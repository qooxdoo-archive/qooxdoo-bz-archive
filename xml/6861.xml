<bug>
          <bug_id>6861</bug_id>
          
          <creation_ts>2012-09-28 13:29:00 +0200</creation_ts>
          <short_desc>Textarea doesn&#39;t receive touch events properly</short_desc>
          <delta_ts>2012-10-01 15:36:07 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile</component>
          <version>2.0.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tobias Tost">ttost</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30834</commentid>
            <who name="Tobias Tost">ttost</who>
            <bug_when>2012-09-28 13:29:11 +0200</bug_when>
            <thetext>For textareas using the mobile qooxdoo scrolling-by-swipe is completely broken once the text is larger than the textbox. This can even be seen in http://demo.qooxdoo.org/current/mobileshowcase-ios : if the Terms of Service gets too much text, it can’t be swiped – its always the page that scrolls then. Additionally, on iOs-devices, the selection freezes while scrolling and only updates after touchEnd.

There&#39;s currently a workaround proposed by mailinglist-user Alexander K.:

var page = new qx.ui.mobile.page.NavigationPage();
page.setTitle(&quot;Hello World&quot;);
var scrollPosition = 0;
page.addListener(&quot;initialize&quot;, function() {
  var textArea = new qx.ui.mobile.form.TextArea();
  qx.bom.Element.addListener(textArea.getContentElement(),
&quot;touchstart&quot;, function(e){
    scrollPosistion = e.getTargetTouches()[0].pageY;
  });

  qx.bom.Element.addListener(textArea.getContentElement(),
&quot;touchmove&quot;, function(e) {
    if(textArea.getContentElement().scrollHeight &lt;=
textArea.getContentElement().offsetHeight)
      return;
    var pageY = e.getTargetTouches()[0].pageY;
    var scrollDiff = pageY  - scrollPosition;
    textArea.getContentElement().scrollTop -= scrollDiff;
    scrollPosition = pageY;
    e.stop();
  }, this);
  page.add(textArea);
},this);


this.getManager().addDetail(page);

page.show();


It still has issues but fixes the worst things. 

This a bug was filed on request by Christopher Zündorf:

&quot;...this is a known bug. I plan to solve this bug, by writing an own scroll handler for the text area, as I did already for carousel and picker.

Workaround idea:
You could listen to touchstart/touchmove/touchend event. Then you could calculate the distance between touchstart point and current touchmove event point. This distance could be set as textArea&#39;s inner top padding. Important is that you prevent bubbling of the event, for preventing iScroll scrolling.

Maybe you could file a new bug as a reminder.&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30853</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-10-01 15:36:07 +0200</bug_when>
            <thetext>Fixed with: bc4bbe3252d16a06eb412598014b9476d4ec29b8</thetext>
          </long_desc>
      
      

    </bug>