<bug>
          <bug_id>204</bug_id>
          
          <creation_ts>2006-10-25 18:05:00 +0200</creation_ts>
          <short_desc>String types bug</short_desc>
          <delta_ts>2006-11-21 15:22:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>0.6.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="christophe">cpco</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>604</commentid>
            <who name="christophe">cpco</who>
            <bug_when>2006-10-25 18:05:06 +0200</bug_when>
            <thetext>Hi,

in file OO.js at line 670:
        if (p.hasType &amp;&amp; typeof newValue !== p.type) {
          return this.error(&quot;Attention! The value \&quot;&quot; + newValue + &quot;\&quot; is an invalid value for the property \&quot;&quot; + p.name + &quot;\&quot; which must be typeof \&quot;&quot; + p.type + &quot;\&quot; but is typeof \&quot;&quot; + typeof newValue + &quot;\&quot;!&quot;, new Error());
        }

This checks for the correct type of the property, although it has a problem with the String object.

If you have a property of type qx.constant.Type.STRING the typeof is valid only for string literals. If you pass a String object this does not work because typeof returns &#39;object&#39; and trigger the type error.

For example: 
new qx.ui.tree.TreeFolder(&quot;Relations&quot;); //This is OK
new qx.ui.tree.TreeFolder(new String(&quot;Relations&quot;)); //This does not work. (but should)


best regards,

Christophe Conceição</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>669</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-11-21 15:22:03 +0100</bug_when>
            <thetext>I don&#39;t think this is something qooxdoo needs to support. What&#39;s the reason for you, to not convert the object first, or why at all do you want to use &quot;new String&quot;? In our tests it also performs worth compared to the literal notation.</thetext>
          </long_desc>
      
      

    </bug>