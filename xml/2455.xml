<bug>
          <bug_id>2455</bug_id>
          
          <creation_ts>2009-06-04 10:53:00 +0200</creation_ts>
          <short_desc>Support Unicode Name Spaces</short_desc>
          <delta_ts>2014-03-03 15:23:51 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          <blocked>2429</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10270</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-06-04 10:53:49 +0200</bug_when>
            <thetext>This is a spin-off from bug#2429. From a comment of this bug:

A very good starting point to debug unicode handling in the tool chain is the  
application name space.

It appears when you create the app with a skeleton, using create-application.py 
 -n &lt;namespace&gt;.

This name space string then shows up
- in the source files, like Application.js: 
qx.Class.define(&quot;&lt;namespace&gt;.Application&quot;)
- on the file system, in directory paths like 
&lt;namespace&gt;/source/class/&lt;namespace&gt;

The string in the source files is treated by the library scanning and compile  
routines.

The string in the directory path is treated by all kinds of routines that  
juggle in- and output-files, to copy resource files, open source files, create  
script output files ... it is all over the place.

In source files, utf-8 handling is applied, and has to be consistent wherever  
source files are read and written. This is the syntactic (encoding) level. On  
the semantic level, the name space string has to represent a valid JS  
identifier, since it is used as such when creating the class objects.

Concerning the file system, all relevant modules (os, robocopy, gzip, ...) have 
 to be used in a way that treats path strings properly. os.listdir() returns  
unicode strings if called with a unicode argument. os.getcwd() needs to be 
replaced by os.getcwdu(), to obtain a unicode representation. And so forth.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10271</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-06-04 11:13:42 +0200</bug_when>
            <thetext>Added the call to sys.setdefaultencoding(&#39;utf-8&#39;) to generator.py (thanks to 
Siarhei who pointed that out).

This is a temporary workaround. Using setdefaultencoding() seems to be 
contested in the Python community, even among core developers. But it allows us 
to bring in better Unicode support fast. GUI skeletons with unicode name spaces 
now compile (but with warnings!) and run. At least we have now a basis to work 
from when users start using unicode name spaces in their projects.

For a final solution, individual code locations have to be inspected and 
rectified (s. 
http://news.qooxdoo.org/generator-and-unicode-application-name-spaces for an 
approachable write-up), which can hopefully be achieved stepwise. Whenever it 
is worked on such a code location, the call to setdefaultencoding() in 
generator.py should be commented out, to see the behaviour without it.

With r19276.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11587</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-26 19:06:44 +0200</bug_when>
            <thetext>down prio for now</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11657</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-08-27 16:56:26 +0200</bug_when>
            <thetext>as enhancement. 

As of now, unicode namespaces may not, but contents should be supported, right?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11970</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 09:41:35 +0200</bug_when>
            <thetext>moved from 0.8.3 to 0.9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14789</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:34 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15013</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-27 10:52:41 +0100</bug_when>
            <thetext>to 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15020</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-27 11:06:17 +0100</bug_when>
            <thetext>Actually, I&#39;m closing this bug. The hints about incrementally re-writing 
encoding code, to eventually get rid of sys.setdefaultencoding(),  in the 
generator are still valid, but I don&#39;t see a general strategy that could be 
followed to achieve this. Maybe it is better to open concrete bugs when working 
on encoding issues that touch on the general strategy.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38167</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:51 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>