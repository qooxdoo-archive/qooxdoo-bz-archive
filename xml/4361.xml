<bug>
          <bug_id>4361</bug_id>
          
          <creation_ts>2010-11-23 19:28:00 +0100</creation_ts>
          <short_desc>base.json: Resolve global &quot;let&quot;</short_desc>
          <delta_ts>2014-03-03 08:47:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.config</component>
          <version>1.2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>21517</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-23 19:28:50 +0100</bug_when>
            <thetext>This is a follow-up bug of bug#2807.

The global &quot;let&quot; section in base.json could be resolved. Rather, let bindings 
could given in job-level &quot;let&quot; keys.

With the current setup, each job from base.json inherits a copy of the global 
&quot;let&quot;, whether it needs those settings or not. Purely declarative includer jobs 
like &quot;libraries&quot;, &quot;cache&quot; or &quot;includes&quot; are loaded with macros they never use, 
like QXTHEME, QXICONTHEME or OPTIMIZE. This can lead to confusion when these 
includers are used, as nobody would expect them to carry such macro 
definitions, and in worse cases, to macro values that are undesired in the 
final config.

Providing let bindings on the job-level allows jobs to have just those bindings 
they really need, and leave open those that are not required. This would reduce 
config cruft and ease problem tracking.

That doesn&#39;t prevent jobs from sharing let bindings. But they should be put in 
common includer jobs, rather than in the global &quot;let&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35766</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:03 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>