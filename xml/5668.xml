<bug>
          <bug_id>5668</bug_id>
          
          <creation_ts>2011-09-30 01:06:00 +0200</creation_ts>
          <short_desc>Dates serialized incorrectly</short_desc>
          <delta_ts>2011-10-21 15:50:29 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>contrib</product>
          <component>ServerObjects</component>
          <version>trunk</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Wordman">qooxdoo</reporter>
          <assigned_to name="John Spackman">john.spackman</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="John Spackman">john.spackman</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27068</commentid>
            <who name="Wordman">qooxdoo</who>
            <bug_when>2011-09-30 01:06:20 +0200</bug_when>
            <thetext>This could be operator error, but using qooxdoo 1.5 and the QSO code on the trunk, it seems like dates are not being serialized correctly. They show up in the javascript as ASCII-fied strings of the number of seconds since epoch.

I see the code in the QSO that should override the serialization of Date, but it doesn&#39;t seem like it is actually being called. I put a breakpoint in there and it never stops.

If I create my own serializer (based on the code in QSO) and use @JsonSerialize(using=MyClass.class) on a specific date field, it serialized properly. That&#39;s a pain, of course.

So, I think something might be up with the way Jackson is being initialized. I _do_ see that the factory override is being properly setup, it just seems like it isn&#39;t getting called.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27072</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2011-09-30 14:22:44 +0200</bug_when>
            <thetext>I&#39;ve updated to Jackson v1.8 and the problem&#39;s gone away; please can you check out the latest from SVN (the updated Jackson .jars are included) and try again?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27281</commentid>
            <who name="Wordman">qooxdoo</who>
            <bug_when>2011-10-20 21:45:52 +0200</bug_when>
            <thetext>Sorry for delay. I can confirm this is fixed for me as well.</thetext>
          </long_desc>
      
      

    </bug>