<bug>
          <bug_id>8900</bug_id>
          
          <creation_ts>2015-02-02 11:24:00 +0100</creation_ts>
          <short_desc>Implement &quot;lint&quot; job as grunt task</short_desc>
          <delta_ts>2015-03-19 16:39:25 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>tool</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>8946</dependson>
          <blocked>8959</blocked>
    
    <blocked>8945</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Richard Sternagel">richard.sternagel</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>martin.wittemann</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>42348</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-02-02 11:24:00 +0100</bug_when>
            <thetext>Should be configured for mobileshowcase app, play app and framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42377</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-04 16:27:13 +0100</bug_when>
            <thetext>*** Bug 8734 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42649</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-26 12:45:59 +0100</bug_when>
            <thetext>*** Bug 8899 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42650</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-26 12:51:56 +0100</bug_when>
            <thetext>As we removed the fix job, we should make sure we include these rules in the linting:

- only regular white spaces (no non breaking spaces e.g.)
- no training spaces
- no mixed tabs and spaces</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42799</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-11 11:08:53 +0100</bug_when>
            <thetext>Added &quot;eslint&quot; to Grunt toolchain.

&quot;grunt eslint&quot; is now available in:

* application/play
* application/mobileshowcase
* framework/
* {myCreatedApp}  // via create-application.py

master: e317ef650c7934e3d5e5c48bb68565995cb8c45b</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42842</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-13 14:38:41 +0100</bug_when>
            <thetext>Added two next specific custom rules.

* no-refs-in-members.js
* no-illegal-private-usage.js

... which correspond to the ones from bug #8946:

- data field has a reference
- undeclared private data field

master: ef4a985810a8c78e23d5c7c71711a70bf4aceb21</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42853</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-03-16 08:44:04 +0100</bug_when>
            <thetext>Just checked the eslint run of the framework and sas that the custom rules seems to be not correct. They should find the same stuff as the python linting does. But even as the python linting does not have any issue, I saw a couple of &#39;Do not use private &#39;...&#39; of foreign class&#39; warning which should not appear e.g. in the Interface class.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42865</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-16 18:20:44 +0100</bug_when>
            <thetext>Fixed several issues:

* regard &quot;statics&quot; declarations too
* check &quot;constructor&quot; method
* ignore &quot;qx.Class&quot;

master: 83470cb76cfedf0378acef87c70297b3bf0fc3fc</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42868</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-03-17 09:12:08 +0100</bug_when>
            <thetext>Just checked it and still saw some errors regarding the private use.
Basically, there are three possibilities:

1. In a static class where the  private is not declared
fixed that with 80ec4a89779052e9fffbd93acdec1dfe3301d59a

2. detected __defineGetter__ which is browser API 
should be ignored 

3. privates are attached to dom elements
As those privates are only used within that class, it seems to be ok but attaching it to the members section would simply be wrong. Maybe we should use $$ instead of __ for thing attached to the DOM anyway.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42891</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-19 16:39:25 +0100</bug_when>
            <thetext>Right.

&gt; 2. detected __defineGetter__ which is browser API 
&gt; should be ignored 

0bc87690244f3566b3f876fe3a0b06a393b9eae4

&gt; 3. privates are attached to dom elements
&gt; As those privates are only used within that class, it seems to be ok but
&gt; attaching it to the members section would simply be wrong. Maybe we should use
&gt; $$ instead of __ for thing attached to the DOM anyway.

a4813763773c34c4e8b1fac4324f1f8b28708aa9

master: 0bc87690244f3566b3f876fe3a0b06a393b9eae4</thetext>
          </long_desc>
      
      

    </bug>