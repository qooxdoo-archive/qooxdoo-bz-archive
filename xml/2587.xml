<bug>
          <bug_id>2587</bug_id>
          
          <creation_ts>2009-07-15 10:00:00 +0200</creation_ts>
          <short_desc>Add mechanism to concat files</short_desc>
          <delta_ts>2014-03-03 15:22:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>2008</dup_id>
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.4</target_milestone>
          <dependson>2008</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan Weiß">qooxdoo-bugs</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10899</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-07-15 10:00:24 +0200</bug_when>
            <thetext>During development of an application its source version is used. If you have a larger application the amount of classes can reach 800 or more. The browser has to load these classes file by file.

It would be great if the generator could create some some large files which contain many classes, which are not changed during development. The user should fill a list of files, which he is working on and changes frequently. These files should not be touched and stay as they are. All other files can be packed together into several large files (depending on the dependency of the files in the list).

Since this special source-concatted version is used for development, the large JavaScript files should not be optimized in any way to ensure that the program can be debugged.

The first step could be to create a single file containing all qooxdoo classes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10916</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-07-15 16:11:35 +0200</bug_when>
            <thetext>I must create a &quot;build&quot; version for my testing of an application because the application depends on a database on an appliance that can&#39;t be easily emulated on the development machine. I can&#39;t move the entire source tree to the appliance, so I need to create the build version, load it onto the appliance, and test from there. The problem is that some of the optimizations of a &quot;build&quot; make debugging difficult. Of course I disable all of the optimizations available via the json.config file, but errors such as deprecated methods don&#39;t show up. There have been others, too, that I can&#39;t recall at the moment but have given me grief.

If I could create a &quot;source&quot; version with everything crammed into a single file, I&#39;d be able to easily install that on the appliance and test from there. 

+1 !!!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10927</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-07-16 09:26:22 +0200</bug_when>
            <thetext>@Derrell: I think your requirements are slightly different, as you&#39;d be happy with just a single build file that behaves like a source version? I might be wrong, but it should be possible by disabling all optimizations as you said, but also setting qx.debug to &quot;on&quot;. Could you try that please?

@Johnny: This is related to bug #2008. I&#39;d suggest to support the feature described there first (as you also said in your last sentence). Supporting a user-supplied list of files as you suggested, might be considerably more work. It may be feasible when using parts, so that packages corresponding to the file list would be built differently. For a typical single file version of a qooxdoo app, it would require to extract single files and auto-concating the unlisted files &quot;in between&quot; into junks (according to the load dependencies). For all non-large apps bug #2008 should be ok, the really large ones would be using parts anyway.

I&#39;m sure Thomas has some more thoughts, so adding him to CC.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10935</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-07-16 15:25:42 +0200</bug_when>
            <thetext>Ok. I can enable qx.debug. Other than that and the &quot;optimize&quot; key settings, what, if any, are the other differences between a &quot;source&quot; version and  &quot;build&quot; version? By providing an empty array to &quot;OPTIMIZE&quot; and adding an &quot;=variants&quot; section to build-script with qx.debug=[&quot;on&quot;] is there anything else I need to do to make &quot;build&quot; and &quot;source&quot; be identical except that everything gets merged into a single file?

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15147</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-01 16:03:40 +0100</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23069</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-03-04 12:40:46 +0100</bug_when>
            <thetext>The requirements of this bug have pretty much been implemented with bug#2008.

*** This bug has been marked as a duplicate of bug 2008 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37776</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:42 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>