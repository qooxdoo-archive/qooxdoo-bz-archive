<bug>
          <bug_id>2712</bug_id>
          
          <creation_ts>2009-08-25 08:27:00 +0200</creation_ts>
          <short_desc>Reimplement property system for easier AIR support, better maintainability and performance.</short_desc>
          <delta_ts>2014-02-17 18:53:16 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.oo</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>5558</dependson>
          <blocked>2014</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Sebastian Werner">info</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>11480</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-25 08:27:29 +0200</bug_when>
            <thetext>I am currently working on a new version of the property managment. Maybe this is good to be part of 0.9 (as the last major version for 1.0). Not sure about other priorities though. I am currently on the way, but still have to fix a few oddities.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11484</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-08-25 09:36:46 +0200</bug_when>
            <thetext>Thanks for the info, Sebastian. To be fair: The impact of a new property system seems to be high. Even if it corrects some oddities (and supposedly gets rid of runtime evaluation for AIR), I doubt it would make it into the 0.9 (even 1.0) release, also given that there hasn&#39;t been a technical discussion, yet. 

The earlier you could describe the proposed changes, the better, also focusing on deprecation/migration.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12120</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-10 11:03:02 +0200</bug_when>
            <thetext>I am working on this one. Not yet sure when this will be ready though.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12130</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-10 12:51:33 +0200</bug_when>
            <thetext>Cannot be assigned to none, please correct, see http://qooxdoo.org/documentation/general/bug_handling

As a reminder, since you&#39;re about to put much effort into this: such a fundamental change clearly needs technical discussion and review before considering it for the framework (it is not on the roadmap for either 0.9 or 1.0). I could imagine to start hosting such an alternative implementation separately, e.g. a project in qooxdoo-contrib.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12182</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-10 17:12:54 +0200</bug_when>
            <thetext>Not sure what you mean, Andreas. I have assigned it to me. Otherwise it was not accepted by the system.

My idea is to make the change in the property system totally transparent and do not see why that&#39;s such a huge problem to be part of a 0.9 or 1.0 release. Sure it is not &quot;yet&quot; on the roadmap, but that does not mean that it could not be part of the roadmap, right? 

An alternative plan which further delays the practical usage of qooxdoo inside Adobe AIR apps is IMHO not a good idea. These eval-ing is also problematic in some cases of declined PhoneGap apps. It&#39;s not good to have a core class of qooxdoo depending on such a feature.

Sure I will share the code and solution and offer it for discussion as soon as I have some more stability than right now. There need to be enough time to check it for stability, too. But hopefully it will be a part of a fresh qooxdoo release as soon as possible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12486</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-21 18:51:34 +0200</bug_when>
            <thetext>Was still accepted by none@qooxdoo.org, so untargeted it into pool of enhancements.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13646</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-28 17:11:52 +0100</bug_when>
            <thetext>Wouldn&#39;t it make sense to assign this to me... not sure regarding your new rules. But I still working on this one.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13714</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-29 17:19:04 +0100</bug_when>
            <thetext>See also #2014.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13817</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-03 14:32:28 +0100</bug_when>
            <thetext>Sure this enhancement could be regularly assigned to you (previously bug attributes were just faulty). Mind my comments, though, that a reimplemented property system won&#39;t be a replacement (an alternative at most) for the existing one in the next releases. In principle an eval-free implementation might be great for many limited runtimes, of course.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35108</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2014-02-17 18:53:16 +0100</bug_when>
            <thetext>Closed outdated issue as wontfix, as bug became stale without feedback from assignee.</thetext>
          </long_desc>
      
      

    </bug>