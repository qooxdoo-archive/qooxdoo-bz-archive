<bug>
          <bug_id>6417</bug_id>
          
          <creation_ts>2012-05-15 10:24:00 +0200</creation_ts>
          <short_desc>Tab order issue on widgets without property tabIndex set</short_desc>
          <delta_ts>2015-01-20 08:40:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>4.0.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jeroen">Jeroen.Smit</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>dietrich.streifert</cc>
    
    <cc>Jeroen.Smit</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>29467</commentid>
            <who name="Jeroen">Jeroen.Smit</who>
            <bug_when>2012-05-15 10:24:24 +0200</bug_when>
            <thetext>Hi,

The following I reported to the mailing list and got an answer from Martin Wittemann which is embedded in the text.

I am using Qx v 1.4.1. and I ran into a an issue around “tabbing” through controls as this is implemented in FocusHandler.js. I do not set the tabIndex explicitely on widgets and therefore the code falls back to the position and eventually the Z-order.
 
The code marked by the comment “// Sort-Check #2: Top-Position” doesn’t always work for me because it checks on the top of widgets to exactly match:
      // Sort-Check #2: Top-Position
      if (loc1.top != loc2.top) {
        return loc1.top - loc2.top;
      }
 
This is not always the case in my layout and I still would like the behaviour of tabbing from left to right to controls. As an example of such a layout the following “example” with a checkbox in front of a control to implement optional behaviour for the value of the actual control:
       ______________
  X  | some control    |
       ---------------------
 
When in the control and pressing SHIFT + TAB I expect to end up with a checkbox having focus but that is not the case.
I tested with a slight adjustment of the code in FocusHandler.__compareTabOrder like this
 
      // Sort-Check #2: Top-Position
      if (loc1.top != loc2.top) {
         // Fallback for slight layout issues, e.g. the top of two controls
         // differs by a (few) pixel(s)
         if ((loc2.bottom &lt; loc1.top) || (loc2.top &gt; loc1.bottom)) {
            // loc2 does not have an overlap in vertical coordinates otherwise
            // we fallback to the diff on &quot;left&quot;
            return loc1.top - loc2.top;
          }
      }
 
Looking at an overlop in the vertical position of widgets rather than an exact match.
My question is:
-        What do you think of this idea?

-&gt;Martin wrote
I totally agree with you and the expected behavior. Additionally, you suggested solution sounds like a good approach to tackle that problem. 

-        Is this something that could be adjusted/patched in future versions?

-&gt;Martin wrote
Sure, go ahead and open up a bug report at out bugzilla [1]. You can put in your code as well which will help a lot including that feature. If you are familiar with git and github, feel free to create a pull request for that feature. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29472</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-05-16 08:23:20 +0200</bug_when>
            <thetext>Thanks for the report. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30209</commentid>
            <who name="Dietrich Streifert">dietrich.streifert</who>
            <bug_when>2012-07-20 13:16:40 +0200</bug_when>
            <thetext>I had the same problem using a grid layout with alternate radio buttons and text fields within the same row.

Jeromes algorithm fixes the problem for me with qooxdoo master (2.1).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35957</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:36 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42211</commentid>
            <who name="Jeroen">Jeroen.Smit</who>
            <bug_when>2015-01-19 12:28:37 +0100</bug_when>
            <thetext>Issue is still in place and causes problems for users. The fix is mentioned below and is very easy to merge</thetext>
          </long_desc>
      
      

    </bug>