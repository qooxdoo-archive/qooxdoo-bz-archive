<bug>
          <bug_id>1714</bug_id>
          
          <creation_ts>2008-12-10 18:55:00 +0100</creation_ts>
          <short_desc>Generator Config: &#39;manifest&#39; paths are *not* interpreted relative to the containing config</short_desc>
          <delta_ts>2014-03-03 08:45:43 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>6838</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-12-10 18:55:39 +0100</bug_when>
            <thetext>&#39;manifest&#39; paths are not interpreted relative to the containing config. Rather, 
they are interpreted relative to the importing config during 
Config.resolveLibs(). This defeats the general strategy that all paths in a 
config should be relative to the containing config file.

This should be changed, in order to enforce a common handling of paths in 
configs. The issue here is that it has to be done at include time. The current 
resolveLibs() has no way of knowing where a library entry originally came from. 
While the implementation shouldn&#39;t be too hard, there might be a lot of side 
effects lurking.

In case where the local library is &quot;injected&quot; through an external config, the 
library entry has to use a macro like &quot;ROOT&quot;, in order to enforce 
interpretation of the value by the final config (Macros delay the evaluation of 
values until the end of the config processing). So, e.g. in 
application.json/api the library entry would become

  &quot;library&quot; : [
     { &quot;manifest&quot; : &quot;${ROOT}/Manifest.json }
  ]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35271</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:43 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>