<bug>
          <bug_id>7915</bug_id>
          
          <creation_ts>2013-12-02 09:53:00 +0100</creation_ts>
          <short_desc>Error parsing (valid) date with qx.util.format.DateFormat(&quot;isoUtcDateTime&quot;)</short_desc>
          <delta_ts>2014-12-16 08:07:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Peter Schneider">schnepe2</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34445</commentid>
              <attachid>1293</attachid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2013-12-02 09:53:03 +0100</bug_when>
            <thetext>Created attachment 1293
DateFormat (UTC-parse) patch

the current implementation of qx.util.format.DateFormat is not able to parse
&quot;isoUtcDateTime&quot; correct.

Following example...
&lt;code&gt;
(new qx.util.format.DateFormat(&quot;isoUtcDateTime&quot;)).parse(&quot;2013-01-01T00:00:00Z&quot;)
&lt;/code&gt;

...throws the following exception:

  Error: Error parsing date &#39;2013-01-01T00:00:00Z&#39;: the value for day or month
         is too large

...the problem seems to be even worse 

The offset calculation seems to be entirely wrong...

&lt;code&gt;
  var fmt = new qx.util.format.DateFormat(&quot;isoUtcDateTime&quot;);

  var ddd = fmt.parse(&quot;2004-04-04T04:04:04Z&quot;);
  ddd.getUTCHours(); // This does NOT return 4 !!!
&lt;/code&gt;

The attached patch seems to fix the issue!
And still checks whether &quot;the value for day or month is too large&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41961</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-12-16 08:07:20 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1293</attachid>
            <date>2013-12-02 09:53:00 +0100</date>
            <delta_ts>2013-12-02 09:53:03 +0100</delta_ts>
            <desc>DateFormat (UTC-parse) patch</desc>
            <filename>DateFormat.js.patch</filename>
            <type>application/octet-stream</type>
            <size>1234</size>
            <attacher>schnepe2</attacher>
            
              <data encoding="base64">SW5kZXg6IERhdGVGb3JtYXQuanMNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBEYXRlRm9ybWF0LmpzCShyZXZp
c2lvbiAyMjM5KQ0KKysrIERhdGVGb3JtYXQuanMJKHdvcmtpbmcgY29weSkNCkBAIC04MjksMTIg
KzgyOSwxMCBAQA0KICAgICAgICAgZGF0ZVZhbHVlcy55ZWFyID0gZGF0ZVZhbHVlcy55ZWFyICog
ZGF0ZVZhbHVlcy5lcmE7CiAgICAgICB9CiAKLSAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoZGF0
ZVZhbHVlcy55ZWFyLCBkYXRlVmFsdWVzLm1vbnRoLCBkYXRlVmFsdWVzLmRheSwgKGRhdGVWYWx1
ZXMuaXNwbSkgPyAoZGF0ZVZhbHVlcy5ob3VyICsgMTIpIDogZGF0ZVZhbHVlcy5ob3VyLCBkYXRl
VmFsdWVzLm1pbiwgZGF0ZVZhbHVlcy5zZWMsIGRhdGVWYWx1ZXMubXMpOworICAgICAgdmFyIGRh
dGUgPSAodGhpcy5fX1VUQykKKyAgICAgICA/IG5ldyBEYXRlKERhdGUuVVRDKGRhdGVWYWx1ZXMu
eWVhciwgZGF0ZVZhbHVlcy5tb250aCwgZGF0ZVZhbHVlcy5kYXksIChkYXRlVmFsdWVzLmlzcG0p
ID8gKGRhdGVWYWx1ZXMuaG91ciArIDEyKSA6IGRhdGVWYWx1ZXMuaG91ciwgZGF0ZVZhbHVlcy5t
aW4sIGRhdGVWYWx1ZXMuc2VjLCBkYXRlVmFsdWVzLm1zKSkKKyAgICAgICA6ICAgICAgICAgIG5l
dyBEYXRlKGRhdGVWYWx1ZXMueWVhciwgZGF0ZVZhbHVlcy5tb250aCwgZGF0ZVZhbHVlcy5kYXks
IChkYXRlVmFsdWVzLmlzcG0pID8gKGRhdGVWYWx1ZXMuaG91ciArIDEyKSA6IGRhdGVWYWx1ZXMu
aG91ciwgZGF0ZVZhbHVlcy5taW4sIGRhdGVWYWx1ZXMuc2VjLCBkYXRlVmFsdWVzLm1zKTsKIAot
ICAgICAgaWYodGhpcy5fX1VUQykgewotICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5nZXRV
VENGdWxsWWVhcigpLGRhdGUuZ2V0VVRDTW9udGgoKSxkYXRlLmdldFVUQ0RhdGUoKSxkYXRlLmdl
dFVUQ0hvdXJzKCksZGF0ZS5nZXRVVENNaW51dGVzKCksZGF0ZS5nZXRVVENTZWNvbmRzKCksZGF0
ZS5nZXRVVENNaWxsaXNlY29uZHMoKSk7Ci0gICAgICB9Ci0KICAgICAgIGlmIChkYXRlVmFsdWVz
Lm1vbnRoICE9IGRhdGUuZ2V0TW9udGgoKSB8fCBkYXRlVmFsdWVzLnllYXIgIT0gZGF0ZS5nZXRG
dWxsWWVhcigpKQogICAgICAgewogICAgICAgICAvLyBUT0RPOiBjaGVjayBpZiB0aGlzIGlzIGFs
c28gbmVjZXNzYXJ5IGZvciB0aGUgdGltZSBjb21wb25lbnRzCg==
</data>

          </attachment>
      

    </bug>