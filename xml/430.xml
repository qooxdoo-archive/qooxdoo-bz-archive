<bug>
          <bug_id>430</bug_id>
          
          <creation_ts>2007-05-23 13:20:00 +0200</creation_ts>
          <short_desc>fadeOut with no fadeIn fails</short_desc>
          <delta_ts>2007-07-05 14:45:14 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>0.6.6</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1372</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-05-23 13:20:34 +0200</bug_when>
            <thetext>I&#39;ve just been trying to use fadeOut in 0.6.6, and had to work around a problem.

I had an image which I wanted to show immediately, and then slowly fade out. It seems to me that the fading code is designed to fade in, then fade out.

If you don&#39;t fade in before fading out, the fadeCounter is wrong.

Therefore prior to calling fadeOut, I had to call setFadeCounter, to the number of steps I was using.

I&#39;m guessing that fadeIn will similarly need a call to set the fadeCounter to 0. Also, if you had a fadeIn with 10 steps, say, then a fadeOut with 20, you would get problems.

Same problem in trunk (qx.ui.animation.MAnimation.js)

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1376</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-05-24 09:50:26 +0200</bug_when>
            <thetext>I think I have fixed this issue some time ago in the trunk. Are you sure it is not working in trunk?

The example http://demo.qooxdoo.org/0.7-beta1/sample/html/test/Fading_1.html seems to work fine.

If you provide a patch for 0.6.6 I would be happy to apply it.

Fabian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1377</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-05-24 11:23:56 +0200</bug_when>
            <thetext>Ah, I see with SVN checkin 6819 you reset the counter with fadeOut to make the initial fadeOut call work for trunk.

However, with repeated fadeIn calls (and no corresponding fadeOut call) then the counter will not be reset to 0 and the second fadeIn will happen immediately (not tested).

If you made the example more general purpose by having two buttons instead of just one - one to fade in, one to fade out, you would see the bug. 

I&#39;m not too fussed about patching 0.6.6 as it&#39;s quite easy to work around it. But it&#39;s a trivial fix...

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1849</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-07-05 14:45:14 +0200</bug_when>
            <thetext>fixed in svn</thetext>
          </long_desc>
      
      

    </bug>