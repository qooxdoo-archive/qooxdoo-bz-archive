<bug>
          <bug_id>3047</bug_id>
          
          <creation_ts>2009-11-12 12:15:00 +0100</creation_ts>
          <short_desc>&quot;compile-dist&quot; and &quot;compile-source&quot; keys should share the configuration</short_desc>
          <delta_ts>2014-03-03 15:24:35 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.config</component>
          <version>0.8.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>14071</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-12 12:15:05 +0100</bug_when>
            <thetext>It turns out that the compile config keys &quot;compile-dist&quot; and &quot;compile-source&quot; 
essentially share a common set of config options (with compile-source using a 
sub-set of these). It is counter-intuitive to maintain similar settings in both 
keys, and to develop them individually when new options are necessary. 
Furthermore, there are other keys that need some of the compile settings for 
their work (e.g. the &#39;optimize&#39; setting in the log/dependencies key) that are 
again redundant there.

It would be better to have an independent key, say &quot;compile-options&quot;, that is 
only declarative (no trigger) and holds the common compile options, and then 
triggers (compile-dist, log, ...) that utilize them.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14073</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-12 12:51:35 +0100</bug_when>
            <thetext>&quot;compile-options&quot; can basically look like &quot;compile-dist&quot; does right now. 
&quot;compile-dist&quot; and &quot;compile-source&quot; can be replaced by a common  &quot;compile&quot; : { 
&quot;type&quot; : &quot;(source|build)&quot; } key.

A basic compile job would then look like this:

  &quot;mybuild&quot; : {

    &quot;library&quot; : { &quot;path&quot; : &quot;./Manifest.json&quot; },
 
    &quot;include&quot; : [ &quot;myapp.Application&quot;, &quot;myapp.theme.Theme&quot; ],

    &quot;cache&quot;  : { &quot;compile&quot; : &quot;/tmp/cache&quot; },

    &quot;compile-options&quot; : {
       &quot;paths&quot; : { &quot;file&quot; : &quot;script/myapp.js&quot; },
       &quot;code&quot;  : { &quot;optimize&quot; : [&quot;strings&quot;, &quot;variables&quot;, &quot;privates&quot;, 
&quot;basecalls&quot;] }
    },

    &quot;compile&quot; : { &quot;type&quot; : &quot;build&quot; }

}

The advantage is that &quot;compile-dist&quot; (declarative) can be used anywhere, also 
with other keys that e.g. need to know the optimize settings, and easily shared 
among source and build jobs, without hurting in jobs that choose to ignore it 
(It would be therefore safe to e.g. include it in a &quot;common&quot; job that is 
extended by many others). The actual compile actions (trigger) is then invoked 
by the explicit &quot;compile&quot; key that already has peer keys it depends on 
(&quot;library&quot;, &quot;include&quot;, &quot;cache&quot;, ...), and optional peer keys that influence it 
(&quot;packages&quot;).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15436</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-09 11:32:29 +0100</bug_when>
            <thetext>New compile keys &#39;compile-options&#39;, &#39;compile&#39; are implemented, old keys 
&#39;compile-source&#39;, &#39;compile-dist&#39; continue to work, but issue 
DeprecationWarnings.

&#39;migration&#39; job checks for old compile keys in configuration during migration 
and issues DeprecationWarnings.

New compile keys are established in framework config files (applications, 
components, ...).

With r21017.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38441</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:35 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>