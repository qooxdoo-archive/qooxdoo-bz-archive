<bug>
          <bug_id>3602</bug_id>
          
          <creation_ts>2010-04-21 12:13:00 +0200</creation_ts>
          <short_desc>Remove Robocopy</short_desc>
          <delta_ts>2014-03-03 15:19:23 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.system</component>
          <version>1.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          <dependson>3986</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17894</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-04-21 12:13:12 +0200</bug_when>
            <thetext>The (third party) robocopy module we are using seems to be overkill for the 
cases we use it. We basically copy files and directories. We need a bit of 
intelligence when creating intermediate paths or need to overwrite read-only 
files, but this should be easily achieveable with stock Python APIs (module 
&#39;os&#39;). Extra stuff from robocopy like synch&#39;ing files we don&#39;t use at all. And 
although I don&#39;t feel that robocopy makes the generator slow, it adds a bit of 
complexity and overhead to our code (logging, filtering, ...) that would be 
nice to avoid.

If that impression holds on deeper inspection, robocopy should be replaced by 
self-written code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18355</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-05-17 18:35:21 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18361</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-18 14:44:42 +0200</bug_when>
            <thetext>-&gt; daniel</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18497</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-05-27 11:30:28 +0200</bug_when>
            <thetext>Fixed in r22261: Replaced robocopy with a new module misc.copytool which is basically a reimplementation of the robocopy features we use.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21050</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-03 14:50:19 +0100</bug_when>
            <thetext>The robocopy module has succesfully replaced, but the module code is still in 
the framework. It might be useful for resolving bug#3986, but after that we 
should remove the code eventually.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21234</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-11-11 11:20:25 +0100</bug_when>
            <thetext>Removed robocopy files in r23767.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36465</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:23 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>