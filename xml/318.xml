<bug>
          <bug_id>318</bug_id>
          
          <creation_ts>2007-03-07 05:02:00 +0100</creation_ts>
          <short_desc>qx.util.format.NumberFormat.format() dose not deal with NaN</short_desc>
          <delta_ts>2007-04-05 10:24:56 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="skyweb">skywebmaster</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>972</commentid>
            <who name="skyweb">skywebmaster</who>
            <bug_when>2007-03-07 05:02:27 +0100</bug_when>
            <thetext>if a NaN (for example: null) passed to qx.util.format.NumberFormat.format(), it will return &quot;.Na&quot; or &quot;.NaN&quot;, but in most conditions, we just need a &quot;&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>973</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-03-07 09:20:33 +0100</bug_when>
            <thetext>The values infinity and negative infinity have this problem as well. I think the correct behavior would be to return the strings:

- &quot;infinity&quot;
- &quot;-infinity&quot;
- &quot;NaN&quot;

and leave it up to the application developter to decide how to handle these cases</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>994</commentid>
            <who name="skyweb">skywebmaster</who>
            <bug_when>2007-03-08 08:22:40 +0100</bug_when>
            <thetext>but some other component like qx.ui.table.DefaultDataCellRenderer, just use this format function, won&#39;t give any chance to application developer to decide how.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1154</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-04-05 10:24:56 +0200</bug_when>
            <thetext>But is always the developer who passes the numbers to NumberFormat. Either directly or inderictly using e.g. qx.ui.table.DefaultDataCellRenderer. Setting the formatted number to &quot;&quot; would in most cases just hide an programming error, which is IMHO not the correct bahaviour.

The number formatter now returns infinity, -infinity and NaN</thetext>
          </long_desc>
      
      

    </bug>