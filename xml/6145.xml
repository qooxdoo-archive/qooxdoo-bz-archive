<bug>
          <bug_id>6145</bug_id>
          
          <creation_ts>2012-02-14 13:08:00 +0100</creation_ts>
          <short_desc>Better integration for performance tests</short_desc>
          <delta_ts>2014-03-03 08:47:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.testing</component>
          <version>1.6</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28529</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-14 13:08:13 +0100</bug_when>
            <thetext>The performance testing capabilities of qooxdoo&#39;s unit testing subsystem aren&#39;t easily accessible for developers. Several steps could be taken to improve this:

* Move qx.test.performance.MMeasure to qx.dev.unit (qx.test.* is excluded from the framework API Viewer)
* testrunner.view.Performance can be integrated with the regular views (e.g. as a mixin or by moving its members to view.Abstract). This would improve usability.
* Support performance tests in the Portable Test Runner (by including MMeasure in the generated test classes).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28530</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-14 14:55:13 +0100</bug_when>
            <thetext>More ideas:

* MMeasure.measure and measureRepeated should accept an optional context parameter
* Measurement results should be processed similar to &quot;regular&quot; results (perhaps by attaching them to the TestItem like it&#39;s done with exceptions). This would make it easier to integrate performance test results with regular test results in the views.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28531</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-14 17:57:37 +0100</bug_when>
            <thetext>We should also look into integrating Benchmark.js http://benchmarkjs.com/</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28600</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-20 10:44:03 +0100</bug_when>
            <thetext>* MMeasure is now added to generated test classes (08474d)
* Replaced testrunner.view.Performance with testrunner.view.MPerformance (7c676c)
* Moved MMeasure to qx.dev.unit (570a68)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28602</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-02-20 16:10:09 +0100</bug_when>
            <thetext>Measurements are now displayed along with regular test results (Console, HTML and Widget views). With 23df22.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35748</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:00 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>