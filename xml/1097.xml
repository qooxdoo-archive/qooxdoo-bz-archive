<bug>
          <bug_id>1097</bug_id>
          
          <creation_ts>2008-07-30 11:04:00 +0200</creation_ts>
          <short_desc>Finalize theme support through build system</short_desc>
          <delta_ts>2014-03-03 15:19:39 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4034</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-07-30 11:04:32 +0200</bug_when>
            <thetext>The theme support is not yet revised and must be further improved to replace 
the non-runtime changable themes in a good way.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4202</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-06 18:37:29 +0200</bug_when>
            <thetext>The issues around theming in qooxdoo 0.8 were summarized and adressed in the following proposal:

THEMING, REVISITED
==================
(as of: 06aug08)

ABSTRACT
  This is a proposal about how to handle theme information for qooxdoo &gt;0.7.
  This revision reflects on the consequences of the changes introduced
  through elimination of run-time theme switching, Json-based configuration
  files and changed resource handling in source code (#asset hints).

MOTIVATION
  There are various changes to qooxdoo 0.8 that impact the theme handling and
  stir a revision of the concept as implemented for 0.7:
  - Theme switching at run-time has been removed. This allows to erase
    information from the runtime (both application source code and qooxdoo
    runtime code) and &quot;inline&quot; them through the generator.
    - Doing so would probably incure changes to the code generated by the
      generator (e.g. in the bootstrap code).
  - Currently, dependent information is kept redundantly and in various places.
    - The setting &quot;qx.theme&quot; defines a general theme in the config file.
    - The &quot;include&quot; key repeats classes implementing this theme.
    - &quot;#asset&quot; hints deploy &quot;theme&quot; macros which actually should by infered from
      the chose theme.
  - On a more general level, this is linked to the unification of settings,
    variants and themes in the compiler/runtime system (s. bug#1138):
    - There might be a general scheme behind settings, variants and themes, at
      least on a technical, realization level (the user model might still
      differ).
    - Implementing this scheme would impact on how the theme information is
      represented and passed around in the system.


PROPOSAL

  - Retire &#39;meta&#39; themes:
    - Implement this information in the config.
    - Provide defaults in application.json

  - Remove theme-dependent information from #asset hints:
    - Let the asset hint look like the image/resource path used in the
      application code
    - This would also allow to remove &quot;theme&quot; key from the config, removing
      duplication of theme information in the config.
    - Problem: A resource specification in asset hints/application code cannot
      just be concatenated with a path prefix, to produce the path to the actual
      resource. There has to be a mapping step (e.g. to get from
      &#39;icon/22/actions/action.png&#39; to &#39;qx/icon/Oxygen/22/actions/action.png&#39;).
    - To this end:

  - Changes to bootstrap code generation:
    - &quot;qxresources&quot;: will only contain theme-independent path parts
    - &#39;alias&#39; handling will be implemented in the generator
    - e.g. instead of:
      &quot;qx/icon/Oxygen/22/actions/action.png&quot; : [...,&quot;qx&quot;,...]
      &quot;qx/decoration/Classic/menu/checkbox.gif&quot;: [..., &quot;qx&quot;]
      do:
      &quot;icon/22/actions/action.png&quot; : [...,&quot;qx.icon&quot;,...]
      &quot;menu/checkbox.gif&quot;: [..., &quot;qx.decoration&quot;]

  - Resource Manager:
    - Make the necessary changes

  - Dependency injection:
    - Insert class dependencies depending on the theme classes specified in the
      config file.
    - Thus, the &quot;include&quot; key of a job does not have to repeat theme classes.

  - Unification of Variants/Settings/Themes:
    - On a larger scale, this can be synchronized with the unified settings
      scheme as follows:
      - ???
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4525</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-21 09:39:03 +0200</bug_when>
            <thetext>to 0.8.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4724</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-25 18:31:40 +0200</bug_when>
            <thetext>For the sake of having all demos in Demobrowser in 2 themes, the generator was hacked to add a theme setting to the bootstrap code when a &#39;qx.theme&#39; variant was discovered. This way you could specify qx.theme as a variant, and in the respective code the qx.theme setting was set appropriately. This is a bad kludge, and has to be revised (See bug#1080, r15001 svn comment).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5362</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-07 00:18:09 +0200</bug_when>
            <thetext>These things should get right ASAP. It&#39;s a killer to keep these hacks for 
longer than necessary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5737</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-07 15:17:07 +0200</bug_when>
            <thetext>To emphasize: the way it is used in demobrowser is not recommended and should be used in custom code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7893</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 11:29:54 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32063</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-01-31 16:34:12 +0100</bug_when>
            <thetext>Runtime theme switching is enabled again in the framework. Demobrowser and 
Widgetbrowser have been adapted to take advantage of that, any intermediate 
hacks  have been removed meanwhile. A manual section has been added that gives 
How-to style information for building multi-theme apps [1]. Looks like this 
case is settled.

[1] 
http://manual.qooxdoo.org/devel/pages/desktop/ui_theming.html#multi-theme-applications</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36573</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:39 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>