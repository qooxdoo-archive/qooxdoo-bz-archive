<bug>
          <bug_id>2474</bug_id>
          
          <creation_ts>2009-06-16 14:35:00 +0200</creation_ts>
          <short_desc>Enhancement: &quot;Smart&quot; table model</short_desc>
          <delta_ts>2014-03-03 15:20:53 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          <blocked>2431</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dave Baggett">qooxdoo</reporter>
          <assigned_to name="Dave Baggett">qooxdoo</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>martin.wittemann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10413</commentid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-06-16 14:35:04 +0200</bug_when>
            <thetext>Here is some code I am contributing for a new table model. This works with 0.8.2 and is largely backward-compatible with the Simple model.
--------
The Smart table model provides filtering capabilities, multiple &quot;views&quot;, indexing by arbitrary model columns, and excellent performance for large tables. Sorting, filtering, and indexing are all preserved after modifications to the table, so there is rarely any need to explicitly sort or filter the entire table at once.
---------
I&#39;ll attach the code later today once I add a few more pending optimizations.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10416</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-06-16 14:55:52 +0200</bug_when>
            <thetext>Please add your class to qooxdoo-contrib. This will allow you to continue to maintain it, and also allow others to make use of it. Thanks for the contribution!

Derrell

ps. If you don&#39;t have write access to qooxdoo-contrib, contact Andreas Ecker.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10424</commentid>
              <attachid>526</attachid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-06-16 17:56:30 +0200</bug_when>
            <thetext>Created attachment 526
qx.ui.table.model.Smart implementation</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10425</commentid>
              <attachid>527</attachid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-06-16 17:57:15 +0200</bug_when>
            <thetext>Created attachment 527
qx.ui.table.model.Smart unit tests mixin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11398</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-19 16:10:12 +0200</bug_when>
            <thetext>to Andreas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12292</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-15 10:42:51 +0200</bug_when>
            <thetext>Accepted. 

There&#39;s an initial commit from Dave in qooxdoo-contrib. I&#39;ll review it and help fleshing out the contrib to adhere to the recommended contrib structure.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12321</commentid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-09-15 14:36:23 +0200</bug_when>
            <thetext>I&#39;ve been procrastinating on cleaning the contrib up. I will work on that today.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12333</commentid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-09-15 21:03:13 +0200</bug_when>
            <thetext>The contrib is now in SmartTableModel, and now has a proper demo.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12339</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-16 09:35:40 +0200</bug_when>
            <thetext>Dave, thanks for providing a cleaned-up version. I set up the proper infrastructure for the contrib, i.e. wiki, bugzilla, etc., see
http://qooxdoo.org/contrib/project#smarttablemodel
Feel free to add some documentation to your contribution&#39;s homepage (maybe just copying or referring to the info already in your contrib).

I&#39;ll assign this bug back to you. Once we both finish to work on polishing your contrib, you may resolve this big as fixed.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12469</commentid>
            <who name="Dave Baggett">qooxdoo</who>
            <bug_when>2009-09-21 16:19:09 +0200</bug_when>
            <thetext>Done. Closing, per Andreas.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14517</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:15:12 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37071</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:53 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>526</attachid>
            <date>2009-06-16 17:56:00 +0200</date>
            <delta_ts>2009-06-16 17:56:30 +0200</delta_ts>
            <desc>qx.ui.table.model.Smart implementation</desc>
            <filename>Smart.js</filename>
            <type>application/x-javascript</type>
            <size>59522</size>
            <attacher>qooxdoo</attacher>
            
              <data encoding="base64">LyogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCgogICAgcW9veGRvbyAtIHRoZSBuZXcgZXJhIG9mIHdlYiBkZXZl
bG9wbWVudAoKICAgIGh0dHA6Ly9xb294ZG9vLm9yZwoKICAgIENvcHlyaWdodDoKICAgICAgMjAw
OSBieSBBcmNvZGUgQ29ycG9yYXRpb24KCiAgICAgTGljZW5zZToKICAgICAgIExHUEw6IGh0dHA6
Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9sZ3BsLmh0bWwKICAgICAgIEVQTDogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9vcmcvZG9jdW1lbnRzL2VwbC12MTAucGhwCiAgICAgICBTZWUgdGhlIExJQ0VO
U0UgZmlsZSBpbiB0aGUgcHJvamVjdCdzIHRvcC1sZXZlbCBkaXJlY3RvcnkgZm9yIGRldGFpbHMu
CgogICAgQXV0aG9yczoKICAgICAgKiBEYXZlIEJhZ2dldHQKCioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwoK
LyoqCiAqIFRoZSBTbWFydCB0YWJsZSBtb2RlbCBwcm92aWRlcyBmaWx0ZXJpbmcgY2FwYWJpbGl0
aWVzLCBtdWx0aXBsZSAidmlld3MiLCBpbmRleGluZyBieSBhcmJpdHJhcnkKICogbW9kZWwgY29s
dW1ucywgYW5kIGV4Y2VsbGVudCBwZXJmb3JtYW5jZSBmb3IgbGFyZ2UgdGFibGVzLiBTb3J0aW5n
LCBmaWx0ZXJpbmcsIGFuZCBpbmRleGluZyBhcmUKICogYWxsIHByZXNlcnZlZCBhZnRlciBtb2Rp
ZmljYXRpb25zIHRvIHRoZSB0YWJsZSwgc28gdGhlcmUgaXMgcmFyZWx5IGFueSBuZWVkIHRvIGV4
cGxpY2l0bHkgc29ydCBvcgogKiBmaWx0ZXIgdGhlIGVudGlyZSB0YWJsZSBhdCBvbmNlLgogKgog
KiBUaGUgYXBwcm9hY2ggd2UgdGFrZSB0byBzb3J0aW5nIGhlcmUgaXMgZGlmZmVyZW50IGZyb20g
d2hhdCBxeC51aS50YWJsZS5tb2RlbC5TaW1wbGUgZG9lcy4gVGhlCiAqIFNtYXJ0IG1vZGVsIG1h
aW50YWlucyB0aGUgc29ydCBpbmNyZW1lbnRhbGx5IGFzIG1vZGlmaWNhdGlvbnMgYXJlIG1hZGUu
IEZvciBleGFtcGxlLCB3ZSBhZGQgcm93cwogKiB1c2luZyBhIG1lcmdlIHNvcnQsIHJhdGhlciB0
aGFuIHJlLXNvcnRpbmcgdGhlIGVudGlyZSB0YWJsZSBhZnRlciByb3dzIGFyZSBhZGRlZC4gTGlr
ZXdpc2UsCiAqIGZpbHRlcmluZyBvcGVyYXRpb25zIG5ldmVyIGNsZWFyIHRoZSBzb3J0OyBuZWl0
aGVyIGRvZXMgc2V0dGluZyBhIHZhbHVlIGluIHRoZSB0YWJsZS4gKElmCiAqIGNoYW5naW5nIGEg
dmFsdWUgY2F1c2VzIHRoZSBhZmZlY3RlZCByb3cgdG8gYmVjb21lIGltcHJvcGVybHkgb3JkZXJl
ZCwgaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlCiAqIHJlLWluc2VydGVkIGluIHRoZSByaWdodCBw
bGFjZS4KICoKICogRmlsdGVyaW5nIGlzIGFsc28gbWFpbnRhaW5lZCBpbmNyZW1lbnRhbGx5OiB3
ZSBrZWVwIG11bHRpcGxlIHZpZXdzIG9mIHRoZSBkYXRhIGluICJiYWNraW5nCiAqIHN0b3JlIiwg
YW5kIGNhbiB0aGVuIHNlbGVjdCBiZXR3ZWVuIHRoZW0ganVzdCBieSBjaGFuZ2luZyB0aGlzLl9f
cm93QXJyLiBXZSBhcHBseSBhbGwKICogbW9kaWZpY2F0aW9ucyB0byBhbGwgdmlld3MgLS0gZm9y
IGV4YW1wbGUsIGFsbCBjb3BpZXMgYXJlIGtlcHQgc29ydGVkLCBhbmQgcm93cyBhcmUgYWRkZWQg
YW5kCiAqIHJlbW92ZWQgdG8vZnJvbSBhbGwgKHN1YmplY3QgdG8gZmlsdGVyaW5nKS4gVGhpcyBh
bGxvd3MgcmVhbC10aW1lIHN3aXRjaGluZyBiZXR3ZWVuIHZpZXdzLgogKgogKiBVc2VyLWRlZmlu
ZWQgaW5kaWNlcyBhcmUgYW5vdGhlciBwb3dlcmZ1bCBTbWFydCBtb2RlbCBmZWF0dXJlOiB0aGV5
IGFsbG93IHVzZXJzIHRvIHF1aWNrbHkgbG9jYXRlCiAqIGEgcm93IGluIGEgdmlldyBieSBhIHVu
aXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiBhIHBhcnRpY3VsYXIgY29sdW1uLgogKgogKiBNb3N0
IG1ldGhvZHMgaGF2ZSB0aGUgc2FtZSBzaWduYXR1cmVzIHRoZXkgZG8gaW4gdGhlIFNpbXBsZSBz
dXBlcmNsYXNzLCBvbmx5IHdpdGggYW4gYWRkaXRpb25hbAogKiBwYXJhbWV0ZXIgaW5kaWNhdGlu
ZyB3aGljaCB2aWV3IHRoZSBvcGVyYXRpb24gYXBwbGllcyB0by4gSWYgdGhlIHZpZXcgcGFyYW10
ZXIgaXMgb21pdHRpZWQsIHdlCiAqIGFzc3VtZSB0aGUgY3VycmVudGx5IHNlbGVjdGVkIHZpZXcs
IGRldGVybWluZSBieSB0aGUgdmlldyBwcm9wZXJ0eS4gVGhpcyBtYWtlcyB0aGUgQVBJIG1vc3Rs
eQogKiBiYWNrd2FyZHMtY29tcGF0aWJsZSB3aXRoIHRoZSBTaW1wbGUgbW9kZWwuCiAqLwpxeC5D
bGFzcy5kZWZpbmUoInF4LnVpLnRhYmxlLm1vZGVsLlNtYXJ0IiwgewoJZXh0ZW5kIDogcXgudWku
dGFibGUubW9kZWwuU2ltcGxlLAoKCS8vIE1peGluczoKCWluY2x1ZGUgOiBxeC51aS50YWJsZS5t
b2RlbC5NU21hcnRVbml0VGVzdHMsCS8vIHVuaXQgdGVzdGluZyBjb2RlCgoJLyoqCgkgKiAKCSAq
IENvbnN0cnVjdHMgYSBuZXcgU21hcnQgdGFibGUgbW9kZWwuCgkgKi8KCWNvbnN0cnVjdDogZnVu
Y3Rpb24oKSB7CgkgICAgdGhpcy5iYXNlKGFyZ3VtZW50cyk7CgoJICAgIC8vIGRlYnVnZ2luZwoJ
ICAgIHRoaXMuX19fZGVidWcgPSBmYWxzZTsKCgkgICAgLyoKCSAgICAgKiBXZSBtYWludGFpbiBt
dWx0aXBsZSBiYWNraW5nIHN0b3JlIGNvcGllcywgb3IgInZpZXdzIiBvZiB0aGUgYXJyYXkuIEVh
Y2ggY2FuIGJlCgkgICAgICogZmlsdGVyZWQgYnkgYW4gYXJiaXRyYXJ5IHNldCBvZiBmaWx0ZXJz
LiBXZSBrZWVwIHRoZW0gY29uc2lzdGVudCB3aXRoIGVhY2ggb3RoZXIgd2l0aAoJICAgICAqIHJl
c3BlY3QgdG8gcm93IGFkZGl0aW9uLCByb3cgcmVtb3ZhbCwgYW5kIHNvcnRpbmc7IHRoaXMgYWxs
b3dzIHVzIHRvIHN3aXRjaCBiZXR3ZWVuCgkgICAgICogZGlmZmVyZW50IHZpZXdzIHdpdGhvdXQg
cmUtc29ydGluZy4gVGhlIHN1cGVyY2xhc3MgKHF4LnVpLnRhYmxlLm1vZGVsLlNpbXBsZSkgd2ls
bAoJICAgICAqIGFsd2F5cyBzZWUgdGhlIGN1cnJlbnRseS1zZWxlY3RlZCB2aWV3IGFzIHRoaXMu
X19yb3dBcnIuCgkgICAgICoKCSAgICAgKiBCeSBkZWZhdWx0LCB0aGVyZSBpcyBhIHNpbmdsZSBi
YWNraW5nIHN0b3JlIGFycmF5IHN0b3JlZCBpbiBzbG90IHplcm8uIFZpZXcgemVybyBpcwoJICAg
ICAqIGJ5IGRlZmluaXRpb24gYWx3YXlzIHVuZmlsdGVyZWQsIHNvIGlmIHlvdSB3YW50IGEgZmls
dGVyZWQgdmlldywgeW91IGhhdmUgdG8KCSAgICAgKiBleHBsaWNpdGx5IGFkZCBvbmUuCgkgICAg
ICovCgkgICAgdGhpcy5fX3ZpZXdzID0gMDsKCSAgICB0aGlzLl9fYmFja2luZ3N0b3JlID0gW107
CgkgICAgdGhpcy5fX2ZpbHRlcnMgPSBbXTsKCSAgICB0aGlzLl9fY29uanVuY3Rpb25zID0gW107
CgoJICAgIC8qCgkgICAgICogVGhlICJhc3NvY2lhdGlvbiBtYXBzIiBoZWxwIHVzIGZpbmQgcm93
cyBpbiB0aGUgZGlmZmVyZW50IHZpZXdzLiBGb3IgZWFjaCByb3cgaW4gZWFjaAoJICAgICAqIHZp
ZXcsIHdlIHN0b3JlIGFuIGVudHJ5IGluIHRoZSBjb3JyZXNwb25kaW5nIHJvdyBhc3NvY2lhdGlv
biBtYXAuIFRoZSBrZXlzIGluIHRoZSByb3cKCSAgICAgKiBhc3NvY2lhdGlvbiBtYXBzIGFyZSB1
bmlxdWUgcm93IElEcyB3aGljaCB3ZSBnZW5lcmF0ZSB3aGVuIHJvd3MgYXJlIGFkZGVkIHRvIHRo
ZQoJICAgICAqIG1vZGVsLiBJZiBhIHJvdyBkb2VzIG5vdCBhcHBlYXIgaW4gYSBwYXJ0aWN1bGFy
IGJhY2tpbmcgc3RvcmUgYXJyYXksIHRoZW4gaXRzIGtleQoJICAgICAqIHdpbGwgbWFwIHRvIHVu
ZGVmaW5lZC4KCSAgICAgKgoJICAgICAqIFRoZSBtYWluIHJlYXNvbiB3ZSBuZWVkIHRoZSBhc3Nv
Y2lhdGlvbiBtYXBzIGlzIHNvIHRoYXQgd2hlbiB3ZSByZW1vdmUgYSByb3cgd2UgY2FuCgkgICAg
ICogZmluZCBpbnN0YW5jZXMgb2YgdGhhdCByb3cgaW4gYWxsIHZpZXdzIHdpdGhvdXQgc2VhcmNo
aW5nLgoJICAgICAqLwoJICAgIHRoaXMuX19hc3NvYyA9IFtdOwoKCSAgICAvKgoJICAgICAqIElu
ZGljZXMgYXJlIGxpa2UgYXNzb2NpYXRpb24gbWFwcywgZXhjZXB0IHRoYXQgdGhlIGtleXMgYXJl
IHZhbHVlcyBzdG9yZWQgaW4gdGhlIHJvd3MKCSAgICAgKiB0aGVtc2VsdmVzLCBpbiBhIHBhcnRp
Y3VsYXIgY29sdW1uLiBUaGlzIGdpdmVzIHVzZXJzIHRoZSBhYmlsaXR5IHRvIHF1aWNrbHkgZmlu
ZAoJICAgICAqIGl0ZW1zIGZyb20gY29sdW1uIHZhbHVlcy4gQW55IGNvbHVtbiBjYW4gYmUgdXNl
ZCBhcyBhbiBpbmRleCwgYnV0IGl0IGlzIHRoZSB1c2VyJ3MKCSAgICAgKiByZXNwb25zaWJpbGl0
eSB0byBlbnN1cmUgdGhhdCBldmVyeSByb3cgaGFzIGEgdW5pcXVlIHZhbHVlIGZvciB0aGlzIGNv
bHVtbi4KCSAgICAgKiAKCSAgICAgKiBJZiBkZWZpbmVkLCB0aGlzLl9faW5kaWNlc1tOXSB3aWxs
IGJlIGFuIGFycmF5IG9mIGhhc2ggdGFibGVzIC0tIG9uZSBoYXNoIHRhYmxlIGZvcgoJICAgICAq
IGVhY2ggdmlldyAtLSBtYXBwaW5nIHZhbHVlcyBmcm9tIGNvbHVtbiBOIHRvIHJvdyBudW1iZXJz
IGluIHRoYXQgdmlldy4KCSAgICAgKi8KCSAgICB0aGlzLl9faW5kaWNlcyA9IHt9OwoKCSAgICAv
KgoJICAgICAqIFNldCB1cCB2aWV3IHplcm86IHVuZmlsdGVyZWQuCgkgICAgICovCgkgICAgdGhp
cy5hZGRWaWV3KCk7CgkgICAgdGhpcy5fYXBwbHlWaWV3KDAsIDAsIC8qZmlyZUV2ZW50OiovIGZh
bHNlLCAvKmZvcmNlOiovIHRydWUpOwoJfSwKCglwcm9wZXJ0aWVzOiB7CgkgICAgLyoqCgkgICAg
ICogV2hpY2ggdGFibGUgdmlldyBzaG91bGQgYmUgYWN0aXZlLgoJICAgICAqLwoJICAgIHZpZXc6
IHsKCQlpbml0OiAwLAoJCWNoZWNrOiAiSW50ZWdlciIsCgkJYXBwbHk6ICJfYXBwbHlWaWV3IiwK
CQlldmVudDogImNoYW5nZVZpZXciCgkJfQoJfSwKCgkvLyBNRU1CRVJTCgltZW1iZXJzOiB7Cgkg
ICAgX19maWx0ZXJzOiBudWxsLAoJICAgIF9fYXNzb2M6IG51bGwsCgkgICAgX19pbmRpY2VzOiBu
dWxsLAoJICAgIF9fY29uanVuY3Rpb25zOiBudWxsLAoJICAgIF9fYmFja2luZ3N0b3JlIDogbnVs
bCwKCgkgICAgLyoKCSAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJICAgICAgUFJPUEVSVFkgQVBQ
TFkgUk9VVElORVMKCSAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJICAgICovCgoJICAgIC8vIHZp
ZXcgcHJvcGVydHkgYXBwbHkKCSAgICBfYXBwbHlWaWV3OiBmdW5jdGlvbih2aWV3LCBvbGQsIGZp
cmVFdmVudCwgZm9yY2UpIHsKCQkvL3RoaXMuX19kZWJ1ZygiX2FwcGx5VmlldyBjYWxsZWQ6IHZp
ZXcgPSAiICsgdmlldyk7CgoJCWlmIChmb3JjZSA9PSB1bmRlZmluZWQpIGZvcmNlID0gZmFsc2U7
CgkJaWYgKGZpcmVFdmVudCA9PSB1bmRlZmluZWQpIGZpcmVFdmVudCA9IHRydWU7CgoJCWlmICh2
aWV3ID09IG9sZCAmJiAhZm9yY2UpCgkJICAgIHJldHVybjsKCgkJaWYgKHZpZXcgPj0gdGhpcy5f
X3ZpZXdzKQoJCSAgICB0aHJvdyBuZXcgRXJyb3IoIl9hcHBseVZpZXc6IHZpZXcgb3V0IG9mIGJv
dW5kczogIiArIHZpZXcgKyAiICgwLi4iICsgKHRoaXMuX192aWV3cyAtIDEpICsgIikiKTsKCgkJ
Ly8gU2VsZWN0IHRoZSBiYWNraW5nIHN0b3JlIGFycmF5IGJhc2VkIG9uIHRoZSBuZXcgcHJvcGVy
dHkgdmFsdWUuCgkJdGhpcy5fX3Jvd0FyciA9IHRoaXMuZ2V0Um93QXJyYXkodmlldyk7CgkJLy90
aGlzLl9fZGVidWcoIl9hcHBseVZpZXc6IG5ldyB2aWV3IGhhcyAiICsgdGhpcy5fX3Jvd0Fyci5s
ZW5ndGggKyAiIHJvd3MiKTsKCgkJLy8KCQkvLyBJbmZvcm0gdGhlIGxpc3RlbmVycyB0aGF0IHRo
ZSBlbnRpcmUgdGFibGUgZGF0YSBoYXMgY2hhbmdlZC4KCQkvLwoJCWlmIChmaXJlRXZlbnQpIHsK
CQkgICAgaWYgKHRoaXMuaGFzTGlzdGVuZXIocXgudWkudGFibGUuSVRhYmxlTW9kZWwuRVZFTlRf
VFlQRV9EQVRBX0NIQU5HRUQpKSB7CgkJCXZhciBkYXRhID0gewoJCQkgICAgZmlyc3RSb3cgICAg
OiAwLAoJCQkgICAgbGFzdFJvdyAgICAgOiB0aGlzLmdldFJvd0FycmF5KHZpZXcpIC0gMSwKCQkJ
ICAgIGZpcnN0Q29sdW1uIDogMCwKCQkJICAgIGxhc3RDb2x1bW4gIDogdGhpcy5nZXRDb2x1bW5D
b3VudCgpCgkJCX07CgkJCXRoaXMuZmlyZURhdGFFdmVudChxeC51aS50YWJsZS5JVGFibGVNb2Rl
bC5FVkVOVF9UWVBFX0RBVEFfQ0hBTkdFRCwgZGF0YSk7CgkJICAgIH0KCQl9CgkgICAgfSwKCgkg
ICAgLy8KCSAgICAvLyBWSUVXUwoJICAgIC8vCgoJICAgIC8qKgoJICAgICAqIAoJICAgICAqIEFk
ZHMgYSBuZXcgdmlldyB0byB0aGUgbW9kZWwuIEEgdmlldyBpcyBzdWJzZXQgb2YgdGhlIG1vZGVs
IGZpbHRlcmVkIGFnYWluc3QgYSBzZXQgb2YKCSAgICAgKiBjcml0ZXJpYS4gVGhlc2UgY3JpdGVy
aWEgYXJlIGV4cHJlc3NlZCBhcyBmaWx0ZXJzIC0tIGZ1bmN0aW9ucyB0aGF0IGFjY2VwdCBhIHJv
dyBkYXRhCgkgICAgICogYXJyYXkgYW5kIHJldHVybiB0cnVlIChmaWx0ZXIgdGhlIHJvdyBvdXQp
IG9yIGZhbHNlIChhbGxvdyB0aGUgcm93KS4gTXVsdGlwbGUgZmlsdGVyCgkgICAgICogZnVuY3Rp
b25zIGNhbiBiZSBjb21iaW5lZCB1bmRlciA8Y29kZT5hbmQ8L2NvZGU+IG9yIDxjb2RlPm9yPC9j
b2RlPiBvcGVyYXRvcnMuCgkgICAgICoKCSAgICAgKiBAcGFyYW0gZmlsdGVycyB7QXJyYXl9IEFy
cmF5IG9mIGZpbHRlciBmdW5jdGlvbnMuIElmIHlvdSBoYXZlIG9ubHkgb25lIGZ1bmN0aW9uLCB5
b3UKCSAgICAgKiBjYW4gcGFzcyBpdCB3aXRob3V0IHdyYXBwaW5nIGl0IGluIGFuIGFycmF5LgoJ
ICAgICAqIEBwYXJhbSBvYmoge09iamVjdCA/IG51bGx9IFRoZSBvYmplY3QgdG8gdXNlIGFzIDxj
b2RlPnRoaXM8L2NvZGU+IHdoZW4gY2FsbGluZyBlYWNoCgkgICAgICogZmlsdGVyIGZ1bmN0aW9u
LgoJICAgICAqIEBwYXJhbSBjb25qdW5jdGlvbiB7U3RyaW5nID8gJ2FuZCd9IEhvdyB0byBjb25q
b2luIHRoZSBmaWx0ZXIgZnVuY3Rpb25zIHdoZW4gdGhlcmUgaXMKCSAgICAgKiBtb3JlIHRoYW4g
b25lOiAnYW5kJyBvciAnb3InLgoJICAgICAqIEByZXR1cm4ge0ludGVnZXJ9IHRoZSB2aWV3IG51
bWJlciAoYWx3YXlzIG9uZSBncmVhdGVyIHRoYW4gdGhlIGxhc3QgdmlldyBudW1iZXIpCgkgICAg
ICoKCSAgICAgKiBAbm90ZSBFYWNoIGZpbHRlciBmdW5jdGlvbiBtdXN0IGFjY2VwdCBhIHJvdyBk
YXRhIGFycmF5IGFuZCByZXR1cm4gdHJ1ZSBpZiB0aGUgcm93CgkgICAgICogc2hvdWxkIGhpZGRl
biBmb3IgdGhlIHZpZXcgb3IgZmFsc2UgaWYgaXQgc2hvdWxkIGJlIHZpc2libGUuCgkgICAgICov
CgkgICAgYWRkVmlldzogZnVuY3Rpb24oZmlsdGVycywgb2JqLCBjb25qdW5jdGlvbikgewoJCXRo
aXMuX19iYWNraW5nc3RvcmUucHVzaChbXSk7CgkJdGhpcy5fX2ZpbHRlcnMucHVzaChbXSk7CgkJ
dGhpcy5fX2Nvbmp1bmN0aW9ucy5wdXNoKCdhbmQnKTsKCQl0aGlzLl9fYXNzb2MucHVzaCh7fSk7
CgkJZm9yICh2YXIgY29sdW1uIGluIHRoaXMuX19pbmRpY2VzKQoJCSAgICB0aGlzLl9faW5kaWNl
c1tjb2x1bW5dLnB1c2goe30pOwoJCXZhciB2aWV3ID0gdGhpcy5fX3ZpZXdzKys7CgkJdGhpcy5z
ZXRGaWx0ZXJzKHZpZXcsIGZpbHRlcnMsIG9iaiwgY29uanVuY3Rpb24pOwoJCXJldHVybiB2aWV3
OwoJICAgIH0sCgoJICAgIC8qKgoJICAgICAqIAoJICAgICAqIFNldCB0aGUgZmlsdGVycyBmb3Ig
YSBwYXJ0aWN1bGFyIHZpZXcuIFRoaXMgcmVtb3ZlcyBhbnkgZmlsdGVycyB0aGF0IG1heSBoYXZl
IGJlZW4KCSAgICAgKiBwcmV2aW91c2x5IHNldCBmb3IgdGhlIHZpZXcsIGFuZCB3aWxsIGNhdXNl
IHRoZSBmaWx0ZXJzIHRvIGJlIHJlLWV2YWx1YXRlZCBmb3IgZXZlcnkKCSAgICAgKiByb3cgaW4g
dGhlIG1vZGVsLgoJICAgICAqCgkgICAgICogQHBhcmFtIHZpZXcge0ludGVnZXJ9IFRoZSB2aWV3
IHRvIG1vZGlmeS4KCSAgICAgKiBAcGFyYW0gZmlsdGVycyB7QXJyYXkgPyBbXX0gQXJyYXkgb2Yg
ZmlsdGVyIGZ1bmN0aW9ucy4gSWYgeW91IGhhdmUgb25seSBvbmUgZnVuY3Rpb24sIHlvdQoJICAg
ICAqIGNhbiBwYXNzIGl0IHdpdGhvdXQgd3JhcHBpbmcgaXQgaW4gYW4gYXJyYXkuCgkgICAgICog
QHBhcmFtIG9iaiB7T2JqZWN0ID8gbnVsbH0gVGhlIG9iamVjdCB0byB1c2UgYXMgPGNvZGU+dGhp
czwvY29kZT4gd2hlbiBjYWxsaW5nIGVhY2ggZmlsdGVyLgoJICAgICAqIEBwYXJhbSBjb25qdW5j
dGlvbiB7U3RyaW5nID8gJ2FuZCd9IEhvdyB0byBjb25qb2luIHRoZSBmaWx0ZXIgZnVuY3Rpb25z
OiAnYW5kJyBvciAnb3InLgoJICAgICAqIEByZXR1cm4ge0ludGVnZXJ9IHRoZSB2aWV3IG51bWJl
ciAoYWx3YXlzIG9uZSBncmVhdGVyIHRoYW4gdGhlIGxhc3QgdmlldyBudW1iZXIpCgkgICAgICoK
CSAgICAgKiBAbm90ZSBWaWV3IHplcm8gaXMgYWx3YXlzIHVuZmlsdGVyZWQsIHNvIHlvdSBjYW5u
b3QgbW9kaWZ5IGl0cyBmaWx0ZXJzLgoJICAgICAqLwoJICAgIHNldEZpbHRlcnM6IGZ1bmN0aW9u
KHZpZXcsIGZpbHRlcnMsIG9iaiwgY29uanVuY3Rpb24pIHsKCQlpZiAodmlldykgewoJCSAgICBp
ZiAoZmlsdGVycyA9PSB1bmRlZmluZWQpCgkJCWZpbHRlcnMgPSBbIF07CgkJICAgIGVsc2UgaWYg
KHR5cGVvZihmaWx0ZXJzKSA9PSAnZnVuY3Rpb24nKQoJCQlmaWx0ZXJzID0gWyBmaWx0ZXJzIF07
CgoJCSAgICAvLwoJCSAgICAvLyBXcmFwIGVhY2ggZmlsdGVyOiBjcmVhdGUgYSBjbG9zdXJlIHRo
YXQgcmV0dXJucyBhIG5ldyBmdW5jdGlvbiB0aGF0IGNhbGxzIHRoZQoJCSAgICAvLyBmaWx0ZXIg
YXMgYSBtZXRob2Qgb2Ygb2JqLgoJCSAgICAvLwoJCSAgICB2YXIgd3JhcHBlZGZpbHRlcnMgPSBb
XTsKCQkgICAgaWYgKG9iaiAhPSB1bmRlZmluZWQgJiYgb2JqICE9IG51bGwpIHsKCQkJZm9yICh2
YXIgaSA9IDA7IGkgPCBmaWx0ZXJzLmxlbmd0aDsgaSsrKQoJCQkgICAgd3JhcHBlZGZpbHRlcnMu
cHVzaChmdW5jdGlvbihfdGhpcywgZmlsdGVyKSB7IAoJCQkJICAgIHJldHVybiBmdW5jdGlvbihS
KSB7IAoJCQkJCXJldHVybiBmaWx0ZXIuY2FsbChfdGhpcywgUik7IAoJCQkJICAgIH0gCgkJCQl9
KG9iaiwgZmlsdGVyc1tpXSkpOwoJCSAgICB9CgkJICAgIGVsc2UKCQkJd3JhcHBlZGZpbHRlcnMg
PSBmaWx0ZXJzOwoKCQkgICAgdGhpcy5fX2ZpbHRlcnNbdmlld10gPSB3cmFwcGVkZmlsdGVyczsK
CQkgICAgaWYgKGNvbmp1bmN0aW9uICE9PSAnYW5kJyAmJiBjb25qdW5jdGlvbiAhPT0gJ29yJykK
CQkJY29uanVuZWN0aW9uID0gJ2FuZCc7CgkJICAgIHRoaXMuX19jb25qdW5jdGlvbnNbdmlld10g
PSBjb25qdW5jdGlvbjsKCQkgICAgdGhpcy5fX2V2YWxGaWx0ZXJzKHZpZXcpOwoJCX0KCSAgICB9
LAoKCSAgICAvKioKCSAgICAgKiAKCSAgICAgKiBSZXNldHMgdGhlIGZpbHRlcnMgZm9yIGEgcGFy
dGljdWxhciB2aWV3LiBUaGlzIHJldmVydHMgdGhlIHZpZXcgdG8gYW4gdW5maWx0ZXJlZCBzdGF0
ZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB2aWV3IHtJbnRlZ2VyfSBUaGUgdmlldyB0byBtb2Rp
ZnkuCgkgICAgICogQHJldHVybiB7dm9pZH0KCSAgICAgKi8KCSAgICByZXNldEZpbHRlcnM6IGZ1
bmN0aW9uKHZpZXcpIHsgCgkJdGhpcy5zZXRGaWx0ZXJzKHZpZXcpOyAKCSAgICB9LAoKCSAgICAv
KioKCSAgICAgKiAKCSAgICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2Ygdmlld3MgaW4gdGhlIG1v
ZGVsLgoJICAgICAqCgkgICAgICogQHJldHVybiB7SW50ZWdlcn0gVGhlIG51bWJlciBvZiB2aWV3
cy4KCSAgICAgKi8KCSAgICBnZXRWaWV3Q291bnQ6IGZ1bmN0aW9uICgpIHsKCQlyZXR1cm4gdGhp
cy5fX3ZpZXdzOwoJICAgIH0sCgoJICAgIC8vCgkgICAgLy8gSU5ESUNFUwoJICAgIC8vCgoJICAg
IC8qKgoJICAgICAqIAoJICAgICAqIEFkZHMgYW4gaW5kZXggdG8gdGhlIHRhYmxlIG1vZGVsLCBr
ZXllZCB0byB0aGUgc3BlY2lmaWVkIGNvbHVtbi4gSW5kaWNlcyBhcmUgaGFzaCBtYXBzCgkgICAg
ICogd2hlcmUgdGhlIGtleXMgYXJlIHRob3NlIHZhbHVlcyBzdG9yZWQgaW4gYSBwYXJ0aWN1bGFy
IG1vZGVsIGNvbHVtbiwgYW5kIHdoZXJlIHRoZQoJICAgICAqIHZhbHVlcyBhcmUgcm93IGluZGlj
ZXMgaW4gYSBnaXZlbiB2aWV3LgoJICAgICAqCgkgICAgICogVGhpcyBnaXZlcyB5b3UgdGhlIGFi
aWxpdHkgdG8gaW1tZWRpYXRlbHkgZmluZCBhIHJvdyBpbiBhIHBhcnRpY3VsYXIgdmlldyBmcm9t
IHRoYXQKCSAgICAgKiByb3cncyBpbmRleCBjb2x1bW4gdmFsdWUuIEFueSBjb2x1bW4gY2FuIGJl
IHVzZWQgYXMgYW4gaW5kZXgsIGJ1dCB5b3UgbXVzdCBlbnN1cmUKCSAgICAgKiB0aGF0IDxlbT5l
dmVyeSByb3cgaGFzIGEgdW5pcXVlIHZhbHVlIGZvciB0aGUgY29sdW1uIHdoZW4gY29udmVydGVk
IHRvIHN0cmluZwoJICAgICAqIGZvcm08L2VtPi4gKEluIG90aGVyIHdvcmRzLCBtYWtlIHN1cmUg
dGhhdCB0aGUgY29sdW1uIHlvdSB1c2UgYXMgYW4gaW5kZXggY29udGFpbnMKCSAgICAgKiB2YWx1
ZXMgdGhhdCB1bmlxdWVseSBpZGVudGlmeSByb3dzLCBhbmQgdGhhdCB0aGUgdmFsdWVzIGFyZSBh
Y2NlcHRhYmxlIGtleXMgZm9yCgkgICAgICogSmF2YVNjcmlwdCBhc3NvY2lhdGl2ZSBhcnJheXMu
KQoJICAgICAqCgkgICAgICogQHBhcmFtIGNvbHVtbkluZGV4IHtJbnRlZ2VyfSB0aGUgY29sdW1u
IHdob3NlIHZhbHVlcyB3aWxsIGJlIHRoZSBpbmRleCBrZXlzCgkgICAgICoKCSAgICAgKiBAbm90
ZSBUaGUgaW5kZXggd2lsbCBiZSBtYWludGFpbmVkIGZvciBhbGwgdmlld3MuCgkgICAgICovCgkg
ICAgYWRkSW5kZXg6IGZ1bmN0aW9uKGNvbHVtbkluZGV4KSB7CgkJLy8KCQkvLyBDb25zdHJ1Y3Qg
YSBuZXcgYXJyYXkgb2YgaGFzaCB0YWJsZXMsIG9uZSBmb3IgZWFjaCB2aWV3LgoJCS8vCgkJdmFy
IEEgPSBbXTsKCQlmb3IgKHZhciB2ID0gMDsgdiA8IHRoaXMuX192aWV3czsgdisrKQoJCSAgICAg
QS5wdXNoKHsgfSk7CgkJdGhpcy5fX2luZGljZXNbY29sdW1uSW5kZXhdID0gQTsKCgkJLy8gTm93
IGdlbmVyYXRlIHRoZSBuZXcgaW5kZXggZnJvbSBzY3JhdGNoCgkJdGhpcy5fX3VwZGF0ZUFzc29j
aWF0aW9uTWFwcygvKnZpZXc6Ki8gdW5kZWZpbmVkLCAvKmluZGV4OiovIGNvbHVtbkluZGV4KTsK
CSAgICB9LAoKCSAgICAvKioKCSAgICAgKiAKCSAgICAgKiBMb2NhdGVzIGEgcGFydGljdWxhciBy
b3cgd2l0aGluIGEgdmlldyB1c2luZyB0aGUgaW5kZXggZm9yIGNvbHVtbgoJICAgICAqIDxjb2Rl
PmNvbHVtbkluZGV4PC9jb2RlPi4gIFJldHVybnMgdGhlIHJvdyBudW1iZXIgdGhlIHJvdyBhcHBl
YXJzIGluLCBvciB1bmRlZmluZWQgaWYKCSAgICAgKiB0aGUgcm93IGRvZXMgbm90IGFwcGVhciBp
biB0aGUgc3BlY2lmaWVkIHZpZXcuCgkgICAgICoKCSAgICAgKiBAcGFyYW0gY29sdW1uSW5kZXgg
e0ludGVnZXJ9IHRoZSBjb2x1bW4gd2hvc2UgdmFsdWVzIHdpbGwgYmUgdGhlIGluZGV4IGtleXMK
CSAgICAgKiBAcGFyYW0gdmFsdWUge3Zhcn0gdGhlIHZhbHVlIGluIHRoZSBpbmRleGVkIGNvbHVt
biAoaS5lLiwgdGhlIHJvdydzIHVuaXF1ZSBpZGVudGlmaWVyKQoJICAgICAqLwoJICAgIGxvY2F0
ZTogZnVuY3Rpb24oY29sdW1uSW5kZXgsIHZhbHVlLCB2aWV3KSB7CgkJaWYgKHZpZXcgPT0gdW5k
ZWZpbmVkKSB2aWV3ID0gdGhpcy5nZXRWaWV3KCk7CgkJCgkJLy8KCQkvLyBOb3RlIHRoYXQgd2Ug
aGF2ZSB0byBleHBsaWNpdGx5IGNvbnZlcnQgdGhlIHZhbHVlIHRvIGEgc3RyaW5nIHRvIGJlIHN1
cmUgdGhhdCwKCQkvLyBlLmcuLCBmbG9hdGluZyBwb2ludCBudW1iZXJzIHdpbGwgbm90IHJvdW5k
LgoJCS8vCgkJcmV0dXJuIHRoaXMuX19pbmRpY2VzW2NvbHVtbkluZGV4XVt2aWV3XVsiIiArIHZh
bHVlXTsKCSAgICB9LAoKCSAgICAvLwoJICAgIC8vIFJPVyBNQU5JUFVMQVRJT04gTUVUSE9EUwoJ
ICAgIC8vCgoJICAgIC8qKgoJICAgICAqIAoJICAgICAqIFJldHVybnMgYWxsIHRoZSBkYXRhIGZv
ciB0aGUgdGFibGUgYXMgYW4gYXJyYXkgb2Ygcm93cywgd2hlcmUgZWFjaCByb3cgaXMgaXRzZWxm
IGFuCgkgICAgICogYXJyYXkuCgkgICAgICoKCSAgICAgKiBAcGFyYW0gdmlldyB7SW50ZWdlciA/
fSBXaGljaCBtb2RlbCB2aWV3IHRoaXMgb3BlcmF0aW9uIHNob3VsZCBhcHBseSB0by4gSWYgdGhp
cwoJICAgICAqIHBhcmFtZXRlciBpcyBvbWl0dGVkLCBpdCBkZWZhdWx0cyB0byB0aGUgdmFsdWUg
b2YgdGhlIHtAbGluayAjdmlld30gcHJvcGVydHkuCgkgICAgICoKCSAgICAgKiBAcmV0dXJuIHtB
cnJheX0gdGhlIHJvdyBkYXRhCgkgICAgICoKCSAgICAgKiBAbm90ZSBEbyBub3QgbW9kaWZ5IHRo
ZSBkYXRhIHZpYSB0aGUgcmV0dXJuZWQgYXJyYXkhIFlvdSBzaG91bGQgY29uc2lkZXIgaXQKCSAg
ICAgKiByZWFkLW9ubHkuCgkgICAgICovCgkgICAgZ2V0Um93QXJyYXk6IGZ1bmN0aW9uICh2aWV3
KSB7CgkJaWYgKHZpZXcgPT0gdW5kZWZpbmVkKSB2aWV3ID0gdGhpcy5nZXRWaWV3KCk7CgkJcmV0
dXJuIHRoaXMuX19iYWNraW5nc3RvcmVbdmlld107CgkgICAgfSwKCgkgICAgLy8gSW50ZXJuYWwg
dXNlIG9ubHk6CgkgICAgX19zZXRSb3dBcnJheTogZnVuY3Rpb24gKHZpZXcsIEEpIHsKCQl2YXIg
bmVlZF9yZXNlbGVjdCA9IGZhbHNlOwoKCQkvLwoJCS8vIElmIHdlJ3JlIGNoYW5naW5nIHRoZSBi
YXNlIHBvaW50ZXIgdG8gdGhlIGN1cnJlbnQgdmlldywgd2UgbmVlZCB0byBleHBsaWNsdGx5CgkJ
Ly8gcmUtc2VsZWN0IHRoZSB2aWV3IGFmdGVyIHdlJ3ZlIGNoYW5nZWQgaXQgLS0gb3RoZXJ3aXNl
IHRoaXMuX19yb3dBcnIgd2lsbCBiZQoJCS8vIHN0YWxlLgoJCS8vCgkJaWYgKHRoaXMuX19yb3dB
cnIgPT0gdGhpcy5nZXRSb3dBcnJheSgpKQoJCSAgICBuZWVkX3Jlc2VsZWN0ID0gdHJ1ZTsKCgkJ
dGhpcy5fX2JhY2tpbmdzdG9yZVt2aWV3XSA9IEE7CgoJCWlmIChuZWVkX3Jlc2VsZWN0KSB7CgkJ
ICAgIC8vCgkJICAgIC8vIFJlLXNlbGVjdCB0aGUgY3VycmVudCB2aWV3LiBUaGlzIHdpbGwgbm90
aWZ5IGxpc3RlbmVycyB3aXRoIGEgREFUQV9DSEFOR0VEIGV2ZW50CgkJICAgIC8vIGFzIHdlbGwu
CgkJICAgIC8vCgkJICAgIHRoaXMuX2FwcGx5Vmlldyh2aWV3LCB2aWV3LCAvKmZpcmVFdmVudDoq
LyB0cnVlLCAvKmZvcmNlOiovIHRydWUpOwoJCX0KCSAgICB9LAoKCSAgICAvLyBJbnRlcm5hbCB1
c2Ugb25seToKCSAgICBfX2dldEFzc29jOiBmdW5jdGlvbiAodmlldykgewoJCWlmICh2aWV3ID09
IHVuZGVmaW5lZCkgdmlldyA9IHRoaXMuZ2V0VmlldygpOwoJCXJldHVybiB0aGlzLl9fYXNzb2Nb
dmlld107CgkgICAgfSwKCgkgICAgLy8gSW50ZXJuYWwgdXNlIG9ubHk6CgkgICAgX19nZXRGaWx0
ZXJzOiBmdW5jdGlvbih2aWV3KSB7CgkJaWYgKHZpZXcgPT0gdW5kZWZpbmVkKSB2aWV3ID0gdGhp
cy5nZXRWaWV3KCk7CgkJcmV0dXJuIHRoaXMuX19maWx0ZXJzW3ZpZXddOwoJICAgIH0sCgoJICAg
IC8vIEludGVybmFsIHVzZSBvbmx5OgoJICAgIF9fZ2V0Q29uanVuY3Rpb246IGZ1bmN0aW9uKHZp
ZXcpIHsKCQlpZiAodmlldyA9PSB1bmRlZmluZWQpIHZpZXcgPSB0aGlzLmdldFZpZXcoKTsKCQly
ZXR1cm4gdGhpcy5fX2Nvbmp1bmN0aW9uc1t2aWV3XTsKCSAgICB9LAoKCSAgICAvKioKCSAgICAg
KgoJICAgICAqIFJldHVybnMgdGhlIGRhdGEgb2Ygb25lIHJvdyBmcm9tIHRoZSBzcGVjaWZpZWQg
dmlldy4KCSAgICAgKgoJICAgICAqIEBwYXJhbSByb3dJbmRleCB7SW50ZWdlcn0gdGhlIGluZGV4
IG9mIHRoZSByb3cgaW4gdGhlIHNwZWNpZmllZCB2aWV3LgoJICAgICAqIEBwYXJhbSB2aWV3IHtJ
bnRlZ2VyID99IFdoaWNoIG1vZGVsIHZpZXcgdGhpcyBvcGVyYXRpb24gc2hvdWxkIGFwcGx5IHRv
LiBJZiB0aGlzCgkgICAgICogcGFyYW1ldGVyIGlzIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIHRo
ZSB2YWx1ZSBvZiB0aGUge0BsaW5rICN2aWV3fSBwcm9wZXJ0eS4KCSAgICAgKiBAcmV0dXJuIHtB
cnJheX0gdGhlIHJvdyBkYXRhIGFzIGFuIGFycmF5CgkgICAgICogQHBhcmFtIGNvcHkge0Jvb2xl
YW4gPyB0cnVlfSBXaGV0aGVyIG9yIG5vdCB0byBtYWtlIGEgbmV3IGNvcHkgb2YgdGhlIHJvdy4g
SWYKCSAgICAgKiB0aGlzIGlzIGZhbHNlLCB0aGVuIGEgcmVmZXJlbmNlIHRvIHRoZSBhY3R1YWwg
cm93IHdpbGwgYmUgcmV0dXJuZWQ7IG90aGVyd2lzZQoJICAgICAqIGEgcmVmZXJlbmNlIHRvIGEg
bmV3IGNvcHkgb2YgdGhlIGRhdGEgd2lsbCBiZSByZXR1cm5lZC4KCSAgICAgKgoJICAgICAqIEBu
b3RlIERvIG5vdCBtb2RpZnkgdGhlIGRhdGEgdmlhIHRoZSByZXR1cm5lZCBhcnJheSB1bmxlc3Mg
PGNvZGU+Y29weTwvY29kZT4gaXMgdHJ1ZSEKCSAgICAgKiBZb3Ugc2hvdWxkIGNvbnNpZGVyIGl0
IHJlYWQtb25seS4gVXNlIHtAbGluayAjc2V0VmFsdWV9IHRvIG1vZGlmeSB2YWx1ZXMuCgkgICAg
ICovCgkgICAgZ2V0Um93RGF0YTogZnVuY3Rpb24ocm93SW5kZXgsIHZpZXcsIGNvcHkpIHsKCQlp
ZiAodmlldyA9PSB1bmRlZmluZWQpIHZpZXcgPSB0aGlzLmdldFZpZXcoKTsKCQlpZiAoY29weSA9
PSB1bmRlZmluZWQpIGNvcHkgPSB0cnVlOwoJCXZhciByb3dzID0gdGhpcy5nZXRSb3dDb3VudCh2
aWV3KTsKCQlpZiAocm93SW5kZXggPCAwIHx8IHJvd0luZGV4ID49IHJvd3MpCgkJICAgIHRocm93
IG5ldyBFcnJvcigicm93SW5kZXggb3V0IG9mIGJvdW5kczogIiArIHJvd0luZGV4ICsgIiAoMC4u
IiArIHJvd3MgKyAiKSIpOwoJCXJldHVybiBjb3B5ID8gdGhpcy5nZXRSb3dBcnJheSh2aWV3KVty
b3dJbmRleF0uc2xpY2UoKSA6IHRoaXMuZ2V0Um93QXJyYXkodmlldylbcm93SW5kZXhdOwoJICAg
IH0sCgoJICAgIC8qKgoJICAgICAqCgkgICAgICogVGhpcyBpcyBqdXN0IGEgc2hvcnRoYW5kIGZv
ciA8Y29kZT5nZXRSb3dEYXRhKHJvd0luZGV4LCB2aWV3LCBmYWxzZSk8L2NvZGU+LgoJICAgICAq
CgkgICAgICogQHBhcmFtIHJvd0luZGV4IHtJbnRlZ2VyfSB0aGUgaW5kZXggb2YgdGhlIHJvdyBp
biB0aGUgc3BlY2lmaWVkIHZpZXcuCgkgICAgICogQHBhcmFtIHZpZXcge0ludGVnZXIgP30gV2hp
Y2ggbW9kZWwgdmlldyB0aGlzIG9wZXJhdGlvbiBzaG91bGQgYXBwbHkgdG8uIElmIHRoaXMKCSAg
ICAgKiBwYXJhbWV0ZXIgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIG9mIHRo
ZSB7QGxpbmsgI3ZpZXd9IHByb3BlcnR5LgoJICAgICAqIEByZXR1cm4ge0FycmF5fSB0aGUgcm93
IGRhdGEgYXMgYW4gYXJyYXkKCSAgICAgKgoJICAgICAqIEBub3RlIERvIG5vdCBtb2RpZnkgdGhl
IGRhdGEgdmlhIHRoZSByZXR1cm5lZCBhcnJheSEgWW91IHNob3VsZCBjb25zaWRlciBpdAoJICAg
ICAqIHJlYWQtb25seS4gVXNlIHtAbGluayAjc2V0VmFsdWV9IHRvIG1vZGlmeSB2YWx1ZXMuCgkg
ICAgICovCgkgICAgZ2V0Um93UmVmZXJlbmNlOiBmdW5jdGlvbihyb3dJbmRleCwgdmlldykgewoJ
CXJldHVybiB0aGlzLmdldFJvd0RhdGEocm93SW5kZXgsIHZpZXcsIC8qY29weToqLyBmYWxzZSk7
CgkgICAgfSwKCgkgICAgLyoqCgkgICAgICogCgkgICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9m
IHJvd3MgaW4gdGhlIHNwZWNpZmllZCB2aWV3LgoJICAgICAqCgkgICAgICogQHBhcmFtIHZpZXcg
e0ludGVnZXIgP30gV2hpY2ggbW9kZWwgdmlldyB0aGlzIG9wZXJhdGlvbiBzaG91bGQgYXBwbHkg
dG8uIElmIHRoaXMKCSAgICAgKiBwYXJhbWV0ZXIgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8g
dGhlIHZhbHVlIG9mIHRoZSB7QGxpbmsgI3ZpZXd9IHByb3BlcnR5LgoJICAgICAqIEByZXR1cm4g
e0ludGVnZXJ9IHRoZSBudW1iZXIgb2Ygcm93cy4KCSAgICAgKi8KCSAgICBnZXRSb3dDb3VudDog
ZnVuY3Rpb24odmlldykgewoJCWlmICh2aWV3ID09IHVuZGVmaW5lZCkgdmlldyA9IHRoaXMuZ2V0
VmlldygpOwoJCXJldHVybiB0aGlzLmdldFJvd0FycmF5KHZpZXcpLmxlbmd0aDsKCSAgICB9LAoK
CSAgICAvKioKCSAgICAgKiAKCSAgICAgKiBSZXR1cm5zIHRoZSB2YWx1ZSBvZiBhIHBhcnRpY3Vs
YXIgY2VsbCAoaW5kaWNhdGVkIGJ5IGNvbHVtbiBhbmQgcm93IGluZGljZXMpIGluIHRoZQoJICAg
ICAqIHNwZWNpZmllZCB2aWV3LgoJICAgICAqCgkgICAgICogQHBhcmFtIGNvbHVtbkluZGV4IHtJ
bnRlZ2VyfSB0aGUgY29sdW1uIGluZGV4LgoJICAgICAqIEBwYXJhbSByb3dJbmRleCB7SW50ZWdl
cn0gdGhlIHJvdyBpbmRleC4KCSAgICAgKiBAcGFyYW0gdmlldyB7SW50ZWdlciA/fSBXaGljaCBt
b2RlbCB2aWV3IHRoaXMgb3BlcmF0aW9uIHNob3VsZCBhcHBseSB0by4gSWYgdGhpcwoJICAgICAq
IHBhcmFtZXRlciBpcyBvbWl0dGVkLCBpdCBkZWZhdWx0cyB0byB0aGUgdmFsdWUgb2YgdGhlIHtA
bGluayAjdmlld30gcHJvcGVydHkuCgkgICAgICogQHJldHVybiB7dmFyfSBUaGUgdmFsdWUgb2Yg
dGhlIGNlbGwuCgkgICAgICogQHNlZSAjZ2V0VmFsdWVCeUlkCgkgICAgICovCgkgICAgZ2V0VmFs
dWU6IGZ1bmN0aW9uKGNvbHVtbkluZGV4LCByb3dJbmRleCwgdmlldykgewoJCWlmICh2aWV3ID09
IHVuZGVmaW5lZCkgdmlldyA9IHRoaXMuZ2V0VmlldygpOwoJCXZhciByb3dzID0gdGhpcy5nZXRS
b3dDb3VudCh2aWV3KTsKCQlpZiAocm93SW5kZXggPCAwIHx8IHJvd0luZGV4ID49IHJvd3MpCgkJ
ICAgIHRocm93IG5ldyBFcnJvcigidGhpcy5fX3Jvd0FyciBvdXQgb2YgYm91bmRzOiAiICsgcm93
SW5kZXggKyAiICgwLi4iICsgcm93cyArICIpIik7CgkJcmV0dXJuIHRoaXMuZ2V0Um93QXJyYXko
dmlldylbcm93SW5kZXhdW2NvbHVtbkluZGV4XTsKCSAgICB9LAoKCSAgICAvKioKCSAgICAgKgoJ
ICAgICAqIFJldHVybnMgdGhlIHZhbHVlIG9mIGEgcGFydGljdWxhciBjZWxsIChpbmRpY2F0ZWQg
YnkgY29sdW1uIElEIGFuZCByb3cgaW5kZXgpIGluCgkgICAgICogdGhlIHNwZWNpZmllZCB2aWV3
LgoJICAgICAqCgkgICAgICogV2hlbmV2ZXIgeW91IGhhdmUgdGhlIGNob2ljZSwgdXNlIHtAbGlu
ayAjZ2V0VmFsdWUoKX0gaW5zdGVhZCwKCSAgICAgKiBiZWNhdXNlIHRoaXMgc2hvdWxkIGJlIGZh
c3Rlci4KCSAgICAgKgoJICAgICAqIEBwYXJhbSBjb2x1bW5JZCB7U3RyaW5nfSB0aGUgSUQgb2Yg
dGhlIGNvbHVtbi4KCSAgICAgKiBAcGFyYW0gcm93SW5kZXgge0ludGVnZXJ9IHRoZSBpbmRleCBv
ZiB0aGUgcm93LgoJICAgICAqIEBwYXJhbSB2aWV3IHtJbnRlZ2VyID99IFdoaWNoIG1vZGVsIHZp
ZXcgdGhpcyBvcGVyYXRpb24gc2hvdWxkIGFwcGx5IHRvLiBJZiB0aGlzCgkgICAgICogcGFyYW1l
dGVyIGlzIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBvZiB0aGUge0BsaW5rICN2
aWV3fSBwcm9wZXJ0eS4KCSAgICAgKiBAcmV0dXJuIHt2YXJ9IHRoZSB2YWx1ZSBvZiB0aGUgY2Vs
bC4KCSAgICAgKiBAc2VlICNnZXRWYWx1ZQoJICAgICAqLwoJICAgIGdldFZhbHVlQnlJZDogZnVu
Y3Rpb24oY29sdW1uSWQsIHJvd0luZGV4LCB2aWV3KSB7CgkJaWYgKHZpZXcgPT0gdW5kZWZpbmVk
KSB2aWV3ID0gdGhpcy5nZXRWaWV3KCk7CgkJcmV0dXJuIHRoaXMuZ2V0VmFsdWUodGhpcy5nZXRD
b2x1bW5JbmRleEJ5SWQoY29sdW1uSWQpLCByb3dJbmRleCwgdmlldyk7CgkgICAgfSwKCgkgICAg
Ly8KCSAgICAvLyBUaGlzIGlzIGFuIGludGVybmFsLXVzZSBtZXRob2QgdG8gcmVtb3ZlIHJvd3Mg
ZnJvbSBhIHZpZXcuIE5vdGUgdGhhdCB5b3UgY2FuJ3QgcmVtb3ZlCgkgICAgLy8gcm93cyBmcm9t
IHZpZXcgemVybyB3aXRoIHRoaXMgbWV0aG9kOyB1c2UgdGhlIHB1YmxpYyByZW1vdmVSb3dzIHRv
IGRvIHRoYXQuCgkgICAgLy8KCSAgICBfX3JlbW92ZVJvd3M6IGZ1bmN0aW9uKHZpZXcsIHJvd3Ms
IHVwZGF0ZUFzc29jaWF0aW9uTWFwcykgewoJCWlmICh1cGRhdGVBc3NvY2lhdGlvbk1hcHMgPT0g
dW5kZWZpbmVkKQoJCSAgICB1cGRhdGVBc3NvY2lhdGlvbk1hcHMgPSB0cnVlOwoKCQl2YXIgaTsK
CgkJLy8KCQkvLyBJZiB3ZSdyZSByZW1vdmluZyBhdCBsZWFzdCAxLzQgb2YgdGhlIHJvd3MsIHRo
ZW4gZm9yIGJldHRlciBwZXJmb3JtYW5jZSB3ZSBqdXN0CgkJLy8gY29weSBhbGwgdGhlIHJvd3Mg
aW50byBhIG5ldyBhcnJheSwgb21pdHRpbmcgdGhlIHJlbW92ZWQgcm93cy4gT3RoZXJ3aXNlIHdl
CgkJLy8gc3BsaWNlIGVhY2ggcm93IHRvIGJlIHJlbW92ZWQgb3V0IG9mIHRoZSBleGlzdGluZyBh
cnJheS4KCQkvLwoJCS8vIFRCRDogdXNlIHJ1bi10aW1lIGJlbmNobWFya2luZyB0byBkZXRlcm1p
bmUgd2hlcmUgdGhlIGN1dG9mZiBzaG91bGQgYmUgYmV0d2VlbgoJCS8vIHRoZXNlIHR3byBtZXRo
b2RzLCBzaW5jZSBpdCB3aWxsIHZhcnkgYnkgYnJvd3Nlci4KCQkvLwoJCXZhciBBID0gdGhpcy5n
ZXRSb3dBcnJheSh2aWV3KTsKCQlpZiAocm93cy5sZW5ndGggPj0gKEEubGVuZ3RoID4+IDIpKSB7
CgkJICAgIHZhciByb3dzVG9SZW1vdmUgPSB7fTsKCQkgICAgZm9yIChpID0gMDsgaSA8IHJvd3Mu
bGVuZ3RoOyBpKyspIHsKCQkJdmFyIGlkeCA9IHRoaXMuX19nZXRSb3dJbmRleCh2aWV3LCByb3dz
W2ldKTsKCQkJaWYgKGlkeCAhPSB1bmRlZmluZWQpCgkJCSAgICByb3dzVG9SZW1vdmVbaWR4XSA9
IDE7CgkJICAgIH0KCgkJICAgIHZhciBfQSA9IFtdOwkvLyBfQSB3aWxsIGJlY29tZSB0aGUgbmV3
IEEKCQkgICAgZm9yIChpID0gMDsgaSA8IEEubGVuZ3RoOyBpKyspCgkJCWlmICghcm93c1RvUmVt
b3ZlW2ldKQoJCQkgICAgX0EucHVzaChBW2ldKTsKCQkgICAgdGhpcy5fX3NldFJvd0FycmF5KHZp
ZXcsIF9BKTsKCQl9IAoJCWVsc2UgewoJCSAgICAvLwoJCSAgICAvLyBSZW1vdmUgcm93cyBvbmUg
YXQgYSB0aW1lLiBCZWNhdXNlIHJvd3NUb1JlbW92ZSBpcyBzb3J0ZWQgaW4gcmV2ZXJzZSBvcmRl
ciwgd2UKCQkgICAgLy8gZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCB0aGUgc3BsaWNlIG9wZXJh
dGlvbnMgY2hhbmdpbmcgdGhlIGluZGljZXMgb2YgdGhlIG90aGVyCgkJICAgIC8vIHJvd3MgdG8g
YmUgcmVtb3ZlZC4KCQkgICAgLy8KCQkgICAgLy8gRm9yIGVhY2ggcm93IHJlZmVyZW5jZSwgZGV0
ZXJtaW5lIHdoZXJlIGl0IGlzIGluIHRoZSBzcGVjaWZpZWQgdmlldy4KCQkgICAgdmFyIHJvd3NU
b1JlbW92ZSA9IFtdOwoJCSAgICBmb3IgKGkgPSAwOyBpIDwgcm93cy5sZW5ndGg7IGkrKykgewoJ
CQl2YXIgaWR4ID0gdGhpcy5fX2dldFJvd0luZGV4KHZpZXcsIHJvd3NbaV0pOwoJCQlpZiAoaWR4
ICE9IHVuZGVmaW5lZCkKCQkJICAgIHJvd3NUb1JlbW92ZS5wdXNoKGlkeCk7CgkJICAgIH0KCgkJ
ICAgIC8vIFNvcnQgbGlzdCBvZiByb3cgaW5kaWNlcywgaGlnaGVzdCB0byBsb3dlc3QKCQkgICAg
cm93c1RvUmVtb3ZlLnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gYiAtIGE7IH0pOwoKCQkg
ICAgLy8KCQkgICAgLy8gV2Ugc3BlZWQgdGhpcyB1cCBhIGxvdCBpbiBzb21lIGNhc2VzIGJ5IHJl
Y29nbml6aW5nIGNvbnRpZ3VvdXMgc3BhbnMgb2Ygcm93cwoJCSAgICAvLyB0byBiZSBkZWxldGVk
LCBhbmQgZGVsZXRpbmcgZWFjaCBzdWNoIHNwYW4gd2l0aCBhIHNpbmdsZSBzcGxpY2UgY2FsbC4g
U2luY2UKCQkgICAgLy8gc3BsaWNlIGlzIChwcm9iYWJseSkgaW1wbGVtZW50ZWQgaW4gbmF0aXZl
IGNvZGUsIGl0J3MgZmFzdGVyIHRvIHB1c2ggYXMgbXVjaAoJCSAgICAvLyB3b3JrIGRvd24gaW50
byBpdCBhcyB3ZSBjYW4uCgkJICAgIC8vCgkJICAgIHZhciBsZW4gPSByb3dzVG9SZW1vdmUubGVu
Z3RoOwoJCSAgICB2YXIgc3BhbjsKCQkgICAgdmFyIEEgPSB0aGlzLmdldFJvd0FycmF5KHZpZXcp
OwoJCSAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IHNwYW4pIHsKCQkJdmFyIHJvdyA9IGJh
c2UgPSByb3dzVG9SZW1vdmVbaV07CgkJCXNwYW4gPSAxOwoJCQlmb3IgKHZhciBqID0gMTsgaSAr
IGogPCBsZW47IGorKykKCQkJICAgIGlmIChyb3dzVG9SZW1vdmVbaSArIGpdID09IHJvdyAtIGop
CS8vIHJvdyBpbmRpY2VzICpkZWNyZWFzZSogYXMgd2Ugc3RlcCBqCgkJCQlzcGFuKys7CgkJCSAg
ICBlbHNlCgkJCQlicmVhazsKCQkJQS5zcGxpY2UoYmFzZSAtIHNwYW4gKyAxLCBzcGFuKTsKCQkg
ICAgfQoJCX0KCgkJLy90aGlzLl9fZGVidWcoIl9fcmVtb3ZlUm93czogIiArIHRoaXMuZ2V0Um93
QXJyYXkodmlldykubGVuZ3RoICsgIiByb3dzIGxlZnQgYWZ0ZXIgZGVsZXRpb24gZnJvbSB2aWV3
ICIgKyB2aWV3KTsKCgkJLy8KCQkvLyBVcGRhdGUgdGhlIHJvdyBhc3NvY2lhdGlvbiBtYXBzIGlm
IGFueSBoYXZlIGNoYW5nZWQKCQkvLwoJCS8vIFRCRDogdGhpcyBkb2Vzbid0IGhhdmUgdG8gYmUg
ZG9uZSBmcm9tIHNjcmF0Y2ggaWYgdGhlIGRlbGV0aW9ucyBhbGwgb2NjdXJlZCBhdAoJCS8vIHRo
ZSBlbmQgb2YgdGhlIGFycmF5OyBpbiBzdWNoIGEgY2FzZSB3ZSBqdXN0IGhhdmUgdG8gcmVtb3Zl
IHRoZSBlbnRyaWVzIGZvciB0aGUKCQkvLyBkZWxldGVkIHJvd3MgZnJvbSB0aGUgcm93IGFzc29j
aWF0aW9uIG1hcC4KCQkvLwoJCWlmICh1cGRhdGVBc3NvY2lhdGlvbk1hcHMpCgkJICAgIHRoaXMu
X191cGRhdGVBc3NvY2lhdGlvbk1hcHModmlldyk7CgkgICAgfSwKCgkgICAgLy8KCSAgICAvLyBJ
bnRlcm5hbC11c2UgbWV0aG9kIHRvIHB1c2ggcm93cyBvbnRvIHRoZSBlbmQgb2YgdGhlIHZpZXcg
YW5kIHVwZGF0ZSB0aGUgcm93CgkgICAgLy8gYXNzb2NpYXRpb24gbWFwLgoJICAgIC8vCgkgICAg
X19wdXNoOiBmdW5jdGlvbih2aWV3LCByb3dzLCB1cGRhdGVBc3NvY2lhdGlvbk1hcHMpIHsKCQlp
ZiAodXBkYXRlQXNzb2NpYXRpb25NYXBzID09IHVuZGVmaW5lZCkKCQkgICAgdXBkYXRlQXNzb2Np
YXRpb25NYXBzID0gdHJ1ZTsKCgkJdmFyIEEgPSB0aGlzLmdldFJvd0FycmF5KHZpZXcpOwoJCXZh
ciBwcmlvcl9sZW4gPSBBLmxlbmd0aDsKCQlBLnB1c2guYXBwbHkoQSwgcm93cyk7CgoJCWlmICh1
cGRhdGVBc3NvY2lhdGlvbk1hcHMpCgkJICAgIHRoaXMuX191cGRhdGVBc3NvY2lhdGlvbk1hcHNB
ZnRlclB1c2godmlldywgcm93cywgcHJpb3JfbGVuKTsKCSAgICB9LAoKCSAgICAvLwoJICAgIC8v
IEludGVybmFsLXVzZSBtZXRob2QgdG8gcHVzaCByb3dzIG9udG8gdGhlIGZyb250IG9mIHRoZSBz
cGVjaWZpZWQgdmlldydzIGJhY2tpbmcgc3RvcmUKCSAgICAvLyBhcnJheS4gVXBkYXRlcyB0aGUg
cm93IGFzc29jaWF0aW9uIG1hcCBhcyB3ZWxsLgoJICAgIC8vCgkgICAgX191bnNoaWZ0OiBmdW5j
dGlvbih2aWV3LCByb3dzLCB1cGRhdGVBc3NvY2lhdGlvbk1hcHMpIHsKCQlpZiAodXBkYXRlQXNz
b2NpYXRpb25NYXBzID09IHVuZGVmaW5lZCkKCQkgICAgdXBkYXRlQXNzb2NpYXRpb25NYXBzID0g
dHJ1ZTsKCgkJdmFyIEEgPSB0aGlzLmdldFJvd0FycmF5KHZpZXcpOwoJCUEudW5zaGlmdC5hcHBs
eShBLCByb3dzKTsKCgkJLy8KCQkvLyBTaW5jZSBldmVyeSBwcmUtZXhpc3Rpbmcgcm93IGdldHMg
c2hpZnRlZCwgd2UgaGF2ZSB0byByZWNhbGN1bGF0ZSBhbGwgdGhlCgkJLy8gcm93IGluZGljZXMg
ZnJvbSBzY3JhdGNoLgoJCS8vCgkJaWYgKHVwZGF0ZUFzc29jaWF0aW9uTWFwcykKCQkgICAgdGhp
cy5fX3VwZGF0ZUFzc29jaWF0aW9uTWFwcyh2aWV3KTsKCSAgICB9LAoKCSAgICAvLwoJICAgIC8v
IFRoaXMgYW4gaW50ZXJuYWwtdXNlIG1ldGhvZCB0byBpbnNlcnQgcm93cyBpbnRvIGEgdmlldy4g
Tm90ZSB0aGF0IHlvdSBjYW4ndCBpbnNlcnQKCSAgICAvLyByb3dzIGludG8gdmlldyB6ZXJvIGRp
cmVjdGx5IHdpdGggdGhpcyBtZXRob2Q7IHVzZSB0aGUgcHVibGljIGFkZFJvd3MgbWV0aG9kIHRv
IGRvCgkgICAgLy8gdGhhdC4KCSAgICAvLwoJICAgIF9faW5zZXJ0Um93czogZnVuY3Rpb24odmll
dywgcm93cywgcnVuRmlsdGVycywgYWxyZWFkeVNvcnRlZCwgdXBkYXRlQXNzb2NpYXRpb25NYXBz
KSB7CgkJaWYgKHJ1bkZpbHRlcnMgPT0gdW5kZWZpbmVkKQoJCSAgICBydW5GaWx0ZXJzID0gdHJ1
ZTsKCQlpZiAoYWxyZWFkeVNvcnRlZCA9PSB1bmRlZmluZWQpCgkJICAgIGFscmVhZHlTb3J0ZWQg
PSBmYWxzZTsKCQlpZiAodXBkYXRlQXNzb2NpYXRpb25NYXBzID09IHVuZGVmaW5lZCkKCQkgICAg
dXBkYXRlQXNzb2NpYXRpb25NYXBzID0gdHJ1ZTsKCgkJLy8KCQkvLyBSdW4gZmlsdGVycyBvbiB0
aGUgcm93cyB0byBiZSBhZGRlZC4KCQkvLwoJCWlmIChydW5GaWx0ZXJzICYmIHZpZXcpCgkJICAg
IHJvd3MgPSB0aGlzLl9fdGVzdEFsbEZpbHRlcnModmlldywgcm93cywgLypzaW5nbGU6Ki8gZmFs
c2UpOwoKCQkvLyBJbnNlcnRpbmcgbm8gcm93cyBkb2VzIG5vdGhpbmcsIHZlcnkgcXVpY2tseS4K
CQlpZiAocm93cy5sZW5ndGggPT0gMCkKCQkgICAgcmV0dXJuOwoKCQkvLwoJCS8vIElmIHRoZSBt
b2RlbCBpc24ndCBjdXJyZW50bHkgc29ydGVkLCB3ZSBjYW4ganVzdCBhcHBlbmQgdGhlIG5ldyBy
b3dzIHRvIHRoZSBlbmQuCgkJLy8KCQlpZiAoIXRoaXMuaXNTb3J0ZWQoKSkgewoJCSAgICB0aGlz
Ll9fcHVzaCh2aWV3LCByb3dzLCB1cGRhdGVBc3NvY2lhdGlvbk1hcHMpOwoJCSAgICByZXR1cm47
CgkJfQoKCQkvLwoJCS8vIFRoZSBtb2RlbCBpcyBzb3J0ZWQuIFdlIGhhdmUgdG8gaW5zZXJ0IGVh
Y2ggcm93IGluIGl0cyBwcm9wZXIgcGxhY2UgdG8gbWFpbnRhaW4KCQkvLyB0aGUgc29ydC4KCQkv
LwoKCQkvLyBTb3J0IHRoZSBsaXN0IG9mIHJvd3MgdG8gYmUgYWRkZWQuCgkJdmFyIGNvbXBhcmF0
b3IgPSB0aGlzLmdldENvbXBhcmF0b3IoKTsKCQlpZiAoIWFscmVhZHlTb3J0ZWQpCgkJICAgIHJv
d3Muc29ydChjb21wYXJhdG9yKTsKCQoJCWlmIChmYWxzZSkKCQkgICAgZm9yICh2YXIgaSA9IDA7
IGkgPCByb3dzLmxlbmd0aDsgaSsrKQoJCQlpZiAocm93c1tpXSA9PSB1bmRlZmluZWQpCgkJCSAg
ICB0aGlzLl9fZGVidWcoIkFTU0VSVElPTiBGQUlMVVJFICgwKSBpbiBfX2luc2VydFJvd3M6IHJv
d1siICsgaSArICJdIGlzIHVuZGVmaW5lZCEiKTsKCgkJLy8KCQkvLyBGaXJzdCBjaGVjayBmb3Ig
dHdvIGNvbW1vbiBjYXNlcyB3ZSBjYW4gaGFuZGxlIHZlcnkgcXVpY2tseToKCQkvLwoJCS8vIC0g
YWxsIG5ldyByb3dzIGdvIGF0IHRoZSBiZWdpbm5pbmcKCQkvLyAtIGFsbCBuZXcgcm93cyBnbyBh
dCB0aGUgZW5kCgkJLy8KCQkvLyBJZiBuZWl0aGVyIG9mIHRoZXNlIGhvbGRzLCB0aGVuIHdlIGhh
dmUgdG8gZG8gYSBiaXQgbW9yZSB3b3JrIHRvIGludGVybGVhdmUgdGhlCgkJLy8gdHdvIHNldHMg
b2Ygcm93cy4KCQkvLwoJCXZhciBBID0gdGhpcy5nZXRSb3dBcnJheSh2aWV3KTsKCQlpZiAoIUEu
bGVuZ3RoIHx8IGNvbXBhcmF0b3Iocm93c1swXSwgQVtBLmxlbmd0aCAtIDFdKSA+PSAwKSB7CgkJ
ICAgIHRoaXMuX19kZWJ1ZygiX19pbnNlcnRSb3dzOiB2aWV3ICIgKyB2aWV3ICsgIjogdXNpbmcg
cHVzaCBzdHJhdGVneSIpOwoKCQkgICAgLy8gQWxsIHJvd3MgZ28gYXQgdGhlIGVuZC4KCQkgICAg
dGhpcy5fX3B1c2godmlldywgcm93cywgdXBkYXRlQXNzb2NpYXRpb25NYXBzKTsKCQl9CgkJZWxz
ZSBpZiAoY29tcGFyYXRvcihyb3dzW3Jvd3MubGVuZ3RoIC0gMV0sIEFbMF0pIDw9IDApIHsKCQkg
ICAgdGhpcy5fX2RlYnVnKCJfX2luc2VydFJvd3M6IHZpZXcgIiArIHZpZXcgKyAiOiB1c2luZyB1
bnNoaWZ0IHN0cmF0ZWd5Iik7CgoJCSAgICAvLyBBbGwgcm93cyBnbyBhdCB0aGUgYmVnaW5uaW5n
LgoJCSAgICB0aGlzLl9fdW5zaGlmdCh2aWV3LCByb3dzLCB1cGRhdGVBc3NvY2lhdGlvbk1hcHMp
OwoJCX0KCQllbHNlIHsKCQkgICAgLy8KCQkgICAgLy8gSWYgd2UncmUgaW5zZXJ0aW5nIGEgc21h
bGwgbnVtYmVyIG9mIHJvd3MsIHdlIGNhbiBqdXN0IHNwbGljZSB0aGVtIGluIGZvcgoJCSAgICAv
LyBiZXR0ZXIgcGVyZm9ybWFuY2UsIHJhdGhlciB0aGFuIGNvcHlpbmcgdGhlIHdob2xlIGFycmF5
LgoJCSAgICAvLwoJCSAgICAvLyBUQkQ6IHVzZSBydW4tdGltZSBiZW5jaG1hcmtpbmcgdG8gZGV0
ZXJtaW5lIHdoZXJlIHRoZSBjdXRvZmYgc2hvdWxkIGJlCgkJICAgIC8vIGJldHdlZW4gdGhlc2Ug
dHdvIG1ldGhvZHMsIHNpbmNlIGl0IHdpbGwgdmFyeSBieSBicm93c2VyLgoJCSAgICAvLwoJCSAg
ICBpZiAocm93cy5sZW5ndGggPCAoQS5sZW5ndGggPj4gMSkpIHsKCQkJdGhpcy5fX2RlYnVnKCJf
X2luc2VydFJvd3M6IHZpZXcgIiArIHZpZXcgKyAiOiB1c2luZyBzcGxpY2Ugc3RyYXRlZ3kiKTsK
CgkJCXZhciBsZW4gPSByb3dzLmxlbmd0aDsKCQkJdmFyIGksIGxvID0gMCwgaGkgPSBBLmxlbmd0
aCAtIDE7CgkJCXZhciBJUHMgPSBbXTsKCgkJCS8vIERldGVybWluZSB0aGUgcHJvcGVyIGluc2Vy
dGlvbiBmb3IgZWFjaCBuZXcgcm93LgoJCQlmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKCQkJ
ICAgIC8vCgkJCSAgICAvLyBCaW5hcnkgc2VhcmNoIGZvciB0aGUgcmlnaHQgaW5zZXJ0aW9uIHBv
aW50LiBXZSBtYXkgZ2V0IGVpdGhlciBhCgkJCSAgICAvLyBuZWdhdGl2ZSBvciBhIHBvc2l0aXZl
IG51bWJlciBiYWNrLCBzaW5jZSBhIGR1cGxpY2F0ZSBvZiB0aGlzIHJvdwoJCQkgICAgLy8gbWln
aHQgYWxyZWFkeSBiZSBpbiB0aGUgdmlldy4KCQkJICAgIC8vCgkJCSAgICB2YXIgaXAgPSB0aGlz
Ll9fYmluc2VhcmNoKEEsIHJvd3NbaV0sIGNvbXBhcmF0b3IsIGxvLCBoaSk7CgkJCSAgICBpZiAo
aXAgPj0gMCkgewoJCQkJLy8KCQkJCS8vIFRoZXJlJ3MgYWxyZWFkeSBhbiBpZGVudGljYWwgcm93
IGluIHRoZSB2aWV3LiBXZSdsbCBzcGxpY2UgdGhlCgkJCQkvLyBuZXcgcm93IGluIGltbWVkaWF0
ZWx5IGJlZm9yZSB0aGUgb25lIHdlIGZvdW5kLiBTbyB3ZSBjYW4gdXNlCgkJCQkvLyB0aGUgYmlu
c2VhcmNoIHJldHVybiB2YWx1ZSBhcy1pcy4KCQkJCS8vCgkJCSAgICB9CgkJCSAgICBlbHNlIHsK
CQkJCS8vCgkJCQkvLyBUaGUgc2VhcmNoIGRpZG4ndCBmaW5kIGFuIGlkZW50aWNhbCByb3cuIFdl
IGhhdmUgdG8gY29udmVydCB0aGUKCQkJCS8vIG5lZ2F0aXZlIHJldHVybiB2YWx1ZSBpbnRvIHRo
ZSBvZmZzZXQgd2hlcmUgdGhlIHJvdyBzaG91bGQgYmUKCQkJCS8vIGluc2VydGVkLgoJCQkJLy8K
CQkJCWlwID0gLWlwIC0gMTsKCQkJICAgIH0KCgkJCSAgICAvLyBQdXNoIHRoZSBkaXNjb3ZlcmVk
IGluc2VydGlvbiBwb2ludCBvbnRvIHRoZSBsaXN0IG9mIGluc2VydGlvbiBwb2ludHMKCQkJICAg
IElQcy5wdXNoKGlwKTsKCgkJCSAgICAvLwoJCQkgICAgLy8gUHVsbCB1cCB0aGUgbG93ZXIgYm91
bmQgZm9yIHRoZSBuZXh0IHNlYXJjaDsgc2luY2Ugd2UncmUgZXhhbWluaW5nCgkJCSAgICAvLyB0
aGUgcm93cyB0byBiZSBhZGRlZCBpbiBzb3J0ZWQgb3JkZXIsIHdlIGtub3cgdGhhdCBubyBzdWJz
ZXF1ZW50IHJvdwoJCQkgICAgLy8gY2FuIGJlIGFkZGVkIGF0IGFuIGVhcmxpZXIgaW5zZXJ0aW9u
IHBvaW50LiBGb3IgYmlnIHRhYmxlcyB0aGlzIGNhbgoJCQkgICAgLy8gc2F2ZSBhIGJ1bmNoIG9m
IHN1cGVyZmx1b3VzIGNvbXBhcmlzb25zLgoJCQkgICAgLy8KCQkJICAgIGxvID0gaXA7CgkJCX0K
CgkJCS8vIERlYnVnZ2luZzogaW5zdXJlIHRoYXQgdGhlIGluc2VydGlvbiBwb2ludHMgYXJlIG1v
bm90b25pY2FsbHkgbm9uZGVjcmVhc2luZy4KCQkJaWYgKGZhbHNlKSB7CgkJCSAgICBpZiAoSVBz
Lmxlbmd0aCAhPSByb3dzLmxlbmd0aCkKCQkJCXRoaXMuX19kZWJ1ZygiQVNTRVJUSU9OIEZBSUxV
UkUgKDEpIGluIF9faW5zZXJ0Um93cyIpOwoJCQkgICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsr
KQoJCQkJaWYgKElQc1tpIC0gMV0gPiBJUHNbaV0pCgkJCQkgICAgdGhpcy5fX2RlYnVnKCJBU1NF
UlRJT04gRkFJTFVSRSAoMikgaW4gX19pbnNlcnRSb3dzIik7CgkJCSAgICBmb3IgKGkgPSAwOyBp
IDwgbGVuOyBpKyspCgkJCQl0aGlzLl9fZGVidWcoIiAgSVBzWyIgKyBpICsgIl0gPSAiICsgSVBz
W2ldKTsKCQkJfQoKCQkJLy8KCQkJLy8gTm93IHdlIGtub3cgd2hlcmUgZWFjaCBuZXcgcm93IGdv
ZXMuIE5vdyBzcGxpY2UgdGhlbSBhbGwgaW4uIFdlIHNwbGljZQoJCQkvLyB0aGVtIGluIGluIHJl
dmVyc2Ugb3JkZXIgKGhpZ2hlc3QgaW5zZXJ0aW9uIHBvaW50IHRvIGxvd2VzdCkgc28gdGhhdCBu
bwoJCQkvLyBzcGxpY2Ugd2lsbCBpbnZhbGlkYXRlIGEgbGF0ZXIgaW5zZXJ0aW9uIHBvaW50IG9m
ZnNldC4KCQkJLy8KCQkJLy8gV2Ugc3BlZWQgdGhpcyB1cCBhIGxvdCBpbiBzb21lIGNhc2VzIGJ5
IHJlY29nbml6aW5nIGNvbnRpZ3VvdXMgc3BhbnMgb2YKCQkJLy8gcm93cyB0byBiZSBpbnNlcnRl
ZCwgYW5kIGluc2VydGluZyBlYWNoIHN1Y2ggc3BhbiB3aXRoIGEgc2luZ2xlIHNwbGljZQoJCQkv
LyBjYWxsLiBTaW5jZSBzcGxpY2UgaXMgKHByb2JhYmx5KSBpbXBsZW1lbnRlZCBpbiBuYXRpdmUg
Y29kZSwgaXQncyBmYXN0ZXIKCQkJLy8gdG8gcHVzaCBhcyBtdWNoIHdvcmsgZG93biBpbnRvIGl0
IGFzIHdlIGNhbi4KCQkJLy8KCQkJdmFyIHNwYW47CgkJCWZvciAoaSA9IGxlbiAtIDE7IGkgPj0g
MDsgaSAtPSBzcGFuKSB7CgkJCSAgICBpZiAodHJ1ZSkgewoJCQkJLy8gZGVidWdnaW5nIGFzc2Vy
dGlvbnMKCQkJCWlmIChJUHNbaV0gPCAwKQoJCQkJICAgIHRoaXMuX19kZWJ1ZygiSVBzW2ldID0g
IiArIElQc1tpXSk7CgkJCQlpZiAoSVBzW2ldID4gQS5sZW5ndGgpCgkJCQkgICAgdGhpcy5fX2Rl
YnVnKCJJUHNbaV0gPSAiICsgSVBzW2ldICsgIiwgQS5sZW5ndGggPSAiICsgQS5sZW5ndGgpOwoJ
CQkgICAgfQoKCQkJICAgIGlmIChmYWxzZSkgewoJCQkJLy8gSW5zZXJ0IHRoZSBuZXcgcm93CgkJ
CQlBLnNwbGljZShJUHNbaV0sIDAsIHJvd3NbaV0pOwoJCQkJc3BhbiA9IDE7CgkJCSAgICB9CgkJ
CSAgICBlbHNlIHsKCQkJCS8vCgkJCQkvLyBSb3dzIHRvIGJlIGluc2VydGVkIGFyZSBjb250aWd1
b3VzIGlmIHRoZXkgYWxsIG5lZWQgdG8gYmUKCQkJCS8vIGluc2VydGVkIGF0IHRoZSBzYW1lIG9m
ZnNldC4gKFRoaXMgaXMgYmVjYXVzZSB0aGUgaW5zZXJ0aW9uCgkJCQkvLyBwb2ludHMgZG9uJ3Qg
dGFrZSBpbnRvIGFjY291bnQgb3RoZXIgcm93cyB0byBiZSBpbnNlcnRlZC4pCgkJCQkvLwoJCQkJ
dmFyIHJvdyA9IElQc1tpXTsKCQkJCXZhciBzcGxpY2VfYXJncyA9IFsgLyppbnNlcnRpb25wb2lu
dDoqLyBJUHNbaV0sIC8qdG9kZWxldGU6Ki8gMCBdOwoJCQkJdmFyIHNwbGljZV9yb3dzID0gWyBy
b3dzW2ldIF07CgkJCQlzcGFuID0gMTsKCQkJCWZvciAodmFyIGogPSAxOyBpIC0gaiA+PSAwOyBq
KyspIHsKCQkJCSAgICBpZiAoSVBzW2kgLSBqXSA9PSByb3cpIHsKCQkJCQlzcGFuKys7CgkJCQkJ
c3BsaWNlX3Jvd3MucHVzaChyb3dzW2kgLSBqXSk7CgkJCQkgICAgfQoJCQkJICAgIGVsc2UKCQkJ
CQlicmVhazsKCQkJCX0KCQkJCQoJCQkJdGhpcy5fX2RlYnVnKCJpbnNlcnRSb3dzOiBzcGxpY2lu
ZyBpbiAiICsgc3BhbiArICIgcm93cyIpOwoKCQkJCS8vIEZpbGwgb3V0IHRoZSBhcmcgbGlzdCBm
b3IgdGhlIHNwbGljZSBjb21tYW5kCQoJCQkJc3BsaWNlX3Jvd3MucmV2ZXJzZSgpOwoJCQkJc3Bs
aWNlX2FyZ3MucHVzaC5hcHBseShzcGxpY2VfYXJncywgc3BsaWNlX3Jvd3MpOwoKCQkJCS8vIEFj
dHVhbGx5IGNhbGwgdGhlIG5hdGl2ZSBzcGxpY2UgbWV0aG9kCgkJCQlBLnNwbGljZS5hcHBseShB
LCBzcGxpY2VfYXJncyk7CgkJCSAgICB9CgkJCX0KCQkgICAgfQoJCSAgICBlbHNlIHsKCQkJdGhp
cy5fX2RlYnVnKCJfX2luc2VydFJvd3M6IHZpZXcgIiArIHZpZXcgKyAiOiB1c2luZyBjb3B5IHN0
cmF0ZWd5Iik7CgoJCQkvLwoJCQkvLyBDcmVhdGUgYSBuZXcgY29weSBvZiB0aGlzIHZpZXcncyBh
cnJheSBieSBtZXJnaW5nIHRoZSBleGlzdGluZyByb3dzIGFuZCB0aGUKCQkJLy8gcm93cyB0byBi
ZSBhZGRlZC4gVGhpcyByZXF1aXJlcyBPKG4rbSkgdGltZSwgd2hlcmUgbiBpcyB0aGUgbnVtYmVy
IG9mIHJvd3MgaW4KCQkJLy8gdGhlIGN1cnJlbnQgdmlldyBhbmQgbSBpcyB0aGUgbnVtYmVyIG9m
IHJvd3MgdG8gYmUgYWRkZWQuIFRoaXMgaXMgYmFzaWNhbGx5CgkJCS8vIHRoZSBtZXJnZSBzdGVw
IGluIGEgc3RhbmRhcmQgbWVyZ2Ugc29ydC4KCQkJLy8KCQkJdmFyIF9BID0gW107CS8vIF9BIHdp
bGwgYmVjb21lIHRoZSBuZXcgQQoJCQl2YXIgQWkgPSAwLCBBaUVuZCA9IEEubGVuZ3RoOwoJCQl2
YXIgcmxlbiA9IHJvd3MubGVuZ3RoOwoJCQlmb3IgKHZhciBpID0gMDsgaSA8IHJsZW47IGkrKykg
ewoJCQkgICAgdmFyIFIgPSByb3dzW2ldOwoKCQkJICAgIC8vCgkJCSAgICAvLyBBZHZhbmNlIEFp
IHVudGlsIGl0IHBvaW50cyB0byBhIHJvdyBpbiB0aGUgZXhpc2l0aW5nIHRhYmxlIHRoYXQncyBi
aWdnZXIKCQkJICAgIC8vIHRoYW4gdGhlIG5leHQgcm93IHRvIGJlIGFkZGVkLiBDb3B5IGVsZW1l
bnRzIGZyb20gQSBhbG9uZyB0aGUgd2F5LgoJCQkgICAgLy8KCQkJICAgIC8vIFRCRDogd2UgY291
bGQgc2tpcCBhaGVhZCB0byB0aGUgbmV4dCBpbnNlcnRpb24gcG9pbnQgd2l0aAoJCQkgICAgLy8g
Ymluc2VhcmNoLiBJIHdvbmRlciBpZiB0aGF0IHdvdWxkIGJlIGZhc3QgaW4gcHJhY3RpY2UsIHRo
b3VnaC4KCQkJICAgIC8vCgkJCSAgICB3aGlsZSAoQWkgPCBBaUVuZCkgewoJCQkJdmFyIGNtcCA9
IGNvbXBhcmF0b3IoUiwgQVtBaV0pOwoJCQkJaWYgKGNtcCA8IDApIHsKCQkJCSAgICBfQS5wdXNo
KFIpOwoJCQkJICAgIGJyZWFrOwoJCQkJfQoJCQkJX0EucHVzaChBW0FpKytdKTsKCQkJICAgIH0K
CQkJCgkJCSAgICAvLyBUaGUgcmVtYWluaW5nIHJvd3MgYWxsIGdvIGF0IHRoZSBlbmQKCQkJICAg
IGlmIChBaSA9PSBBaUVuZCkKCQkJCV9BLnB1c2goUik7CgkJCX0KCgkJCS8vIFB1c2ggdGhlIHJl
bWFpbmluZyByb3dzIGZyb20gdGhlIG9yaWdpbmFsIGFycmF5IG9udG8gdGhlIG5ldyBhcnJheQoJ
CQlpZiAoQWkgPCBBaUVuZCkKCQkJICAgIF9BLnB1c2guYXBwbHkoX0EsIEEuc2xpY2UoQWkpKTsK
CgkJCXRoaXMuX19zZXRSb3dBcnJheSh2aWV3LCBfQSk7CgkJICAgIH0KCgkJICAgIGlmICh1cGRh
dGVBc3NvY2lhdGlvbk1hcHMpCgkJCXRoaXMuX191cGRhdGVBc3NvY2lhdGlvbk1hcHModmlldyk7
CgkJfQoJICAgIH0sCgoJICAgIC8vCgkgICAgLy8gSW50ZXJuYWwtdXNlIG1ldGhvZCB0byBzZXQg
YSBzdWJzZXQgb2YgdmFsdWVzIGluIGEgcm93LiBUaGlzIGlzIGEgYml0IG9mIGEgcGFpbiwKCSAg
ICAvLyBiZWNhdXNlIGNoYW5nZXMgdG8gdmFsdWVzIGluIGEgcm93IG1pZ2h0IGNhdXNlIHRoYXQg
cm93IHRvIHNvcnQgZGlmZmVyZW50bHksIG9yIHRvIGJlCgkgICAgLy8gZmlsdGVyZWQgKG9yIHVu
ZmlsdGVyZWQpIGZvcm0gY2VydGFpbiB2aWV3cy4KCSAgICAvLwoJICAgIC8vIFRvIHNldCBtdWx0
aXBsZSBjb2x1bW5zLCBwYXNzIGNvbHVtbkluZGV4ID0gLTEgYW5kIHNldCBWIHRvIHRoZSBhcnJh
eSBvZiBuZXcKCSAgICAvLyB2YWx1ZXMsIGJlZ2lubmluZyB3aXRoIGNvbHVtbiAwLgoJICAgIC8v
CgkgICAgX19zZXQ6IGZ1bmN0aW9uKGNvbHVtbkluZGV4LCByb3dJbmRleCwgViwgdmlldykgewoJ
CWlmICh2aWV3ID09IHVuZGVmaW5lZCkgdmlldyA9IHRoaXMuZ2V0VmlldygpOwoKCQl2YXIgY29s
dW1ucyA9IHRoaXMuZ2V0Q29sdW1uQ291bnQoKTsKCQl2YXIgUiA9IHRoaXMuZ2V0Um93UmVmZXJl
bmNlKHJvd0luZGV4LCB2aWV3KTsKCgkJLy8KCQkvLyBJZiB0aGUgdmFsdWUgY2hhbmdlZCBpcyBp
biB0aGUgc29ydCBjb2x1bW4sIHRoZW4gd2UgbWF5IG5lZWQgdG8gbW92ZSB0aGlzIHJvdyB0bwoJ
CS8vIG1haW50YWluIHRoZSBzb3J0LiBUaGUgZWFzaWVzdCB3YXkgdG8gZG8gdGhpcyBpcyB0byBy
ZW1vdmUgdGhlIHJvdyBmcm9tIGFsbAoJCS8vIHZpZXdzLCB0aGVuIHJlaW5zZXJ0IGl0IHdoZXJl
IGl0IGJlbG9uZ3MuCgkJLy8KCQl2YXIgcmVpbnNlcnQgPSBmYWxzZTsKCgkJLy8gU2VlIGlmIHdl
J3JlIHNldHRpbmcgYSBzaW5nbGUgdmFsdWUgdnMuIGFuIGVudGlyZSByb3cKCQlpZiAoY29sdW1u
SW5kZXggPj0gMCAmJiBjb2x1bW5JbmRleCA8IGNvbHVtbnMpIHsKCQkgICAgLy8gV2UncmUgc2V0
dGluZyBhIHNpbmdsZSB2YWx1ZQoJCSAgICBpZiAoUltjb2x1bW5JbmRleF0gPT09IFYpCgkJCXJl
dHVybjsKCQkgICAgZWxzZSB7CgkJCS8vCgkJCS8vIElmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZSBp
biBhIGNvbHVtbiB0aGF0J3MgdXNlZCBhcyB0aGUga2V5IGZvciBhIHVzZXIKCQkJLy8gaW5kZXgs
IHdlIGhhdmUgdG8gdXBkYXRlIHRoZSBpbmRleCBmb3IgYWxsIHZpZXdzIHNpbmNlIHRoZSBrZXkg
Zm9yIHRoaXMKCQkJLy8gcm93IGlzIGNoYW5naW5nLgoJCQkvLwoJCQlpZiAodGhpcy5fX2luZGlj
ZXNbY29sdW1uSW5kZXhdICE9IHVuZGVmaW5lZCkKCQkJICAgIHRoaXMuX191cGRhdGVVc2VySW5k
aWNlcyhjb2x1bW5JbmRleCwgLypvbGRrZXk6Ki8gUltjb2x1bW5JbmRleF0sIC8qbmV3a2V5Oiov
IFYpOwoJCQlSW2NvbHVtbkluZGV4XSA9IFY7CgkJICAgIH0KCgkJICAgIC8vCgkJICAgIC8vIElm
IHRoaXMgdmFsdWUgaXMgaW4gdGhlIHNvcnQgY29sdW1uLCB3ZSBoYXZlIHRvIHJlbW92ZSB0aGlz
IHJvdwoJCSAgICAvLyBhbmQgcmVpbnNlcnQgaXQgdG8gbWFpbnRhaW4gdGhlIHNvcnQuCgkJICAg
IC8vCgkJICAgIHJlaW5zZXJ0ID0gKHRoaXMuaXNTb3J0ZWQoKSAmJiAoY29sdW1uSW5kZXggPT09
IHRoaXMuX19zb3J0Q29sdW1uSW5kZXgpKTsKCQl9CgkJZWxzZSB7CgkJICAgIC8vIFdlJ3JlIHNl
dHRpbmcgbXVsdGlwbGUgdmFsdWVzCgoJCSAgICAvLwoJCSAgICAvLyBXZSBjb3B5IHZhbHVlcyBy
YXRoZXIgdGhhbiBvdmVyd3JpdGluZyB0aGUgcm93IHJlZmVyZW5jZS4gIFRoaXMgZW5zdXJlcyB0
aGF0CgkJICAgIC8vIGFsbCBjb3BpZXMgb2YgdGhpcyByb3cgaW4gYWxsIHZpZXdzIHdpbGwgYmUg
dXBkYXRlZC4KCQkgICAgLy8KCQkgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgVi5sZW5ndGgg
JiYgY29sIDwgY29sdW1uczsgY29sKyspIHsKCQkJLy8KCQkJLy8gSWYgd2UncmUgc2V0dGluZyBh
IHZhbHVlIGluIGEgY29sdW1uIHRoYXQncyB1c2VkIGFzIHRoZSBrZXkgZm9yIGEgdXNlcgoJCQkv
LyBpbmRleCwgd2UgaGF2ZSB0byB1cGRhdGUgdGhlIGluZGV4IGZvciBhbGwgdmlld3Mgc2luY2Ug
dGhlIGtleSBmb3IgdGhpcwoJCQkvLyByb3cgaXMgY2hhbmdpbmcuCgkJCS8vCgkJCWlmICh0aGlz
Ll9faW5kaWNlc1tjb2xdICE9IHVuZGVmaW5lZCkKCQkJICAgIHRoaXMuX191cGRhdGVVc2VySW5k
aWNlcyhjb2wsIC8qb2xka2V5OiovIFJbY29sXSwgLypuZXdrZXk6Ki8gVltjb2xdKTsKCQkJUltj
b2xdID0gVltjb2xdOwoJCSAgICB9CgoJCSAgICAvLwoJCSAgICAvLyBJZiBhbnkgc2V0IHZhbHVl
IGlzIGluIHRoZSBzb3J0IGNvbHVtbiwgd2UgaGF2ZSB0byByZWluc2VydCB0aGlzIHJvdyB0bwoJ
CSAgICAvLyBtYWludGFpbiB0aGUgc29ydC4KCQkgICAgLy8KCQkgICAgaWYgKHRoaXMuaXNTb3J0
ZWQoKSAmJiBWLmxlbmd0aCA+PSB0aGlzLl9fc29ydENvbHVtbkluZGV4KQoJCQlyZWluc2VydCA9
IHRydWU7CgkJfQoKCQkvLwoJCS8vIE5vdyBhcHBseSBhbnkgY2hhbmdlcyBuZWNlc3NhcnkgdG8g
a2VlcCBhbGwgdGhlIHZpZXdzIHNvcnRlZCBhbmQgZmlsdGVyZWQgYWNyb3NzCgkJLy8gdGhpcyB2
YWx1ZSBjaGFuZ2UuCgkJLy8KCQl0aGlzLl9fcHJvcGFnYXRlUm93Q2hhbmdlVG9BbGxWaWV3cyhS
LCByZWluc2VydCk7CgkgICAgfSwKCgkgICAgLy8KCSAgICAvLyBUaGlzIGludGVybmFsLXVzZSBy
b3V0aW5lIHJlLWV2YWx1YXRlcyB0aGUgZmlsdGVyaW5nIGFuZCBzb3J0aW5nIG9mIGEgcm93IGlu
IGVhY2gKCSAgICAvLyB2aWV3LiBJZiByZXNvcnQgaXMgdHJ1ZSwgdGhlbiBpdCB3aWxsIGZvcmNp
Ymx5IHJlbW92ZSBhbmQgcmUtaW5zZXJ0IHRoZSByb3cgc28gdGhhdAoJICAgIC8vIHRoZSB2aWV3
IHJlbWFpbnMgc29ydGVkIHJlZ2FyZGxlc3Mgb2YgaG93IHRoZSByb3cgaGFzIGNoYW5nZWQuCgkg
ICAgLy8KCSAgICAvLyBUaGlzIHNjYWxlcyB2ZXJ5IGJhZGx5LCBzbyBpZiB5b3UncmUgbWFuaXB1
bGF0aW5nIG1vcmUgdGhhbiBhIGhhbmRmdWwgb2Ygcm93cywgZG9uJ3QKCSAgICAvLyB1c2UgaXQu
CgkgICAgLy8KCSAgICBfX3Byb3BhZ2F0ZVJvd0NoYW5nZVRvQWxsVmlld3M6IGZ1bmN0aW9uKFIs
IHJlc29ydCwgc2tpcHZpZXd6ZXJvLCBmaXJlRXZlbnQpIHsKCQlpZiAoc2tpcHZpZXd6ZXJvID09
IHVuZGVmaW5lZCkKCQkgICAgc2tpcHZpZXd6ZXJvID0gZmFsc2U7CgkJaWYgKGZpcmVFdmVudCA9
PSB1bmRlZmluZWQpCgkJICAgIGZpcmVFdmVudCA9IHRydWU7CgoJCS8vCgkJLy8gQ2hhbmdlcyB0
byBhIHJvdyB3aWxsIGJlIHZpc2libGUgaW4gYWxsIHRoZSB2aWV3cyB0aGF0IGNvbnRhaW4gdGhp
cyByb3csIGJlY2F1c2UKCQkvLyB0aGUgcm93cyBhcmUgc2hhcmVkIGJ5IHJlZmVyZW5jZS4gU28g
d2UgZG9uJ3QgaGF2ZSB0byBkbyBhbnl0aGluZyB0byBwcm9wYWdhdGUKCQkvLyB2YWx1ZSBjaGFu
Z2VzIHRvIG90aGVyIHZpZXdzLiBIb3dldmVyLCB3ZSBkbyBuZWVkIHRvIGFwcGx5IGZpbHRlcnMg
aGVyZSB0byBzZWUKCQkvLyB3aGV0aGVyIHRoZSBuZXcgdmFsdWUgY2F1c2VzIHRoZSByb3cgdG8g
YmVjb21lIGluY2x1ZGVkIG9yIGV4Y2x1ZGVkLiBJZiBzbywgd2UnbGwKCQkvLyBuZWVkIHRvIHVw
ZGF0ZSB0aGUgYWZmZWN0ZWQgdmlldyBieSBhZGRpbmcgb3IgcmVtb3ZpbmcgdGhlIHJvdy4gTGlr
ZXdpc2UsIHRvIG1haW50YWluCgkJLy8gdGhlIHNvcnQgd2UgbWF5IGhhdmUgdG8gcmVtb3ZlIHRo
ZSByb3csIGl0J3MgYWxyZWFkeSB0aGVyZSwgYW5kIHJlLWluc2VydCBpdCB3aGVyZQoJCS8vIGl0
IG5vdyBiZWxvbmdzIGFjY29yZGluZyB0byB0aGUgc29ydC4KCQkvLwoJCWZvciAodmFyIHYgPSAo
c2tpcHZpZXd6ZXJvID8gMSA6IDApOyB2IDwgdGhpcy5fX3ZpZXdzOyB2KyspIHsKCQkgICAgLy8g
V2FzIGl0IGZpbHRlcmVkIG91dCBvZiB0aGlzIHZpZXc/CgoJCSAgICB2YXIgcHJldl9yb3cgPSB0
aGlzLl9fZ2V0Um93SW5kZXgodiwgUik7CgkJICAgIC8vdGhpcy5fX2RlYnVnKCJfX3Byb3BhZ2F0
ZVJvd0NoYW5nZVRvQWxsVmlld3M6ICh2aWV3ICIgKyB2ICsgIikgcHJldl9yb3cgPSAiICsgcHJl
dl9yb3cpOwoKCQkgICAgdmFyIHdhc19maWx0ZXJlZCA9ICh2ICYmICh0aGlzLl9fZ2V0Um93SW5k
ZXgodiwgUikgPT0gdW5kZWZpbmVkKSkgPyB0cnVlIDogZmFsc2U7CgoJCSAgICAvLyBJcyBpdCBm
aWx0ZXJlZCBvdXQgb2YgdGhpcyB2aWV3IG5vdz8KCQkgICAgdmFyIG5vd19maWx0ZXJlZCA9ICh2
ICYmIHRoaXMuX190ZXN0QWxsRmlsdGVycyh2LCBSKSkgPyB0cnVlIDogZmFsc2U7CgoJCSAgICAv
L3RoaXMuX19kZWJ1ZygiX19wcm9wYWdhdGVSb3dDaGFuZ2VUb0FsbFZpZXdzOiAodmlldyAiICsg
diArICIpIHdhc19maWx0ZXJlZCA9ICIgKyB3YXNfZmlsdGVyZWQgKyAiLCBub3dfZmlsdGVyZWQg
PSAiICsgbm93X2ZpbHRlcmVkKTsKCgkJICAgIC8vCgkJICAgIC8vIFRoZXJlIGFyZSB0d28gZGlm
ZmVyZW50IG1vZGVzIGhlcmUuIElmIHJlc29ydCBpcyB0cnVlLCB3ZSBoYXZlIHRvIHJlbW92ZSBh
bmQKCQkgICAgLy8gcmUtaW5zZXJ0IHRoZSByb3cgdG8gbWFrZSBzdXJlIGl0IGVuZHMgdXAgaW4g
dGhlIHJpZ2h0IHBsYWNlIHRvIG1haW50YWluIHRoZQoJCSAgICAvLyBzb3J0LiBJZiBub3QsIHdl
IG1heSBoYXZlIHRvIGluc2VydCB0aGUgcm93IG9yIGRlbGV0ZSBpdCwgYnV0IG5vdCBib3RoLgoJ
CSAgICAvLwoJCSAgICBpZiAocmVzb3J0KSB7CgkJCS8vIHJlbW92ZSB0aGUgcm93IGZyb20gdGhl
IHZpZXcgaWYgaXQgd2FzIHRoZXJlIGJlZm9yZQoJCQlpZiAoIXdhc19maWx0ZXJlZCkgewoJCQkg
ICAgLy90aGlzLl9fZGVidWcoIl9fcHJvcGFnYXRlUm93Q2hhbmdlVG9BbGxWaWV3czogcmVtb3Zp
bmcgcm93IGZvciByZXNvcnRpbmcgcHVycG9zZXMgKHZpZXcgIiArIHYgKyAiKSIpOwoJCQkgICAg
dGhpcy5fX3JlbW92ZVJvd3ModiwgWyBSIF0pOwoJCQl9CgoJCQkvLyByZS1pbnNlcnQgdGhlIHJv
dyBpZiBpdCBiZWxvbmdzIHRoZXJlIG5vdwoJCQlpZiAoIW5vd19maWx0ZXJlZCkKCQkJICAgIHRo
aXMuX19pbnNlcnRSb3dzKHYsIFsgUiBdLCAvKnJ1bkZpbHRlcnM6Ki8gZmFsc2UpOwoJCQllbHNl
IHsKCQkJICAgIC8vdGhpcy5fX2RlYnVnKCJfX3Byb3BhZ2F0ZVJvd0NoYW5nZVRvQWxsVmlld3M6
IHJvdyB0byBiZSBpbnNlcnRlZCBpcyBhY3R1YWxseSBmaWx0ZXJlZCAodmlldyAiICsgdiArICIp
Iik7CgkJCX0KCQkgICAgfQoJCSAgICBlbHNlIHsKCQkJaWYgKHdhc19maWx0ZXJlZCAhPSBub3df
ZmlsdGVyZWQpIHsKCQkJICAgIGlmIChub3dfZmlsdGVyZWQpIHsKCQkJCS8vIHJvdyB3YXMgdGhl
cmUgYmVmb3JlOyBub3cgc2hvdWxkIG5vdCBiZTogcmVtb3ZlCgkJCQkvL3RoaXMuX19kZWJ1Zygi
X19wcm9wYWdhdGVSb3dDaGFuZ2VUb0FsbFZpZXdzOiByZW1vdmluZyByb3cgdGhhdCB3YXNuJ3Qg
ZmlsdGVyZWQgYW5kIG5vdyBpcyAodmlldyAiICsgdiArICIpIik7CgkJCQl0aGlzLl9fcmVtb3Zl
Um93cyh2LCBbIFIgXSk7CgkJCSAgICB9CgkJCSAgICBlbHNlIHsKCQkJCS8vIHJvdyB3YXNuJ3Qg
dGhlcmUgYmVmb3JlOyBub3cgc2hvdWxkIGJlOiBpbnNlcnQKCQkJCXRoaXMuX19pbnNlcnRSb3dz
KHYsIFsgUiBdLCAvKnJ1bkZpbHRlcnM6Ki8gZmFsc2UpOyAvLyBpbnNlcnQgdGhlIHJvdyBpbnRv
IHRoaXMgdmlldwoJCQkgICAgfQoJCQl9CgkJICAgIH0KCgkJICAgIC8vCgkJICAgIC8vIElmIGRh
dGEgaGFzIGNoYW5nZWQgaW4gdGhlIGN1cnJlbnQgdmlldywgbm90aWZ5IGxpc3RlbmVycy4KCQkg
ICAgLy8KCQkgICAgLy8gVEJEOiBzaW5jZSB3ZSdyZSBvbmx5IGluc2VydGluZyBhIHNpbmdsZSBy
b3csIHdlIGRvbid0IHJlYWxseSBuZWVkIHRvIHRlbGwKCQkgICAgLy8gbGlzdGVuZXJzIHRoZSBl
bnRpcmUgdGFibGUgd2FzIHVwZGF0ZWQuIEJ1dCBpdCdzIGEgYml0IGNvbXBsaWNhdGVkIHRvIGZp
Z3VyZQoJCSAgICAvLyBvdXQgdGhlIGV4YWN0IGJvdW5kcywgc28gSSBkb24ndCBib3RoZXIgZG9p
bmcgdGhhdCB5ZXQuLi4KCQkgICAgLy8KCQkgICAgaWYgKGZpcmVFdmVudCAmJiB0aGlzLmdldFZp
ZXcoKSA9PSB2KSB7CgkJCXZhciBkYXRhID0gewoJCQkgICAgZmlyc3RSb3cgICAgOiAwLAoJCQkg
ICAgbGFzdFJvdyAgICAgOiB0aGlzLmdldFJvd0NvdW50KHYpIC0gMSwKCQkJICAgIGZpcnN0Q29s
dW1uIDogMCwKCQkJICAgIGxhc3RDb2x1bW4gIDogdGhpcy5nZXRDb2x1bW5Db3VudCgpIC0gMQoJ
CQl9OwoJCQl0aGlzLmZpcmVEYXRhRXZlbnQocXgudWkudGFibGUuSVRhYmxlTW9kZWwuRVZFTlRf
VFlQRV9EQVRBX0NIQU5HRUQsIGRhdGEpOwoJCSAgICB9CgkJfQoJICAgIH0sCgoJICAgIC8qKgoJ
ICAgICAqIFNldHMgdGhlIHZhbHVlIG9mIGEgcGFyaWN1bGFyIGNlbGwgKGluZGljYXRlZCBieSBj
b2x1bW4gYW5kIHJvdyBpbmRpY2VzKSBpbiB0aGUKCSAgICAgKiBzcGVjaWZpZWQgdmlldy4gTm90
ZSB0aGF0IDxlbT5hbGwgdmlld3MgY29udGFpbmluZyB0aGlzIHJvdzwvZW0+IHdpbGwgcmVmbGVj
dCB0aGlzCgkgICAgICogY2hhbmdlLiBUaGUgZXN0YWJsaXNoZWQgc29ydCBhbmQgZmlsdGVycyB3
aWxsIGJlIG1haW50YWluZWQuCgkgICAgICoKCSAgICAgKiBAYWJzdHJhY3QKCSAgICAgKiBAcGFy
YW0gY29sdW1uSW5kZXgge0ludGVnZXJ9IFRoZSBpbmRleCBvZiB0aGUgY29sdW1uLgoJICAgICAq
IEBwYXJhbSByb3dJbmRleCB7SW50ZWdlcn0gdGhlIGluZGV4IG9mIHRoZSByb3cuCgkgICAgICog
QHBhcmFtIHZhbHVlIHt2YXJ9IFRoZSBuZXcgdmFsdWUuCgkgICAgICogQHBhcmFtIHZpZXcge0lu
dGVnZXIgP30gV2hpY2ggbW9kZWwgdmlldyB0aGlzIG9wZXJhdGlvbiBzaG91bGQgYXBwbHkgdG8u
IElmIHRoaXMKCSAgICAgKiBwYXJhbWV0ZXIgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gdGhl
IHZhbHVlIG9mIHRoZSB7QGxpbmsgI3ZpZXd9IHByb3BlcnR5LgoJICAgICAqIEByZXR1cm4ge3Zv
aWR9CgkgICAgICogQG5vdGUgSWYgeW91J3JlIHNldHRpbmcgbW9yZSB0aGFuIG9uZSBjb2x1bW4g
dmFsdWUgaW4gdGhlIHNhbWUgcm93LCB1c2Uge0BsaW5rCgkgICAgICogc2V0Um93fSBpbnN0ZWFk
LgoJICAgICAqIEBzZWUgI3NldFZhbHVlQnlJZCwgI3NldFJvdwoJICAgICAqLwoJICAgIHNldFZh
bHVlOiBmdW5jdGlvbihjb2x1bW5JbmRleCwgcm93SW5kZXgsIHZhbHVlLCB2aWV3KSB7CgkJdGhp
cy5fX3NldChjb2x1bW5JbmRleCwgcm93SW5kZXgsIHZhbHVlLCB2aWV3KTsKCSAgICB9LAoKCSAg
ICAvKioKCSAgICAgKiBTZXRzIGEgY2VsbCB2YWx1ZSBieSBjb2x1bW4gSUQuCgkgICAgICoKCSAg
ICAgKiBXaGVuZXZlciB5b3UgaGF2ZSB0aGUgY2hvaWNlLCB1c2Uge0BsaW5rICNzZXRWYWx1ZSgp
fSBpbnN0ZWFkLAoJICAgICAqIGJlY2F1c2UgdGhpcyBzaG91bGQgYmUgZmFzdGVyLgoJICAgICAq
CgkgICAgICogQHBhcmFtIGNvbHVtbklkIHtTdHJpbmd9IFRoZSBJRCBvZiB0aGUgY29sdW1uLgoJ
ICAgICAqIEBwYXJhbSByb3dJbmRleCB7SW50ZWdlcn0gVGhlIGluZGV4IG9mIHRoZSByb3cuCgkg
ICAgICogQHBhcmFtIHZhbHVlIHt2YXJ9IFRoZSBuZXcgdmFsdWUuCgkgICAgICogQHBhcmFtIHZp
ZXcge0ludGVnZXIgP30gV2hpY2ggbW9kZWwgdmlldyB0aGlzIG9wZXJhdGlvbiBzaG91bGQgYXBw
bHkgdG8uIElmIHRoaXMKCSAgICAgKiBwYXJhbWV0ZXIgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMg
dG8gdGhlIHZhbHVlIG9mIHRoZSB7QGxpbmsgI3ZpZXd9IHByb3BlcnR5LgoJICAgICAqIEByZXR1
cm4ge3ZvaWR9CgkgICAgICogQHNlZSAjc2V0VmFsdWUKCSAgICAgKi8KCSAgICBzZXRWYWx1ZUJ5
SWQ6IGZ1bmN0aW9uKGNvbHVtbklkLCByb3dJbmRleCwgdmFsdWUsIHZpZXcpIHsKCQlyZXR1cm4g
dGhpcy5zZXRWYWx1ZSh0aGlzLmdldENvbHVtbkluZGV4QnlJZChjb2x1bW5JZCksIHJvd0luZGV4
LCB2YWx1ZSwgdmlldyk7CgkgICAgfSwKCgkgICAgLyoqCgkgICAgICogU2V0cyBhbGwgY29sdW1u
IGluIGEgcGFyaWN1bGFyIHJvdyBpbiB0aGUgc3BlY2lmaWVkIHZpZXcgdG8gbmV3IHZhbHVlcy4g
Tm90ZSB0aGF0CgkgICAgICogPGVtPmFsbCB2aWV3cyBjb250YWluaW5nIHRoaXMgcm93PC9lbT4g
d2lsbCByZWZsZWN0IHRoaXMgY2hhbmdlLiBUaGUgZXN0YWJsaXNoZWQgc29ydAoJICAgICAqIGFu
ZCBmaWx0ZXJzIHdpbGwgYmUgbWFpbnRhaW5lZC4KCSAgICAgKgoJICAgICAqIEBhYnN0cmFjdAoJ
ICAgICAqIEBwYXJhbSByb3dJbmRleCB7SW50ZWdlcn0gdGhlIGluZGV4IG9mIHRoZSByb3cuCgkg
ICAgICogQHBhcmFtIHJvd0RhdGEge0FycmF5fSBBbiBhcnJheSBvZiB2YWx1ZXMsIG9uZSBmb3Ig
ZWFjaCBjb2x1bW4uCgkgICAgICogQHBhcmFtIHZpZXcge0ludGVnZXIgP30gV2hpY2ggbW9kZWwg
dmlldyB0aGlzIG9wZXJhdGlvbiBzaG91bGQgYXBwbHkgdG8uIElmIHRoaXMKCSAgICAgKiBwYXJh
bWV0ZXIgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIG9mIHRoZSB7QGxpbmsg
I3ZpZXd9IHByb3BlcnR5LgoJICAgICAqIEBwYXJhbSB2aWV3IHtJbnRlZ2VyID99IFdoaWNoIG1v
ZGVsIHZpZXcgdGhpcyBvcGVyYXRpb24gc2hvdWxkIGFwcGx5IHRvLiBJZiB0aGlzCgkgICAgICog
cGFyYW1ldGVyIGlzIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBvZiB0aGUge0Bs
aW5rICN2aWV3fSBwcm9wZXJ0eS4KCSAgICAgKiBAcmV0dXJuIHt2b2lkfQoJICAgICAqIEBzZWUg
I3NldFZhbHVlCgkgICAgICovCgkgICAgc2V0Um93OiBmdW5jdGlvbihyb3dJbmRleCwgcm93RGF0
YSwgdmlldykgewoJCXRoaXMuX19zZXQoLypjb2x1bW5JbmRleCovIC0xLCByb3dJbmRleCwgcm93
RGF0YSwgdmlldyk7CgkgICAgfSwKCgkgICAgLyoqCgkgICAgICogT3ZlcndyaXRlcyByb3cgZGF0
YSBpbiB0aGUgc3BlY2lmaWVkIHZpZXcuIFRoZSByb3dzIG92ZXJ3cml0ZSB0aGUgb2xkIHJvd3Mg
c3RhcnRpbmcgYXQKCSAgICAgKiA8Y29kZT5zdGFydEluZGV4PC9jb2RlPiB0byA8Y29kZT5zdGFy
dEluZGV4K3Jvd0Fyci5sZW5ndGg8L2NvZGU+LiAgSWYgdGhlIHRhYmxlIGlzCgkgICAgICogY3Vy
cmVudGx5IHNvcnRlZCwgdGhlIHJvd3Mgd2lsbCBiZSBhZGRlZCBzdWNoIHRoYXQgdGhlIHNvcnQg
d2lsbCBiZSBtYWludGFpbmVkLiBPdGhlcgoJICAgICAqIHZpZXdzIHdpbGwgYmUgYXV0b21hdGlj
YWxseSB1cGRhdGVkIHRvIGluY2x1ZGUgb3IgZXhjbHVkZSB0aGUgYWRkZWQgcm93cyBiYXNlZCBv
bgoJICAgICAqIHRoZWlyIGFzc29jaWF0ZWQgZmlsdGVycy4KCSAgICAgKgoJICAgICAqIEBwYXJh
bSBtYXBBcnIge01hcFtdfSBBbiBhcnJheSBjb250YWluaW5nIGEgbWFwIGZvciBlYWNoIHJvdy4g
RWFjaAoJICAgICAqICAgICAgICByb3ctbWFwIGNvbnRhaW5zIHRoZSBjb2x1bW4gSURzIGFzIGtl
eSBhbmQgdGhlIGNlbGwgdmFsdWVzIGFzIHZhbHVlLgoJICAgICAqIEBwYXJhbSBzdGFydEluZGV4
IHtJbnRlZ2VyID8gbnVsbH0gVGhlIGluZGV4IHdoZXJlIHRvIGluc2VydCB0aGUgbmV3IHJvd3Mu
IElmIG51bGwsCgkgICAgICogICAgICAgIHRoZSByb3dzIGFyZSBhcHBlbmRlZCB0byB0aGUgZW5k
LgoJICAgICAqIEBub3RlIFRoaXMgaXMgYSBjb21wdXRhdGlvbmFsbHkgZXhwZW5zaXZlIG9wZXJh
dGlvbi4KCSAgICAgKi8KCSAgICBzZXRSb3dzOiBmdW5jdGlvbihyb3dBcnIsIHN0YXJ0SW5kZXgs
IHZpZXcpIHsKCQlpZiAodmlldyA9PSB1bmRlZmluZWQpIHZpZXcgPSB0aGlzLmdldFZpZXcoKTsK
CgkJLy8gVEJEOiB0aGlzIGNvdWxkIGJlIGRvbmUgYSBsb3QgZmFzdGVyOgoJCWZvciAodmFyIGkg
PSAwOyBpIDwgcm93QXJyLmxlbmd0aDsgaSsrKQoJCSAgICB0aGlzLnNldFJvdyhzdGFydEluZGV4
ICsgaSwgcm93QXJyW2ldLCB2aWV3KTsKCSAgICB9LAoKCSAgICAvKioKCSAgICAgKiBTZXRzIHRo
ZSB3aG9sZSBkYXRhIGluIGJ1bGsgZm9yIHZpZXcgemVybyAodGhlIHVuZmlsdGVyZWQgdmlldyku
IElmIHRoZSB0YWJsZSBpcwoJICAgICAqIGN1cnJlbnRseSBzb3J0ZWQsIGl0IHdpbGwgYmUgcmUt
c29ydGVkIGZyb20gc2NyYXRjaC4gQWxsIHZpZXdzIHdpbGwgYmUgcmUtY29tcHV0ZWQKCSAgICAg
KiBkeW5hbWljYWxseS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSByb3dBcnIge3ZhcltdW119IEFu
IGFycmF5IGNvbnRhaW5pbmcgYW4gYXJyYXkgZm9yIGVhY2ggcm93LiBFYWNoCgkgICAgICogICAg
ICAgICAgcm93LWFycmF5IGNvbnRhaW5zIHRoZSB2YWx1ZXMgaW4gdGhhdCByb3cgaW4gdGhlIG9y
ZGVyIG9mIHRoZSBjb2x1bW5zCgkgICAgICogICAgICAgICAgaW4gdGhpcyBtb2RlbC4KCSAgICAg
KgoJICAgICAqIEBwYXJhbSBjb3B5IHtCb29sZWFuID8gdHJ1ZX0gV2hldGhlciBvciBub3QgdG8g
bWFrZSBhIG5ldyBjb3B5IG9mIGVhY2ggcm93LiBJZiB0aGlzCgkgICAgICogaXMgZmFsc2UsIHRo
ZW4gdGhlIG1vZGVsIHdpbGwgdXNlIHRoZSByZWZlcmVuY2VzIGluIDxjb2RlPnJvd0FycjwvY29k
ZT4gZGlyZWN0bHksCgkgICAgICogbWVhbmluZyB0aGF0IG1vZGlmaWNhdGlvbnMgdG8gdGhlIG1v
ZGVsIHdpbGwgbW9kaWZ5IHRoZSBkYXRhIHlvdSBwYXNzIGluIGhlcmUuCgkgICAgICoKCSAgICAg
KiBAcmV0dXJuIHt2b2lkfQoJICAgICAqIEBub3RlIFRoaXMgaXMgYSBjb21wdXRhdGlvbmFsbHkg
ZXhwZW5zaXZlIG9wZXJhdGlvbi4KCSAgICAgKiBAbm90ZSBSb3cgZGF0YSBpcyBub3QgZGVlcCBj
b3BpZWQgZXZlbiB3aGVuIDxjb2RlPmNvcHk8L2NvZGU+IGlzIHRydWUsIGluIHRoZSBzZW5zZQoJ
ICAgICAqIHRoYXQgaWYgY29sdW1uIHZhbHVlcyBhcmUgcmVmZXJlbmNlcywgdGhleSB3aWxsIGJl
IHNoYWxsb3cgY29waWVkLgoJICAgICAqLwoJICAgIHNldERhdGE6IGZ1bmN0aW9uKHJvd0Fyciwg
Y29weSkgewoJCWlmIChjb3B5ID09IHVuZGVmaW5lZCkKCQkgICAgY29weSA9IHRydWU7CgoJCS8v
CgkJLy8gU2V0IHRoZSB2aWV3IHplcm8gYXJyYXkuIElmIHRoZSBjb3B5IHBhcmFtZXRlciBpcyB0
cnVlLCBtYWtlIGEgY29weSBvZiBlYWNoIHJvdy4KCQkvLwoJCXZhciBBOwoJCWlmIChjb3B5KSB7
CgkJICAgIEEgPSBbXTsKCQkgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByb3dBcnIubGVuZ3RoOyBp
KyspCgkJCUEucHVzaChyb3dBcnJbaV0uc2xpY2UoKSk7CgkJfQoJCWVsc2UKCQkgICAgQSA9IHJv
d0Fyci5zbGljZSgpOwoJCQoJCS8vIEFzc2lnbiBhIHVuaXF1ZSBJRCB0byBlYWNoIHJvdyB0byB1
c2UgYXMgdGhlIGhhc2gga2V5IGluIHRoZSBhc3NvY2lhdGlvbiBtYXBzCgkJdGhpcy5fX2Fzc2ln
blJvd0lEcyhBKTsKCgkJLy8gVGhlIHJvdyBhcnJheSBpcyB0aGUgbmV3IHJvdyBhcnJheSBmb3Ig
dmlldyB6ZXJvLgoJCXRoaXMuX19zZXRSb3dBcnJheSgwLCBBKTsKCgkJLy8KCQkvLyBSZWdlbmVy
YXRlIHRoZSBvdGhlciB2aWV3cy4gV2UgZG9uJ3QgbmVlZCB0byB1cGRhdGUgdGhlIGFzc29jaWF0
aW9uIG1hcHMgaGVyZSwKCQkvLyBiZWNhdXNlIF9yZXNvcnQoKSB3aWxsIGRvIHRoYXQgZm9yIHVz
LiBMaWtld2lzZSwgd2UgZG9uJ3QgbmVlZCB0byBmaXJlIGV2ZW50cywKCQkvLyBiZWNhdXNlIHRo
YXQgd2lsbCBoYXBwZW4gd2hlbiB3ZSByZWFwcGx5IHRoZSBjdXJyZW50IHZpZXcuCgkJLy8KCQl0
aGlzLl9fZXZhbEFsbEZpbHRlcnMoLypmaXJlRXZlbnQ6Ki8gZmFsc2UsIC8qdXBkYXRlQXNzb2Np
YXRpb25NYXBzOiovIGZhbHNlKTsKCgkJLy8KCQkvLyBSZS1zb3J0IGFsbCB2aWV3cy4gVGhpcyB3
aWxsIGNhdXNlIGFsbCB0aGUgYXNzb2NpYXRpb24gbWFwcyB0byBnZXQgcmVidWlsdCwgYW5kCgkJ
Ly8gd2lsbCBub3RpZnkgbGlzdGVuZXJzIHdpdGggYSBNRVRBX0RBVEFfQ0hBTkdFRCBldmVudC4K
CQkvLwoJCWlmICh0aGlzLmlzU29ydGVkKCkpCgkJICAgIHRoaXMuX3Jlc29ydCgpOwoJCWVsc2UK
CQkgICAgdGhpcy5fX3VwZGF0ZUFzc29jaWF0aW9uTWFwcygpOwoJICAgIH0sCgoJICAgIC8qKgoJ
ICAgICAqIEFkZHMgcm93cyB0byB2aWV3IHplcm8uIElmIHRoZSB0YWJsZSBpcyBjdXJyZW50bHkg
c29ydGVkLCB0aGUgcm93cyB3aWxsIGJlIGFkZGVkIHN1Y2gKCSAgICAgKiB0aGF0IHRoZSBzb3J0
IHdpbGwgYmUgbWFpbnRhaW5lZC4gT3RoZXIgdmlld3Mgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHVw
ZGF0ZWQgdG8KCSAgICAgKiBpbmNsdWRlIG9yIGV4Y2x1ZGUgdGhlIGFkZGVkIHJvd3MgYmFzZWQg
b24gdGhlaXIgYXNzb2NpYXRlZCBmaWx0ZXJzLgoJICAgICAqCgkgICAgICogQHBhcmFtIHJvd0Fy
ciB7dmFyW11bXX0gQW4gYXJyYXkgY29udGFpbmluZyBhbiBhcnJheSBmb3IgZWFjaCByb3cuIEVh
Y2gKCSAgICAgKiAgICAgICAgICByb3ctYXJyYXkgY29udGFpbnMgdGhlIHZhbHVlcyBpbiB0aGF0
IHJvdyBpbiB0aGUgb3JkZXIgb2YgdGhlIGNvbHVtbnMKCSAgICAgKiAgICAgICAgICBpbiB0aGlz
IG1vZGVsLgoJICAgICAqCgkgICAgICogQHBhcmFtIGNvcHkge0Jvb2xlYW4gPyB0cnVlfSBXaGV0
aGVyIG9yIG5vdCB0byBtYWtlIGEgbmV3IGNvcHkgb2YgZWFjaCByb3cuIElmIHRoaXMKCSAgICAg
KiBpcyBmYWxzZSwgdGhlbiB0aGUgbW9kZWwgd2lsbCB1c2UgdGhlIHJlZmVyZW5jZXMgaW4gPGNv
ZGU+cm93QXJyPC9jb2RlPiBkaXJlY3RseSwKCSAgICAgKiBtZWFuaW5nIHRoYXQgbW9kaWZpY2F0
aW9ucyB0byB0aGUgbW9kZWwgd2lsbCBtb2RpZnkgdGhlIGRhdGEgeW91IHBhc3MgaW4gaGVyZS4K
CSAgICAgKgoJICAgICAqIEByZXR1cm4ge3ZvaWR9CgkgICAgICoKCSAgICAgKiBAbm90ZSBSb3cg
ZGF0YSBpcyBub3QgZGVlcC1jb3BpZWQgZXZlbiB3aGVuIDxjb2RlPmNvcHk8L2NvZGU+IGlzIHRy
dWUsIGluIHRoZSBzZW5zZQoJICAgICAqIHRoYXQgZXZlbiBpZiBjb2x1bW4gdmFsdWVzIGFyZSBy
ZWZlcmVuY2VzLCB0aGV5IHdpbGwgYmUgc2hhbGxvdy1jb3BpZWQuCgkgICAgICoKCSAgICAgKiBA
bm90ZSBJdCBpcyB1c3VhbGx5IG11Y2ggZmFzdGVyIHRvIGNhbGwgPGNvZGU+YWRkUm93czwvY29k
ZT4gZmV3IHRpbWVzIHdpdGggbGFyZ2UKCSAgICAgKiBhcnJheXMgdGhhbiBtYW55IHRpbWVzIHdp
dGggc21hbGwgYXJyYXlzLiBGb3IgZXhhbXBsZSwgdG8gYWRkIDEwMDAgcm93cywgeW91IHNob3Vs
ZAoJICAgICAqIGNhbGwgPGNvZGU+YWRkUm93czwvY29kZT4gb25jZSwgcGFzc2luZyBhbGwgMTAw
MCByb3dzLCByYXRoZXIgdGhhbiAxMCB0aW1lcywgcGFzc2luZwoJICAgICAqIDEwMCByb3dzIGVh
Y2ggdGltZS4KCSAgICAgKi8KCSAgICBhZGRSb3dzOiBmdW5jdGlvbihyb3dBcnIsIGNvcHksIGZp
cmVFdmVudCkgewoJCWlmIChjb3B5ID09IHVuZGVmaW5lZCkKCQkgICAgY29weSA9IHRydWU7CgkJ
aWYgKGZpcmVFdmVudCA9PSB1bmRlZmluZWQpCgkJICAgIGZpcmVFdmVudCA9IHRydWU7CgoJCWlm
ICghcm93QXJyIHx8IHJvd0Fyci5sZW5ndGggPT0gMCkKCQkgICAgcmV0dXJuOwoKCQl2YXIgc3Rh
cnQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOwoKCQl2YXIgQSA9IGNvcHkgPyBbXSA6IHJvd0Fy
cjsKCQlpZiAoY29weSkKCQkgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByb3dBcnIubGVuZ3RoOyBp
KyspCgkJCUEucHVzaChyb3dBcnJbaV0uc2xpY2UoKSk7CgoJCS8vIEFzc2lnbiBhIHVuaXF1ZSBJ
RCB0byBlYWNoIHJvdwoJCXRoaXMuX19hc3NpZ25Sb3dJRHMoQSk7CgoJCS8vIFNvcnQgdGhlIGxp
c3Qgb2Ygcm93cyB0byBiZSBhZGRlZAoJCXZhciBjb21wYXJhdG9yID0gdGhpcy5nZXRDb21wYXJh
dG9yKCk7CgkJQS5zb3J0KGNvbXBhcmF0b3IpOwoKCQkvLyBJbnNlcnQgdGhlIHJvd3MgaW50byBl
YWNoIHZpZXcsIG1haW50YWluaW5nIHRoZSBzb3J0IGFuZCB0aGUgcGVyLXZpZXcgZmlsdGVycwoJ
CWZvciAodmFyIHYgPSAwOyB2IDwgdGhpcy5fX3ZpZXdzOyB2KyspCgkJICAgIHRoaXMuX19pbnNl
cnRSb3dzKHYsIEEsIC8qcnVuRmlsdGVyczoqLyB0cnVlLCAvKmFscmVhZHlTb3J0ZWQ6Ki8gdHJ1
ZSk7CgoJCWlmIChmaXJlRXZlbnQpIHsKCQkgICAgdmFyIHZpZXcgPSB0aGlzLmdldFZpZXcoKTsK
CQkgICAgdmFyIGRhdGEgPSB7CgkJCWZpcnN0Um93ICAgIDogMCwKCQkJbGFzdFJvdyAgICAgOiB0
aGlzLmdldFJvd0NvdW50KHZpZXcpIC0gMSwKCQkJZmlyc3RDb2x1bW4gOiAwLAoJCQlsYXN0Q29s
dW1uICA6IHRoaXMuZ2V0Q29sdW1uQ291bnQoKSAtIDEKCQkgICAgfTsKCQkgICAgdGhpcy5maXJl
RGF0YUV2ZW50KHF4LnVpLnRhYmxlLklUYWJsZU1vZGVsLkVWRU5UX1RZUEVfREFUQV9DSEFOR0VE
LCBkYXRhKTsKCQl9CgoJCXZhciBlbmQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOwoJCXRoaXMu
X19kZWJ1ZygidG90YWwgdGltZSBzcGVudCBpbiBhZGRSb3dzOiAiICsgKGVuZCAtIHN0YXJ0KSAr
ICIgbXNlYyIpOwoJICAgIH0sCgoJICAgIC8qKgoJICAgICAqIFJlbW92ZXMgcm93cyBmcm9tIHNw
ZWNpZmllZCB2aWV3LiBUaGUgY29ycmVzcG9uZGluZyByb3dzIHdpbGwgYmUgcmVtb3ZlZCBmcm9t
IGFsbCB2aWV3cy4KCSAgICAgKgoJICAgICAqIEBwYXJhbSBzdGFydEluZGV4IHtJbnRlZ2VyID8g
MH0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCByb3cgdG8gcmVtb3ZlLgoJICAgICAqIEBwYXJhbSBo
b3dNYW55IHtJbnRlZ2VyID8gPGVtPnJlbWFpbmRlciBvZiBhcnJheTwvZW0+fSB0aGUgbnVtYmVy
IG9mIHJvd3MgdG8gcmVtb3ZlLgoJICAgICAqIEBwYXJhbSB2aWV3IHtJbnRlZ2VyID99IFdoaWNo
IG1vZGVsIHZpZXcgdGhpcyBvcGVyYXRpb24gc2hvdWxkIGFwcGx5IHRvLiBJZiB0aGlzCgkgICAg
ICogcGFyYW1ldGVyIGlzIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBvZiB0aGUg
e0BsaW5rICN2aWV3fSBwcm9wZXJ0eS4KCSAgICAgKiBAcmV0dXJuIHt2b2lkfQoJICAgICAqLwoJ
ICAgIHJlbW92ZVJvd3M6IGZ1bmN0aW9uKHN0YXJ0SW5kZXgsIGhvd01hbnksIHZpZXcpIHsKCQlp
ZiAodmlldyA9PSB1bmRlZmluZWQpIHZpZXcgPSB0aGlzLmdldFZpZXcoKTsKCgkJdmFyIEEgPSB0
aGlzLmdldFJvd0FycmF5KHZpZXcpOwoKCQlpZiAoc3RhcnRJbmRleCA9PSB1bmRlZmluZWQpCgkJ
ICAgIHN0YXJ0SW5kZXggPSAwOwoJCWlmIChob3dNYW55ID09IHVuZGVmaW5lZCkKCQkgICAgaG93
TWFueSA9IEEubGVuZ3RoIC0gc3RhcnRJbmRleDsKCgkJLy90aGlzLl9fZGVidWcoInJlbW92ZVJv
d3M6IHN0YXJ0SW5kZXggPSAiICsgc3RhcnRJbmRleCArICIsIGhvd01hbnkgPSAiICsgaG93TWFu
eSArICIsIHZpZXcgPSAiICsgdmlldyk7CgoJCWlmIChBLmxlbmd0aCA9PSAwKQoJCSAgICB0aHJv
dyBuZXcgRXJyb3IoInJlbW92ZVJvd3M6IGF0dGVtcHQgdG8gcmVtb3ZlIHJvd3MgZnJvbSBlbXB0
eSB2aWV3Iik7CgoJCWlmIChzdGFydEluZGV4IDwgMCB8fCBzdGFydEluZGV4ID4gQS5sZW5ndGgp
CgkJICAgIHRocm93IG5ldyBFcnJvcigicmVtb3ZlUm93czogc3RhcnRJbmRleCBvdXQgb2YgYm91
bmRzOiAiICsgc3RhcnRJbmRleCArICIgKDAuLiIgKyAoQS5sZW5ndGggLSAxKSArICIpIik7CgkJ
aWYgKGhvd01hbnkgPCAwIHx8IHN0YXJ0SW5kZXggKyBob3dNYW55IC0gMSA+PSBBLmxlbmd0aCkK
CQkgICAgdGhyb3cgbmV3IEVycm9yKCJyZW1vdmVSb3dzOiBob3dNYW55IG91dCBvZiBib3VuZHM6
ICIgKyBob3dNYW55ICsgIiAoMC4uIiArIChBLmxlbmd0aCAtIHN0YXJ0SW5kZXgpICsgIikiKTsK
CgkJLy90aGlzLl9fZGVidWcoInJlbW92ZVJvd3M6IHN0YXJ0SW5kZXggPSAiICsgc3RhcnRJbmRl
eCArICIsIGhvd01hbnkgPSAiICsgaG93TWFueSk7CgoJCS8vIENvbGxlY3QgcmVmZXJlbmNlcyB0
byByb3dzIHRvIGJlIGRlbGV0ZWQuCgkJdmFyIHJvd3MgPSBbXTsKCQlmb3IgKHZhciBpID0gMDsg
aSA8IGhvd01hbnk7IGkrKykKCQkgICAgcm93cy5wdXNoKEFbc3RhcnRJbmRleCArIGldKTsKCgkJ
dGhpcy5yZW1vdmVSZWZlcmVuY2VkUm93cyhyb3dzLCB2aWV3KTsKCSAgICB9LAoKCSAgICAvKioK
CSAgICAgKiBSZW1vdmVzIHJvd3MgZnJvbSBhbGwgdmlld3MuICBUaGUgcm93cyB0byBiZSByZW1v
dmVkIGFyZSBwcm92aWRlZCBpbiB0aGUKCSAgICAgKiA8Y29kZT5yb3dzPC9jb2RlPiBwYXJhbWV0
ZXIgYXMgYW4gYXJyYXkgb2Ygcm93IHJlZmVyZW5jZXMuIFlvdSBkbyBub3QgbmVlZCB0byBwcm92
aWRlCgkgICAgICogYSB2aWV3IG51bWJlciwgYmVjYXVzZSByZWZlcmVuY2VzIGFwcGx5IHRvIGFs
bCB2aWV3cy4KCSAgICAgKgoJICAgICAqIEBwYXJhbSByb3dzIHtBcnJheX0gdGhlIGxpc3Qgb2Yg
cmVmZXJlbmNlcyB0byByb3dzIHRvIGJlIGRlbGV0ZWQuCgkgICAgICogQHJldHVybiB7dm9pZH0K
CSAgICAgKi8KCSAgICByZW1vdmVSZWZlcmVuY2VkUm93czogZnVuY3Rpb24ocm93cykgewoJCS8v
CgkJLy8gRGVsZXRlIHJvd3MgZnJvbSBhbGwgdmlld3MuIFJlbW92aW5nIHJvd3MgY2FuJ3QgY2hh
bmdlIHNvcnRpbmcgb3IgZmlsdGVyaW5nLAoJCS8vIHNvIHRoaXMgaXMgZWFzeS4KCQkvLwoJCWZv
ciAodmFyIHYgPSAwOyB2IDwgdGhpcy5fX3ZpZXdzOyB2KyspCgkJICAgIHRoaXMuX19yZW1vdmVS
b3dzKHYsIHJvd3MpOwoJICAgIH0sCgoJICAgIC8qKgoJICAgICAqIFJlbW92ZXMgYWxsIHJvd3Mg
ZnJvbSBhbGwgdmlld3MuIERvZXMgbm90IGNoYW5nZSB2aWV3IGZpbHRlcnMgb3IgdGhlIHNvcnQg
Y3JpdGVyaWEuCgkgICAgICoKCSAgICAgKiBAcmV0dXJuIHt2b2lkfQoJICAgICAqLwoJICAgIGNs
ZWFyQWxsUm93czogZnVuY3Rpb24oKSB7CgkJaWYgKHRoaXMuZ2V0Um93Q291bnQoKSA+IDApIHsK
CQkgICAgZm9yICh2YXIgdiA9IDA7IHYgPCB0aGlzLl9fdmlld3M7IHYrKykKCQkJdGhpcy5fX2Jh
Y2tpbmdzdG9yZVt2XSA9IFtdOwoJCSAgICB0aGlzLl9fdXBkYXRlQXNzb2NpYXRpb25NYXBzKCk7
CgkJfQoJICAgIH0sCgoJICAgIC8vCgkgICAgLy8gVEJEOiBNYXAgdmVyc2lvbnMgb2Ygcm93IHVw
ZGF0ZSBtZXRob2RzCgkgICAgLy8KCSAgICAvLyBOT1RFOiB1c2UgU2ltcGxlOjpfbWFwQXJyYXky
Um93QXJyIDogZnVuY3Rpb24obWFwQXJyLCByZW1lbWJlck1hcHMpCgkgICAgLy8KCgkgICAgLy9z
ZXREYXRhQXNNYXBBcnJheSA6IGZ1bmN0aW9uKG1hcEFyciwgcmVtZW1iZXJNYXBzLCBjbGVhclNv
cnRpbmcpIHsKCSAgICAvL2FkZFJvd3NBc01hcEFycmF5IDogZnVuY3Rpb24obWFwQXJyLCBzdGFy
dEluZGV4LCByZW1lbWJlck1hcHMsIGNsZWFyU29ydGluZykgewoJICAgIC8vc2V0Um93c0FzTWFw
QXJyYXkgOiBmdW5jdGlvbihtYXBBcnIsIHN0YXJ0SW5kZXgsIHJlbWVtYmVyTWFwcywgY2xlYXJT
b3J0aW5nKSB7CgoJICAgIC8vCgkgICAgLy8gRklMVEVSSU5HIE1FVEhPRFMKCSAgICAvLwoKCSAg
ICAvLwoJICAgIC8vIFRlc3Qgd2hldGhlciBhIHJvdyBvciBzZXQgb3Igcm93cyB3b3VsZCBiZSBm
aWx0ZXJlZCBvdXQgb2YgYSBwYXJ0aWN1bGFyIHZpZXcuCgkgICAgLy8KCSAgICAvLyBJZiBzaW5n
bGUgaXMgdHJ1ZSwgdGhlbiBSIG11c3QgYmUgYSBzaW5nbGUgcm93LCBhbmQgdGhpcyByZXR1cm5z
IHRydWUgKGZpbHRlcmVkIG91dCkKCSAgICAvLyBvciBmYWxzZSAobm90IGZpbHRlcmVkIG91dCku
CgkgICAgLy8KCSAgICAvLyBJZiBzaW5nbGUgaXMgZmFsc2UsIHRoZW4gUiBtdXN0IGJlIGFuIGFy
cmF5IG9mIHJvd3MsIGFuZCB0aGlzIHJldHVybnMgYSBuZXcgYXJyYXkKCSAgICAvLyBjb250YWlu
aW5nIHJlZmVyZW5jZXMgdG8gdGhlIHJvd3MgdGhhdCB0aGUgZmlsdGVycyBhbGxvdy4gV2Ugc2hh
cmUgdGhlIHJlZmVyZW5jZSB0bwoJICAgIC8vIHRoZSByb3cgZGF0YS4gVGhpcyBtZWFucyB0aGVy
ZSdzIHJlYWxseSBhIHNpbmdsZSBjb3B5IG9mIHRoZSByb3dkYXRhLCBidXQgaXQgbWF5IGJlCgkg
ICAgLy8gc2hhcmVkIGJ5IG11bHRpcGxlIHZpZXdzLgoJICAgIC8vCgkgICAgX190ZXN0QWxsRmls
dGVyczogZnVuY3Rpb24odmlldywgUiwgc2luZ2xlKSB7CgkJaWYgKHNpbmdsZSA9PSB1bmRlZmlu
ZWQpCgkJICAgIHNpbmdsZSA9IHRydWU7CgoJCXZhciBmaWx0ZXJzID0gdGhpcy5fX2dldEZpbHRl
cnModmlldyk7CgkJdmFyIGZsZW4gPSBmaWx0ZXJzLmxlbmd0aDsKCgkJLy8KCQkvLyBJZiB0aGVy
ZSBpcyB6ZXJvIG9yIG9uZSBmaWx0ZXIgZnVuY3Rpb24sIHdlIGNhbiByZXR1cm4gaW1tZWRpYXRl
bHkuCgkJLy8KCQlpZiAoc2luZ2xlICYmIGZsZW4gPT0gMSkKCQkgICAgcmV0dXJuIGZpbHRlcnNb
MF0oUik7CgkJaWYgKGZsZW4gPT0gMCkKCQkgICAgcmV0dXJuIHNpbmdsZSA/IGZhbHNlIDogUjsK
CgkJLy8gR2V0IHRoZSBjb25qdW5jdGlvbiBhbmQgY29tYmluZSBhbGwgdGhlIGZpbHRlcnMKCQl2
YXIgY29uanVuY3Rpb24gPSB0aGlzLl9fZ2V0Q29uanVuY3Rpb24odmlldyk7CS8vICdhbmQnIG9y
ICdvcicKCgkJLy8gVGhpcyBmdW5jdGlvbiBjb21iaW5lcyBhbGwgdGhlIGZpbHRlcnMgb3ZlciBh
IHNpbmdsZSByb3cKCQlmdW5jdGlvbiBfdGVzdChyb3dkYXRhKSB7CgkJICAgIGlmIChjb25qdW5j
dGlvbiA9PT0gJ29yJykgewoJCQkvLyBJZiBhbnkgZmlsdGVyIHJldHVybnMgdHJ1ZSwgaGlkZSB0
aGUgcm93CgkJCWZvciAodmFyIGkgPSAwOyBpIDwgZmxlbjsgaSsrKQoJCQkgICAgaWYgKGZpbHRl
cnNbaV0ocm93ZGF0YSkpCgkJCQlyZXR1cm4gdHJ1ZTsKCQkJcmV0dXJuIGZhbHNlOwoJCSAgICB9
CgkJICAgIGVsc2UgewoJCQkvLyBJZiBhbGwgZmlsdGVycyByZXR1cm4gdHJ1ZSwgaGlkZSB0aGUg
cm93CgkJCWZvciAodmFyIGkgPSAwOyBpIDwgZmxlbjsgaSsrKQoJCQkgICAgaWYgKCFmaWx0ZXJz
W2ldKHJvd2RhdGEpKQoJCQkJcmV0dXJuIGZhbHNlOwoJCQlyZXR1cm4gdHJ1ZTsKCQkgICAgfQoJ
CX0KCgkJLy8KCQkvLyBBY3R1YWxseSBldmFsdWF0ZSB0aGUgZmlsdGVycwoJCS8vCgoJCS8vCgkJ
Ly8gSWYgd2UncmUgY2hlY2tpbmcgYSBzaW5nbGUgcm93LCBqdXN0IGV2YWwgdGhlIGZpbHRlcnMg
b24gaXQgYW5kIHJldHVybiB0aGUKCQkvLyBib29sZWFuIHJlc3VsdC4KCQkvLwoJCWlmIChzaW5n
bGUpCgkJICAgIHJldHVybiBfdGVzdChSKTsKCQkKCQkvLwoJCS8vIFdlJ3JlIGNoZWNraW5nIGFu
IGFycmF5IG9mIHJvd3MuIEV2YWx1YXRlIGVhY2ggYW5kIHJldHVybiB0aGUgZmlsdGVyZWQgYXJy
YXkuCgkJLy8KCQl2YXIgcmxlbiA9IFIubGVuZ3RoOwoJCXZhciBfUiA9IFtdOwoJCWZvciAodmFy
IHIgPSAwOyByIDwgcmxlbjsgcisrKSB7CgkJICAgIHZhciBSciA9IFJbcl07CgkJICAgIGlmICgh
X3Rlc3QoUnIpKQoJCQlfUi5wdXNoKFJyKTsKCQl9CgkJcmV0dXJuIF9SOwoJICAgIH0sCgoJICAg
IC8vCgkgICAgLy8gRXZhbHV0ZSB0aGUgdGhlIGZpbHRlcihzKSBmb3IgYSB2aWV3IGZyb20gc2Ny
YXRjaCwgcmVjcmVhdGluZyB0aGUgdmlldyBiYWNraW5nIHN0b3JlCgkgICAgLy8gYXJyYXkuCgkg
ICAgLy8KCSAgICBfX2V2YWxGaWx0ZXJzOiBmdW5jdGlvbih2aWV3LCBmaXJlRXZlbnQsIHVwZGF0
ZUFzc29jaWF0aW9uTWFwcykgewoJCS8vIE5vIGZpbHRlcnMgYWxsb3dlZCBmb3IgdmlldyB6ZXJv
IQoJCWlmICghdmlldykKCQkgICAgcmV0dXJuOwoKCQlpZiAoZmlyZUV2ZW50ID09IHVuZGVmaW5l
ZCkKCQkgICAgZmlyZUV2ZW50ID0gdHJ1ZTsKCQlpZiAodXBkYXRlQXNzb2NpYXRpb25NYXBzID09
IHVuZGVmaW5lZCkKCQkgICAgdXBkYXRlQXNzb2NpYXRpb25NYXBzID0gdHJ1ZTsKCgkJLy8gVmll
dyB6ZXJvIGlzIGFsd2F5cyB1bmZpbHRlcmVkLCBzbyBjb3B5IHJvdyByZWZlcmVuY2VzIGZyb20g
aXQ6CgkJdmFyIFUgPSB0aGlzLmdldFJvd0FycmF5KDApOwoKCQkvLyBSZWNyZWF0ZSB0aGUgdmll
dyBvbmUgcm93IGF0IGEgdGltZQoJCXRoaXMuX19zZXRSb3dBcnJheSh2aWV3LCB0aGlzLl9fdGVz
dEFsbEZpbHRlcnModmlldywgVSwgLypzaW5nbGU6Ki8gZmFsc2UpKTsKCgkJLy8gUmVjb21wdXRl
IHRoZSBhc3NvY2lhdGlvbiBtYXAgZm9yIHRoaXMgdmlldyBmcm9tIHNjcmF0Y2gKCQlpZiAodXBk
YXRlQXNzb2NpYXRpb25NYXBzKQoJCSAgICB0aGlzLl9fdXBkYXRlQXNzb2NpYXRpb25NYXBzKHZp
ZXcpOwoKCQkvLwoJCS8vIElmIHRoZSBkaXNwbGF5ZWQgdmlldyB3YXMgYWx0ZXJlZCwgbm90aWZ5
IGxpc3RlbmVycy4KCQkvLwoJCWlmIChmaXJlRXZlbnQgJiYgdGhpcy5nZXRWaWV3KCkgPT0gdmll
dykgewoJCSAgICB2YXIgZGF0YSA9IHsKCQkJZmlyc3RSb3cgICAgOiAwLAoJCQlsYXN0Um93ICAg
ICA6IHRoaXMuZ2V0Um93Q291bnQodmlldykgLSAxLAoJCQlmaXJzdENvbHVtbiA6IDAsCgkJCWxh
c3RDb2x1bW4gIDogdGhpcy5nZXRDb2x1bW5Db3VudCgpIC0gMQoJCSAgICB9OwoJCSAgICB0aGlz
LmZpcmVEYXRhRXZlbnQocXgudWkudGFibGUuSVRhYmxlTW9kZWwuRVZFTlRfVFlQRV9EQVRBX0NI
QU5HRUQsIGRhdGEpOwoJCX0KCSAgICB9LAoKCSAgICAvLwoJICAgIC8vIEFwcGx5IGZpbHRlcnMg
dG8gYWxsIHRoZSB2aWV3cy4KCSAgICAvLwoJICAgIC8vIFRoaXMgY2xlYXJzIGFsbCB0aGUgYmFj
a2luZyBzdG9yZSBhcnJheXMgYW5kIGNyZWF0ZXMgdGhlbSBhbGwgZnJvbSBzY3JhdGNoIGJ5IGNv
cHlpbmcKCSAgICAvLyByb3cgcmVmZXJlbmNlcyBvdXQgb2YgdmlldyB6ZXJvLiBOb3RlIHRoYXQg
YmVjYXVzZSB3ZSBwdXNoIHJvd3Mgb250byB0aGUgdmlldyBiYWNraW5nCgkgICAgLy8gc3RvcmUg
YXJyYXlzIGluIHRoZSBvcmRlciB0aGV5IGFwcGVhciBpbiB2aWV3IHplcm8sIHRoZSBhbHRlcm5h
dGUgdmlld3Mgd2lsbCBhbHNvIGJlCgkgICAgLy8gc29ydGVkIGlmIHZpZXcgemVybyBpcyBzb3J0
ZWQuCgkgICAgLy8KCSAgICBfX2V2YWxBbGxGaWx0ZXJzOiBmdW5jdGlvbihmaXJlRXZlbnQsIHVw
ZGF0ZUFzc29jaWF0aW9uTWFwcykgewoJCWZvciAodmFyIHYgPSAxOyB2IDwgdGhpcy5fX3ZpZXdz
OyB2KyspCgkJICAgIHRoaXMuX19ldmFsRmlsdGVycyh2LCBmaXJlRXZlbnQsIHVwZGF0ZUFzc29j
aWF0aW9uTWFwcyk7CgkgICAgfSwKCgkgICAgLy8KCSAgICAvLyBST1cgQVNTT0NJQVRJT04gTUFQ
UwoJICAgIC8vCgkgICAgX19JRDogMCwJLy8gdGhlIG5leHQgcm93IElECgoJICAgIC8qCgkgICAg
ICogQXNzaWduIGEgdW5pcXVlIElEIHRvIGVhY2ggcm93IGluIHRoZSBwcm92aWRlZCBhcnJheS4g
VGhpcyBJRCB3aWxsIHVuaXF1ZWx5IGlkZW50aWZ5CgkgICAgICogdGhpcyByb3cgcmVnYXJkbGVz
cyBvZiBjaGFuZ2VzIHRvIHRoZSByb3cuCgkgICAgICoKCSAgICAgKiBOb3RlIHRoYXQgdGhpcyBl
eHBsb2l0cyBhbiB1bnVzdWFsIGFzcGVjdCBvZiBKYXZhU2NyaXB0IGFycmF5czogeW91IGNhbiBh
ZGQKCSAgICAgKiBub24tbnVtZXJpY2FsIHByb3BlcnRpZXMgdG8gdGhlbS4KCSAgICAgKi8KCSAg
ICBfX2Fzc2lnblJvd0lEczogZnVuY3Rpb24oQSkgewoJCWZvciAodmFyIGkgPSAwOyBpIDwgQS5s
ZW5ndGg7IGkrKykKCQkgICAgQVtpXS5fX2lkID0gdGhpcy5fX0lEKys7CgkgICAgfSwKCgkgICAg
LyoKCSAgICAgKiBVcGRhdGUgdGhlIHJvdyBhc3NvY2lhdGlvbiBtYXBzLiBUaGUga2V5cyBhcmUg
cm93IElEczsgdGhlIHZhbHVlcyBhcmUgcm93IG51bWJlcnMuIFNvCgkgICAgICogYW4gYXNzb2Np
YXRpb24gbWFwIGZvciBhIHZpZXcgdGVsbHMgd2hlcmUgYSBnaXZlbiByb3cgYXBwZWFycyBpbiB0
aGUgYmFja2luZyBzdG9yZQoJICAgICAqIGZvciB0aGF0IHZpZXcuCgkgICAgICoKCSAgICAgKiBU
aGlzIGFsc28gdXBkYXRlcyBhbGwgdXNlciBpbmRpY2VzLiBJbiB1c2VyIGluZGljZXMsIHRoZSBr
ZXlzIGFyZSB0aGUgdmFsdWVzIGluIGEKCSAgICAgKiBwYXJ0aWN1bGFyIGNvbHVtbi4KCSAgICAg
Ki8KCSAgICBfX3VwZGF0ZUFzc29jaWF0aW9uTWFwczogZnVuY3Rpb24odmlldywgaW5kZXgpIHsK
CQlmb3IgKHZhciB2ID0gMDsgdiA8IHRoaXMuX192aWV3czsgdisrKSB7CgkJICAgIGlmICh2aWV3
ICE9IHVuZGVmaW5lZCAmJiB2aWV3ICE9IHYpCQoJCQljb250aW51ZTsKIAkJICAgIHZhciBBID0g
dGhpcy5nZXRSb3dBcnJheSh2KTsKCgkJICAgIC8vIENsZWFyIHRoZSBjdXJyZW50IGFzc29jaWF0
aW9uIG1hcAoJCSAgICBpZiAoaW5kZXggPT0gdW5kZWZpbmVkKQoJCQl0aGlzLl9fYXNzb2Nbdl0g
PSB7fTsKCgkJICAgIC8vIENsZWFyIHRoZSBpbmRpY2VzCgkJICAgIGZvciAodmFyIGNvbHVtbiBp
biB0aGlzLl9faW5kaWNlcykKCQkJaWYgKGluZGV4ID09IHVuZGVmaW5lZCB8fCBpbmRleCA9PSBj
b2x1bW4pCgkJCSAgICB0aGlzLl9faW5kaWNlc1tjb2x1bW5dW3ZdID0ge307CgoJCSAgICAvLyBS
ZWNyZWF0ZSB0aGUgYXNzb2NpYXRpb24gbWFwCgkJICAgIGZvciAodmFyIGogPSAwOyBqIDwgQS5s
ZW5ndGg7IGorKykgewoJCQl2YXIgUiA9IEFbal07CgkJCWlmIChpbmRleCA9PSB1bmRlZmluZWQp
CgkJCSAgICB0aGlzLl9fYXNzb2Nbdl1bUi5fX2lkXSA9IGo7CgoJCQkvLyBVcGRhdGUgdXNlci1k
ZWZpbmVkIGluZGljZXMgYXMgd2VsbAoJCQlmb3IgKHZhciBjb2x1bW4gaW4gdGhpcy5fX2luZGlj
ZXMpCgkJCSAgICBpZiAoaW5kZXggPT0gdW5kZWZpbmVkIHx8IGluZGV4ID09IGNvbHVtbikgewoJ
CQkJLy8KCQkJCS8vIE5vdGUgdGhhdCB3ZSBoYXZlIHRvIGV4cGxpY2l0bHkgY29udmVydCB0aGUg
dmFsdWUgdG8gYSBzdHJpbmcgdG8KCQkJCS8vIGJlIHN1cmUgdGhhdCwgZS5nLiwgZmxvYXRpbmcg
cG9pbnQgbnVtYmVycyB3aWxsIG5vdCByb3VuZC4KCQkJCS8vCgkJCQl0aGlzLl9faW5kaWNlc1tj
b2x1bW5dW3ZdWyIiICsgUltjb2x1bW5dXSA9IGo7CgkJCSAgICB9CgkJICAgIH0KCQl9CgkgICAg
fSwKCgkgICAgLyoKCSAgICAgKiBUaGlzIGlzIGEgbW9yZSBlZmZpY2llbnQgdmVyc2lvbiBvZiBf
X3VwZGF0ZUFzc29jaWF0aW9uTWFwcyB0aGF0IHdlIGNhbiB1c2Ugd2hlbiB3ZSd2ZQoJICAgICAq
IHB1c2hlZCBuZXcgcm93cyBvbnRvIHRoZSBlbmQgb2YgYSB2aWV3LiBJbiB0aGlzIGNhc2UsIHdl
IGRvbid0IGhhdmUgdG8gcmVjb21wdXRlIHRoZQoJICAgICAqIHdob2xlIGFzc29jaWF0aW9uIG1h
cCBmcm9tIHNjcmF0Y2g7IHdlIGp1c3QgaGF2ZSB0byBhZGQga2V5cyBmb3IgdGhlIG5ldyByb3dz
OyB3ZSBrbm93CgkgICAgICogdGhhbiBub25lIG9mIHRoZSBwcmUtZXhpc3Rpbmcga2V5cyB3aWxs
IGhhdmUgY2hhbmdlZC4KCSAgICAgKi8KCSAgICBfX3VwZGF0ZUFzc29jaWF0aW9uTWFwc0FmdGVy
UHVzaDogZnVuY3Rpb24odmlldywgcHVzaGVkX3Jvd3MsIHByaW9yX2xlbikgewoJCXZhciBhc3Nv
YyA9IHRoaXMuX19nZXRBc3NvYyh2aWV3KTsKCQl2YXIgdmFsdWUgPSBwcmlvcl9sZW47CgoJCS8v
IEFkZCBlYWNoIG5ldyByb3cgdG8gdGhlIHJvdyBhc3NvY2lhdGlvbiBtYXAKCQlmb3IgKHZhciBp
ID0gMDsgaSA8IHB1c2hlZF9yb3dzLmxlbmd0aDsgaSsrLCB2YWx1ZSsrKSB7CgkJICAgIHZhciBS
ID0gcHVzaGVkX3Jvd3NbaV07CgkJICAgIGFzc29jW1IuX19pZF0gPSB2YWx1ZTsKCgkJICAgIC8v
IFVwZGF0ZSB1c2VyLWRlZmluZWQgaW5kaWNlcyBhcyB3ZWxsCgkJICAgIGZvciAodmFyIGNvbHVt
biBpbiB0aGlzLl9faW5kaWNlcykgewoJCQkvLwoJCQkvLyBOb3RlIHRoYXQgd2UgaGF2ZSB0byBl
eHBsaWNpdGx5IGNvbnZlcnQgdGhlIHZhbHVlIHRvIGEgc3RyaW5nIHRvCgkJCS8vIGJlIHN1cmUg
dGhhdCwgZS5nLiwgZmxvYXRpbmcgcG9pbnQgbnVtYmVycyB3aWxsIG5vdCByb3VuZC4KCQkJLy8K
CQkJdGhpcy5fX2luZGljZXNbY29sdW1uXVt2aWV3XVsiIiArIFJbY29sdW1uXV0gPSB2YWx1ZTsK
CQkgICAgfQoJCX0KCSAgICB9LAoKCSAgICAvKgoJICAgICAqIFVwZGF0ZSB1c2VyIGluZGljZXMg
dG8gcmVmbGVjdCB0aGF0IGEgcm93J3Mga2V5IGhhcyBjaGFuZ2VkLgoJICAgICAqLwoJICAgIF9f
dXBkYXRlVXNlckluZGljZXM6IGZ1bmN0aW9uKGNvbHVtbkluZGV4LCBvbGRrZXksIG5ld2tleSkg
ewoJCS8vCgkJLy8gTm90ZSB0aGF0IHdlIGhhdmUgdG8gZXhwbGljaXRseSBjb252ZXJ0IHRoZSBr
ZXlzIHRvIHN0cmluZ3MgYmUgc3VyZSB0aGF0LAoJCS8vIGUuZy4sIGZsb2F0aW5nIHBvaW50IG51
bWJlcnMgd2lsbCBub3Qgcm91bmQuCgkJLy8KCQlvbGRrZXkgPSAiIiArIG9sZGtleTsKCQluZXdr
ZXkgPSAiIiArIG5ld2tleTsKCgkJZm9yICh2YXIgdmlldyA9IDA7IHZpZXcgPCB0aGlzLl9fdmll
d3M7IHZpZXcrKykgewoJCSAgICBmb3IgKHZhciBjb2x1bW4gaW4gdGhpcy5fX2luZGljZXMpIHsK
CQkJdmFyIHJvdyA9IHRoaXMuX19pbmRpY2VzW2NvbHVtbl1bdmlld11bb2xka2V5XTsKCQkJdGhp
cy5fX2luZGljZXNbY29sdW1uXVt2aWV3XVtvbGRrZXldID0gdW5kZWZpbmVkOwoJCQl0aGlzLl9f
aW5kaWNlc1tjb2x1bW5dW3ZpZXddW25ld2tleV0gPSByb3c7CgkJICAgIH0KCQl9CgkgICAgfSwK
CgkgICAgLyoKCSAgICAgKiBGaW5kIHdoaWNoIHJvdyBvZiB0aGUgc3BlY2lmaWVkIHZpZXcgdGhl
IHJvdyByZWZlcmVuY2UgYXBwZWFycyBpbi4gUmV0dXJucyB1bmRlZmluZWQKCSAgICAgKiBpZiB0
aGUgcm93IHJlZmVyZW5jZSBpcyBub3QgaW4gdGhlIHZpZXcuCgkgICAgICovCgkgICAgX19nZXRS
b3dJbmRleDogZnVuY3Rpb24odmlldywgUikgewoJCXRyeSB7CgkJICAgIGlmIChSLl9faWQgPT0g
dW5kZWZpbmVkKSB7CgkJCS8vIEF0dGVtcHQgdG8gZmluZCBhIHJvdyB0aGF0IHdhcyBuZXZlciBh
ZGRlZCB0byB0aGUgbW9kZWwKCQkJLy90aGlzLl9fZGVidWcoIl9fZ2V0Um93SW5kZXg6IGF0dGVt
cHQgdG8gZmluZCBhIHJvdyB3aXRoIG5vIElEIik7CQoJCQkvL3RoaXMuX19kZWJ1Z29iaihSLCAi
cm93ZGF0YSIpOwoJCQlyZXR1cm4gdW5kZWZpbmVkOwoJCSAgICB9CgkJfQoJCWNhdGNoIChlKSB7
CgkJICAgIHRoaXMuX19kZWJ1ZyhlKTsKCQkgICAgcmV0dXJuIHVuZGVmaW5lZDsKCQl9CgoJCWZv
ciAodmFyIHYgPSAwOyB2IDwgdGhpcy5fX3ZpZXdzOyB2KyspIHsKCQkgICAgLy90aGlzLl9fZGVi
dWdvYmoodGhpcy5fX2dldEFzc29jKHYpLCAidGhpcy5fX2Fzc29jWyIgKyB2ICsgIl0iKTsKCQkg
ICAgdmFyIHIgPSB0aGlzLl9fZ2V0QXNzb2ModilbUi5fX2lkXTsKCQkgICAgLy90aGlzLl9fZGVi
dWcoIl9fZ2V0Um93SW5kZXg6IGluZGV4IG9mIHJvdyBpbiB2aWV3ICIgKyB2ICsgIiBpcyAiICsg
cik7CgkJfQoJCSAgICAKCQlyZXR1cm4gdGhpcy5fX2dldEFzc29jKHZpZXcpW1IuX19pZF07Cgkg
ICAgfSwKCgkgICAgLy8KCSAgICAvLyBTT1JUSU5HIE1FVEhPRFMKCSAgICAvLwoJICAgIC8vIFRC
RDogd2Ugc2hvdWxkIHRyYXAgY2hhbmdlcyB0byB0aGUgY2FzZVNlbnNpdGl2ZVNvcnRpbmcgcHJv
cGVydHkgYW5kIHJlLXNvcnQgd2hlbgoJICAgIC8vIGl0IGNoYW5nZXMuCgkgICAgLy8KCgkgICAg
LyoqCgkgICAgICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIHRhYmxlIGlzIGN1cnJlbnRseSBpbiBz
b3J0ZWQgb3JkZXIuIE5vdGUgdGhhdCB3aGVuIGEgdGFibGUgaXMKCSAgICAgKiBzb3J0ZWQsIGFs
bCB0aGUgdmlld3MgYXJlIGtlcHQgc29ydGVkIGJ5IHRoZSBzYW1lIGNvbHVtbi4KCSAgICAgKgoJ
ICAgICAqIEByZXR1cm4ge0Jvb2xlYW59IHdoZXRoZXIgdGhlIHRhYmxlIGlzIGN1cnJlbnRseSBp
biBzb3J0ZWQgb3JkZXIuCgkgICAgICovCgkgICAgaXNTb3J0ZWQ6IGZ1bmN0aW9uICgpIHsKCQly
ZXR1cm4gdGhpcy5nZXRTb3J0Q29sdW1uSW5kZXgoKSAhPSAtMTsKCSAgICB9LAoKCSAgICAvKioK
CSAgICAgKiBSZXR1cm5zIHRoZSBjb21wYXJhdG9yIGZ1bmN0aW9uIGZvciBhIHBhcnRpY3VsYXIg
Y29sdW1uLgoJICAgICAqCgkgICAgICogQHBhcmFtIGNvbHVtbkluZGV4IHtJbnRlZ2VyfSBUaGUg
Y29sdW1uIGluZGV4LgoJICAgICAqIEBwYXJhbSBhc2NlbmRpbmcge0Jvb2xlYW59IFdoaWNoIGNv
bXBhcmF0b3IgdG8gcmV0cmlldmU6IHRoZSBhc2NlbmRpbmcgb25lLCBvciB0aGUKCSAgICAgKiBk
ZXNjZW5kaW5nIG9uZS4KCSAgICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gdGhlIGNvbXBhcmF0b3Ig
ZnVuY3Rpb24KCSAgICAgKi8KCSAgICBnZXRDb21wYXJhdG9yOiBmdW5jdGlvbihjb2x1bW5JbmRl
eCwgYXNjZW5kaW5nKSB7CgkJaWYgKGNvbHVtbkluZGV4ID09IHVuZGVmaW5lZCkKCQkgICAgY29s
dW1uSW5kZXggPSB0aGlzLl9fc29ydENvbHVtbkluZGV4OwoJCWlmIChhc2NlbmRpbmcgPT0gdW5k
ZWZpbmVkKQoJCSAgICBhc2NlbmRpbmcgPSB0aGlzLl9fc29ydEFzY2VuZGluZzsKCgkJdmFyIGNv
bXBhcmF0b3I7CgkJdmFyIHNvcnRNZXRob2RzID0gdGhpcy5fX3NvcnRNZXRob2RzW2NvbHVtbklu
ZGV4XTsKCQlpZiAoc29ydE1ldGhvZHMpCgkJICAgIGNvbXBhcmF0b3IgPSAoYXNjZW5kaW5nID8g
c29ydE1ldGhvZHMuYXNjZW5kaW5nIDogc29ydE1ldGhvZHMuZGVzY2VuZGluZyk7CgkJZWxzZSBp
ZiAodGhpcy5nZXRDYXNlU2Vuc2l0aXZlU29ydGluZygpKQoJCSAgICBjb21wYXJhdG9yID0gKGFz
Y2VuZGluZwoJCQkJICA/IHF4LnVpLnRhYmxlLm1vZGVsLlNpbXBsZS5fZGVmYXVsdFNvcnRDb21w
YXJhdG9yQXNjZW5kaW5nCgkJCQkgIDogcXgudWkudGFibGUubW9kZWwuU2ltcGxlLl9kZWZhdWx0
U29ydENvbXBhcmF0b3JEZXNjZW5kaW5nKTsKCQllbHNlCgkJICAgIGNvbXBhcmF0b3IgPSAoYXNj
ZW5kaW5nCgkJCQkgID8gcXgudWkudGFibGUubW9kZWwuU2ltcGxlLl9kZWZhdWx0U29ydENvbXBh
cmF0b3JJbnNlbnNpdGl2ZUFzY2VuZGluZwoJCQkJICA6IHF4LnVpLnRhYmxlLm1vZGVsLlNpbXBs
ZS5fZGVmYXVsdFNvcnRDb21wYXJhdG9ySW5zZW5zaXRpdmVEZXNjZW5kaW5nKTsKCQljb21wYXJh
dG9yLmNvbHVtbkluZGV4ID0gY29sdW1uSW5kZXg7CgkJcmV0dXJuIGNvbXBhcmF0b3I7CgkgICAg
fSwKCgkgICAgLy8gb3ZlcnJpZGRlbgoJICAgIHNvcnRCeUNvbHVtbiA6IGZ1bmN0aW9uKGNvbHVt
bkluZGV4LCBhc2NlbmRpbmcsIGZvcmNlKSB7CgkJaWYgKGZvcmNlID09IHVuZGVmaW5lZCkgCgkJ
ICAgIGZvcmNlID0gZmFsc2U7CgoJCS8vCgkJLy8gSWYgb25seSB0aGUgYXNjZW5kaW5nIGJvb2xl
YW4gaXMgY2hhbmdpbmcsIHRoZW4gd2UgY2FuIGRvIE8obikgd29yayBpbnN0ZWFkIG9mCgkJLy8g
TyhuIGxnIG4pIHdvcmsganVzdCBieSByZXZlcnNpbmcgdGhlIGFycmF5LgoJCS8vCgkJaWYgKCFm
b3JjZSAmJiB0aGlzLl9fc29ydENvbHVtbkluZGV4ID09IGNvbHVtbkluZGV4KSB7CgkJICAgIGlm
ICh0aGlzLl9fc29ydEFzY2VuZGluZyA9PSBhc2NlbmRpbmcpCgkJCXJldHVybjsgLy8gbm8gY2hh
bmdlIHRvIHNvcnQKCgkJICAgIC8vIFJldmVyc2UgYWxsIHZpZXcgYmFja2luZyBhcnJheXMKCQkg
ICAgZm9yICh2YXIgdiA9IDA7IHYgPCB0aGlzLl9fdmlld3M7IHYrKykKCQkJdGhpcy5nZXRSb3dB
cnJheSh2KS5yZXZlcnNlKCk7CgoJCSAgICB0aGlzLl9fc29ydEFzY2VuZGluZyA9IGFzY2VuZGlu
ZzsKCQl9CgkJZWxzZSB7CgkJICAgIC8vCgkJICAgIC8vIFdlIG5lZWQgdG8gZG8gYSBmdWxsIHJl
LXNvcnQgb2YgYWxsIHZpZXdzLgoJCSAgICAvLwoJCSAgICB2YXIgY29tcGFyYXRvciA9IHRoaXMu
Z2V0Q29tcGFyYXRvcigpOwoJCSAgICBjb21wYXJhdG9yLmNvbHVtbkluZGV4ID0gY29sdW1uSW5k
ZXg7CgoJCSAgICAvLyBTb3J0IGFsbCB2aWV3cyB1c2luZyB0aGUgY29tcGFyYXRvcgoJCSAgICBm
b3IgKHZhciB2ID0gMDsgdiA8IHRoaXMuX192aWV3czsgdisrKQoJCQl0aGlzLmdldFJvd0FycmF5
KHYpLnNvcnQoY29tcGFyYXRvcik7CgoJCSAgICAvLyBSZWNvcmQgaG93IHdlJ3JlIG5vdyBzb3J0
ZWQKCQkgICAgdGhpcy5fX3NvcnRDb2x1bW5JbmRleCA9IGNvbHVtbkluZGV4OwoJCSAgICB0aGlz
Ll9fc29ydEFzY2VuZGluZyA9IGFzY2VuZGluZzsKCQl9CgoJCS8vIFJlYnVpbGQgYWxsIGFzc29j
aWF0aW9uIG1hcHMgZnJvbSBzY3JhdGNoCgkJdGhpcy5fX3VwZGF0ZUFzc29jaWF0aW9uTWFwcygp
OwoKCQkvLyBOb3RpZnkgbGlzdGVuZXJzCgkJdGhpcy5maXJlRXZlbnQocXgudWkudGFibGUuSVRh
YmxlTW9kZWwuRVZFTlRfVFlQRV9NRVRBX0RBVEFfQ0hBTkdFRCk7CgkgICAgfSwKCgkgICAgLy8g
Y2xlYXJTb3J0aW5nIHJlcXVpcmVzIG5vIG92ZXJyaWRlIChhbmQgaXQncyBuZXZlciBuZWNlc3Nh
cnkgZm9yIGEgU21hcnQgbW9kZWwpCgoJICAgIC8vIENvbXBsZXRlbHkgcmUtc29ydCBldmVyeXRo
aW5nLgoJICAgIF9yZXNvcnQ6IGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5pc1NvcnRlZCgpKQoJ
CSAgICB0aGlzLnNvcnRCeUNvbHVtbih0aGlzLl9fc29ydENvbHVtbkluZGV4LCB0aGlzLl9fc29y
dEFzY2VuZGluZywgLypmb3JjZToqLyB0cnVlKTsKCSAgICB9LAoKCSAgICAvL292ZXJyaWRlCgkg
ICAgc2V0U29ydE1ldGhvZHM6IGZ1bmN0aW9uKGNvbHVtbkluZGV4LCBtZXRob2RzKSB7CgkJYXJn
dW1lbnRzLmNhbGxlZS5iYXNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CgoJCS8vCgkJLy8gSWYg
d2UncmUgY3VycmVudGx5IHNvcnRlZCBhbmQgdGhlIGNvbXBhcmF0b3IgaGFzIGNoYW5nZWQgZm9y
IHRoZSBjb2x1bW4gd2UncmUKCQkvLyBzb3J0ZWQgb24sIGZvcmNlIGEgZnVsbCByZS1zb3J0LgoJ
CS8vCgkJaWYgKGNvbHVtbkluZGV4ID09IHRoaXMuX19zb3J0Q29sdW1uSW5kZXgpCgkJICAgIHRo
aXMuX3Jlc29ydCgpOwoJICAgIH0sCgkgICAgCgkgICAgLy8KCSAgICAvLyBVVElMSVRZIE1FVEhP
RFMKCSAgICAvLwoKCSAgICAvKgoJICAgICAqIEJpbmFyeSBzZWFyY2ggdXNpbmcgdGhyZWUtd2F5
IGNvbXBhcmF0b3IuIFJldHVybnMgdGhlIGluZGV4IG9mIGVsZW1lbnQgZSBpZiBpdCdzIGluIHRo
ZSBhcnJheQoJICAgICAqIEEuIElmIGUgaXMgbm90IGluIEEsIHJldHVybiB0aGUgbmVnYXRlZCBp
bmRleCBvZiB0aGUgZWxlbWVudCB0aGF0IGUgd291bGQgaW1tZWRpYXRlbHkKCSAgICAgKiBwcmVj
ZWRlLCBtaW51cyBvbmUuIChJLmUuLCBzZXQgaW5zZXJ0aW9uX3BvaW50ID0gLXJldHVybnZhbHVl
IC0gMSkgVGhlIHJldHVybiB2YWx1ZSBpcyBkZWZpbmVkCgkgICAgICogdG8gYXZvaWQgYW1iaWd1
aXR5IG9mIHRoZSAwIHJldHVybiB2YWx1ZS4KCSAgICAgKgoJICAgICAqIFRoaXMgaXMgYWN0dWFs
bHkgcHJldHR5IHN1YnRsZToKCSAgICAgKgoJICAgICAqICAgaHR0cDovL2dvb2dsZXJlc2VhcmNo
LmJsb2dzcG90LmNvbS8yMDA2LzA2L2V4dHJhLWV4dHJhLXJlYWQtYWxsLWFib3V0LWl0LW5lYXJs
eS5odG1sCgkgICAgICovCgkgICAgX19iaW5zZWFyY2g6IGZ1bmN0aW9uKEEsIGUsIGNvbXBhcmF0
b3IsIGxvLCBoaSkgewoJCWlmIChsbyA9PSB1bmRlZmluZWQpIAoJCSAgICBsbyA9IDA7CgkJaWYg
KGhpID09IHVuZGVmaW5lZCkgCgkJICAgIGhpID0gQS5sZW5ndGggLSAxOwoKCQl3aGlsZSAobG8g
PD0gaGkpIHsKCQkgICAgdmFyIG1pZCA9IChsbyArIGhpKSA+Pj4gMTsKCQkgICAgdmFyIGNtcCA9
IGNvbXBhcmF0b3IoQVttaWRdLCBlKTsKCQkgICAgaWYgKGNtcCA8IDApCgkJCWxvID0gbWlkICsg
MTsKCQkgICAgZWxzZSBpZiAoY21wID4gMCkKCQkJaGkgPSBtaWQgLSAxOwoJCSAgICBlbHNlCgkJ
CXJldHVybiBtaWQ7CS8vIGUgaXMgaW4gQTsgcmV0dXJuIGluZGV4IG9mIGUgaW4gQQoJCX0KCgkJ
cmV0dXJuIC0obG8gKyAxKTsJLy8gZSBpcyBub3QgaW4gQTsgcmV0dXJuIGluc2VydGlvbiBwb2lu
dAoJICAgIH0sCgoJICAgIC8vIERlYnVnIG1lc3NhZ2UKCSAgICBfX2RlYnVnOiBmdW5jdGlvbiht
c2cpIHsKCQlpZiAocXguY29yZS5WYXJpYW50LmlzU2V0KCJxeC5kZWJ1ZyIsICJvbiIpKQoJCSAg
ICAvL2lmIChxeC5jb3JlLlNldHRpbmcuZ2V0KCJxeC5TbWFydE1vZGVsRGVidWciKSkKCQkJaWYg
KHRoaXMuX19fZGVidWcpCgkJCSAgICB0aGlzLmRlYnVnKG1zZyk7CgkgICAgfSwKCgkgICAgLy8g
RHVtcCBhbiBvYmplY3QgdG8gdGhlIGRlYnVnIGxvZwoJICAgIF9fZGVidWdvYmo6IGZ1bmN0aW9u
KG9iaiwgbXNnLCBvd24pIHsKCQlpZiAobXNnID09IHVuZGVmaW5lZCkKCQkgICAgbXNnID0gIiI7
CgkJaWYgKG93biA9PSB1bmRlZmluZWQpCgkJICAgIG93biA9IHRydWU7CgoJCXRoaXMuX19kZWJ1
Zyhtc2cgKyAiICgiICArIChvYmogPyAob2JqICArICIpOiIpIDogIik6IChudWxsKSIpKTsKCgkJ
aWYgKG9iaiA9PSBudWxsIHx8IG9iaiA9PSB1bmRlZmluZWQpIHsKCQkgICAgdGhpcy5fX2RlYnVn
KCIuLi4obm8gcHJvcGVydGllcykiKTsKCQkgICAgcmV0dXJuOwoJCX0KCgkJZm9yICh2YXIgcHJv
cCBpbiBvYmopIHsKCQkgICAgaWYgKG93biAmJiAhb2JqLmhhc093blByb3BlcnR5KHByb3ApKQoJ
CQljb250aW51ZTsKCQkgICAgdGhpcy5fX2RlYnVnKCIuLi4iICsgcHJvcCArICI6ICIgKyBvYmpb
cHJvcF0pOwoJCX0KCSAgICB9Cgl9LAoKCWRlc3RydWN0IDogZnVuY3Rpb24oKSB7CgkgICAgdGhp
cy5fZGlzcG9zZUZpZWxkcygKCQkJCSJfX2ZpbHRlcnMiLAoJCQkJIl9fY29uanVuY3Rpb25zIiwK
CQkJCSJfX2JhY2tpbmdzdG9yZSIsCgkJCQkiX19hc3NvYyIsCgkJCQkiX19pbmRpY2VzIgoJCQkJ
KTsKCX0KICAgIH0pOwo=
</data>

          </attachment>
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>527</attachid>
            <date>2009-06-16 17:57:00 +0200</date>
            <delta_ts>2009-06-16 17:57:15 +0200</delta_ts>
            <desc>qx.ui.table.model.Smart unit tests mixin</desc>
            <filename>MSmartUnitTests.js</filename>
            <type>application/x-javascript</type>
            <size>27582</size>
            <attacher>qooxdoo</attacher>
            
              <data encoding="base64">LyogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCgogICAgcW9veGRvbyAtIHRoZSBuZXcgZXJhIG9mIHdlYiBkZXZl
bG9wbWVudAoKICAgIGh0dHA6Ly9xb294ZG9vLm9yZwoKICAgIENvcHlyaWdodDoKICAgICAgMjAw
OSBieSBBcmNvZGUgQ29ycG9yYXRpb24KCiAgICAgTGljZW5zZToKICAgICAgIExHUEw6IGh0dHA6
Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9sZ3BsLmh0bWwKICAgICAgIEVQTDogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9vcmcvZG9jdW1lbnRzL2VwbC12MTAucGhwCiAgICAgICBTZWUgdGhlIExJQ0VO
U0UgZmlsZSBpbiB0aGUgcHJvamVjdCdzIHRvcC1sZXZlbCBkaXJlY3RvcnkgZm9yIGRldGFpbHMu
CgogICAgQXV0aG9yczoKICAgICAgKiBEYXZlIEJhZ2dldHQKCioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwoK
LyoqCiAqIFVuaXQgdGVzdHMgZm9yIHNtYXJ0IHRhYmxlIG1vZGVsLiBJbXBsZW1lbnRlZCBhcyBh
IG1peGluIHNvIGl0IHdvbid0IGNsdXR0ZXIgdXAgdGhlIG1haW4gc291cmNlLgogKi8KcXguTWl4
aW4uZGVmaW5lKCJxeC51aS50YWJsZS5tb2RlbC5NU21hcnRVbml0VGVzdHMiLCB7CgltZW1iZXJz
OiB7CgkgICAgLy8KCSAgICAvLyBVTklUIFRFU1RJTkcKCSAgICAvLwoJICAgIHRlc3RzRmFpbGVk
OiBmYWxzZSwKCSAgICBfX3J1blRlc3Q6IGZ1bmN0aW9uIChuYW1lLCBmKSB7CgkJdmFyIGZhaWxl
ZCA9IGZhbHNlOwoJCXRyeSB7CgkJICAgIGlmICghZi5jYWxsKHRoaXMpKQoJCQlmYWlsZWQgPSB0
cnVlOwoJCX0KCQljYXRjaCAoZSkgewoJCSAgICB0aGlzLl9fZGVidWcoZSk7CgkJICAgIGZhaWxl
ZCA9IHRydWU7CgkJfQoJCWlmIChmYWlsZWQpCgkJICAgIHRoaXMuX19kZWJ1ZygidW5pdCB0ZXN0
IGZhaWxlZDogIiArIG5hbWUpOwoJCWVsc2UgewoJCSAgICAvL3RoaXMuX19kZWJ1ZygidW5pdCB0
ZXN0IHBhc3NlZDogIiArIG5hbWUpOwoJCX0KCQlpZiAoZmFpbGVkKQoJCSAgICB0aGlzLnRlc3Rz
RmFpbGVkID0gdHJ1ZTsKCQlyZXR1cm4gIWZhaWxlZDsKCSAgICB9LAoKCSAgICAvLwoJICAgIC8v
IFRoaXMgcnVucyBhIGJ1bmNoIG9mIHVuaXQgdGVzdHMgYW5kIHJldHVybnMgdHJ1ZSBpZiB0aGV5
IGFsbCBwYXNzOyBmYWxzZSBvdGhlcndpc2UuCgkgICAgLy8KCSAgICB1bml0VGVzdDogZnVuY3Rp
b24gKCkgewoJCXRyeSB7CiAJCSAgICB0aGlzLl9fdW5pdFRlc3QoKTsKCQl9CgkJY2F0Y2ggKGUp
IHsKCQkgICAgdGhpcy5fX2RlYnVnKGUpOwoJCX0KCSAgICB9LAoKCSAgICBfX3VuaXRUZXN0OiBm
dW5jdGlvbiAoKSB7CgkJdmFyIGksIGZhaWxlZCA9IGZhbHNlOwoJCXZhciBtb2RlbCA9IG5ldyBx
eC51aS50YWJsZS5tb2RlbC5TbWFydCgpOwoKCQkvLyBFc3RhYmxpc2ggY29sdW1ucwoJCXZhciBj
b2x1bW5zID0geyAibnVtYmVyIjogMCwgInN0cmluZyI6IDEsICJvYmplY3QiOiAyLCAiZnVuY3Rp
b24iOiAzLCAicmFuZG9tIjogNCB9OwoJCW1vZGVsLnNldENvbHVtbnMoZnVuY3Rpb24gKCkgeyAK
CQkJQyA9IFtdOyAKCQkJZm9yIChuYW1lIGluIGNvbHVtbnMpIHsKCQkJICAgIHZhciBpbmRleCA9
IGNvbHVtbnNbbmFtZV07CgkJCSAgICBDW2luZGV4XSA9IG5hbWU7CgkJCX0KCQkJcmV0dXJuIEM7
IAoJCSAgICB9KCkpOwoKCQl0aGlzLl9fcnVuVGVzdCgiMC5nZXRDb2x1bW5JbmRleEJ5SWQiLAoJ
CQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChuYW1lIGluIGNvbHVtbnMpIHsKCQkJ
CSAgICAgICB2YXIgaW5kZXggPSBjb2x1bW5zW25hbWVdOwoJCQkJICAgICAgIGlmIChtb2RlbC5n
ZXRDb2x1bW5JbmRleEJ5SWQobmFtZSkgIT0gaW5kZXgpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJ
CQkJICAgfQoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCgkJLy8gQWRkIGFuIGlu
ZGV4IGZvciB0aGUgbnVtYmVyIGNvbHVtbgoJCW1vZGVsLmFkZEluZGV4KGNvbHVtbnNbIm51bWJl
ciJdKTsKCgkJLy8gRXN0YWJsaXNoIHNvcnRpbmcgYnkgY29sdW1uIDAKCQltb2RlbC5zb3J0QnlD
b2x1bW4oY29sdW1uc1sibnVtYmVyIl0sIC8qYXNjZW5kaW5nOiovIHRydWUpOwoKCQkvLyBDcmVh
dGUgYSB2aWV3OiBmaWx0ZXIgcm93cyB3aXRoIG9kZC1sZW5ndGggc3RyaW5nIHZhbHVlcyAoY29s
dW1uIDEpCgkJbW9kZWwuYWRkVmlldyhmdW5jdGlvbiAoUikgeyByZXR1cm4gUltjb2x1bW5zWyJz
dHJpbmciXV0ubGVuZ3RoICYgMTsgfSk7CgoJCS8vIENyZWF0ZSBzb21lIHJvd3MKCQl2YXIgTiA9
IDEwMCwgY291bnQgPSAxMDA7CgkJdmFyIHJvd3MgPSBbXTsKCQlmb3IgKGkgPSAwOyBpIDwgTjsg
aSsrKQoJCSAgICByb3dzLnB1c2goW2ksICIiICsgaSwgbmV3IHF4LnVpLmJhc2ljLkxhYmVsKCIi
ICsgaSksIGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ID09IGk7IH0sIE1hdGgucmFuZG9tKCldKTsK
CgkJLy8gQWRkIHRoZSByb3dzIHRvIHRoZSBtb2RlbAoJCW1vZGVsLmFkZFJvd3Mocm93cyk7CgoJ
CXRoaXMuX19ydW5UZXN0KCIxLmFkZFJvd3MudmlldzAuZ2V0Um93Q291bnQiLAoJCQkgICAgICAg
ZnVuY3Rpb24gKCkgewoJCQkJICAgcmV0dXJuIChtb2RlbC5nZXRSb3dDb3VudCgpID09IGNvdW50
KTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxLmFkZFJvd3MudmlldzAubnVtYmVy
LmdldFZhbHVlIiwgCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAwOyBp
IDwgTjsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIi
XSwgaSkgIT0gaSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJ
ICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxLmFkZFJvd3MudmlldzAubnVtYmVyLmdldFZh
bHVlQnlJZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAwOyBpIDwg
TjsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZUJ5SWQoIm51bWJlciIsIGkpICE9
IGkpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9
KTsKCgkJLy8gRXhwbGljaXRseSBzZXQgdGhlIGRhdGEgLS0gc2hvdWxkIGhhdmUgdGhlIHNhbWUg
ZWZmZWN0IGFzIGFib3ZlCgkJbW9kZWwuc2V0RGF0YShyb3dzKTsKCgkJdGhpcy5fX3J1blRlc3Qo
IjIuc2V0RGF0YS52aWV3MC5nZXRSb3dDb3VudCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJ
CQkgICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50KCkgPT0gTik7CgkJCSAgICAgICB9KTsKCQl0
aGlzLl9fcnVuVGVzdCgiMi5zZXREYXRhLnZpZXcwLm51bWJlci5nZXRWYWx1ZSIsIAoJCQkgICAg
ICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMDsgaSA8IE47IGkrKykKCQkJCSAgICAg
ICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpICE9IGkpCgkJCQkJICAg
cmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9f
cnVuVGVzdCgiMi5zZXREYXRhLnZpZXcwLm51bWJlci5nZXRWYWx1ZUJ5SWQiLAoJCQkgICAgICAg
ZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMDsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7
IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWVCeUlkKCJudW1iZXIiLCBpKSAhPSBp
KQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7
CgkJdGhpcy5fX3J1blRlc3QoIjIuc2V0RGF0YS52aWV3MC5udW1iZXIuYXNzZXJ0LWlzLXNvcnRl
ZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwu
Z2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5z
WyJudW1iZXIiXSwgaSAtIDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkp
KQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7
CgkJdGhpcy5fX3J1blRlc3QoIjIuc2V0RGF0YS52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRl
ZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwu
Z2V0Um93Q291bnQoLyp2aWV3OiovIDEpOyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZh
bHVlKGNvbHVtbnNbIm51bWJlciJdLCBpIC0gMSwgLyp2aWV3OiovIDEpID4gCgkJCQkJICAgbW9k
ZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGksIC8qdmlldzogKi8gMSkpCgkJCQkJICAg
cmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCgkJLy8gQWRk
IG1vcmUgcm93cywgYWxsIHRvIHRoZSBiZWdpbm5pbmcJCgkJcm93cyA9IFtdOwoJCWZvciAoaSA9
IC0xMDsgaSA8IDA7IGkrKykKCQkgICAgcm93cy5wdXNoKFtpLCAiIiArIGksIG5ldyBxeC51aS5i
YXNpYy5MYWJlbCgiIiArIGkpLCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geCA9PSBpOyB9LCBNYXRo
LnJhbmRvbSgpXSk7CgkJbW9kZWwuYWRkUm93cyhyb3dzKTsKCQljb3VudCArPSAxMDsKCgkJdGhp
cy5fX3J1blRlc3QoIjMuYWRkUm93cy52aWV3MC5nZXRSb3dDb3VudCIsCgkJCSAgICAgICBmdW5j
dGlvbiAoKSB7CgkJCQkgICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50KCkgPT0gY291bnQpOwoJ
CQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjMuYWRkUm93cy52aWV3MC5udW1iZXIuZ2V0
VmFsdWUiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMDsgaSA8IG1v
ZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29s
dW1uc1sibnVtYmVyIl0sIGkpICE9IGkgLSAxMCkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkg
ICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIzLmFkZFJvd3Mu
dmlldzAubnVtYmVyLmdldFZhbHVlQnlJZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkg
ICBmb3IgKGkgPSAwOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlm
IChtb2RlbC5nZXRWYWx1ZUJ5SWQoIm51bWJlciIsIGkpICE9IGkgLSAxMCkKCQkJCQkgICByZXR1
cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5U
ZXN0KCIzLmFkZFJvd3MudmlldzAubnVtYmVyLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAg
ZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7
IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkg
LSAxKSA+IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1
cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5U
ZXN0KCIzLmFkZFJvd3MudmlldzEubnVtYmVyLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAg
ZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KC8q
dmlldzoqLyAxKTsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJu
dW1iZXIiXSwgaSAtIDEsIC8qdmlldzoqLyAxKSA+IAoJCQkJCSAgIG1vZGVsLmdldFZhbHVlKGNv
bHVtbnNbIm51bWJlciJdLCBpLCAvKnZpZXc6ICovIDEpKQoJCQkJCSAgIHJldHVybiBmYWxzZTsK
CQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgoJCS8vIEFkZCBtb3JlIHJvd3MsIGFs
bCB0byB0aGUgZW5kCgkJcm93cyA9IFtdOwoJCWZvciAoaSA9IE47IGkgPCBOICsgMTA7IGkrKykK
CQkgICAgcm93cy5wdXNoKFtpLCAiIiArIGksIG5ldyBxeC51aS5iYXNpYy5MYWJlbCgiIiArIGkp
LCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geCA9PSBpOyB9LCBNYXRoLnJhbmRvbSgpXSk7CgkJbW9k
ZWwuYWRkUm93cyhyb3dzKTsKCQljb3VudCArPSAxMDsKCgkJdGhpcy5fX3J1blRlc3QoIjQuYWRk
Um93cy52aWV3MC5nZXRSb3dDb3VudCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBy
ZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50KCkgPT0gY291bnQpOwoJCQkgICAgICAgfSk7CgkJdGhp
cy5fX3J1blRlc3QoIjQuYWRkUm93cy52aWV3MC5udW1iZXIuZ2V0VmFsdWUiLCAKCQkJICAgICAg
IGZ1bmN0aW9uICgpIHsKCQkJCSAgIGZvciAoaSA9IDA7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgp
OyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBp
KSAhPSBpIC0gMTApCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJ
CSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiNC5hZGRSb3dzLnZpZXcwLm51bWJlci5nZXRW
YWx1ZUJ5SWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMDsgaSA8
IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWVC
eUlkKCJudW1iZXIiLCBpKSAhPSBpIC0gMTApCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAg
cmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiNC5hZGRSb3dzLnZp
ZXcwLm51bWJlci5hc3NlcnQtaXMtc29ydGVkIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJ
CSAgIGZvciAoaSA9IDE7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgpOyBpKyspCgkJCQkgICAgICAg
aWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpIC0gMSkgPiBtb2RlbC5nZXRW
YWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSkpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAg
cmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiNC5hZGRSb3dzLnZp
ZXcxLm51bWJlci5hc3NlcnQtaXMtc29ydGVkIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJ
CSAgIGZvciAoaSA9IDE7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgvKnZpZXc6Ki8gMSk7IGkrKykK
CQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxLCAv
KnZpZXc6Ki8gMSkgPiAKCQkJCQkgICBtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwg
aSwgLyp2aWV3OiAqLyAxKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1
ZTsKCQkJICAgICAgIH0pOwoKCQkvLyBBZGQgbW9yZSByb3dzLCBpbnRlcmxlYXZlZAoJCXJvd3Mg
PSBbXTsKCQlmb3IgKGkgPSAwOyBpIDwgTjsgaSsrKSB7CgkJICAgIHZhciBJID0gaSArIDAuNTsK
CQkgICAgcm93cy5wdXNoKFtJLCAiIiArIEksIG5ldyBxeC51aS5iYXNpYy5MYWJlbCgiIiArIEkp
LCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geCA9PSBJOyB9LCBNYXRoLnJhbmRvbSgpXSk7CgkJfQoJ
CW1vZGVsLmFkZFJvd3Mocm93cyk7CgkJY291bnQgKz0gTjsKCgkJdGhpcy5fX3J1blRlc3QoIjUu
cmVtb3ZlUm93cy52aWV3MC5nZXRSb3dDb3VudCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJ
CQkgICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50KCkgPT0gY291bnQpOwoJCQkgICAgICAgfSk7
CgkJdGhpcy5fX3J1blRlc3QoIjUuc2V0RGF0YS52aWV3MC5udW1iZXIuYXNzZXJ0LWlzLXNvcnRl
ZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwu
Z2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5z
WyJudW1iZXIiXSwgaSAtIDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkp
KQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7
CgkJdGhpcy5fX3J1blRlc3QoIjUuc2V0RGF0YS52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRl
ZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwu
Z2V0Um93Q291bnQoLyp2aWV3OiovIDEpOyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZh
bHVlKGNvbHVtbnNbIm51bWJlciJdLCBpIC0gMSwgLyp2aWV3OiovIDEpID4gCgkJCQkJICAgbW9k
ZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGksIC8qdmlldzogKi8gMSkpCgkJCQkJICAg
cmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCgkJLy8gUmVt
b3ZlIHJvd3MgZnJvbSBtaWRkbGUKCQltb2RlbC5yZW1vdmVSb3dzKE4gPj4gMiwgTiA+PiAxKTsK
CQljb3VudCAtPSAoTiA+PiAxKTsKCgkJdGhpcy5fX3J1blRlc3QoIjYucmVtb3ZlUm93cy52aWV3
MC5nZXRSb3dDb3VudCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gKG1v
ZGVsLmdldFJvd0NvdW50KCkgPT0gY291bnQpOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRl
c3QoIjYuc2V0RGF0YS52aWV3MC5udW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsg
aSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAt
IDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpKQoJCQkJCSAgIHJldHVy
biBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRl
c3QoIjYuc2V0RGF0YS52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoLyp2
aWV3OiovIDEpOyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51
bWJlciJdLCBpIC0gMSwgLyp2aWV3OiovIDEpID4gCgkJCQkJICAgbW9kZWwuZ2V0VmFsdWUoY29s
dW1uc1sibnVtYmVyIl0sIGksIC8qdmlldzogKi8gMSkpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJ
CQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCgkJLy8gUmVtb3ZlIHJvd3MgZnJvbSBi
ZWdpbm5pbmcKCQltb2RlbC5yZW1vdmVSb3dzKDAsIDUpOwoJCWNvdW50IC09IDU7CgoJCXRoaXMu
X19ydW5UZXN0KCI3LnJlbW92ZVJvd3MudmlldzAuZ2V0Um93Q291bnQiLAoJCQkgICAgICAgZnVu
Y3Rpb24gKCkgewoJCQkJICAgcmV0dXJuIChtb2RlbC5nZXRSb3dDb3VudCgpID09IGNvdW50KTsK
CQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCI3LnNldERhdGEudmlldzAubnVtYmVyLmFz
c2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0g
MTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0
VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxKSA+IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNb
Im51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsK
CQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCI3LnNldERhdGEudmlldzEubnVtYmVyLmFz
c2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0g
MTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KC8qdmlldzoqLyAxKTsgaSsrKQoJCQkJICAgICAgIGlm
IChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAtIDEsIC8qdmlldzoqLyAxKSA+
IAoJCQkJCSAgIG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpLCAvKnZpZXc6ICov
IDEpKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAg
fSk7CgoJCS8vIFJlbW92ZSByb3dzIGZyb20gZW5kLCBvbWl0dGluZyBob3dNYW55IHBhcmFtZXRl
cgoJCW1vZGVsLnJlbW92ZVJvd3MobW9kZWwuZ2V0Um93Q291bnQoKSAtIDUpOwoJCWNvdW50IC09
IDU7CgoJCXRoaXMuX19ydW5UZXN0KCI4LnJlbW92ZVJvd3MudmlldzAuZ2V0Um93Q291bnQiLAoJ
CQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgcmV0dXJuIChtb2RlbC5nZXRSb3dDb3VudCgp
ID09IGNvdW50KTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCI4LnNldERhdGEudmll
dzAubnVtYmVyLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJ
ICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBp
ZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxKSA+IG1vZGVsLmdldFZh
bHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICBy
ZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCI4LnNldERhdGEudmll
dzEubnVtYmVyLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJ
ICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KC8qdmlldzoqLyAxKTsgaSsrKQoJ
CQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAtIDEsIC8q
dmlldzoqLyAxKSA+IAoJCQkJCSAgIG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBp
LCAvKnZpZXc6ICovIDEpKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVl
OwoJCQkgICAgICAgfSk7CgoJCS8vIFJlbW92ZSBhIHNpbmdsZSByb3cgZnJvbSBiZWdpbm5pbmcs
IGVuZCwgYW5kIG1pZGRsZQoJCW1vZGVsLnJlbW92ZVJvd3MoMCwgMSk7CgkJbW9kZWwucmVtb3Zl
Um93cyhtb2RlbC5nZXRSb3dDb3VudCgpIC0gMSk7CgkJbW9kZWwucmVtb3ZlUm93cyhtb2RlbC5n
ZXRSb3dDb3VudCgpID4+IDEsIDEpOwoJCWNvdW50IC09IDM7CgoJCXRoaXMuX19ydW5UZXN0KCI5
LnJlbW92ZVJvd3MudmlldzAuZ2V0Um93Q291bnQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJ
CQkJICAgcmV0dXJuIChtb2RlbC5nZXRSb3dDb3VudCgpID09IGNvdW50KTsKCQkJICAgICAgIH0p
OwoJCXRoaXMuX19ydW5UZXN0KCI5LnNldERhdGEudmlldzAubnVtYmVyLmFzc2VydC1pcy1zb3J0
ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMTsgaSA8IG1vZGVs
LmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1u
c1sibnVtYmVyIl0sIGkgLSAxKSA+IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBp
KSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0p
OwoKCQkvLyBBZGQgYSBzaW5nbGUgcm93IHRvIGJlZ2lubmluZywgZW5kLCBhbmQgbWlkZGxlCgkJ
dmFyIFYxID0gMzMuMzMsIFYyID0gLTEwMDAwLCBWMyA9IDEwMDAwOwoJCW1vZGVsLmFkZFJvd3Mo
W1tWMSwgIiIgKyBWMSwgbmV3IHF4LnVpLmJhc2ljLkxhYmVsKCIiICsgVjEpLCBmdW5jdGlvbiAo
eCkgeyByZXR1cm4geCA9PSBWMTsgfSwgTWF0aC5yYW5kb20oKV1dKTsKCQltb2RlbC5hZGRSb3dz
KFtbVjIsICIiICsgVjIsIG5ldyBxeC51aS5iYXNpYy5MYWJlbCgiIiArIFYyKSwgZnVuY3Rpb24g
KHgpIHsgcmV0dXJuIHggPT0gVjI7IH0sIE1hdGgucmFuZG9tKCldXSk7CgkJbW9kZWwuYWRkUm93
cyhbW1YzLCAiIiArIFYzLCBuZXcgcXgudWkuYmFzaWMuTGFiZWwoIiIgKyBWMyksIGZ1bmN0aW9u
ICh4KSB7IHJldHVybiB4ID09IFYzOyB9LCBNYXRoLnJhbmRvbSgpXV0pOwoJCWNvdW50ICs9IDM7
CgoJCXRoaXMuX19ydW5UZXN0KCIxMC5hZGRSb3dzLnZpZXcwLmdldFJvd0NvdW50IiwKCQkJICAg
ICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0Um93Q291bnQoKSA9PSBj
b3VudCk7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMTAuYWRkUm93cy52aWV3MC5u
dW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBm
b3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmICht
b2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAtIDEpID4gbW9kZWwuZ2V0VmFsdWUo
Y29sdW1uc1sibnVtYmVyIl0sIGkpKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVy
biB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjEwLmFkZFJvd3MudmlldzAu
bnVtYmVyLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAg
Zm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAo
bW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxKSA+IG1vZGVsLmdldFZhbHVl
KGNvbHVtbnNbIm51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1
cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoKCgkJLy8gRmluZCByb3dzIGJ5IGluZGV4CgkJdGhpcy5f
X3J1blRlc3QoIjExLnZpZXcwLmxvY2F0ZS5WMiIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJ
CQkgICByZXR1cm4gKG1vZGVsLmxvY2F0ZShjb2x1bW5zWyJudW1iZXIiXSwgVjIpID09IDApOwoJ
CQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjExLnZpZXcwLmxvY2F0ZS5WMyIsCgkJCSAg
ICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gKG1vZGVsLmxvY2F0ZShjb2x1bW5zWyJu
dW1iZXIiXSwgVjMpID09IG1vZGVsLmdldFJvd0NvdW50KCkgLSAxKTsKCQkJICAgICAgIH0pOwoK
CQkvLyBDaGFuZ2UgYSB2YWx1ZSB0aGF0IGhhcyBubyBlZmZlY3Qgb24gc29ydGluZywgaW5kZXhp
bmcsIG9yIGZpbHRlcmluZwoJCW1vZGVsLnNldFZhbHVlKGNvbHVtbnNbIm9iamVjdCJdLCA1LCBu
dWxsKTsKCgkJdGhpcy5fX3J1blRlc3QoIjEyLnNldFZhbHVlLnZpZXcwLmdldFZhbHVlIiwKCQkJ
ICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0VmFsdWUoY29sdW1u
c1sib2JqZWN0Il0sIDUpID09IG51bGwpOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3Qo
IjEyLnNldFZhbHVlLnZpZXcwLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24g
KCkgewoJCQkJICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJ
CSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxKSA+IG1v
ZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7
CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxMi5z
ZXRWYWx1ZS52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBmdW5jdGlv
biAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsgaSsrKQoJ
CQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAtIDEpID4g
bW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpKQoJCQkJCSAgIHJldHVybiBmYWxz
ZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgoJCS8vIENoYW5nZSBhIHZhbHVl
IHRoYXQgYWZmZWN0cyBmaWx0ZXJpbmcKCgkJLy8KCQkvLyBGaW5kIGEgcm93IHdpdGggYW4gZXZl
bi1sZW5ndGggdmFsdWUgaW4gdGhlIHN0cmluZyBjb2x1bW4gYW5kIG1ha2UgaXQgb2RkIGxlbmd0
aC4KCQkvLyBUaGlzIHNob3VsZCBjYXVzZSB0aGUgcm93IHRvIGJlIGZpbHRlcmVkIG91dCBvZiB2
aWV3IDEuCgkJLy8KCQl2YXIgdjBjb3VudCA9IG1vZGVsLmdldFJvd0NvdW50KCk7CgkJdmFyIHYx
Y291bnQgPSBtb2RlbC5nZXRSb3dDb3VudCgvKnZpZXc6Ki8gMSk7CgkJdmFyIFMxID0gInRlc3Qh
IjsJLy8gb2RkIGxlbmd0aDsgdGhlcmVmb3JlLCB0aGlzIHNob3VsZCBiZSBmaWx0ZXJlZCBvdXQg
b2YgdmlldyAxCgkJZm9yIChpID0gMDsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkg
ICAgaWYgKChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJzdHJpbmciXSwgaSkubGVuZ3RoICYgMSkg
PT0gMCkKCQkJYnJlYWs7CgkJdmFyIEkgPSBtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIi
XSwgaSk7CgkJbW9kZWwuc2V0VmFsdWUoY29sdW1uc1sic3RyaW5nIl0sIGksIFMxKTsKCgkJdGhp
cy5fX3J1blRlc3QoIjEzLnNldFZhbHVlLnZpZXcwLmdldFZhbHVlIiwKCQkJICAgICAgIGZ1bmN0
aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sic3RyaW5nIl0s
IGkpID09IFMxKTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxMy5zZXRWYWx1ZS52
aWV3MS5hc3NlcnQtaXMtZmlsdGVyZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAg
Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgvKnZpZXc6Ki8gMSk7IGkrKykK
CQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sic3RyaW5nIl0sIGksIC8qdmll
dzoqLyAxKSA9PSBTMSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsK
CQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxMy5zZXRWYWx1ZS52aWV3MS5hc3NlcnQt
bm90LWxvY2F0YWJsZSIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gbW9k
ZWwubG9jYXRlKGNvbHVtbnNbIm51bWJlciJdLCBJLCAvKnZpZXc6Ki8gMSkgPT0gdW5kZWZpbmVk
OwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjEzLnNldFZhbHVlLnZpZXcwLmFzc2Vy
dC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMTsg
aSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFs
dWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAxKSA+IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51
bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJ
ICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxMy5zZXRWYWx1ZS52aWV3MS5udW1iZXIuYXNz
ZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAx
OyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRW
YWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAtIDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1si
bnVtYmVyIl0sIGkpKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJ
CQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjEzLnNldFZhbHVlLnZpZXcwLmdldFJvd0Nv
dW50IiwJLy8gc2hvdWxkIGJlIHRoZSBzYW1lCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkg
ICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50KCkgPT0gdjBjb3VudCk7CgkJCSAgICAgICB9KTsK
CQl0aGlzLl9fcnVuVGVzdCgiMTMuc2V0VmFsdWUudmlldzEuZ2V0Um93Q291bnQiLAkvLyBzaG91
bGQgYmUgb25lIGxlc3MKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9k
ZWwuZ2V0Um93Q291bnQoLyp2aWV3OiovIDEpID09ICh2MWNvdW50IC0gMSkpOwoJCQkgICAgICAg
fSk7CgoJCS8vCgkJLy8gRmluZCBhIHJvdyB3aXRoIGFuIG9kZC1sZW5ndGggdmFsdWUgaW4gdGhl
IHN0cmluZyBjb2x1bW4gYW5kIG1ha2UgaXQgZXZlbiBsZW5ndGguCgkJLy8gVGhpcyBzaG91bGQg
Y2F1c2UgdGhlIHJvdyBhcHBlYXIgaW4gdmlldyAxLgoJCS8vCgkJdmFyIHYwY291bnQgPSBtb2Rl
bC5nZXRSb3dDb3VudCgpOwoJCXZhciB2MWNvdW50ID0gbW9kZWwuZ2V0Um93Q291bnQoLyp2aWV3
OiovIDEpOwoJCXZhciBTMiA9ICJ0ZXN0IjsJLy8gZXZlbiBsZW5ndGg7IHRoZXJlZm9yZSwgdGhp
cyBzaG91bGQgbm90IGJlIGZpbHRlcmVkIG91dCBvZiB2aWV3IDEKCQlmb3IgKGkgPSAwOyBpIDwg
bW9kZWwuZ2V0Um93Q291bnQoKTsgaSsrKQoJCSAgICBpZiAoKG1vZGVsLmdldFZhbHVlKGNvbHVt
bnNbInN0cmluZyJdLCBpKS5sZW5ndGggJiAxKSA9PSAxKQoJCQlicmVhazsKCQl2YXIgSSA9IG1v
ZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKTsKCQkvL3RoaXMuX19kZWJ1Z29iaiht
b2RlbC5nZXRSb3dEYXRhKGkpLCAicm93IGJlZm9yZSBzZXR0aW5nIHZhbHVlIik7CgkJLy90aGlz
Ll9fZGVidWdvYmoobW9kZWwuZ2V0Um93QXJyYXkoMSksICJ2aWV3IDEgYmVmb3JlIHNldHRpbmcg
dmFsdWUiKTsKCQltb2RlbC5zZXRWYWx1ZShjb2x1bW5zWyJzdHJpbmciXSwgaSwgUzIpOwoJCS8v
dGhpcy5fX2RlYnVnb2JqKG1vZGVsLmdldFJvd0RhdGEoaSksICJyb3cgYWZ0ZXIgc2V0dGluZyB2
YWx1ZSIpOwoJCS8vdGhpcy5fX2RlYnVnb2JqKG1vZGVsLmdldFJvd0FycmF5KDEpLCAidmlldyAx
IGFmdGVyIHNldHRpbmcgdmFsdWUiKTsKCgkJdGhpcy5fX3J1blRlc3QoIjE0LnNldFZhbHVlLnZp
ZXcwLmdldFZhbHVlIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9k
ZWwuZ2V0VmFsdWUoY29sdW1uc1sic3RyaW5nIl0sIGkpID09IFMyKTsKCQkJICAgICAgIH0pOwoJ
CXRoaXMuX19ydW5UZXN0KCIxNC5zZXRWYWx1ZS52aWV3MS5hc3NlcnQtaXMtbm90LWZpbHRlcmVk
IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW9k
ZWwuZ2V0Um93Q291bnQoLyp2aWV3OiovIDEpOyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdl
dFZhbHVlKGNvbHVtbnNbInN0cmluZyJdLCBpLCAvKnZpZXc6Ki8gMSkgPT0gUzIpCgkJCQkJICAg
cmV0dXJuIHRydWU7CgkJCQkgICByZXR1cm4gZmFsc2U7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9f
cnVuVGVzdCgiMTQuc2V0VmFsdWUudmlldzEuYXNzZXJ0LWxvY2F0YWJsZSIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gbW9kZWwubG9jYXRlKGNvbHVtbnNbIm51bWJlciJd
LCBJLCAvKnZpZXc6Ki8gMSkgIT0gdW5kZWZpbmVkOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1
blRlc3QoIjE0LnNldFZhbHVlLnZpZXcwLmFzc2VydC1pcy1zb3J0ZWQiLAoJCQkgICAgICAgZnVu
Y3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMTsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkr
KykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkgLSAx
KSA+IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKSkKCQkJCQkgICByZXR1cm4g
ZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0
KCIxNC5zZXRWYWx1ZS52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsg
aSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSAt
IDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpKQoJCQkJCSAgIHJldHVy
biBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRl
c3QoIjE0LnNldFZhbHVlLnZpZXcwLmdldFJvd0NvdW50IiwJLy8gc2hvdWxkIGJlIHRoZSBzYW1l
CgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50
KCkgPT0gdjBjb3VudCk7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMTQuc2V0VmFs
dWUudmlldzEuZ2V0Um93Q291bnQiLAkvLyBzaG91bGQgYmUgb25lIG1vcmUKCQkJICAgICAgIGZ1
bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0Um93Q291bnQoLyp2aWV3OiovIDEp
ID09ICh2MWNvdW50ICsgMSkpOwoJCQkgICAgICAgfSk7CgkJLy8KCQkvLyBDaGFuZ2UgYSB2YWx1
ZSBpbiB2aWV3IDEgdGhhdCBhZmZlY3RzIGluZGV4aW5nIGFuZCBzb3J0aW5nIGJ1dCBub3QgZmls
dGVyaW5nLgoJCS8vCgkJLy8gTm90ZSB0aGF0IHdlIGhhdmUgdG8gc2V0IGl0IHRvIGEgdW5pcXVl
IHZhbHVlIHNpbmNlIHRoaXMgY29sdW1uIGlzIHVzZWQgYXMgYW4KCQkvLyBpbmRleCEKCQkvLwoJ
CXYwY291bnQgPSBtb2RlbC5nZXRSb3dDb3VudCgpOwoJCXYxY291bnQgPSBtb2RlbC5nZXRSb3dD
b3VudCgvKnZpZXc6Ki8gMSk7CgkJVjEgPSAwLjE7CgkJbW9kZWwuc2V0VmFsdWUoY29sdW1uc1si
bnVtYmVyIl0sIHYxY291bnQgPj4gMSwgVjEsIC8qdmlldzoqLyAxKTsKCgkJdGhpcy5fX3J1blRl
c3QoIjE1LnNldFZhbHVlLnZpZXcwLmdldFZhbHVlIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsK
CQkJCSAgIHJldHVybiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIAoJCQkJCQkJ
ICBtb2RlbC5sb2NhdGUoY29sdW1uc1sibnVtYmVyIl0sIFYxKSkgPT0gVjEpOwoJCQkgICAgICAg
fSk7CgkJdGhpcy5fX3J1blRlc3QoIjE1LnNldFZhbHVlLnZpZXcxLmdldFZhbHVlIiwKCQkJICAg
ICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1si
bnVtYmVyIl0sIAoJCQkJCQkJICBtb2RlbC5sb2NhdGUoY29sdW1uc1sibnVtYmVyIl0sIFYxLCAv
KnZpZXc6Ki8gMSksCgkJCQkJCQkgIC8qdmlldzoqLyAxKSA9PSBWMSk7CgkJCSAgICAgICB9KTsK
CQl0aGlzLl9fcnVuVGVzdCgiMTUuc2V0VmFsdWUudmlldzAuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJ
CSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93
Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1i
ZXIiXSwgaSAtIDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpKQoJCQkJ
CSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhp
cy5fX3J1blRlc3QoIjE1LnNldFZhbHVlLnZpZXcxLm51bWJlci5hc3NlcnQtaXMtc29ydGVkIiwK
CQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIGZvciAoaSA9IDE7IGkgPCBtb2RlbC5nZXRS
b3dDb3VudCgpOyBpKyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51
bWJlciJdLCBpIC0gMSkgPiBtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSkpCgkJ
CQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0
aGlzLl9fcnVuVGVzdCgiMTUuc2V0VmFsdWUudmlldzAuZ2V0Um93Q291bnQiLAoJCQkgICAgICAg
ZnVuY3Rpb24gKCkgewoJCQkJICAgcmV0dXJuIChtb2RlbC5nZXRSb3dDb3VudCgpID09IHYwY291
bnQpOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjE1LnNldFZhbHVlLnZpZXcxLmdl
dFJvd0NvdW50IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwu
Z2V0Um93Q291bnQoLyp2aWV3OiovIDEpID09IHYxY291bnQpOwoJCQkgICAgICAgfSk7CgoJCS8v
IENoYW5nZSB0aGUgc29ydAoJCXYwY291bnQgPSBtb2RlbC5nZXRSb3dDb3VudCgpOwoJCXYxY291
bnQgPSBtb2RlbC5nZXRSb3dDb3VudCgvKnZpZXc6Ki8gMSk7CgkJbW9kZWwuc29ydEJ5Q29sdW1u
KGNvbHVtbnNbInN0cmluZyJdLCAvKmFzY2VuZGluZzoqLyB0cnVlKTsKCQl0aGlzLl9fcnVuVGVz
dCgiMTYuY2hhbmdlU29ydC52aWV3MC5hc3NlcnQtaXMtc29ydGVkIiwKCQkJICAgICAgIGZ1bmN0
aW9uICgpIHsKCQkJCSAgIGZvciAoaSA9IDE7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgpOyBpKysp
CgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbInN0cmluZyJdLCBpIC0gMSkg
PiBtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJzdHJpbmciXSwgaSkpCgkJCQkJICAgcmV0dXJuIGZh
bHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgi
MTYuY2hhbmdlU29ydC52aWV3MS5udW1iZXIuYXNzZXJ0LWlzLXNvcnRlZCIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICBmb3IgKGkgPSAxOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoKTsg
aSsrKQoJCQkJICAgICAgIGlmIChtb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJzdHJpbmciXSwgaSAt
IDEpID4gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sic3RyaW5nIl0sIGkpKQoJCQkJCSAgIHJldHVy
biBmYWxzZTsKCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRl
c3QoIjE2LnNldFZhbHVlLnZpZXcwLmdldFJvd0NvdW50IiwKCQkJICAgICAgIGZ1bmN0aW9uICgp
IHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0Um93Q291bnQoKSA9PSB2MGNvdW50KTsKCQkJICAg
ICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxNi5zZXRWYWx1ZS52aWV3MS5nZXRSb3dDb3VudCIs
CgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICByZXR1cm4gKG1vZGVsLmdldFJvd0NvdW50
KC8qdmlldzoqLyAxKSA9PSB2MWNvdW50KTsKCQkJICAgICAgIH0pOwoKCQkvLwoJCS8vIEFkZCB0
d28gbW9yZSB2aWV3cyBmaWx0ZXJpbmcgb3V0IGRpc2pvaW50IHN1YnNldHMKCQkvLwoKCQkvLyBG
aWx0ZXIgb3V0IHJvd3MgbWF0Y2hpbmcgRih4KTogMjAgPD0geCA8PSA4MAoJCW1vZGVsLmFkZFZp
ZXcoW2Z1bmN0aW9uIChSKSB7IHJldHVybiBSW2NvbHVtbnNbIm51bWJlciJdXSA+PSAyMDsgfSwK
CQkJICAgICAgIGZ1bmN0aW9uIChSKSB7IHJldHVybiBSW2NvbHVtbnNbIm51bWJlciJdXSA8PSA4
MDsgfV0sCgkJCSAgICAgIG51bGwsCgkJCSAgICAgICJhbmQiKTsKCgkJLy8gRmlsdGVyIG91dCBy
b3dzIG1hdGNoaW5nIEYnKHgpOiB4IDwgMjAgb3IgeCA+IDgwCgkJbW9kZWwuYWRkVmlldyhbZnVu
Y3Rpb24gKFIpIHsgcmV0dXJuIFJbY29sdW1uc1sibnVtYmVyIl1dIDwgMjA7IH0sCgkJCSAgICAg
ICBmdW5jdGlvbiAoUikgeyByZXR1cm4gUltjb2x1bW5zWyJudW1iZXIiXV0gPiA4MDsgfV0sCgkJ
CSAgICAgIG51bGwsCgkJCSAgICAgICJvciIpOwoKCQl0aGlzLl9fcnVuVGVzdCgiMTcuYWRkVmll
d3MudmlldzIuYXNzZXJ0LWZpbHRlciIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICBm
b3IgKGkgPSAwOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoLyp2aWV3OiovIDIpOyBpKyspIHsKCQkJ
CSAgICAgICB2YXIgeCA9IG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpLCAvKnZp
ZXc6Ki8gMik7CgkJCQkgICAgICAgaWYgKHggPj0gMjAgJiYgeCA8PSA4MCkKCQkJCQkgICByZXR1
cm4gZmFsc2U7CgkJCQkgICB9CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoJCXRo
aXMuX19ydW5UZXN0KCIxNy5hZGRWaWV3cy52aWV3My5hc3NlcnQtZmlsdGVyIiwKCQkJICAgICAg
IGZ1bmN0aW9uICgpIHsKCQkJCSAgIGZvciAoaSA9IDA7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgv
KnZpZXc6Ki8gMyk7IGkrKykgewoJCQkJICAgICAgIHZhciB4ID0gbW9kZWwuZ2V0VmFsdWUoY29s
dW1uc1sibnVtYmVyIl0sIGksIC8qdmlldzoqLyAzKTsKCQkJCSAgICAgICBpZiAoeCA8IDIwIHx8
IHggPiA4MCkKCQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICB9CgkJCQkgICByZXR1cm4gdHJ1
ZTsKCQkJICAgICAgIH0pOwoJCXRoaXMuX19ydW5UZXN0KCIxNy5hZGRWaWV3cy52aWV3Mi5kaXNq
b2ludCIsCgkJCSAgICAgICBmdW5jdGlvbiAoKSB7CgkJCQkgICB2YXIgaW52MiA9IHt9OwoJCQkJ
ICAgZm9yIChpID0gMDsgaSA8IG1vZGVsLmdldFJvd0NvdW50KC8qdmlldzoqLyAyKTsgaSsrKQoJ
CQkJICAgICAgIGludjJbbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGksIC8qdmll
dzoqLyAyKV0gPSAxOwoJCQkJICAgZm9yIChpID0gMDsgaSA8IG1vZGVsLmdldFJvd0NvdW50KC8q
dmlldzoqLyAzKTsgaSsrKQoJCQkJICAgICAgIGlmIChpbnYyW21vZGVsLmdldFZhbHVlKGNvbHVt
bnNbIm51bWJlciJdLCBpLCAvKnZpZXc6Ki8gMyldID09IDEpCgkJCQkJICAgcmV0dXJuIGZhbHNl
OwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMTcu
YWRkVmlld3MudmlldzIucm93c3VtIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJl
dHVybiBtb2RlbC5nZXRSb3dDb3VudCgyKSArIG1vZGVsLmdldFJvd0NvdW50KDMpID09IG1vZGVs
LmdldFJvd0NvdW50KDApOwoJCQkgICAgICAgfSk7CgoJCS8vCgkJLy8gUmVtb3ZlIGFsbCByb3dz
IHZpc2libGUgaW4gdmlldyAyLiBUaGlzIHNob3VsZCByZW1vdmUgdGhlc2Ugcm93cyBmcm9tIGFs
bCBvdGhlcgoJCS8vIHZpZXdzIGFzIHdlbGwuCgkJLy8KCQl2YXIgdG9SZW1vdmUgPSBbXTsKCQlm
b3IgKGkgPSAwOyBpIDwgbW9kZWwuZ2V0Um93Q291bnQoMik7IGkrKykKCQkgICAgdG9SZW1vdmUu
cHVzaChtb2RlbC5nZXRSb3dSZWZlcmVuY2UoaSwgMikpOwoJCW1vZGVsLnJlbW92ZVJlZmVyZW5j
ZWRSb3dzKHRvUmVtb3ZlKTsKCgkJdGhpcy5fX3J1blRlc3QoIjE4LnJlbW92ZVJvd3MudmlldzIu
YXNzZXJ0LWVtcHR5IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiBtb2Rl
bC5nZXRSb3dDb3VudCgyKSA9PSAwOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjE4
LnJlbW92ZVJvd3MudmlldzAuYXNzZXJ0LXJlbW92ZWQiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkg
ewoJCQkJICAgZm9yIChpID0gMDsgaSA8IG1vZGVsLmdldFJvd0NvdW50KCk7IGkrKykgewoJCQkJ
ICAgICAgIHZhciB4ID0gbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpOwoJCQkJ
ICAgICAgIGlmICh4IDwgMjAgfHwgeCA+IDgwKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAg
IH0KCQkJCSAgIHJldHVybiB0cnVlOwoJCQkgICAgICAgfSk7CgoJCS8vIFJlbW92ZSBldmVyeXRo
aW5nCgkJbW9kZWwuY2xlYXJBbGxSb3dzKCk7CgkJdGhpcy5fX3J1blRlc3QoIjE5LmNsZWFyQWxs
Um93cy5hc3NlcnQtYWxsLXZpZXdzLWVtcHR5IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJ
CSAgIGZvciAodmFyIHYgPSAwOyB2IDwgbW9kZWwuZ2V0Vmlld0NvdW50KCk7IHYrKykKCQkJCSAg
ICAgICBpZiAobW9kZWwuZ2V0Um93Q291bnQodikgIT0gMCkKCQkJCQkgICByZXR1cm4gZmFsc2U7
CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoKCQkvLwoJCS8vIFBlcmZvcm0gYSBy
YW5kb20gc2VxdWVuY2Ugb2YgYWRkcyBhbmQgY2hlY2sgdGhhdCBldmVyeXRoaW5nIGlzIHN0aWxs
IHNvcnRlZC4KCQkvLwoJCW1vZGVsLnNvcnRCeUNvbHVtbihjb2x1bW5zWyJudW1iZXIiXSwgLyph
c2NlbmRpbmc6Ki8gdHJ1ZSk7CgkJTiA9IDEwMDA7CgkJdmFyIGFsbCA9IFtdOwoJCXZhciBhZGRl
ZCA9IDA7CgkJZm9yIChpID0gMDsgaSA8IE47IGkrKykgewoJCSAgICBBID0gW107CgkJICAgIHZh
ciBzaXplID0gKE1hdGgucmFuZG9tKCkgJiA3KSArIDE7CgkJICAgIGZvciAodmFyIGogPSAwOyBq
IDwgc2l6ZTsgaisrKSB7CgkJCXZhciB4ID0gKE1hdGgucmFuZG9tKCkgKiB+MCkgXiAwOwoJCQl2
YXIgUiA9IFt4LCAiIiArIHgsIG51bGwsIG51bGwsIHhdOwoJCQlBLnB1c2goUik7CgkJCWFsbC5w
dXNoKFIpOwoJCQlhZGRlZCsrOwoJCSAgICB9CgkJICAgIG1vZGVsLmFkZFJvd3MoQSk7CgkJfQoK
CQlpZiAoZmFsc2UpIHsKCQkgICAgdGhpcy5fX2RlYnVnb2JqKGFsbCk7CgkJICAgIGZvciAoaSA9
IDA7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgpOyBpKyspCgkJCXRoaXMuX19kZWJ1ZygiLi4uIiAr
IGkgKyAiOiAiICsgbW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkpKTsKCQl9CgoJ
CXRoaXMuX19ydW5UZXN0KCIyMC5yYW5kb20tYWRkcy5hc3NlcnQtc29ydCIsCgkJCSAgICAgICBm
dW5jdGlvbiAoKSB7CgkJCQkgICBhbGwuc29ydChmdW5jdGlvbihSMSwgUjIpIHsKCQkJCQkgICBy
ZXR1cm4gUjFbY29sdW1uc1sibnVtYmVyIl1dIC0gUjJbY29sdW1uc1sibnVtYmVyIl1dOwoJCQkJ
ICAgICAgIH0pOwoJCQkJICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGwubGVuZ3RoOyBpKyspCgkJ
CQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlKGNvbHVtbnNbIm51bWJlciJdLCBpKSAhPSBhbGxb
aV1bY29sdW1uc1sibnVtYmVyIl1dKQoJCQkJCSAgIHJldHVybiBmYWxzZTsKCQkJCSAgIHJldHVy
biB0cnVlOwoJCQkgICAgICAgfSk7CgkJdGhpcy5fX3J1blRlc3QoIjIwLnJhbmRvbS1hZGRzLnZp
ZXcwLmNvdW50IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIHJldHVybiBtb2RlbC5n
ZXRSb3dDb3VudCgpID09IGFkZGVkOwoJCQkgICAgICAgfSk7CgoJCS8vCgkJLy8gUGVmb3JtIGEg
cmFuZG9tIHNlcXVlbmNlIG9mIHJlbW92ZXMgYW5kIGNoZWNrIHRoYXQgZXZlcnl0aGluZyBpcyBz
dGlsbCBzb3J0ZWQuCgkJLy8KCQlOID0gKDEgPDwgMTApOwoJCW1vZGVsLmNsZWFyQWxsUm93cygp
OwoJCWFkZGVkID0ge307CgkJcm93cyA9IFtdOwoJCWZvciAoaSA9IDA7IGkgPCBOOyBpKyspIHsK
CQkgICAgYWRkZWRbaV0gPSAxOwoJCSAgICByb3dzLnB1c2goW2ksICIiICsgaSwgbmV3IHF4LnVp
LmJhc2ljLkxhYmVsKCIiICsgaSksIGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ID09IGk7IH0sIE1h
dGgucmFuZG9tKCldKTsKCQl9CgoJCS8vIEFkZCB0aGUgcm93cyB0byB0aGUgbW9kZWwKCQltb2Rl
bC5hZGRSb3dzKHJvd3MpOwoKCQkvLyBSZW1vdmUgMS80IG9mIHRoZSByb3dzCgkJZm9yIChpID0g
MDsgaSA8IChOID4+IDIpOyBpKyspIHsKCQkgICAgdmFyIEkgPSAoTWF0aC5yYW5kb20oKSAqICht
b2RlbC5nZXRSb3dDb3VudCgpIC0gMSkpIF4gMDsKCQkgICAgYWRkZWRbbW9kZWwuZ2V0VmFsdWUo
Y29sdW1uc1sibnVtYmVyIl0sIEkpXSA9IHVuZGVmaW5lZDsKCQkgICAgbW9kZWwucmVtb3ZlUm93
cyhJLCAxKTsKCQl9CgoJCXRoaXMuX19ydW5UZXN0KCIyMS5yYW5kb20tZGVsZXRpb25zLnZpZXcw
LmFzc2VydC1zZXQtZXF1aXZhbGVuY2UiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAg
Zm9yIChpIGluIGFkZGVkKQoJCQkJICAgICAgIGlmIChhZGRlZFtpXSAhPSB1bmRlZmluZWQpCgkJ
CQkJICAgaWYgKG1vZGVsLmxvY2F0ZShjb2x1bW5zWyJudW1iZXIiXSwgaSkgPT0gdW5kZWZpbmVk
KQoJCQkJCSAgICAgICByZXR1cm4gZmFsc2U7CgkJCQkgICBmb3IgKGkgPSAwOyBpIDwgbW9kZWwu
Z2V0Um93Q291bnQoKTsgaSsrKQoJCQkJICAgICAgIGlmIChhZGRlZFttb2RlbC5nZXRWYWx1ZShj
b2x1bW5zWyJudW1iZXIiXSwgaSldICE9IDEpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAg
cmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMjEucmFuZG9tLWRl
bGV0aW9ucy52aWV3Mi5hc3NlcnQtc3Vic2V0IiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJ
CSAgIGZvciAoaSA9IDA7IGkgPCBtb2RlbC5nZXRSb3dDb3VudCgyKTsgaSsrKQoJCQkJICAgICAg
IGlmIChhZGRlZFttb2RlbC5nZXRWYWx1ZShjb2x1bW5zWyJudW1iZXIiXSwgaSwgMildICE9IDEp
CgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAgICB9KTsK
CgkJbW9kZWwuY2xlYXJBbGxSb3dzKCk7CgkJdmFyIE4gPSAxMDAsIGNvdW50ID0gMTAwOwoJCXZh
ciByb3dzID0gW107CgkJZm9yIChpID0gMDsgaSA8IE47IGkrKykKCQkgICAgaWYgKGkgIT0gNDkg
JiYgaSAhPSA1MCAmJiBpICE9IDUxKQoJCQlyb3dzLnB1c2goW2ksICIiICsgaSwgbmV3IHF4LnVp
LmJhc2ljLkxhYmVsKCIiICsgaSksIGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ID09IGk7IH0sIE1h
dGgucmFuZG9tKCldKTsKCQltb2RlbC5hZGRSb3dzKHJvd3MpOwoKCQkvLwoJCS8vIEFkZCBzb21l
IHJvd3MgdGhhdCB3ZSBrbm93IHdpbGwgYmUgY29udGlndW91cywgdG8gdGVzdCB0aGF0IHRoZXkg
YXJlIGluc2VydGVkCgkJLy8gcHJvcGVybHkgd2l0aCBhIHNpbmdsZSBzcGxpY2Ugb3BlcmF0aW9u
LgoJCS8vCgkJbW9kZWwuYWRkUm93cyhbWzQ5LCAiIiArIDQ5LCBuZXcgcXgudWkuYmFzaWMuTGFi
ZWwoIiIgKyA0OSksIGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ID09IDQ5OyB9LCBNYXRoLnJhbmRv
bSgpXSwKCQkJICAgICAgIFs1MCwgIiIgKyA1MCwgbmV3IHF4LnVpLmJhc2ljLkxhYmVsKCIiICsg
NTApLCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geCA9PSA1MDsgfSwgTWF0aC5yYW5kb20oKV0sCgkJ
CSAgICAgICBbNTEsICIiICsgNTEsIG5ldyBxeC51aS5iYXNpYy5MYWJlbCgiIiArIDUxKSwgZnVu
Y3Rpb24gKHgpIHsgcmV0dXJuIHggPT0gNTE7IH0sIE1hdGgucmFuZG9tKCldXSk7CgoJCXRoaXMu
X19ydW5UZXN0KCIyMi5hZGRSb3dzLnZpZXcwLmdldFJvd0NvdW50IiwKCQkJICAgICAgIGZ1bmN0
aW9uICgpIHsKCQkJCSAgIHJldHVybiAobW9kZWwuZ2V0Um93Q291bnQoKSA9PSBjb3VudCk7CgkJ
CSAgICAgICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMjIuYWRkUm93cy52aWV3MC5udW1iZXIuZ2V0
VmFsdWUiLAoJCQkgICAgICAgZnVuY3Rpb24gKCkgewoJCQkJICAgZm9yIChpID0gMDsgaSA8IE47
IGkrKykKCQkJCSAgICAgICBpZiAobW9kZWwuZ2V0VmFsdWUoY29sdW1uc1sibnVtYmVyIl0sIGkp
ICE9IGkpCgkJCQkJICAgcmV0dXJuIGZhbHNlOwoJCQkJICAgcmV0dXJuIHRydWU7CgkJCSAgICAg
ICB9KTsKCQl0aGlzLl9fcnVuVGVzdCgiMjIuYWRkUm93cy52aWV3MC5udW1iZXIuZ2V0VmFsdWVC
eUlkIiwKCQkJICAgICAgIGZ1bmN0aW9uICgpIHsKCQkJCSAgIGZvciAoaSA9IDA7IGkgPCBOOyBp
KyspCgkJCQkgICAgICAgaWYgKG1vZGVsLmdldFZhbHVlQnlJZCgibnVtYmVyIiwgaSkgIT0gaSkK
CQkJCQkgICByZXR1cm4gZmFsc2U7CgkJCQkgICByZXR1cm4gdHJ1ZTsKCQkJICAgICAgIH0pOwoK
CQkvLyBUQkQ6IENoYW5nZSBmaWx0ZXJzIGZvciBhIHZpZXcgYW5kIG1ha2Ugc3VyZSB2aWV3IGlz
IHVwZGF0ZWQgcHJvcGVybHkKCQkvLyBUQkQ6IENoYW5nZSBzb3J0IGNyaXRpZXJhIGFuZCBtYWtl
IHN1cmUgc29ydCBpcyBtYWludGFpbmVkIGFjcm9zcyBhbGwgdmlld3MKCgkJLy8gRG9uZQoJCWlm
ICh0aGlzLnRlc3RzRmFpbGVkKQoJCSAgICB0aGlzLl9fZGVidWcoIlNPTUUgVU5JVCBURVNUUyBG
QUlMRUQiKTsKCQllbHNlCgkJICAgIHRoaXMuX19kZWJ1ZygiYWxsIHVuaXQgdGVzdHMgcGFzc2Vk
Iik7CgoJCXJldHVybiAhdGhpcy50ZXN0c0ZhaWxlZDsKCSAgICB9Cgl9CiAgICB9KTsK
</data>

          </attachment>
      

    </bug>