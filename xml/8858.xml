<bug>
          <bug_id>8858</bug_id>
          
          <creation_ts>2015-01-09 13:45:00 +0100</creation_ts>
          <short_desc>support of events: mouseenter and mouseleave</short_desc>
          <delta_ts>2015-01-14 09:08:58 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Patrick Fischer">admin</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>42112</commentid>
            <who name="Patrick Fischer">admin</who>
            <bug_when>2015-01-09 13:45:29 +0100</bug_when>
            <thetext>Is there any chance for offical qooxdoo support of DOM Level 3 Events, at least mouseenter and mouseleave?

use case:
website based features

polyfill example code:
qx.bom.Element.addListener(elem, &#39;mouseover&#39;, function(e) {
if( !qx.dom.Hierarchy.isDescendantOf(e._relatedTarget, e._currentTarget) )
 elem.fireEvent(&quot;mouseenter&quot;);
, this);

qx.bom.Element.addListener(filElem, &#39;mouseout&#39;, function(e) {
if( !qx.dom.Hierarchy.isDescendantOf(e._relatedTarget, e._currentTarget) )
 elem.fireEvent(&quot;mouseleave&quot;);
}, this);

documentation:

https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter
http://www.w3.org/TR/DOM-Level-3-Events/#event-type-mouseenter

https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave
http://www.w3.org/TR/DOM-Level-3-Events/#event-type-mouseleave</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42137</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-01-12 13:48:28 +0100</bug_when>
            <thetext>Thanks for the request. Did you test you suggested code in any productive app? Are there any performance issues if we have to check that on ever event?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42166</commentid>
            <who name="Patrick Fischer">admin</who>
            <bug_when>2015-01-13 12:23:09 +0100</bug_when>
            <thetext>yes, it works in our test enviroment and will moved to productive systems this week. but i only use these code for three html-elements, not for every html- element on the webpage. Internet Explorer&gt;5.5 has native support for mouserenter and mouseleave.

i ask myself where such a feature will be placed into qooxdoo framework. maybe into pointer stuff? but we should think about if it&#39;s necessary firing these events for all html-elements generally too. maybe these events were only fired if there is a listener waiting for.

pseudo code in pointer or event registration stuff:

addListener : function(targetElem, eventType)
{
if(eventType === &#39;mouseenter&#39;)
{
targetElem.addListener(&#39;mouseover&#39;, function(e) {
if( !qx.dom.Hierarchy.isDescendantOf(e._relatedTarget, e._currentTarget) )
 targetElem.fireEvent(&quot;mouseenter&quot;, newEventData);
, this);
}

if(eventType === &#39;mouseleave&#39;)
{
targetElem.addListener(&#39;mouseout&#39;, function(e) {
if( !qx.dom.Hierarchy.isDescendantOf(e._relatedTarget, e._currentTarget) )
 targetElem.fireEvent(&quot;mouseleave&quot;, newEventData);
, this);
}
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42170</commentid>
            <who name="Patrick Fischer">admin</who>
            <bug_when>2015-01-13 16:14:38 +0100</bug_when>
            <thetext>qxWebsite seems to support these events:
http://codepen.io/anon/pen/qErbBV</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42174</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-01-14 09:08:58 +0100</bug_when>
            <thetext>(In reply to comment #3)
&gt; qxWebsite seems to support these events:
&gt; http://codepen.io/anon/pen/qErbBV

As long as the browser supports them. We don&#39;t have any special code for it as far as I can see.</thetext>
          </long_desc>
      
      

    </bug>