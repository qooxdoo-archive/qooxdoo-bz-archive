<bug>
          <bug_id>8525</bug_id>
          
          <creation_ts>2014-08-08 11:01:00 +0200</creation_ts>
          <short_desc>Normalize qxWeb and qx.event.Emitter event API in the next branch</short_desc>
          <delta_ts>2014-11-21 16:36:23 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>8507</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40940</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-08 11:01:42 +0200</bug_when>
            <thetext>The event API of our emitter and qxWeb is slightly different and should be normalized.

on() / once() 
-----------
the emitter returns an id while qxWeb does not have this feature of listener ids

off() 
----
Basically the same even though the return type is different (id / collection)

offById() 
--------
Supported by the emitter but not by the collection. Should be added to the collection

addListener / addListenerOnce / removeListener / removeLitenerById
----------------------------------------------------------
Emitter supports the old API which can be removed.


So the most obvious feature difference is the id support of the emitter. As the data binding relies heavily on those ids, we should find a way to add those ids to the collection API as well. Additionally, the ids should be valid in a global context which isn&#39;t the case for the emitter at the moment.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40948</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-08 12:56:50 +0200</bug_when>
            <thetext>The basic problem by returning an global unique id is that we have to store the given arguments in a global data store. This includes the type (String), handler (Function) and context (Object). This means you have to remove that listener before the context can be destroyed via garbage collection. Therefore e.g. model objects having custom listeners need to be disposed which should not be necessary.

So either we remove that feature, which would require an update of the data binding algorithms, or we introduce a dispose for all objects.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40949</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-08 12:59:57 +0200</bug_when>
            <thetext>If we decide to implement that feature, I could think of an additional API which returns the id on demand for the last listener added. But this API should be added to both, the collection and the emitter.

var id = qxWeb(&quot;#id&quot;).on(&quot;tap&quot;, function() {}).getListenerId();

// ...

qxWeb(&quot;#id&quot;).offById(id);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40955</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-08 14:24:19 +0200</bug_when>
            <thetext>After a check I realized that the emitter already stores every object in a global registry. Removed that by using sparse arrays and a global id

next: da0ca9ef1fdf80be8710d80b37774661e8caf0c9

Also added the two proposed methods to the collection API.

next: 44b0f3bf538df72665218b42aa6e0e4de4113c4f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40956</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-08 14:25:35 +0200</bug_when>
            <thetext>Todo: add the getListenerId to the emitter and remove the old API.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40964</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-08-11 14:24:29 +0200</bug_when>
            <thetext>Removed the old API and added the getListenerId to the emitter. Also added a unit test to sensure the offById works on collections with multiple elements. 

next: 5ec113c2ec8ec2f2de5600f00a37f0d57e39f9ee</thetext>
          </long_desc>
      
      

    </bug>