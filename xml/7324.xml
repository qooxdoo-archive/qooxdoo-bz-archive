<bug>
          <bug_id>7324</bug_id>
          
          <creation_ts>2013-04-02 13:30:00 +0200</creation_ts>
          <short_desc>qx.Interface.__assertMembers is very slow</short_desc>
          <delta_ts>2014-04-28 09:48:07 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.oo</component>
          <version>2.1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="George Nikolaidis">gnikolaidis</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>dietrich.streifert</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32530</commentid>
            <who name="George Nikolaidis">gnikolaidis</who>
            <bug_when>2013-04-02 13:30:49 +0200</bug_when>
            <thetext>While searching for a severe slowdown in our application, we discovered that qx.class.implementsInterface() was the culprit. Further investigating the reason, we located the slowdown inside qx.Interface.__assertMembers().

Somehow our development environment (Chrome Stable) was spending an awful lot of time in this method. We have no explanation why this was happening, but we did notice heavy usage of URIError instances, possibly generated by decodeURIComponent() calls in qx.core.Environment.

Our application is now fixed, running 100 times faster simply by replacing all qx.class.implementsInterface() calls with simpler object.constructor.classname checks (not equivalent of course, but adequate for our needs).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32531</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-04-03 08:04:13 +0200</bug_when>
            <thetext>Thanks for the hint. We will investigate on that.</thetext>
          </long_desc>
      
      

    </bug>