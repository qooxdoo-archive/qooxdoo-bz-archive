<bug>
          <bug_id>3700</bug_id>
          
          <creation_ts>2010-05-11 14:53:00 +0200</creation_ts>
          <short_desc>Support Hash Codes in Script File Names</short_desc>
          <delta_ts>2014-03-03 15:25:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>carsten.lergenmueller</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18298</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-11 14:53:05 +0200</bug_when>
            <thetext>Support hash codes as part of the file name which are generated for an 
application. This allows to have a machine-detectable feature if the 
corresponding file has changed, and therefore, if a cached version can be used 
or the file has to be retrieved again. Production sites could just copy the new 
set of files their server, and the hash code would indicate which file actually 
has changed.

As a consequence, if one generated file changes, the loader script changes as 
well (as it contains the changed file names). But you cannot easily apply file 
name extensions to the loader script, as it needs a stable name (e.g. for 
inclusion by the main index.html). Maybe this needs special consideration.

The config interface could be the compile-options/paths/file parameter. This 
allows variant macros as part of the file name, and we could add a {filehash} 
macro, e.g.

   compile-options/paths/file : &quot;.../${APPLICATION}_{filehash}.js&quot;

This applies to generated files only, so standard source versions are not 
affected. 

We have hashes in the package files already. Should be low-hanging fruit to 
promote them to the file name level.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18972</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-28 17:18:40 +0200</bug_when>
            <thetext>Hash code in generated file names is implemented now. The behaviour is 
controlled via the compile-options/paths/scripts-add-hash config key (false by 
default).

With r22523.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38903</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:52 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>