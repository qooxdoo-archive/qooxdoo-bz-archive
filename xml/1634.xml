<bug>
          <bug_id>1634</bug_id>
          
          <creation_ts>2008-11-25 14:05:00 +0100</creation_ts>
          <short_desc>Double click on the empty space of a list returns an item</short_desc>
          <delta_ts>2014-03-03 15:20:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Wayne">w.si</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>6465</commentid>
            <who name="Wayne">w.si</who>
            <bug_when>2008-11-25 14:05:44 +0100</bug_when>
            <thetext>1. Populate a list with some items, and add a listener on double-click.
2. In the event handler, use getSelectedItem() to access the clicked item, and then remove it from the list.
3. Double click on an item to see it&#39;s removed.
4. Double click on the empty/write space of the list control, i.e. not on any item.
5. You will see the event handler is invoked and getSelectedItem() returns the previous result which should already have been removed. The desired behavior is getSelectedItem() returns null when nothing selected in the list.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6473</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-11-25 14:44:34 +0100</bug_when>
            <thetext>to Chris. I suppose that only shows up when items have been removed?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6516</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2008-11-26 16:11:23 +0100</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6517</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2008-11-26 17:49:55 +0100</bug_when>
            <thetext>I have tested the issue with the code snippet below, but I can&#39;t reproduce it. (Windows XP and FF3 with trunk and release 0.8)

(List is created)
1) Double click on an item.
2) Event handler call getSelectedItem(), show label and remove item.
3) Double click on the the empty space in the list.
4) Event handler call getSelectedItem(), but return null.

@Reporter
Could you test the code snippet below, please? Or send me your code snippet?



*** snippet ***
// this.list is a member property
this.list = new qx.ui.form.List();
for (var i = 0; i &lt; 4; i++)
{
  this.list.add(new qx.ui.form.ListItem(&quot;ListItem&quot; + i));  
}
      
this.list.addListener(&quot;dblclick&quot;, function(e)
{
  selectedItem = this.list.getSelectedItem();
        
  if (selectedItem)
  {
    alert(selectedItem.getLabel());
    this.list.remove(selectedItem);
  }
  else
  {
    alert(&quot;null&quot;);
  }
}, this);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6596</commentid>
              <attachid>399</attachid>
            <who name="Wayne">w.si</who>
            <bug_when>2008-12-02 16:10:14 +0100</bug_when>
            <thetext>Created attachment 399
To reproduce the bug

Try this file to reproduce the bug. The instructions are on the top of the file.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6602</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2008-12-02 17:52:41 +0100</bug_when>
            <thetext>The issue could reproduce in qx 0.8 (SDK), but it couldn&#39;t reproduce in current trunk (r16806). 
The described issue doesn&#39;t occur in the current trunk version, so it was fixed in a previous commit.

I set this issue to &quot;WONTFIX&quot;, because the current trunk as already fixed it and I could&#39;t found any bug, that describes the same issue to set this bug as duplicate of the other bug.

@Reporter
Thank you very much for your source code! With your code I could reproduce the issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36817</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:15 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>399</attachid>
            <date>2008-12-02 16:10:00 +0100</date>
            <delta_ts>2008-12-02 16:10:14 +0100</delta_ts>
            <desc>To reproduce the bug</desc>
            <filename>Example.txt</filename>
            <type>text/plain</type>
            <size>2391</size>
            <attacher>w.si</attacher>
            
              <data encoding="base64">LyoqDQogKiAxLiBDbGljayB0aGUgYnV0dG9uIHNldmVyYWwgdGltZXMgdG8gZ2V0IGluaXQgdmFs
dWVzIHBvcHVsYXRlZA0KICogMi4gRG91YmxlIGNsaWNrIGFuIGl0ZW0gaW4gdGhlIGxlZnQtc2lk
ZSBsaXN0LCB0aGVuIHRvIHNlZSBpdCdzIG1vdmVkIHRvIHRoZSByaWdodC1zaWRlIGxpc3QNCiAq
IDMuIERvdWJsZSBjbGljayB0aGUgZW1wdHkvd2hpdGUgc3BhY2UgaW4gdGhlIGxlZnQtc2lkZSBs
aXN0LCB0aGVuIHlvdSB3aWxsIGZpbmQgdGhlIGxhc3Qgc2VsZWN0ZWQgaXRlbXMga2VwdCBvbiBh
ZGRpbmcgdG8gdGhlIHJpZ2h0LXNpZGUgbGlzdA0KICovDQpxeC5DbGFzcy5kZWZpbmUoInRlc3Qu
QnVnUmVwb3J0IiwNCnsNCiAgZXh0ZW5kICAgIDogcXgudWkud2luZG93LldpbmRvdywNCg0KICBj
b25zdHJ1Y3QgOiBmdW5jdGlvbigpDQogIHsNCiAgICB0aGlzLmJhc2UoYXJndW1lbnRzLCAiQnVn
IG9uIExpc3QiKTsNCiAgICANCiAgICB0aGlzLnNldExheW91dChuZXcgcXgudWkubGF5b3V0LkhC
b3goNSkpOw0KICAgIA0KICAgIHRoaXMubGlzdDEgPSAgbmV3IHF4LnVpLmZvcm0uTGlzdCgpOw0K
ICAgIHRoaXMubGlzdDEuYWRkTGlzdGVuZXIoImRibGNsaWNrIiwgdGhpcy5fX29uQjFEYmxDbGlj
aywgdGhpcyk7DQogICAgDQogICAgdGhpcy5saXN0MiA9ICBuZXcgcXgudWkuZm9ybS5MaXN0KCk7
DQogICAgdGhpcy5saXN0Mi5hZGRMaXN0ZW5lcigiZGJsY2xpY2siLCB0aGlzLl9fb25CMkRibENs
aWNrLCB0aGlzKTsNCg0KICAgIHRoaXMuYWRkKHRoaXMubGlzdDEpOw0KICAgIHRoaXMuYWRkKHRo
aXMubGlzdDIpOw0KICAgIA0KICAgIHRoaXMuYnRuID0gbmV3IHF4LnVpLmZvcm0uQnV0dG9uKCJD
bGljayIpOw0KICAgIHRoaXMuYnRuLmFkZExpc3RlbmVyKCJleGVjdXRlIiwgdGhpcy5fX2ZldGNo
LCB0aGlzKTsNCiAgICANCiAgICB0aGlzLmFkZCh0aGlzLmJ0bik7DQogICAgDQogICAgdGhpcy5h
cjEgPSBbXTsNCiAgICB0aGlzLmFyMiA9IFtdOyANCiAgfSwNCiAgDQogIG1lbWJlcnMgIDoNCiAg
ew0KICAgIF9fZmV0Y2ggOiBmdW5jdGlvbigpDQogICAgew0KICAgICAgdmFyIGtleSA9IE1hdGgu
Zmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApOw0KICAgICAgd2hpbGUgKHF4LmxhbmcuQXJyYXku
Y29udGFpbnModGhpcy5hcjEsIGtleSkpDQogICAgICB7DQogICAgICAgIGtleSA9IE1hdGguZmxv
b3IoTWF0aC5yYW5kb20oKSAqIDUwMDApOw0KICAgICAgfQ0KICAgICAgdGhpcy5hcjEucHVzaChr
ZXkpOw0KDQogICAgICB0aGlzLl9fc2hvd0NhY2hlKCk7DQogICAgfSwNCiAgICANCiAgICBfX3No
b3dDYWNoZSA6IGZ1bmN0aW9uKCkNCiAgICB7DQogICAgICB0aGlzLl9fc2hvd0NoYWluKHRoaXMu
YXIxLCB0aGlzLmxpc3QxKTsNCiAgICAgIHRoaXMuX19zaG93Q2hhaW4odGhpcy5hcjIsIHRoaXMu
bGlzdDIpOyANCiAgICB9LA0KICAgIA0KICAgIF9fc2hvd0NoYWluIDogZnVuY3Rpb24ob0NoYWlu
LCBsdFRhcmdldCkNCiAgICB7DQogICAgICBsdFRhcmdldC5yZW1vdmVBbGwoKTsNCiAgICAgIA0K
ICAgICAgZm9yICh2YXIgaSBpbiBvQ2hhaW4pDQogICAgICB7DQogICAgICAgIHZhciBlbCA9IG9D
aGFpbltpXTsNCiAgICAgICAgbHRUYXJnZXQuYWRkKG5ldyBxeC51aS5mb3JtLkxpc3RJdGVtKGVs
LnRvU3RyaW5nKCksIG51bGwsIGVsLnRvU3RyaW5nKCkpKTsNCiAgICAgIH0NCiAgICB9LA0KICAg
IA0KICAgIF9fb25CMURibENsaWNrIDogZnVuY3Rpb24oKQ0KICAgIHsNCiAgICAgIHRoaXMuX19l
eGVjTGlzdFJlcXVlc3QodGhpcy5saXN0MSk7DQogICAgfSwNCiAgICANCiAgICBfX29uQjJEYmxD
bGljayA6IGZ1bmN0aW9uKCkNCiAgICB7DQogICAgICB0aGlzLl9fZXhlY0xpc3RSZXF1ZXN0KHRo
aXMubGlzdDIpOw0KICAgIH0sDQogICAgDQogICAgX19leGVjTGlzdFJlcXVlc3QgOiBmdW5jdGlv
bihsdFRhcmdldCkNCiAgICB7DQogICAgICB2YXIgc2VsID0gbHRUYXJnZXQuZ2V0U2VsZWN0ZWRJ
dGVtKCk7DQogICAgICBpZiAoc2VsKQ0KICAgICAgew0KICAgICAgICB2YXIga2V5ID0gcGFyc2VJ
bnQoc2VsLmdldFZhbHVlKCkpOw0KICAgICAgICBpZiAobHRUYXJnZXQgPT09IHRoaXMubGlzdDEp
IA0KICAgICAgICB7DQogICAgICAgICAgdGhpcy5hcjIucHVzaChrZXkpOw0KICAgICAgICAgIHF4
LmxhbmcuQXJyYXkucmVtb3ZlKHRoaXMuYXIxLCBrZXkpOw0KICAgICAgICB9DQogICAgICAgIGVs
c2UNCiAgICAgICAgew0KICAgICAgICAgIHRoaXMuYXIxLnB1c2goa2V5KTsNCiAgICAgICAgICBx
eC5sYW5nLkFycmF5LnJlbW92ZSh0aGlzLmFyMiwga2V5KTsNCiAgICAgICAgfQ0KICAgICAgICAN
CiAgICAgICAgdGhpcy5fX3Nob3dDYWNoZSgpOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfSk7
</data>

          </attachment>
      

    </bug>