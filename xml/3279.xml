<bug>
          <bug_id>3279</bug_id>
          
          <creation_ts>2009-12-28 00:13:00 +0100</creation_ts>
          <short_desc>Browser freezes when the datalist height is just the minimum higher than the panescroller area</short_desc>
          <delta_ts>2010-07-01 08:32:37 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Benoît Collignon">b.collignon</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15988</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2009-12-28 00:13:36 +0100</bug_when>
            <thetext>Hello,

I noticed a really annoying bug this evening. I&#39;ve just added a table widget (simple model) in the root widget of my app. The table widget is positioned as followed: ({top:10,right:10,bottom:10,left:10}).

In my app, I first display the table then asynchronously load the content and affect it to the table using the qx.ui.table.mode.Simple.setData() function.

And it seems that when the number of rows is high enough to show the scrollbars but not enough than one row height (hope it&#39;s clear ...), the browser (tested in FF 3.5 and Chrome) freezes completely (I&#39;m not sure but I think it cannot calculate the false height).

As the table widget global height depends on the browser screen&#39; height, I don&#39;t have any workaround (as for instance, force the height of the table to a certain value).

Any solutions or ideas ?

Thanks in advance,

Benoît.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15990</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2009-12-28 12:05:39 +0100</bug_when>
            <thetext>Just updated the severity and priority status.

Best,

Benoît.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16139</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2010-01-13 12:18:50 +0100</bug_when>
            <thetext>Hi,

Just wanted to know about the status of this bug... It became really blocking.

Looking forward to hearing from you,

Best,

Benoît.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16140</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-13 12:40:38 +0100</bug_when>
            <thetext>to Fabian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16380</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2010-01-25 11:36:28 +0100</bug_when>
            <thetext>Hi,

I&#39;m unable to reproduce this bug. I have tested it with this code in the playground and in a standalone application:

function createRandomRows(rowCount) {
  var rowData = [];
  var now = new Date().getTime();
  var dateRange = 400 * 24 * 60 * 60 * 1000; // 400 days
  var nextId = 0;
  for (var row = 0; row &lt; rowCount; row++) {
    var date = new Date(now + Math.random() * dateRange - dateRange / 2);
    rowData.push([ nextId++, Math.random() * 10000, date, (Math.random() &gt; 0.5) ]);
  }
  return rowData;
}


// table model
var tableModel = new qx.ui.table.model.Simple();
tableModel.setColumns([ &quot;ID&quot;, &quot;A number&quot;, &quot;A date&quot;, &quot;Boolean&quot; ]);

setTimeout(function() {
  tableModel.setData(createRandomRows(33));
}, 1000);

// table
var table = new qx.ui.table.Table(tableModel);
this.getRoot().add(table, {edge: 10})</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16381</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2010-01-25 11:37:29 +0100</bug_when>
            <thetext>Which qooxdoo version/revision are you using? My test worked in the 1.0 release and the current trunk (r21403).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16382</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2010-01-25 12:01:18 +0100</bug_when>
            <thetext>Hi Fabian,

I just updated my qooxdoo version to the last trunk revision (r21404) and it still freezes. I&#39;ll provide a code example in order to simplify your investigations...

Best,

Benoît.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16407</commentid>
              <attachid>703</attachid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2010-01-26 16:38:02 +0100</bug_when>
            <thetext>Created attachment 703
test application</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16408</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2010-01-26 16:38:40 +0100</bug_when>
            <thetext>Hi Fabian,

It was quite hard to find a simple example... After furthermore tests, I don&#39;t know if the problem is really linked with the table widget. It seems also to linked to the flex attribute of the Vbox layout.

In my original application, when I add the table widget with a flex value equals to 1 to a VBox Layout, it nearly always causes infinite loops on rendering - even if the widgets are rendered on the screen, it seems still call the renderLayout() method wheter it is shown or not. But this &quot;freeze&quot; only occurs in the case described before (when the datalist is height is greater than the table&#39;s panescroller area).

If I modify the flex attribute to another value, it doesn&#39;t freeze anymore. I also have to mention that it seems to freeze only in Inline Application cases... I tested the following example in a standalone app and it behaves correctly in this case.

Here is an attachement that contains a zipped inline application example that may crash - I only included the index.html and Application.js class files.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16443</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:30:16 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17295</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-17 13:19:22 +0100</bug_when>
            <thetext>to Jonny</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17483</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-03-23 16:28:17 +0100</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17484</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-03-23 16:29:03 +0100</bug_when>
            <thetext>Verified in current trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17501</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-03-24 14:22:55 +0100</bug_when>
            <thetext>This is tough... I will look into this later.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17884</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-04-20 15:42:17 +0200</bug_when>
            <thetext>Corrected compontent.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18057</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-04-28 09:08:52 +0200</bug_when>
            <thetext>Moved to next milestone.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18859</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2010-06-21 15:01:49 +0200</bug_when>
            <thetext>-&gt; Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18956</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-28 09:04:06 +0200</bug_when>
            <thetext>So I&#39;m the third one taking care of this bug. I hope I&#39;m the last one and we can get rid of it!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18986</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-29 09:52:53 +0200</bug_when>
            <thetext>This was a real tough one. I used a whole day to debug whats happening here. The problem was not really related to the table but it was a good example to reproduce the bug.
The problem started when the table gets its space the first time. It shares the space with a second widget where both widgets have equal flex values. The content of the table does not fit in its available space which makes the table think it needs to show a vertical scrollbar. That triggers a rerendering and a change of the size hint of the table. The scrollbar itself stretches up as far as all content fits in because the outer flex layout doesn&#39;t set a fixed height for the table. But suddenly the table doesn&#39;t need the scrollbar anymore and removes it. This removing triggers a rerendering and ... here we are, back at the beginning of the loop.
To fix this issue, we decided to manipulate the size hint of the ScrollSlider, which is in inner of every qooxdoo scrollbar, depending on the orientation. On vertical Sliders, we set the height and on horizontal sliders we set the width to 0, which should prevent the scrollbar to influence its parents layouting behavior and size hint. 
r22530 for 1.1.x and r22531 for trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19031</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2010-06-30 13:46:18 +0200</bug_when>
            <thetext>thanks for the fix !</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19069</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-01 08:32:37 +0200</bug_when>
            <thetext>CLOSED</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>703</attachid>
            <date>2010-01-26 16:38:00 +0100</date>
            <delta_ts>2010-01-26 16:38:02 +0100</delta_ts>
            <desc>test application</desc>
            <filename>Application.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>2109</size>
            <attacher>b.collignon</attacher>
            
              <data encoding="base64">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
</data>

          </attachment>
      

    </bug>