<bug>
          <bug_id>4893</bug_id>
          
          <creation_ts>2011-03-29 11:29:00 +0200</creation_ts>
          <short_desc>The code compression of &quot;var y = 80 + ++x&quot; generates a syntax error</short_desc>
          <delta_ts>2014-03-03 15:23:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23699</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2011-03-29 11:29:21 +0200</bug_when>
            <thetext>We have a piece of code that works fine in the source version, but not in the build version.
Our code looks like this:
      var x = 991;
      var y = 80 + ++x;

The qooxdoo job &quot;generate.py build&quot; compresses this code to:
var x=991;
var y=80+++x

This compressed code is syntactically incorrect.
The compressor should not remove the space character between the plusses.

The yui compressor can handle this code, because the yui compressor leaves the space between the plusses unchanged.

We can implement a work around by adding parenthesis:
      var y = 80 + (++x);

But this kind of problem is tricky, because the developer always work with the source version, and such compression problems in the build version are therefore unnoticed till the system gets deployd on the QA or Live system.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23701</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-03-29 12:06:10 +0200</bug_when>
            <thetext>Good one! Thanks for reporting.

The workaround with the parenthesized version should minimize the issue for other people as well.

Concerning build version: In general I don&#39;t think it is a good idea to deploy code that is untested by the developer. You should at least have a mock application that allows you to locally test the build version of the classes that are deployed later.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32944</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-06-14 10:43:23 +0200</bug_when>
            <thetext>Ensure proper whitespace around pre-/post-fix ops.

master: ff232d0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37975</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:20 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>