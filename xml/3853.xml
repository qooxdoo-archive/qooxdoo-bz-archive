<bug>
          <bug_id>3853</bug_id>
          
          <creation_ts>2010-07-09 15:41:00 +0200</creation_ts>
          <short_desc>Test Runner hang when script error occurs in tear down</short_desc>
          <delta_ts>2014-03-03 15:26:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.testrunner</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19226</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-07-09 15:41:18 +0200</bug_when>
            <thetext>Test Class to reproduce issue:

qx.Class.define(custom.test.DemoTest&quot;,
{
  extend : qx.dev.unit.TestCase,

  members :
  {
    tearDown : function() {
      throw new Error(&quot;No!&quot;);
    },

    testSimple : function()
    {
      this.assertEquals(4, 3+1, &quot;This should never fail!&quot;);
      this.assertFalse(false, &quot;Can false be true?!&quot;);
    },

    testAdvanced: function () 
    {
      var a = 3;
      var b = a;
      this.assertIdentical(a, b, &quot;A rose by any other name is still a rose&quot;);
      this.assertInRange(3, 1, 10, &quot;You must be kidding, 3 can never be outside [1,10]!&quot;);
    }
  }
});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19283</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-07-13 14:06:34 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19287</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-07-13 14:20:02 +0200</bug_when>
            <thetext>Fixed in r22677 for trunk and 1_1_x: Wrapped all tearDown calls in try... catch blocks. If tearDown throws an exception after a test failed, this exception will not be raised since that would cause two test failures to be registered, confusing the queued/failed/succeeded count.
If tearDown throws an exception  after a successful test, the test will be marked as failed with the exception prefixed by &quot;Error tearing down test: [test name]&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39080</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:21 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>