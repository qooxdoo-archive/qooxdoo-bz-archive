<bug>
          <bug_id>8856</bug_id>
          
          <creation_ts>2015-01-07 23:29:00 +0100</creation_ts>
          <short_desc>Support high-resolution images</short_desc>
          <delta_ts>2015-04-17 13:08:01 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>5.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Oleg Filippov">Oleg.Filippov</reporter>
          <assigned_to name="Tobias Oberrauch">tobias.oberrauch</assigned_to>
          <cc>martin.wittemann</cc>
    
    <cc>pollmeier</cc>
    
    <cc>tobias.oberrauch</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>42097</commentid>
            <who name="Oleg Filippov">Oleg.Filippov</who>
            <bug_when>2015-01-07 23:29:11 +0100</bug_when>
            <thetext>Qooxdoo Mobile JsDoc: 
&quot;A high-resolution image is assumed to have the same file name as the parameter source, but with a pixelRatio identifier before the file extension, like &quot;@2x&quot;.
Medium Resolution: &quot;example.png&quot;, high-resolution: &quot;example@2x.png&quot;

So, we have it for qooxdoo mobile, but not for desktop. It would be nice to have high-resolution images everywhere.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42098</commentid>
            <who name="Oleg Filippov">Oleg.Filippov</who>
            <bug_when>2015-01-07 23:43:31 +0100</bug_when>
            <thetext>Pull-request: https://github.com/qooxdoo/qooxdoo/pull/117</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42142</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-01-12 16:50:52 +0100</bug_when>
            <thetext>Thanks for the report and pull request.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42144</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-01-12 16:51:01 +0100</bug_when>
            <thetext>*** Bug 8011 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42374</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-02-04 15:01:19 +0100</bug_when>
            <thetext>Hi Oleg,

thank you. For youor PR.
In merged it in qooxdoo#master with 551e38c0eba1c80ae89a97f6927b0f432be52d03

I also added unit tests and did some cleanup.

Cheers Tobias</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42375</commentid>
            <who name="Oleg Filippov">Oleg.Filippov</who>
            <bug_when>2015-02-04 15:02:54 +0100</bug_when>
            <thetext>Hi Tobias,

Thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42578</commentid>
            <who name="Cajus Pollmeier">pollmeier</who>
            <bug_when>2015-02-19 08:52:33 +0100</bug_when>
            <thetext>Starting with the high DPI support, we encounter various image related problems on iOS devices:

 * Sometimes there are double images shown in virtual lists.
   If you take a look at the generated HTML, there&#39;s an IMG
   tag with a src *and* a background image

 * Sometimes images are shown in double size


The first one may have to do with this line:

+      if (el.getNodeName() == &quot;div&quot; || highResSource &amp;&amp; dec) {

Maybe it&#39;s better do put braces around the second condition:

+      if (el.getNodeName() == &quot;div&quot; || (highResSource &amp;&amp; dec)) {

While I&#39;m low on time to test it in the moment, that&#39;s just a guess. I did not try it. I just reverted our local upstream pointer to a revision before this change and use our own high DPI hack.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42640</commentid>
            <who name="Cajus Pollmeier">pollmeier</who>
            <bug_when>2015-02-25 11:40:17 +0100</bug_when>
            <thetext>Looks like the issue with the bigger images is related to padding. I&#39;ve some images in the application that used padding on an image. Due to the backgroundImage implementation of the high resolution image support, it does not work anymore.

As a workaround, I&#39;ve changed padding to margin.

Wouldn&#39;t it be better to just load the high resolution image and set the size to the original image size? That&#39;s much shorter and it behaves like the original implementation. No need for overlays.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42644</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-26 08:08:49 +0100</bug_when>
            <thetext>(In reply to comment #7)
&gt; Looks like the issue with the bigger images is related to padding. I&#39;ve some
&gt; images in the application that used padding on an image. Due to the
&gt; backgroundImage implementation of the high resolution image support, it does
&gt; not work anymore.
&gt; 
&gt; As a workaround, I&#39;ve changed padding to margin.
&gt; 
&gt; Wouldn&#39;t it be better to just load the high resolution image and set the size
&gt; to the original image size? That&#39;s much shorter and it behaves like the
&gt; original implementation. No need for overlays.

Sounds like a good idea. Is anyone willing to take it? :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42751</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-03-10 09:23:35 +0100</bug_when>
            <thetext>*** Bug 8153 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43035</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-04-08 16:46:06 +0200</bug_when>
            <thetext>@Cajus Pollmeier 

Hi Cajus,

thank you for your hint.
Could you please explain you suggestion regarding the image and the widget html element type?
Is it right that it&#39;s necessary to work with an &lt;img /&gt; from the beginning (no overlay with background)?

1. Create &lt;img src=&quot;source.png&quot; /&gt;
2. Looking for an high resolution image
3. Replace the source and let dimensions as it is

I already openend a branch: https://github.com/qooxdoo/qooxdoo/tree/feature-8856

Cheers Tobias</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43037</commentid>
            <who name="Cajus Pollmeier">pollmeier</who>
            <bug_when>2015-04-08 21:13:57 +0200</bug_when>
            <thetext>Hi Tobias,

that was how I did it the last two years (just @2x):

--- a/framework/source/class/qx/ui/basic/Image.js
+++ b/framework/source/class/qx/ui/basic/Image.js
@@ -445,6 +445,14 @@ qx.Class.define(&quot;qx.ui.basic.Image&quot;,
         return;
       }
 
+      // Detect if the image registry knows this image
+      // Check for images in HiDPI
+      var m = source.match(/^(.*)\.([a-zA-z]*)$/);
+      var pathx2 = null;
+      if((window.devicePixelRatio || 1) &gt; 1 &amp;&amp; m &amp;&amp; m[1] &amp;&amp; m[2]){
+        pathx2 = m[1] + &quot;@2x.&quot; + m[2];
+      }
+
       this.__checkForContentElementSwitch(source);
 
       if ((qx.core.Environment.get(&quot;engine.name&quot;) == &quot;mshtml&quot;) &amp;&amp;
@@ -458,7 +466,15 @@ qx.Class.define(&quot;qx.ui.basic.Image&quot;,
       var contentEl = this.__getContentElement();
 
       // Detect if the image registry knows this image
-      if (qx.util.ResourceManager.getInstance().has(source)) {
+      if (pathx2 &amp;&amp; qx.util.ResourceManager.getInstance().has(pathx2)) {
+        var ResourceManager = qx.util.ResourceManager.getInstance();
+        this.__setManagedImage(this.getContentElement(), pathx2);
+        var sx = parseInt(ResourceManager.getImageWidth(pathx2) / 2);
+        var sy = parseInt(ResourceManager.getImageHeight(pathx2) / 2);
+        this.setWidth(sx);
+        this.setHeight(sy);
+        this.setScale(true);
+      } else if (qx.util.ResourceManager.getInstance().has(source)) {
         this.__setManagedImage(contentEl, source);
         this.__fireLoadEvent();
       } else if (qx.io.ImageLoader.isLoaded(source)) {

That worked fine, but it may just work in my cases. Basically it&#39;s what you said: take the image with the high DPI source but tell it to keep the original pixel size. I don&#39;t know if there&#39;s something special to do for CSS style images. There seem to be some newer srcset attributes around, but they&#39;re not supported by most of the browsers.

At the point I added the stuff above, we were at qx 3.5, and I can&#39;t remember if there were different ways to represent images in the DOM at this time. Well - for our projects, it never broke something.

Personally I think that using multiple image resolutions is a dead end. Maybe one should just switch to Webfonts or SVG style icons in order to keep image inflation low, but... ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43057</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-04-10 15:15:26 +0200</bug_when>
            <thetext>Thank you Cajus and Oleg.
My solution is a combination between your two suggestions:
- I check for high-res image in _styleSource because this is a central point for all important calls
- I use a div with background-size (excepet IE8 and lower[1]) since we lost the benefits of decorator when using an image element [2]

I fixed this issue as good as I could.
During development I found some other issues we also have to fix:
[1] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9067
[2] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9066
[3] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9065</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43070</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-04-13 13:13:22 +0200</bug_when>
            <thetext>(In reply to comment #12)
&gt; Thank you Cajus and Oleg.
&gt; My solution is a combination between your two suggestions:
&gt; - I check for high-res image in _styleSource because this is a central point
&gt; for all important calls
&gt; - I use a div with background-size (excepet IE8 and lower[1]) since we lost the
&gt; benefits of decorator when using an image element [2]
&gt; 
&gt; I fixed this issue as good as I could.
&gt; During development I found some other issues we also have to fix:
&gt; [1] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9067
&gt; [2] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9066
&gt; [3] http://bugzilla.qooxdoo.org/show_bug.cgi?id=9065

Just saw that those recent commits broke the knob image of the split pane which is visible e.g. in the playground or the testrunner.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43084</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-04-14 11:27:04 +0200</bug_when>
            <thetext>Now it sets background-size (in pixels) only when a high resolution image is available.

Fixed in qooxdoo#master with 3bfa0f08308150bed953084145d200d0f112cc16</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43102</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-04-15 09:49:52 +0200</bug_when>
            <thetext>2 unit tests are failing in IE8</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43120</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2015-04-17 13:08:01 +0200</bug_when>
            <thetext>Fixed in qooxdoo#master with e14927e33363c321ac2a4486692b6a17921bf825

Now it skips the high-res-image tests when alpha-image-loader is needed</thetext>
          </long_desc>
      
      

    </bug>