<bug>
          <bug_id>1998</bug_id>
          
          <creation_ts>2009-02-25 17:49:00 +0100</creation_ts>
          <short_desc>SDK version 0.8 does not work with Python 3</short_desc>
          <delta_ts>2009-10-01 13:54:12 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Kurt Penrose">ktpabc</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8065</commentid>
            <who name="Kurt Penrose">ktpabc</who>
            <bug_when>2009-02-25 17:49:02 +0100</bug_when>
            <thetext>When attempting to perform &quot;generate.py build&quot;, I received an error because the parenthesis were missing from a PRINT statement. After discovering the problem (the scripts are compatible with Python v2.x, and NOT Python v3.x), I then attepted to performed an automatic translation by executing &quot;&lt;python install directory&gt;\Tools\Scripts\2to3.py -f all -w .&quot;

Now, when I run &quot;generate.py build&quot;, I receive the following messages:

Traceback (most recent call last):
  File &quot;E:\-- DISTRIBUTION ESSENTIAL --\SoftwareDevelopment\qooxdoo\qooxdoo-0.8.
1-sdk\application\demobrowser\..\..\tool\bin\generator.py&quot;, line 25, in &lt;module&gt;

    from generator.Generator import Generator
  File &quot;E:\-- DISTRIBUTION ESSENTIAL --\SoftwareDevelopment\qooxdoo\qooxdoo-0.8.
1-sdk\tool\pylib\generator\Generator.py&quot;, line 25, in &lt;module&gt;
    from misc import filetool, textutil, idlist, Path
  File &quot;E:\-- DISTRIBUTION ESSENTIAL --\SoftwareDevelopment\qooxdoo\qooxdoo-0.8.
1-sdk\tool\pylib\misc\filetool.py&quot;, line 23, in &lt;module&gt;
    from . import textutil
  File &quot;E:\-- DISTRIBUTION ESSENTIAL --\SoftwareDevelopment\qooxdoo\qooxdoo-0.8.
1-sdk\tool\pylib\misc\textutil.py&quot;, line 22, in &lt;module&gt;
    from . import filetool
ImportError: cannot import name filetool


Initial recommended courses of action:

(1) If 0.8.x can be run with Python 3, update introductory material to explain how(I am new to qooxdoo and am trying it for the first time).
(2) If 0.8.x cannot be run with Python 3, update introductory material to suggest having two version of Python installed (refer to ActiveState FAQ at http://docs.activestate.com/activepython/3.0/faq.html) and suggest easiest way to manage (would that be to change the path variable before doing a qooxdoo generate?).
(3) Ideally, migrate the scripts to 3.0 in a way that is backwards compatible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8271</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-04 12:11:58 +0100</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8871</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-24 18:35:00 +0100</bug_when>
            <thetext>Also see the info about &quot;Porting To Python 3.0&quot;:
http://docs.python.org/3.0/whatsnew/3.0.html#porting-to-python-3-0

Is this the way to go, i.e. maintaining a cleaned-up, up-to-date 2.x code base (which is a good thing per se), with the (optional) possibility to autogenerate a Python 3.x compatible version of the tool chain?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8872</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-24 18:40:28 +0100</bug_when>
            <thetext>Oops, there&#39;s brand new info on the qooxdoo homepage about this (non-trivial) topic (great, Thomas!):
http://qooxdoo.org/documentation/python_3_support

&quot;The current tool chain of qooxdoo (as of qooxdoo 0.8.2) depends only on Python 2.x (x &gt;= 4). Python 3 has been released around December 2008 as a stable release. But the 3.x line of Python marks a significant shift in the language evolution and is not downwards compatible! This basically means that you can support either Python 2.x or Python 3.x, but hardly both. The Python maintainers recommend to only slowly port applications to Python 3, and only for good reasons. The v2.x line of Python will be actively maintained for another couple of years as a production line of Python. For qooxdoo this might mean that we will delay support for Python 3 for the forseeable future, and will port depending on the user penetration of Python 3 in our community.&quot;
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8873</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-24 18:49:43 +0100</bug_when>
            <thetext>Even better, look at http://qooxdoo.org/documentation/python_3_support

The process seems reasonable, but the important thing is that they explicitly 
do not recommend trying to have a single source running unchanged under 2.x and 
3.x. That probably means that if we want to support both Python version in 
parallel at one point we have to create two parallel versions of the tool 
chain, either in separate branches or side-by-side within the same branch(?). 
I&#39;m somewhat doubtful that we could just maintain a 2.x code base and generate 
arbitrarily a 3.x code version just by running the automated 2to3 script, 
without further manual polishing the 3.x version. But maybe I&#39;m too pessimistic.

I&#39;ve started to investigate the real amount of changes necessary for our tool 
chain. See also bug#2154.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8889</commentid>
            <who name="Kurt Penrose">ktpabc</who>
            <bug_when>2009-03-24 21:33:53 +0100</bug_when>
            <thetext>Thomas: You are not being too pessimistic.  The automated conversion does not work.

Andreas: I think it is a fine strategy to delay support for Python 3.  In this case the only change is a documentation change.  One consideration here is the perception of newcomers.  If I&#39;m a new user and I discover that qooxdoo requires a version of Python that I view as outdated (Python 3.0 has been out for XX months, XX years, etc), then I figure nobody cares enough about qooxdoo to update it.  I might come to the (invalid) conclusion that this project is not being actively supported/maintained.  So to aleviate this possible assumption, I would suggest two things (1) document references URL to Python maintainer recommendations to stick with 2.0, and (2) references a preliminary date at which conversion from Python 2.0 to Python 3.0 is likely to occur.  It can be vague, like &quot;january 20XX&quot;, or &quot;3rd quarter 20XX&quot;, based on recommendation of Python community.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8890</commentid>
            <who name="Kurt Penrose">ktpabc</who>
            <bug_when>2009-03-24 21:41:32 +0100</bug_when>
            <thetext>I&#39;m sorry gentleman.  I was too lazy to follow link to topic.  

This documentation looks excellent to me.  I think the only thing to add would be a link from the Python paragraph in http://qooxdoo.org/documentation/0.8/requirements to http://qooxdoo.org/documentation/python_3_support.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8906</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-25 11:47:05 +0100</bug_when>
            <thetext>I added the link from the requirements page.

As for newcomer perception:
  - the default doc set presented at the generic URL http://docs.python.org/ is 
still 2.x (2.6.1 currently)
  - I&#39;m currently not finding a reference to a document speaking about 
recommended upgrade strategies :-(</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8928</commentid>
            <who name="Kurt Penrose">ktpabc</who>
            <bug_when>2009-03-25 22:12:54 +0100</bug_when>
            <thetext>I think FIXED is the correct resolution status because the documentation changes sufficiently instruct the user, and provide credible evidence that it is acceptable to remain at Python 2.

Future changes to support Python 3 should be considered an enhancement, not a bug fix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12789</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-01 13:53:45 +0200</bug_when>
            <thetext>reopened to correct status to WONTFIX (this is more consistent with the bug title).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12790</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-01 13:54:12 +0200</bug_when>
            <thetext>resolved as WONTFIX.</thetext>
          </long_desc>
      
      

    </bug>