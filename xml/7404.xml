<bug>
          <bug_id>7404</bug_id>
          
          <creation_ts>2013-05-14 17:03:00 +0200</creation_ts>
          <short_desc>Add basecalls, i.e. &quot;this.base(arguments, varargs)&quot;, support for classes defined with &quot;qx.Bootstrap&quot;</short_desc>
          <delta_ts>2014-03-03 15:22:32 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Richard Sternagel">richard.sternagel</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32746</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-05-14 17:03:31 +0200</bug_when>
            <thetext>Supporting basecalls within &quot;qx.Bootstrap&quot; has some advantages: 

* makes it easier to downgrade from &quot;qx.Class.define()&quot; to &quot;qx.Bootstrap.define()&quot; (no adaptions needed)
* no migration is needed by a qooxdoo user who already uses &#39;this.base(arguments, varargs)&#39; while extending a class which will be downgraded in the next release
* every constructor/method of a class defined by qx.Bootstrap can now call it&#39;s superclass implementation

Furthermore this would fix bug #6853.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32749</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-05-14 17:19:05 +0200</bug_when>
            <thetext>Fixed.

rs_restmodule: e4ce3fa8165dd43d4c91db068d50ed742589f077</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37714</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:32 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>