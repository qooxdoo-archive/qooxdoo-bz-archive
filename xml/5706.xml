<bug>
          <bug_id>5706</bug_id>
          
          <creation_ts>2011-10-12 16:57:00 +0200</creation_ts>
          <short_desc>Add Support for proper Operator Precedence to the Parser</short_desc>
          <delta_ts>2014-03-03 15:25:55 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>1.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          <blocked>5000</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27199</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-10-12 16:57:10 +0200</bug_when>
            <thetext>This is a follow-up bug on bug#5000, to make its prerequisits explicit. Provide 
the parser with the ability to produce correct syntax trees, i.e. trees the 
implement operator precedence properly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28758</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-03-07 09:56:32 +0100</bug_when>
            <thetext>A new parser has landed in master. It is based on &quot;top-down operator precedence 
(TDOP)&quot; parsing, and constructs an AST with correct precedences. This parser is 
used for the &quot;compile pipeline&quot; of the generator (dependency analysis, 
optimizations, compression). Hence, the prerequisites are in place to do more 
aggressive optimization by evaluating expression subtrees.

The other &quot;pipelines&quot; that rely on syntax trees (api-doc, pretty-print, lint) 
still use the old AST (and in consequence the old parser), and can be adapted 
to the new parser over time.

master: 686690c</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38920</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:55 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>