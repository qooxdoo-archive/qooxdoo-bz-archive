<bug>
          <bug_id>7654</bug_id>
          
          <creation_ts>2013-08-15 02:53:00 +0200</creation_ts>
          <short_desc>Widgets should sync appearance on child add (toolbar part not rendering right)</short_desc>
          <delta_ts>2013-12-04 15:55:29 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>3.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Elsdoerfer">michael</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33638</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2013-08-15 02:53:00 +0200</bug_when>
            <thetext>See these examples:

http://tinyurl.com/oe6p2yw
http://tinyurl.com/kfmphlg

The problem is that if you add a new button to a toolbar part, the toolbar PartContainer child control is never added to the appearance queue. As a result, Part.__onSyncAppearance never updates the button states, as a result of which they render incorrectly.

Note that you need not add buttons &quot;later&quot;, as I do in the example. I ran into this problem because I created widgets in the following order:

1. create a part with a button
2. create a Pane (which causes a flush, which sets the initial appearance of the part)
3. add another button to the part.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33770</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-08-28 16:09:29 +0200</bug_when>
            <thetext>Thanks for the good samples. Called the state updating method on each child add and remove which could also have broken the appearance.

master: a79bb18df608c8bd33f780c251eb2cb6a8d56fa6</thetext>
          </long_desc>
      
      

    </bug>