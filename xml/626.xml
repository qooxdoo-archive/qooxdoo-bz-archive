<bug>
          <bug_id>626</bug_id>
          
          <creation_ts>2007-09-07 03:09:00 +0200</creation_ts>
          <short_desc>extend setAppearance() to accept a list</short_desc>
          <delta_ts>2007-09-14 11:49:44 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>0.7.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian">qooxdoo.org</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2200</commentid>
            <who name="Christian">qooxdoo.org</who>
            <bug_when>2007-09-07 03:09:43 +0200</bug_when>
            <thetext>It would be great if there were any possibility to call setAppearance() with a list of appearances, ordered by their usage priority. If the first appearance is not known by the current theme, try the next in the list.
I know that there is a possibility to extend a theme.Appearance with include. That&#39;s not really what I&#39;m looking for:
My intension is to use more than just my own meta theme (and its appearance theme). I want to use the default themes (Classic Luna, Classic Windows, Classic Royale, Ext), too! My application assigns the appearance &quot;headline-1&quot; to some qx.ui.basic.Labels (in html, I would mark them as &lt;h1&gt;, but because of internationalization, I don&#39;t want to use html in this.tr()-elements). The problem is, _my_ meta theme knows the appearance &quot;headline-1&quot;, but &quot;Classic Windows&quot; f.e. does not and I don&#39;t want to manipulate those system given themes. Maybe they will be updated some time or sth. like that, so that I have to merge my changes with the update. That&#39;s bad.
The idea is still: If the theme does not know the given appearance, try the next in the list. So I can call setAppearance([&quot;headline-1&quot;, &quot;label&quot;]) (or setAppearance(&quot;headline-1&quot;, &quot;label&quot;)) and my theme uses headline-1, the others use &quot;label&quot; (if they know it). At this time, a label with an unknown appearance has no style (browser default). Thats pretty ugly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2207</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2007-09-11 11:44:22 +0200</bug_when>
            <thetext>Sorry, I don&#39;t think this matches with our philosophy. In our thinking this is already doable in some other ways using a combinations of &quot;include&quot;s and &quot;base&quot;s.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2323</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-14 11:49:44 +0200</bug_when>
            <thetext>Also see my response on the mailing list at http://www.nabble.com/appearance-fallback-t4395555.html

Hugh</thetext>
          </long_desc>
      
      

    </bug>