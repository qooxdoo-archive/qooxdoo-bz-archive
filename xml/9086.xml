<bug>
          <bug_id>9086</bug_id>
          
          <creation_ts>2015-04-15 09:41:00 +0200</creation_ts>
          <short_desc>Optimize Calendar event listeners</short_desc>
          <delta_ts>2015-04-21 17:16:22 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>ui</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43097</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-04-15 09:41:05 +0200</bug_when>
            <thetext>ui.control.Calendar re-renders its UI whenever a config setting is changed or a different month is displayed. This includes removing the listeners from numerous buttons, which can get quite slow since removing a tap listeners means the GestureHandler is disposed, which removes scroll listeners from the window etc.

We could probably speed this up by registering only one listener for each type on the calendar&#39;s container and checking the target element to see what was clicked. That would avoid removing and re-adding tons of listeners since the container element remains in the DOM.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43147</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-04-21 17:16:22 +0200</bug_when>
            <thetext>Fixed as described with 82f7dd5dbc744148296f364c455c99af637d4996</thetext>
          </long_desc>
      
      

    </bug>