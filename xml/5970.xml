<bug>
          <bug_id>5970</bug_id>
          
          <creation_ts>2011-12-20 16:17:00 +0100</creation_ts>
          <short_desc>Error after heavy changing of localization strings and running generator</short_desc>
          <delta_ts>2013-12-16 12:45:40 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>6296</dup_id>
          
          
          
          
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28068</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-12-20 16:17:54 +0100</bug_when>
            <thetext>this occurs after adding new &quot;this.tr&quot; in multiple files and adding new strings for a new language:

doing: ./generator.pt (with already existing cache) gives:

Traceback (most recent call last):
  File &quot;../../tool/bin/generator.py&quot;, line 244, in &lt;module&gt;
    if str(e): # there&#39;s something to print
  File &quot;/home/Sales/dev/javascript/qooxdoo/tool/pylib/generator/resource/Resource.py&quot;, line 48, in __repr__
    return &quot;&lt;%s:%s&gt;&quot; % (self.__class__.__name__, self.id)
AttributeError: &#39;Image&#39; object has no attribute &#39;id&#39;
Shell command returned error code: 1


No idea where the error occurred and what triggered else than above.

After ./generator.py cleandist

then ./generator.py it works again!!!

Conclusion the cache does not keep up to date in some way.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28071</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-12-20 18:17:24 +0100</bug_when>
            <thetext>(In reply to comment #1)
&gt; this occurs after adding new &quot;this.tr&quot; in multiple files and adding new strings
&gt; for a new language:

What does that mean, &quot;adding new strings for a new language&quot;? Did you add translations in a new .po file?

&gt; 
&gt; doing: ./generator.pt (with already existing cache) gives:
&gt; 
&gt; Traceback (most recent call last):
&gt;   File &quot;../../tool/bin/generator.py&quot;, line 244, in &lt;module&gt;
&gt;     if str(e): # there&#39;s something to print
&gt;   File
&gt; &quot;/home/Sales/dev/javascript/qooxdoo/tool/pylib/generator/resource/Resource.py&quot;,
&gt; line 48, in __repr__
&gt;     return &quot;&lt;%s:%s&gt;&quot; % (self.__class__.__name__, self.id)
&gt; AttributeError: &#39;Image&#39; object has no attribute &#39;id&#39;
&gt; Shell command returned error code: 1

This is unfortunate, as the stack is already in an exception handler when this (new) exception occurs. The underlying exception is blurred, and it would have been interesting to know what that was.

&gt; After ./generator.py cleandist
&gt; 
&gt; then ./generator.py it works again!!!

Is it reproduceable? I mean, after the distclean, does the exception reappear after another / another couple of runs of the generator, maybe together with similar changes to code and .po files?


&gt; Conclusion the cache does not keep up to date in some way.

The cache is fine. It is the retrieving of items from the cache that caused the problem you reported, where object attributes are accessed (e.g. self.id here) before the object has completely be re-instantiated from the cache.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29661</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-06-04 17:22:46 +0200</bug_when>
            <thetext>It&#39;s potentially a duplicate of bug#6296. As Christian could reproduce the 
issue, let&#39;s follow up over there.

*** This bug has been marked as a duplicate of bug 6296 ***</thetext>
          </long_desc>
      
      

    </bug>