<bug>
          <bug_id>49</bug_id>
          
          <creation_ts>2006-06-08 08:26:00 +0200</creation_ts>
          <short_desc>ClientSide storage should be integrated with qooxdoo</short_desc>
          <delta_ts>2012-03-28 08:22:09 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>martin.wittemann</cc>
    
    <cc>qooxdoo-bugs</cc>
    
    <cc>tinobutz</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>59</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-06-08 08:26:02 +0200</bug_when>
            <thetext>It would be nice if qooxdoo has also support for client-side IO. And this would mean more than just cookies. Dojo has some client side storage based on Flash with an API for different &quot;backends&quot;. Firefox 2 supports client side storage like defined by the WHATWG.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5142</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:45 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12434</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-21 08:31:28 +0200</bug_when>
            <thetext>This definitely should be a feature we should consider to have soon, especially in the context of data binding. I can imagine a good solution supporting a data store for such a functionality which can create the models and handle / save all model changes immediately. Additionally, we could use different techniques like HTML5 or gears to support it.
So should we moe it up in the prio and assigne a target milestone?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12437</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-21 09:49:52 +0200</bug_when>
            <thetext>In the context of resolving the open bugs (i.e. defects) for the 1.0 release, I doubt we&#39;ll push this new feature. It certainly is a useful addition (which has been on the wish list for a long time), that we should indeed address soon, but probably as a distinct feature in a release shortly after 1.0.

Martin, the data binding relation is obvious, I also put Johnny on CC as he was also interested (particularly cross-browser aspects).
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12442</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-21 10:23:28 +0200</bug_when>
            <thetext>Just want to mention that we, the Deutsche Telekom AG, are already working on this as well. I think it will not be that an issue to open-source it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27575</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-11-18 15:41:31 +0100</bug_when>
            <thetext>In the first step, we should use our qx.bom.storage.Local / Session classes for the abstraction.

I think it would be enough to support IE6 and IE7 as a fallback.

For all other &quot;memory&quot; storage is efficient. 

All other abstractions should be pluggable and contribs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28654</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-02-27 16:51:54 +0100</bug_when>
            <thetext>Finally, we have been able to put up a good implementation for client side storage using HTML WebStorage. Check out the documentation in the manual for more details. [1]

master: c1f77802b663884dc0e7b05ddfe5af134a6934f8

[1] pages/low_level/storage.rst</thetext>
          </long_desc>
      
      

    </bug>