<bug>
          <bug_id>3845</bug_id>
          
          <creation_ts>2010-07-08 14:56:00 +0200</creation_ts>
          <short_desc>Can&#39;t delete all rows from a table</short_desc>
          <delta_ts>2014-03-03 08:45:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          <bug_file_loc>http://tinyurl.com/3xnqan7</bug_file_loc>
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>derrell.lipman</cc>
    
    <cc>j-b.briaud</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19182</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-08 14:56:51 +0200</bug_when>
            <thetext>The fact is that when you give another model to the same table instance, 
the last corresponding edited cell on the previous model can&#39;t be edited 
on the new model.

On the given link [1], to reproduce the bug, you have to right click on the first cell (clicking on the second will not reproduce the bug), a new model will be 
given to the same table instance. You will have then a new cell with 
&quot;new age&quot; data.
It&#39;s impossible to doubleCLick on this cell. A new right Click on this 
cell will add a new row on which you can now doucleClick. After this it 
is possible to doubleClick on the first one cell.
Tell me if it is really a bug. I think it is why using directly 
qx.ui.table.Table class, I can edit only one time my table. The second 
time, when a new model is given, I can&#39;t edit cell(0,0). I&#39;m obliged to 
edit cell(0,1).

Ps: don&#39;t care about listeners types, they are only pretexts to reproduce 
the bug.

[1] http://tinyurl.com/3xnqan7</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19183</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-08 15:05:52 +0200</bug_when>
            <thetext>This does appear to be a bug, but it is *really* obscure. Changing the table model like that is a very unusual thing to do. Can you explain what you&#39;re trying to accomplish? Before we determine the priority of fixing this, I&#39;d like to have a better idea of your use case. I expect that it can be as easily accomplished using more traditional methodologies.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19185</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-08 16:04:18 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; This does appear to be a bug, but it is *really* obscure. Changing the table
&gt; model like that is a very unusual thing to do. Can you explain what you&#39;re
&gt; trying to accomplish? Before we determine the priority of fixing this, I&#39;d like
&gt; to have a better idea of your use case. I expect that it can be as easily
&gt; accomplished using more traditional methodologies.
&gt; 
&gt; Derrell

We use in fact a tree with  different folders . Clicking on a folder shows on the right part a ui with tabviewPages containing widgets in which can be found tables.
All the folders show quite the same UI. So, by clicking on the tree we use the same instances of widgets and so the same instances of tables. Only the model changes.


Were are very worried about the fact that changing the model may cause problems since it is very usual with Swing and the Model-View-Controller(MVC) : the model can change but the view is the same. Changing the view at each change of the model would remove the usefulness of MVC.

The bug was detected using Selenium Test which automatically click on tables cells and it failed with no real reason.

I hope I have been clear.

Olivier.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19186</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-08 16:11:54 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; We use in fact a tree with  different folders . Clicking on a folder shows on
&gt; the right part a ui with tabviewPages containing widgets in which can be found
&gt; tables.
&gt; All the folders show quite the same UI. So, by clicking on the tree we use the
&gt; same instances of widgets and so the same instances of tables. Only the model
&gt; changes.
&gt; 
&gt; Were are very worried about the fact that changing the model may cause problems
&gt; since it is very usual with Swing and the Model-View-Controller(MVC) : the
&gt; model can change but the view is the same. Changing the view at each change of
&gt; the model would remove the usefulness of MVC.

In the current implementation of Table, it is not possible to change the number of columns in a table once set. This is, I believe, a design defect, but is not being addressed in Table. Because of this, though, changing the model, as opposed to simply setting the data in the model, really doesn&#39;t make any sense. The &quot;model&quot; in MVC, as applied to a Table, is really the data in the model, and you can always change the data that is applied to the model by calling model.setData(newData). That should provide you the same capability you were looking for, just in a slightly different form.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19200</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-08 17:19:39 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; &gt; We use in fact a tree with  different folders . Clicking on a folder shows on
&gt; &gt; the right part a ui with tabviewPages containing widgets in which can be found
&gt; &gt; tables.
&gt; &gt; All the folders show quite the same UI. So, by clicking on the tree we use the
&gt; &gt; same instances of widgets and so the same instances of tables. Only the model
&gt; &gt; changes.
&gt; &gt; 
&gt; &gt; Were are very worried about the fact that changing the model may cause problems
&gt; &gt; since it is very usual with Swing and the Model-View-Controller(MVC) : the
&gt; &gt; model can change but the view is the same. Changing the view at each change of
&gt; &gt; the model would remove the usefulness of MVC.
&gt; 
&gt; In the current implementation of Table, it is not possible to change the number
&gt; of columns in a table once set. This is, I believe, a design defect, but is not
&gt; being addressed in Table. Because of this, though, changing the model, as
&gt; opposed to simply setting the data in the model, really doesn&#39;t make any sense.
&gt; The &quot;model&quot; in MVC, as applied to a Table, is really the data in the model, and
&gt; you can always change the data that is applied to the model by calling
&gt; model.setData(newData). That should provide you the same capability you were
&gt; looking for, just in a slightly different form.
&gt; 
&gt; Derrell

I tried to only change the data using model.setData(newData), as it is used in my code [1].
But the same issue appears.

Olivier

[1] http://tinyurl.com/39wmw9h</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19201</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-08 17:28:35 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; I tried to only change the data using model.setData(newData), as it is used in
&gt; my code [1].
&gt; But the same issue appears.
&gt; 
&gt; [1] http://tinyurl.com/39wmw9h

You should certainly, I think, be able to do what you&#39;re trying here. This is a real bug in a normal-use scenario.

@Martin, this deserves attention. I don&#39;t have the time to work on it right now. I&#39;ll let you assign a priority and assignee.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19206</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-09 10:40:13 +0200</bug_when>
            <thetext>(In reply to comment #5)
&gt; (In reply to comment #4)
&gt; &gt; I tried to only change the data using model.setData(newData), as it is used in
&gt; &gt; my code [1].
&gt; &gt; But the same issue appears.
&gt; &gt; 
&gt; &gt; [1] http://tinyurl.com/39wmw9h
&gt; 
&gt; You should certainly, I think, be able to do what you&#39;re trying here. This is a
&gt; real bug in a normal-use scenario.
&gt; 
&gt; @Martin, this deserves attention. I don&#39;t have the time to work on it right
&gt; now. I&#39;ll let you assign a priority and assignee.
&gt; 
&gt; Derrell

Hi, 
Thanks of the attention given to this bug which is really blocking for our tests.
Is it possible to have the priority assigned to it and a potential delay of it&#39;s resolution?

Olivier</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19216</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-07-09 12:31:14 +0200</bug_when>
            <thetext>Olivier,

Martin will continue with the regular bug triage on Monday. He was sick the entire week and not at work, and given that we are close to the next release we have to see if and how we could address the issue. If it is that important for you and you&#39;d be able to help resolving the issue, that would be a plus.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19222</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 14:15:28 +0200</bug_when>
            <thetext>The bug seems to have to do with addRows(), a method that I&#39;ve never used before. If you change your cellClick listener like this, it works:

table.addListener(&quot;cellClick&quot;,
                  function()
                  {
                    tableModel.setData([[&quot;new role&quot;]]);
                    table.resetSelection(); // optional
                  });

So as a work-around, instead of adding rows by calling addRows(), add them to your locally-maintained data array and call setData() with it.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19223</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 14:16:22 +0200</bug_when>
            <thetext>Changed the summary</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19228</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-09 16:38:33 +0200</bug_when>
            <thetext>To me. 
As Derrell posted a workaround, we will not include a fix in the upcoming release.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19230</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-09 16:50:32 +0200</bug_when>
            <thetext>(In reply to comment #10)
&gt; To me. 
&gt; As Derrell posted a workaround, we will not include a fix in the upcoming
&gt; release.

Hi, I think the issue is not the addRows method but tableModel.setData([]) two times, which is done in my code.

I replaced the addRows method with setData [1] but there is the same problem.


[1] http://tinyurl.com/38tz2ww</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19231</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 17:15:43 +0200</bug_when>
            <thetext>(In reply to comment #11)
&gt; (In reply to comment #10)
&gt; &gt; To me. 
&gt; &gt; As Derrell posted a workaround, we will not include a fix in the upcoming
&gt; &gt; release.
&gt; 
&gt; Hi, I think the issue is not the addRows method but tableModel.setData([]) two
&gt; times, which is done in my code.
&gt; 
&gt; I replaced the addRows method with setData [1] but there is the same problem.
&gt; 
&gt; 
&gt; [1] http://tinyurl.com/38tz2ww

Ok. The problem is that for some reason an empty array of rows is causing a problem. I also see that using removeRows() is causing it to fail. Something is definitely wrong, but you can get around all issues except removing all rows from the table by simply setting the new data and not trying to clear the old data first.

It is a big problem that there currently appears to be no way to remove all rows from the table. The closest you can come is passing an array containing an empty array, yielding one row with no data: tableModel.setData([[]]);

@Martin, if at all possible, this really ought to be addressed for the upcoming release. It&#39;s a pretty big deal that you can&#39;t delete all rows from the table.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19232</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 17:16:16 +0200</bug_when>
            <thetext>Corrected summary again</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19233</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-09 17:29:14 +0200</bug_when>
            <thetext>(In reply to comment #13)
&gt; Corrected summary again

I don&#39;t know if I got everything you said but do you mean there is no issue setting new data instead of clear all rows?

In the URL I posted I don&#39;t try to remove rows, it&#39;s commented. So simply setting new data causes the same issue.

Olivier</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19234</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 17:39:44 +0200</bug_when>
            <thetext>&gt; I don&#39;t know if I got everything you said but do you mean there is no issue
&gt; setting new data instead of clear all rows?
&gt; 
&gt; In the URL I posted I don&#39;t try to remove rows, it&#39;s commented. So simply
&gt; setting new data causes the same issue.

The problem is setting the data to &quot;no rows&quot; using tableModel.setData([]);
That fails. Just don&#39;t do it. Use only the next line you have in your demo, which actually sets the new data. Granted it&#39;s not ideal, because there&#39;s no way to remove all rows, but as long as you don&#39;t have a requirement to remove all rows, you can call setData, providing a valid array of arrays of cell data, and it works correctly.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19235</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-09 17:56:04 +0200</bug_when>
            <thetext>(In reply to comment #15)
&gt; &gt; I don&#39;t know if I got everything you said but do you mean there is no issue
&gt; &gt; setting new data instead of clear all rows?
&gt; &gt; 
&gt; &gt; In the URL I posted I don&#39;t try to remove rows, it&#39;s commented. So simply
&gt; &gt; setting new data causes the same issue.
&gt; 
&gt; The problem is setting the data to &quot;no rows&quot; using tableModel.setData([]);
&gt; That fails. Just don&#39;t do it. Use only the next line you have in your demo,
&gt; which actually sets the new data. Granted it&#39;s not ideal, because there&#39;s no
&gt; way to remove all rows, but as long as you don&#39;t have a requirement to remove
&gt; all rows, you can call setData, providing a valid array of arrays of cell data,
&gt; and it works correctly.
&gt; 
&gt; Derrell

Ok I get you, but the fact is that in my application only the user clicks a button to add a new row. If I don&#39;t set data to &quot;no rows&quot; using tableModel.setData([]), the new view will be the same as the next and if no data is added (no row on the table) we will keep the previous rows. 
 
How could I assure the facts that we don&#39;t keep the same view changing the model and that putting no data is possible?

Olivier</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19236</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-07-09 18:01:52 +0200</bug_when>
            <thetext>&gt; Ok I get you, but the fact is that in my application only the user clicks a
&gt; button to add a new row. If I don&#39;t set data to &quot;no rows&quot; using
&gt; tableModel.setData([]), the new view will be the same as the next and if no
&gt; data is added (no row on the table) we will keep the previous rows. 
&gt; 
&gt; How could I assure the facts that we don&#39;t keep the same view changing the
&gt; model and that putting no data is possible?

It seems that there is no means available, at the moment, to change the table from having data, to having no data (short of removing the table and adding a new one -- a gross hack). That bug needs fixing.

You should be able to provide the entire data array to setData() at any time (as long as it contains at least one row), and have it update the table. When your user clicks the &quot;Add Row&quot; button, you should add the data to your locally-maintained rowData array, and pass that rowData array to setData().

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19240</commentid>
            <who name="Jean-Baptiste Briaud -- Novlog">j-b.briaud</who>
            <bug_when>2010-07-12 08:01:12 +0200</bug_when>
            <thetext>For performance purpose, we keep only one table widget instance for several set of data (different rows and sometimes different columns).
Only one set of data can be visible at one time.

Some solution identified :
1. Instantiate a new table each time. The whole thing is design for not doing that, so we can&#39;t change without recoding everything.

2. Removing all rows

3. Adding empty rows

4. Instantiating a new model and set it to the table

Any other ideas welcome !

Olivier, can you ensure all had been try ?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19241</commentid>
            <who name="Jean-Baptiste Briaud -- Novlog">j-b.briaud</who>
            <bug_when>2010-07-12 08:05:04 +0200</bug_when>
            <thetext>(In reply to comment #17) 
&gt; You should be able to provide the entire data array to setData() at any time
&gt; (as long as it contains at least one row), and have it update the table. When
&gt; your user clicks the &quot;Add Row&quot; button, you should add the data to your
&gt; locally-maintained rowData array, and pass that rowData array to setData().

That&#39;s exactly what we are doing except that data set doesn&#39;t always contains one row. That&#39;s why we have to clear the table between data set</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19244</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-12 11:37:34 +0200</bug_when>
            <thetext>(In reply to comment #18)
&gt; For performance purpose, we keep only one table widget instance for several set
&gt; of data (different rows and sometimes different columns).
&gt; Only one set of data can be visible at one time.
&gt; 
&gt; Some solution identified :
&gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; that, so we can&#39;t change without recoding everything.
&gt; 
&gt; 2. Removing all rows
&gt; 
&gt; 3. Adding empty rows
&gt; 
&gt; 4. Instantiating a new model and set it to the table
&gt; 
&gt; Any other ideas welcome !
&gt; 
&gt; Olivier, can you ensure all had been try ?

Instanciating a new model and setting it to the table only after adding rows seems to work. 
http://tinyurl.com/2demgq5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19270</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-13 10:22:39 +0200</bug_when>
            <thetext>(In reply to comment #18)
&gt; For performance purpose, we keep only one table widget instance for several set
&gt; of data (different rows and sometimes different columns).
&gt; Only one set of data can be visible at one time.
&gt; 
&gt; Some solution identified :
&gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; that, so we can&#39;t change without recoding everything.
&gt; 
&gt; 2. Removing all rows
&gt; 
&gt; 3. Adding empty rows
&gt; 
&gt; 4. Instantiating a new model and set it to the table
&gt; 
&gt; Any other ideas welcome !
&gt; 
&gt; Olivier, can you ensure all had been try ?

I am looking for a workaround without instanciating a new table. 
Instanciating a new model and set it to the table doesn&#39;t work either.
the table can&#39;t be used again for another model.  
Have you had some more ideas?
Using a new table is a too big refactoring for our code. 

Olivier</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19272</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-13 10:42:01 +0200</bug_when>
            <thetext>(In reply to comment #21)
&gt; (In reply to comment #18)
&gt; &gt; For performance purpose, we keep only one table widget instance for several set
&gt; &gt; of data (different rows and sometimes different columns).
&gt; &gt; Only one set of data can be visible at one time.
&gt; &gt; 
&gt; &gt; Some solution identified :
&gt; &gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; &gt; that, so we can&#39;t change without recoding everything.
&gt; &gt; 
&gt; &gt; 2. Removing all rows
&gt; &gt; 
&gt; &gt; 3. Adding empty rows
&gt; &gt; 
&gt; &gt; 4. Instantiating a new model and set it to the table
&gt; &gt; 
&gt; &gt; Any other ideas welcome !
&gt; &gt; 
&gt; &gt; Olivier, can you ensure all had been try ?
&gt; 
&gt; I am looking for a workaround without instanciating a new table. 
&gt; Instanciating a new model and set it to the table doesn&#39;t work either.
&gt; the table can&#39;t be used again for another model.  
&gt; Have you had some more ideas?
&gt; Using a new table is a too big refactoring for our code. 
&gt; 
&gt; Olivier

I forgot to post an URL : http://tinyurl.com/32yzf6l.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19276</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-13 12:17:27 +0200</bug_when>
            <thetext>(In reply to comment #22)
&gt; (In reply to comment #21)
&gt; &gt; (In reply to comment #18)
&gt; &gt; &gt; For performance purpose, we keep only one table widget instance for several set
&gt; &gt; &gt; of data (different rows and sometimes different columns).
&gt; &gt; &gt; Only one set of data can be visible at one time.
&gt; &gt; &gt; 
&gt; &gt; &gt; Some solution identified :
&gt; &gt; &gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; &gt; &gt; that, so we can&#39;t change without recoding everything.
&gt; &gt; &gt; 
&gt; &gt; &gt; 2. Removing all rows
&gt; &gt; &gt; 
&gt; &gt; &gt; 3. Adding empty rows
&gt; &gt; &gt; 
&gt; &gt; &gt; 4. Instantiating a new model and set it to the table
&gt; &gt; &gt; 
&gt; &gt; &gt; Any other ideas welcome !
&gt; &gt; &gt; 
&gt; &gt; &gt; Olivier, can you ensure all had been try ?
&gt; &gt; 
&gt; &gt; I am looking for a workaround without instanciating a new table. 
&gt; &gt; Instanciating a new model and set it to the table doesn&#39;t work either.
&gt; &gt; the table can&#39;t be used again for another model.  
&gt; &gt; Have you had some more ideas?
&gt; &gt; Using a new table is a too big refactoring for our code. 
&gt; &gt; 
&gt; &gt; Olivier
&gt; 
&gt; I forgot to post an URL : http://tinyurl.com/32yzf6l.

I tried to avoid to use addRows as said initially. It works with setData[1]. The bug is definitively to remove a row. In facts it&#39;s impossible to change the model (remove rows and add others) of the table without editing problems. 

In [1] I re-use the previous rows data (data = data.concat([[&quot;new man&quot;]]);
tableModel.setData(data);) Here again, I&#39;m obliged to create a new instance of table instead of simply keep alive the previous table with data.push([&quot;new man&quot;]); push method doesn&#39;t work here. [2]

qooxdoo tables have a problem of MVC managemant.

[1] http://tinyurl.com/2c7mr3p
[2] http://tinyurl.com/27er4vd</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19286</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-13 14:19:53 +0200</bug_when>
            <thetext>(In reply to comment #0)
&gt; The fact is that when you give another model to the same table instance, 
&gt; the last corresponding edited cell on the previous model can&#39;t be edited 
&gt; on the new model.
&gt; 
&gt; On the given link [1], to reproduce the bug, you have to right click on the
&gt; first cell (clicking on the second will not reproduce the bug), a new model
&gt; will be 
&gt; given to the same table instance. You will have then a new cell with 
&gt; &quot;new age&quot; data.
&gt; It&#39;s impossible to doubleCLick on this cell. A new right Click on this 
&gt; cell will add a new row on which you can now doucleClick. After this it 
&gt; is possible to doubleClick on the first one cell.
&gt; Tell me if it is really a bug. I think it is why using directly 
&gt; qx.ui.table.Table class, I can edit only one time my table. The second 
&gt; time, when a new model is given, I can&#39;t edit cell(0,0). I&#39;m obliged to 
&gt; edit cell(0,1).
&gt; 
&gt; Ps: don&#39;t care about listeners types, they are only pretexts to reproduce 
&gt; the bug.
&gt; 
&gt; [1] http://tinyurl.com/3xnqan7

(In reply to comment #23)
&gt; (In reply to comment #22)
&gt; &gt; (In reply to comment #21)
&gt; &gt; &gt; (In reply to comment #18)
&gt; &gt; &gt; &gt; For performance purpose, we keep only one table widget instance for several set
&gt; &gt; &gt; &gt; of data (different rows and sometimes different columns).
&gt; &gt; &gt; &gt; Only one set of data can be visible at one time.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Some solution identified :
&gt; &gt; &gt; &gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; &gt; &gt; &gt; that, so we can&#39;t change without recoding everything.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; 2. Removing all rows
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; 3. Adding empty rows
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; 4. Instantiating a new model and set it to the table
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Any other ideas welcome !
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Olivier, can you ensure all had been try ?
&gt; &gt; &gt; 
&gt; &gt; &gt; I am looking for a workaround without instanciating a new table. 
&gt; &gt; &gt; Instanciating a new model and set it to the table doesn&#39;t work either.
&gt; &gt; &gt; the table can&#39;t be used again for another model.  
&gt; &gt; &gt; Have you had some more ideas?
&gt; &gt; &gt; Using a new table is a too big refactoring for our code. 
&gt; &gt; &gt; 
&gt; &gt; &gt; Olivier
&gt; &gt; 
&gt; &gt; I forgot to post an URL : http://tinyurl.com/32yzf6l.
&gt; 
&gt; I tried to avoid to use addRows as said initially. It works with setData[1].
&gt; The bug is definitively to remove a row. In facts it&#39;s impossible to change the
&gt; model (remove rows and add others) of the table without editing problems. 
&gt; 
&gt; In [1] I re-use the previous rows data (data = data.concat([[&quot;new man&quot;]]);
&gt; tableModel.setData(data);) Here again, I&#39;m forced to create a new instance of
&gt; array instead of simply keep alive the previous array with data.push([&quot;new
&gt; man&quot;]); push method doesn&#39;t work here. [2]
&gt; 
&gt; qooxdoo tables have a problem of MVC managemant.
&gt; 
&gt; [1] http://tinyurl.com/2c7mr3p
&gt; [2] http://tinyurl.com/27er4vd</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19341</commentid>
            <who name="Olivier ZORO-BI - Novlog">olivier.zoro-bi</who>
            <bug_when>2010-07-15 16:02:09 +0200</bug_when>
            <thetext>(In reply to comment #24)
&gt; (In reply to comment #0)
&gt; &gt; The fact is that when you give another model to the same table instance, 
&gt; &gt; the last corresponding edited cell on the previous model can&#39;t be edited 
&gt; &gt; on the new model.
&gt; &gt; 
&gt; &gt; On the given link [1], to reproduce the bug, you have to right click on the
&gt; &gt; first cell (clicking on the second will not reproduce the bug), a new model
&gt; &gt; will be 
&gt; &gt; given to the same table instance. You will have then a new cell with 
&gt; &gt; &quot;new age&quot; data.
&gt; &gt; It&#39;s impossible to doubleCLick on this cell. A new right Click on this 
&gt; &gt; cell will add a new row on which you can now doucleClick. After this it 
&gt; &gt; is possible to doubleClick on the first one cell.
&gt; &gt; Tell me if it is really a bug. I think it is why using directly 
&gt; &gt; qx.ui.table.Table class, I can edit only one time my table. The second 
&gt; &gt; time, when a new model is given, I can&#39;t edit cell(0,0). I&#39;m obliged to 
&gt; &gt; edit cell(0,1).
&gt; &gt; 
&gt; &gt; Ps: don&#39;t care about listeners types, they are only pretexts to reproduce 
&gt; &gt; the bug.
&gt; &gt; 
&gt; &gt; [1] http://tinyurl.com/3xnqan7
&gt; 
&gt; (In reply to comment #23)
&gt; &gt; (In reply to comment #22)
&gt; &gt; &gt; (In reply to comment #21)
&gt; &gt; &gt; &gt; (In reply to comment #18)
&gt; &gt; &gt; &gt; &gt; For performance purpose, we keep only one table widget instance for several set
&gt; &gt; &gt; &gt; &gt; of data (different rows and sometimes different columns).
&gt; &gt; &gt; &gt; &gt; Only one set of data can be visible at one time.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Some solution identified :
&gt; &gt; &gt; &gt; &gt; 1. Instantiate a new table each time. The whole thing is design for not doing
&gt; &gt; &gt; &gt; &gt; that, so we can&#39;t change without recoding everything.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; 2. Removing all rows
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; 3. Adding empty rows
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; 4. Instantiating a new model and set it to the table
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Any other ideas welcome !
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Olivier, can you ensure all had been try ?
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; I am looking for a workaround without instanciating a new table. 
&gt; &gt; &gt; &gt; Instanciating a new model and set it to the table doesn&#39;t work either.
&gt; &gt; &gt; &gt; the table can&#39;t be used again for another model.  
&gt; &gt; &gt; &gt; Have you had some more ideas?
&gt; &gt; &gt; &gt; Using a new table is a too big refactoring for our code. 
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Olivier
&gt; &gt; &gt; 
&gt; &gt; &gt; I forgot to post an URL : http://tinyurl.com/32yzf6l.
&gt; &gt; 
&gt; &gt; I tried to avoid to use addRows as said initially. It works with setData[1].
&gt; &gt; The bug is definitively to remove a row. In facts it&#39;s impossible to change the
&gt; &gt; model (remove rows and add others) of the table without editing problems. 
&gt; &gt; 
&gt; &gt; In [1] I re-use the previous rows data (data = data.concat([[&quot;new man&quot;]]);
&gt; &gt; tableModel.setData(data);) Here again, I&#39;m forced to create a new instance of
&gt; &gt; array instead of simply keep alive the previous array with data.push([&quot;new
&gt; &gt; man&quot;]); push method doesn&#39;t work here. [2]
&gt; &gt; 
&gt; &gt; qooxdoo tables have a problem of MVC managemant.
&gt; &gt; 
&gt; &gt; [1] http://tinyurl.com/2c7mr3p
&gt; &gt; [2] http://tinyurl.com/27er4vd

I come to a summary,

- Impossible to remove rows and add new ones.
- Impossible to add empty rows.
- Impossible de set a new model to the table
- Instanciating a new table each time is not imaginable. We use a tree and can&#39;t drop a table and instanciate a new one each time a node is clicked.

We can&#39;t do anymore for that bug which is very blocking.  
We are waiting for your correction or another workaround.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19351</commentid>
            <who name="Jean-Baptiste Briaud -- Novlog">j-b.briaud</who>
            <bug_when>2010-07-16 11:06:18 +0200</bug_when>
            <thetext>@Martin : Hi Martin, can we have a status update on that bug ?
We did try hard but there is no workaround, any chance to include that bug in the next release ?

Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19353</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-16 11:39:51 +0200</bug_when>
            <thetext>Hello Jean-Baptiste,
I haven&#39;t looked at this issue yet and I don&#39;t plan to include it into the upcoming release. I have still 20 bugs todo in two weeks so no chance to get that done, sorry.
Regards,
Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19395</commentid>
            <who name="Jean-Baptiste Briaud -- Novlog">j-b.briaud</who>
            <bug_when>2010-07-20 16:57:08 +0200</bug_when>
            <thetext>Another scenario I just encountred where changing table&#39;s row entierely is important : A GUI represent a person associated with some company.
In order to change company associated to this person, a modal dialog box show the availlable companies.
After having changed the associated company, one come back with the first table that have differents rows (same columns).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35265</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:42 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>