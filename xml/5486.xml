<bug>
          <bug_id>5486</bug_id>
          
          <creation_ts>2011-08-05 10:49:00 +0200</creation_ts>
          <short_desc>Dependency analysis should be able to handle filtered inlcudes</short_desc>
          <delta_ts>2014-03-03 15:26:25 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.dependencies</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26405</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-08-05 10:49:24 +0200</bug_when>
            <thetext>I just introduced a new environment method which&#39;s main purpose is to conditionally include mixins. The method is named filter and located in the qx.core.Environment class. The dependency detection should be able to handle those dependencies and follow only the dependencies which will be in the application. Here is an example of how it could look:

  include : qx.core.Environment.filter({
    &quot;module.databinding&quot; : qx.data.MBinding,
    &quot;module.logger&quot; : qx.core.MLogging,
    &quot;module.events&quot; : qx.core.MEvents,
    &quot;module.property&quot; : qx.core.MProperty,
    &quot;qx.debug&quot; : qx.core.MAssert
  }),</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26434</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-08-08 18:43:28 +0200</bug_when>
            <thetext>Added support for qx.core.Environment.filter():
- the variants it mentions are being picked up
- it is optimized for the build version
- it is honored if used in the &#39;include&#39; class key, when calculating transitive 
load dependencies

In the course of this we&#39;ve decided to always create the source version without 
variants. This ensures all static class dependencies will be loaded, even if 
they are not needed at run time; but this assures that load-time dependencies 
like mixin references in calls to qx.core.Environment.filter() will be 
fullfilled. (This was an undetected issue in the old implementation with 
qx.core.Variant.select(), which could be used as the value for an &#39;include&#39; 
class key, which would remove unneeded mixin dependencies from the class list, 
but the mixin references were still in the call to qx.core.Variant.select, 
which would cause a run time error).

This will make the class list for the source version larger as for the build 
version, but this seems acceptable for it. But as soon as load dependencies are 
subject to variants, the source version as to cater for all of them. So rather 
than trying to find out which unneeded variants the source version needs to 
support nevertheless, we just support all of them.

The build version remains unchanged, as it not only cuts off surplus 
dependencies from the class list, but also removes the references to them in 
the remaining class code

With r28436.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26566</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-08-23 10:48:49 +0200</bug_when>
            <thetext>It looks like both dependency tracking and code optimization for q.c.Env.filter 
are working ok.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39107</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:25 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>