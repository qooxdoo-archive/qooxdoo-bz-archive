<bug>
          <bug_id>2679</bug_id>
          
          <creation_ts>2009-08-14 08:44:00 +0200</creation_ts>
          <short_desc>Disabled state for Spinner broken</short_desc>
          <delta_ts>2012-05-16 10:26:32 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>master</version>
          <rep_platform>WebKit</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>WebKit</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>11332</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-14 08:44:46 +0200</bug_when>
            <thetext>Disabling the spinner should change the whole appearance of the spinner so that he looks like every other disabled form element. But the text of the spinner stays black.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11351</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-14 15:53:35 +0200</bug_when>
            <thetext>First tests showed that it is only happening in all webkit based browsers (Safari and Chrome).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11364</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-17 13:00:15 +0200</bug_when>
            <thetext>Fixed in revision 19832.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11365</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-17 13:46:21 +0200</bug_when>
            <thetext>Maybe its not the best fix because we do now have a browser check in the color theme, but it works.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11385</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-19 10:19:42 +0200</bug_when>
            <thetext>Changed the implementation. 
Moved the check from the color theme to qx.html.input. It checks if we have a webkit based browser and diables the textfields using css. That way, the color is keept by webkit and we could have the same color for all browsers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11388</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-19 12:05:18 +0200</bug_when>
            <thetext>Martin, would you be so nice to explain what the new behavior does. I have seen your commit, but I think that&#39;s pretty hard to understand. Especially why this appear listener is needed. Thanks for the time :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11389</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-19 12:15:48 +0200</bug_when>
            <thetext>Sure:
I added a setEnabeld method to the qx.html.Input which handles the changes of the state. In all browsers except of webkit, we just add the disabled attribute and thats it. Pretty straight forward and the same code we had before.
In webkit browsers, I replaced the setting of the disabled attribute with the setting of two css styles:
-webkit-user-modify
-webkit-user-select
That works well if the widget is already available. But the creation of the dom elements is queued so I can&#39;t apply the css styles before the DOM element is created. So I added the appear listener to handle that scenario as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11390</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-19 12:55:49 +0200</bug_when>
            <thetext>Thanks Martin for the explanation.

setAttribute is queued indeed. But you can use setStyle instead of qx.bom.element.Style which is also queued. Should be possible, right?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11391</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-19 13:26:49 +0200</bug_when>
            <thetext>Sounds like a good idea but didn&#39;t work for me. Just gave it a try but the effect was the same without the listener. :(</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11393</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-19 14:31:15 +0200</bug_when>
            <thetext>That should not be the case and would mean a bug in qx.html.Element. To just ignore it and fixit somehow else is not a good strategy IMHO.

One issue with your modification might be that you use the wrong property names. When working with JavaScript the style properties must be defined as camel case names. Not sure why you used the CSS stylesheet names. This might be a problem.

Please try to replace &quot;-webkit-user-modify&quot; with &quot;WebkitUserModify&quot; (the same for -webkit-user-select). If this still do not work it would be interesting what exactly happens here.

Just curious, what test case do you use? Is there an example in the demo browser which shows the issue?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11395</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-19 14:40:24 +0200</bug_when>
            <thetext>Have you seen that &quot;userSelect&quot; is already normalized by the API in qx.bom.element.Style? I have added &quot;userModify&quot; as well (commit 19847).

This means you can replace all &quot;-webkit-user-select&quot;/&quot;-webkit-user-modify&quot; directly with &quot;userSelect&quot;/&quot;userModify&quot;. Looks nicer as well.

I have added a new bug to improve the implementation to deal with such prefixed names. Otherwise the lists get pretty long in qx.bom.element.Style. See bug #2695.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11402</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-19 16:26:16 +0200</bug_when>
            <thetext>If qx.html.Element supposed to work, then a workaround for a bug is realy not a good idea. I&#39;ll dig into this tomorrow.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11407</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-08-19 17:18:56 +0200</bug_when>
            <thetext>Martin, as per your last comment, this bug should be reopened (maybe accompanied by a bug report for qx.html.Element ?).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11416</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-08-20 11:22:52 +0200</bug_when>
            <thetext>I checked it again and it worked as you said Sebastian. Thanks for the hint! Its a much nicer implementation now!</thetext>
          </long_desc>
      
      

    </bug>