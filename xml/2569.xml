<bug>
          <bug_id>2569</bug_id>
          
          <creation_ts>2009-07-09 16:59:00 +0200</creation_ts>
          <short_desc>Optimization: Optimize global vars</short_desc>
          <delta_ts>2014-03-03 08:47:53 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10831</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-07-09 16:59:35 +0200</bug_when>
            <thetext>Gobal vars like window, document, ... can be optimized by alias variables var 
w=window, d=document, ...;. This can happen on a local or global scope.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10832</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-07-09 17:06:09 +0200</bug_when>
            <thetext>This might be also applied to global vars from the qooxdoo name space, e.g. 
qx.ui.form.Button.

While it might not be very efficient to alias the individual parts of the name, 
like a.b.c.d for qx.ui.form.Button, it might be interesting to think about 
aliasing the whole name space, like x23 for qx.ui.form.Button.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10894</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-07-14 16:37:36 +0200</bug_when>
            <thetext>Nice idea. What is somewhat related and could be benefical for low-level apps, is to do the same for classnames e.g. after each Class.define() block define a variable for every class and use this class during the code blocks. If I look into the compressed low-level application I currently build, I find a lot long and deep access calls to things in qx.bom.element etc.

Example:
qx.Class.define(&quot;qx.bom.element.Style&quot;, {
  ...
});
var a = qx.bom.element.Style;

Then one could replace all points where &quot;qx.bom.element.Style&quot; is used with &quot;a&quot;. Maybe one should find a better name which do not result into conflicts with the variable optimizer though.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19015</commentid>
            <who name="Petr Kobalíček">kobalicek.petr</who>
            <bug_when>2010-06-30 06:47:28 +0200</bug_when>
            <thetext>As thron suggested me, I&#39;m adding my idea+possible implementation I posted in mailing list.

Intro
------------

I have an idea how to improve (decrease) file size generated by
qooxdoo generator and also how to increase the resulting performance.
I tried to learn how generator works, but I was unable to modify its
source code.

The idea:
------------

Qooxdoo is strongly namespaced and some classes are repeated many
times in code. The &#39;qx.ui.table.cellrenderer&#39; for example means 4 hash
table lookup, modern javascript engine can optimize this (for example
V8), but it&#39;s still code that needs to be evaluated each time its
accessed. But because we know that this code will be never modified
(class may be patched, but it will remain in namespace) we can use
nice trick - assigning namespace to some variable to make name shorter
and decrease lookup to only one hash-table (local identifier,
optimized always by js-engine).

so, imagine two classes in some namespace:

qx.Class.define(&quot;qx.ui.table.cellrenderer.A&quot;,
 extend: qx.ui.table.celldenrerer.Abstract,

 construct: function() { /* some code */ },
 members: {}
);

qx.Class.define(&quot;qx.ui.table.cellrenderer.B&quot;,
 extend: qx.ui.table.celldenrerer.Abstract,

 construct: function() { /* some code */ },
 members: {}
);

Generator can produce something like this:

declareNamespace = function()
{
 // implement me, create namespace...
};

// Begin of local scope, hide vars...
(function() {

// Some static functions can be assigned to variable, for example
qx.Class.define is good candidate.
var clsdef = qx.Class.define;

// qx.ui.table.cellrenderer.Abstract was assigned to this before...
var qx0 = ...;

// Variables where classes are cached must be declared on top to scope.
var qxA;
var qxB;

qxA = clsdef(&quot;qx.ui.table.cellrenderer.A&quot;,
 extend: qx0,

 construct: function() { /* some code */ },
 members: {}
);

qxB = clsdef(&quot;qx.ui.table.cellrenderer.B&quot;,
 extend: qx0,

 construct: function() { /* some code */ },
 members: {}
);
// End of local scope.
})();


Implementation in generator:
----------------------------------------

- Collect all classes used (this is already in generator).
- Declare local scope for each .js file.
- For each class declare unique variable, unassigned (can be used var
a, b, c, ... schema).
- Replace occurences of qx.... with unique variables
- Done:)

Of course this can only work if qx.Class.define will be modified to
return created Class object (simple). This will save some bytes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19816</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-13 10:36:40 +0200</bug_when>
            <thetext>getClassByName() has to be adapted as well!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36061</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:53 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>