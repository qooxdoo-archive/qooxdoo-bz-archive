<bug>
          <bug_id>7475</bug_id>
          
          <creation_ts>2013-06-20 14:59:00 +0200</creation_ts>
          <short_desc>Make Mustache the general Template Engine for qooxdoo</short_desc>
          <delta_ts>2014-07-01 14:59:57 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>2.1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33026</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-06-20 14:59:54 +0200</bug_when>
            <thetext>Within qooxdoo we&#39;re using different templating approaches. The framework 
classes support Mustache, the Generator uses the Python built-in macro 
expansion string.Template for skeleton templates, and there might be further 
examples. I think it would be a good idea to use one templating system 
throughout, and Mustache would be a good choice. There is a suitable Python 
module available [1] for the Generator. This would also be helpful if we get 
more complex skeletons, want to process HTML templates, etc. We - and our users 
- would be re-using the same skill set in all those contexts.

[1] https://pypi.python.org/pypi/pystache</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40617</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-07-01 14:59:57 +0200</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year
or we don&#39;t think it will be fixed in the near future.</thetext>
          </long_desc>
      
      

    </bug>