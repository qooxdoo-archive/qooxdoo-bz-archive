<bug>
          <bug_id>2548</bug_id>
          
          <creation_ts>2009-07-03 14:25:00 +0200</creation_ts>
          <short_desc>Prevent wrong data from being entered in date fields.</short_desc>
          <delta_ts>2014-03-03 08:47:27 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>1397</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan Weiß">qooxdoo-bugs</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>martin.wittemann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10776</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-07-03 14:25:26 +0200</bug_when>
            <thetext>For example a text field can contain a (specially formatted) string like 
YYYY-MM-DD. Every key input is checked against this pattern, so that only valid 
data can be entered.

Other example: color selector could contain #rrggbb and accept only tree six 
hex values.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10777</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-07-03 14:28:34 +0200</bug_when>
            <thetext>Ignore the second example.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12506</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-22 10:56:34 +0200</bug_when>
            <thetext>to Martin. Can such scenarios already be handled? What exactly would be needed to implement instant field validation?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14184</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-18 11:46:49 +0100</bug_when>
            <thetext>moved to pool of enhancements. This could probably be solved by adding utility methods that convert (all!) valid date format strings into corresponding regexps for validation. Quite a task...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14185</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-18 11:47:10 +0100</bug_when>
            <thetext>unassign</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35909</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:27 +0100</bug_when>
            <thetext>Move open issues to RESOLVED – LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>