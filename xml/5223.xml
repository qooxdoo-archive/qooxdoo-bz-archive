<bug>
          <bug_id>5223</bug_id>
          
          <creation_ts>2011-06-08 16:21:00 +0200</creation_ts>
          <short_desc>Json marshaller chokes on &quot;invalid&quot; identifiers</short_desc>
          <delta_ts>2011-09-12 08:52:11 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>1.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Marc Puts">marcputs</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>lgxco</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>24996</commentid>
            <who name="Marc Puts">marcputs</who>
            <bug_when>2011-06-08 16:21:44 +0200</bug_when>
            <thetext>As posted on the mailing list (see [1]):

The following line will throw an assertion error: &quot;The key &#39;0&#39; is not a 
valid JavaScript identifier.&quot;

    qx.data.marshal.Json.createModel({&quot;0&quot; : &quot;test&quot;});


The marshaller should be able to handle this special case, especially since the following is also valid:

properties :
{
    &quot;0&quot; : { nullable : true }
}
....
obj.set0(&quot;some value&quot;);


Note that this is not limited to pure numeric keys, but instead applies to any key that would not be a valid identifier, like &quot;123abc&quot;.


[1] http://sourceforge.net/mailarchive/message.php?msg_id=27618601</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25714</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-07-04 09:43:59 +0200</bug_when>
            <thetext>Thats right, I thought about valid JS identifiers the time I wrote that check but as the keys are used either as key of a map or get prefixed, there is no need to get that restriction with the starting number in there. This results to strange model class names but those are only internal anyway.

trunk: r27948
1.4.x: r27949</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26107</commentid>
            <who name="Marc Puts">marcputs</who>
            <bug_when>2011-07-19 17:06:51 +0200</bug_when>
            <thetext>Referring to lgxco&#39;s post on the ML [1]:

The following code:
  qx.data.marshal.Json.createModel({&quot;$$0&quot; : &quot;test&quot;});

- Worked in 1.4.1.
- Still works in 1.4.2.
- No longer works in 1.5.

It looks like the fix introduced a regression in 1.5. I&#39;m not entirely sure if your bugfix is the cause, because the error does not occur in 1.4.2.


[1] http://qooxdoo.678.n2.nabble.com/Error-with-json-marshaller-after-migration-to-1-5-td6598969.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26117</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-07-20 10:33:50 +0200</bug_when>
            <thetext>I&#39;ll check it and see if it needs a new bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26337</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-08-01 11:43:46 +0200</bug_when>
            <thetext>The change of the RegExp was the cause of that. Just added the missing $ and it works again. 

trunk: r28342
1.5.x: r28343</thetext>
          </long_desc>
      
      

    </bug>