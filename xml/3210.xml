<bug>
          <bug_id>3210</bug_id>
          
          <creation_ts>2009-12-10 11:05:00 +0100</creation_ts>
          <short_desc>QxSelenium locators should support inline applications</short_desc>
          <delta_ts>2009-12-11 09:28:36 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>contrib</product>
          <component>Simulator</component>
          <version>trunk</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15644</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-10 11:05:51 +0100</bug_when>
            <thetext>The qooxdoo-specific locators such as qxh=... traverse the application structure starting with qx.core.Init.getApplication(). For qooxdoo inline applications, there needs to be a way to specify an inline root (qx.ui.root.Inline) as the starting point for the locator. This could be achieved by a locator syntax like &quot;qxh=inline:seleniumLocator//qxh/locator/parts&quot;. &quot;seleniumLocator&quot; would be a standard locator string that points to the HTML element that the qx.ui.root.Inline instance is created with. The user extension would execute this locator, call qx.ui.core.Widget.getWidgetByElement() with it to get the Inline root and then set it as the root widget for the qxh locator specified after the double slashes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15645</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-10 11:06:42 +0100</bug_when>
            <thetext>Set target milestone to 1.0 (referring to the qooxdoo version).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15674</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-12-11 09:28:36 +0100</bug_when>
            <thetext>Added a new locator syntax for inline applications (r19673).</thetext>
          </long_desc>
      
      

    </bug>