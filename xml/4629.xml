<bug>
          <bug_id>4629</bug_id>
          
          <creation_ts>2011-02-08 14:27:00 +0100</creation_ts>
          <short_desc>Exception from class qx.util.DisposeUtil: Has no disposable object under key:</short_desc>
          <delta_ts>2011-02-09 14:13:46 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22610</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2011-02-08 14:27:23 +0100</bug_when>
            <thetext>The destruct-method of our class looks like this:
  destruct : function() {
    this._disposeObjects(&quot;__list&quot;, &quot;__store&quot;, &quot;__controller&quot;, &quot;__msg&quot;, ... );
   }

This code sometimes produces the error &quot;Has no disposable object under key: __msg!&quot;.
The problem with the property &quot;__msg&quot; is that this property is lazy initialized. This means it may happen that the property &quot;__msg&quot; is null.
In that case, I do not want that the Qooxdoo throws an error, but qooxdoo should just ignore this null value. I know that &quot;__msg&quot; can be null and this is okay.

This bug report is similar to bug# 4392, except that this bug report is for _disposeObjects instead of _disposeMap.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22630</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-09 09:21:42 +0100</bug_when>
            <thetext>Thanks for pointing that out. We should add that soon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22640</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-09 13:15:42 +0100</bug_when>
            <thetext>I just checked the code and that should work the way it is. The method responsible for disposing checks for null values already. Also added a unit test with r24970 to make sure its working.

@Uwe: What why did it not work initially? What was the difference to my unit test? Here is a link to see the test: http://qooxdoo.svn.sourceforge.net/viewvc/qooxdoo/trunk/qooxdoo/framework/source/class/qx/test/core/Object.js?r1=24970&amp;r2=24969&amp;pathrev=24970</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22642</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2011-02-09 14:13:46 +0100</bug_when>
            <thetext>Sorry, that was my fault.
The variable &quot;__msg&quot; that should be disposed via 
  this._disposeObjects(&quot;__msg&quot;)
did contain an integer (and not a null value as I have assumed initially).

Therefore the error message from qooxdoo was correct.</thetext>
          </long_desc>
      
      

    </bug>