<bug>
          <bug_id>6709</bug_id>
          
          <creation_ts>2012-08-14 16:23:00 +0200</creation_ts>
          <short_desc>source/source-hybrid mode with custom url prefix</short_desc>
          <delta_ts>2014-03-03 08:45:56 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>1.6.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>6616</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Elsdoerfer">michael</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30370</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-14 16:23:55 +0200</bug_when>
            <thetext>I want a Python app to host a Qooxdoo Desktop app. The url that hosts the Qooxdoo index file might be something like /admin/. The Qooxdoo files itself would be available under /static/.

Looking through the code, it appears as if this is currently not possible. It would seem that unless the build type is &quot;build&quot;, the uris are always generated by comparing paths/app-root  with the actual location of a library on the filesystem.

Shouldn&#39;t there be a way to realize this setup?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30371</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-08-14 16:50:18 +0200</bug_when>
            <thetext>You can achieve what you want using the &quot;library/uri&quot; key of the generator config [1], see also [2].

The drawback here is that you have to apply this setting for *all* libraries your app is using individually (ie. the qooxdoo framework, you app itself(!), all further qx libs/contribs you are using). So you will have to explicitly list them in your config.json:

  &quot;libraries&quot; : {
    &quot;=library&quot; : [
        {
          &quot;manifest&quot;: &quot;${QOOXDOO_PATH}/framework/Manifest.json,
          &quot;uri&quot; : &quot;http://..../framework/&quot;
        },
        {
          &quot;manifest&quot; : &quot;./Manifest.json&quot;,
          &quot;uri&quot; : &quot;http://..../.../&quot;
        },
        ...
    ]
  }


[1] http://manual.qooxdoo.org/1.6.x/pages/tool/generator_config_ref.html#library
[2] http://manual.qooxdoo.org/1.6.x/pages/tool/generator_config_articles.html#library-base-uris-in-the-source-version</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30385</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-15 17:02:21 +0200</bug_when>
            <thetext>Hm that might help; this allows me to set the uris to the libraries. What about the __out__ key in the libinfo variable in the generated output? i.e.:

var libinfo = {&quot;__out__&quot;:{&quot;sourceUri&quot;:&quot;...&quot;}

Is there a way to affect that as well?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30387</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-08-15 18:19:10 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; Hm that might help; this allows me to set the uris to the libraries. What 
about the __out__ key in the libinfo variable in the generated output? i.e.:
&gt; 
&gt; var libinfo = {&quot;__out__&quot;:{&quot;sourceUri&quot;:&quot;...&quot;}
&gt; 
&gt; Is there a way to affect that as well?

No, currently not, but there is already a bug for this (bug#6616), which also 
contains a workaround.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35353</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:56 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>