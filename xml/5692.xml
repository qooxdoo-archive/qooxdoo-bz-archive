<bug>
          <bug_id>5692</bug_id>
          
          <creation_ts>2011-10-07 20:20:00 +0200</creation_ts>
          <short_desc>set function does not take json pointing at a function with &gt; 1 parameter</short_desc>
          <delta_ts>2014-03-03 08:46:46 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>derrell.lipman</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27132</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-10-07 20:20:30 +0200</bug_when>
            <thetext>var def = {
  label : &quot;Text to see&quot;,
  userData : [&quot;name&quot;, &quot;Martin&quot;&quot;]
};

for example:

var button = new qx.ui.form.Button();
button.set(def);

Two errors here:
1. it accepts userData thought it is an array with two items but nothing happens.
2. silent

setUserData(&quot;name&quot;, &quot;Martin&quot;);

should have been the result of the set function.

I think set should support multi-parameter functions too!!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27133</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-10-07 20:40:46 +0200</bug_when>
            <thetext>(In reply to comment #0)
&gt; var def = {
&gt;   label : &quot;Text to see&quot;,
&gt;   userData : [&quot;name&quot;, &quot;Martin&quot;&quot;]
&gt; };
&gt; 
&gt; for example:
&gt; 
&gt; var button = new qx.ui.form.Button();
&gt; button.set(def);

The set() method is an iterator over property setters. It makes no sense to provide entries in the map which are not property names and values.

&gt; Two errors here:
&gt; 1. it accepts userData thought it is an array with two items but nothing
&gt; happens.
&gt; 2. silent

A warning might be nice, to indicate that &quot;userData&quot; is not a property name.

&gt; setUserData(&quot;name&quot;, &quot;Martin&quot;);
&gt; 
&gt; should have been the result of the set function.
&gt; 
&gt; I think set should support multi-parameter functions too!!

I believe you are inferring that set() may be used to call any arbitrary function that begins with the word &quot;set&quot;. That is not the case. It is intended only for properties, and property setters, by definition, take a single parameter.

I&#39;ll agree that there are times that the feature you request would be useful, but more so when one doesn&#39;t know that a setSomething() method is not a property setter, and it takes a single parameter. I&#39;ve been bitten by that before. When one knows that there are two parameters to a method, it clearly is not a property setter.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27150</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-10-08 08:26:51 +0200</bug_when>
            <thetext>Turn this around to be a little more flexible about definitions; instead of structure (properties) as a focus look at function as a focus:

see qxe ButtonPane contribution to understand why it is needed. What other solution would you else suggest? Look at the demo where json is used as the def structure.

In future you might want to develop a function taking json structures to create code, then this feature is helping a lot!!!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27181</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-10-12 10:19:29 +0200</bug_when>
            <thetext>I see another problem with that approach:

obj.set({
  a : [1,2], // should go to setA(1,2)
  b : [1,2] // should go to setB([1,2])
})

As you see, it is not clear what should happen...

And as Derrell (and the API Docs) said, it is intended for properties wich are single values.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27201</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2011-10-12 21:22:34 +0200</bug_when>
            <thetext>That can be handled too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27203</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-10-13 09:11:15 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; That can be handled too.

I could continue that game and just say: &quot;No it can&#39;t&quot; but I don&#39;t think thats much fun so why don&#39;t you just tell us how you think that can be handled?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35660</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:46 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>