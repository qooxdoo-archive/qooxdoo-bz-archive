<bug>
          <bug_id>358</bug_id>
          
          <creation_ts>2007-03-30 11:26:00 +0200</creation_ts>
          <short_desc>Add support for &lt;package&gt;&lt;functions&gt; node in apidata.js</short_desc>
          <delta_ts>2014-03-03 08:47:36 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          <blocked>3659</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>1137</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2007-03-30 11:26:32 +0200</bug_when>
            <thetext>The package level of the API Viewer data should support an additional &lt;functions&gt; child element alongside to &lt;classes&gt;, to capture top-level functions within a package. That is, the following XML representation of the API Viewer data should be legal:

&lt;doctree&gt;
  &lt;packages&gt;
    &lt;package name=&quot;Foo&quot;&gt;
      &lt;classes&gt;
        ...
      &lt;/classes&gt;
      &lt;functions&gt;
        &lt;method name=&quot;bar1&quot;&gt;
          ...
        &lt;/method&gt;
        &lt;method name=&quot;bar2&quot;&gt;
          ...
        &lt;/method&gt;
      &lt;/functions&gt;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5005</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-02 23:09:04 +0200</bug_when>
            <thetext>Really a practical need for this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5023</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-09-03 09:51:58 +0200</bug_when>
            <thetext>The practical need for this lies in documenting our Python code. We can generate apidata for our Python modules, but there is no equivalent of module functions (ie. a file consisting of functions) in the Apiviewer data structure (only classes and methods). Since we use module functions quite a bit, and it is sensible to have these, it should be possible to generate apidata for them.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5164</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:58 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9722</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-28 14:09:00 +0200</bug_when>
            <thetext>added basic support to the API viewer in r18931</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35959</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:36 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>