<bug>
          <bug_id>3791</bug_id>
          
          <creation_ts>2010-06-22 16:18:00 +0200</creation_ts>
          <short_desc>Improve support of transport layer for RESTful communication</short_desc>
          <delta_ts>2010-06-24 14:41:37 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io.remote</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Carsten Lergenmüller">carsten.lergenmueller</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18878</commentid>
            <who name="Carsten Lergenmüller">carsten.lergenmueller</who>
            <bug_when>2010-06-22 16:18:45 +0200</bug_when>
            <thetext>There are some small problems which make using RESTful services difficult:

- qx.io.remote.Request has a check if the method == &quot;POST&quot; which should really mean &quot;method supports a request body when sending&quot;

- XmlHttpTransport forces callers to user qx.util.Json.parse if responseType of request is &quot;application/json&quot;

Setting as enhancement, this bug is meant to encapsulate all changes necessary to improve talking to RESTful services.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18882</commentid>
            <who name="Carsten Lergenmüller">carsten.lergenmueller</who>
            <bug_when>2010-06-22 18:58:54 +0200</bug_when>
            <thetext>Fixed in Rev. 22474. 

- Request.js now offers a static method to recognize http methods supporting entity bodies 
- Request.js now uses this method to do things it formerly only did for POST also for PUT
- Request.js now has a property parseJson allowing to turn off JSON parsing if responseType is application/json

Should be completely transparent to existing apps - except for the fact that PUT requests is now get the same Content-Type header as POST. This I consider as a low risk bugfix because there is no reason to treat PUT differently than POST.

-&gt; Martin, please review. Thx.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18895</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-23 10:11:51 +0200</bug_when>
            <thetext>Reviewed the fix. Everything looks as expected. Thanks for the fix Carsten!
I will wait for our nightly test to be sure there is no regression. After that, I verify and close this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18911</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-24 14:41:37 +0200</bug_when>
            <thetext>All test seem to work --&gt; CLOSED</thetext>
          </long_desc>
      
      

    </bug>