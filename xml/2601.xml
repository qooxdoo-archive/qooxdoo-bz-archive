<bug>
          <bug_id>2601</bug_id>
          
          <creation_ts>2009-07-17 10:51:00 +0200</creation_ts>
          <short_desc>Add advanced filter capabilities for the API viewer</short_desc>
          <delta_ts>2014-03-03 15:19:02 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.4</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10945</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-07-17 10:51:26 +0200</bug_when>
            <thetext>The current implementation of the api viewer only allows a search for given patterns in the whole api data. An additional filtering of the data in the tree and in the right pane could improve the usability of the api viewer. 
A good starting point could be the filtering by type (interface, class, abstract class, mixin) or by namespace. Perhaps a filtering by task could be interesting. The &#39;tasks&#39; could be some things like i18n, using widgets, ...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12507</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-22 10:58:20 +0200</bug_when>
            <thetext>Martin, isn&#39;t this related to the improvements (tagging, ...) you started recently?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12511</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-22 11:05:04 +0200</bug_when>
            <thetext>I have added tagging for the demo browser and not the api viewer and i dont think this can be ported because it was not that much and mostly related to the data the special demo browser python crept creates.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14805</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:42 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15755</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-12-11 17:31:11 +0100</bug_when>
            <thetext>untarget/unassign this enhancement back into pool</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22996</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-02-28 13:18:13 +0100</bug_when>
            <thetext>I propose to add some checkboxes for the types below the search input textfield, and the user would check the types he is looking for: classes, methods...
also, a new textfield would be added where the user can specify the namespace: qx.ui.table
and then in the search method i would restrict the result to the filters specified.
what do you think ?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23007</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-01 08:16:41 +0100</bug_when>
            <thetext>I got to say, that really sounds like a good idea. Really looking forward to that implementation.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23039</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-03 10:47:51 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25313.
for namespace filter, maybe i should tell the user to start the filter with qx. somehow.
I also added ICON_ENTRY : &quot;apiviewer/image/event18.gif&quot; to the apiviewer.TreeUtil class, as there were elements in the index of type &quot;entry&quot;.
also we need an entry icon, right now it points to the event icon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23050</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-03 16:34:46 +0100</bug_when>
            <thetext>in the file script/apiindex.json you can find all keys with &quot;entry&quot; as type by searching in vim for \[7 .
if you look at then end, you can find all types in the key:
__types__
and we have there:
[&quot;package&quot;,&quot;class&quot;,&quot;method_pub&quot;,&quot;method_prot&quot;,&quot;constant&quot;,&quot;method_priv&quot;,&quot;property_pub&quot;,&quot;entry&quot;,&quot;event&quot;,&quot;childControl&quot;,&quot;interface&quot;]
where entry is the element with index = 7.
examples:
&quot;#qx.ui.window.Window#status&quot;:[[7,446]]
&quot;#qx.bom.Font#bold&quot;:[[7,87]]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23071</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-03-04 13:32:42 +0100</bug_when>
            <thetext>It is still not clear what such a generic &quot;entry&quot; would be. And the examples you mention are displayed correctly as public properties anyway:
qx.ui.window.Window#status
qx.bom.Font#bold</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23225</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-11 10:55:13 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25577</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23242</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-14 09:28:59 +0100</bug_when>
            <thetext>I&#39;m sorry to reopen it again but the icons do not seem to be centered. At least the class and interface icon isn&#39;t. (See the attachment)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23243</commentid>
              <attachid>914</attachid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-14 09:29:28 +0100</bug_when>
            <thetext>Created attachment 914
Not centered icons.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23248</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-14 10:12:40 +0100</bug_when>
            <thetext>the problem lies in the image:
http://demo.qooxdoo.org/1.3.x/apiviewer/resource/apiviewer/imagesCombined/symbols.gif
as you can see the width is made to accommodate class abstract icon for example, and class icon is left aligned in the big image there.
best approach would be to redo the image, though i am not sure that would break the look in other apps where this is used.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23249</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-14 10:16:47 +0100</bug_when>
            <thetext>Why not align that with the padding / margin?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23250</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-14 10:20:48 +0100</bug_when>
            <thetext>you mean to hack it only for class toggle button and the others that do not appear centered with an if and set the padding?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23269</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-15 08:40:28 +0100</bug_when>
            <thetext>(In reply to comment #15)
&gt; you mean to hack it only for class toggle button and the others that do not
&gt; appear centered with an if and set the padding?

Wouldn&#39;t call it a hack because we are dealing with the images we created so we can use them the way it looks good.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23291</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-03-15 15:21:42 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25689</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36318</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:02 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>914</attachid>
            <date>2011-03-14 09:29:00 +0100</date>
            <delta_ts>2011-03-14 09:29:28 +0100</delta_ts>
            <desc>Not centered icons.</desc>
            <filename>Bildschirmfoto 2011-03-14 um 09.27.35.png</filename>
            <type>image/png</type>
            <size>8844</size>
            <attacher>martin.wittemann</attacher>
            
              <data encoding="base64">iVBORw0KGgoAAAANSUhEUgAAAOQAAAAqCAIAAAAs12AeAAAUgGlDQ1BJQ0MgUHJvZmlsZQAAeAHt
mndUFD2/xzM725eFpXdYehGQ3nvvTTpSlt47SFMBaQqIKCpFpCgI0hQRkAcBpShFBFFRVGxgQUWR
YgH0Dj7nPO/7x33/u//ce8mcJN+UzckmM/PLJxMAJPG0qKgwFAWA8Ii4GHsTfaqLqxsVNwtIAIV4
fsBD842N0rO1tQT/0a0/BNB24bT0dlv/sdp/X8Do5x/rCwBkixTH+cX6hiN6ENHWvlExcQCgWBA9
uS8ualvPI5olBukgor9v68A/Gqbb1j5/a+qfOg72BgDAigDg6Wi0mEAASLpIPjXBNxBph+QNAJYp
wi84AgBGJM2h7RtE8wNAoh2pIxUeHrmtXyBa3Off2gn8N02j+fzTJo0W+I/++78gvwSAy9DI0pIq
Ly+r6mxsSxUPpYUF+8QE+8fESfwp/p8LwsPikfH747Zngc7P39AIieURzwMMgRGwRC4qkpYHskAV
OANjYIukxUEooIEwEAx8QAwS+iNhHEA6F+efiIwJAAaRUUkxwYFBcVQ9ZFb9pahmEb4yUlR5WTnZ
7eL/NW77fv67syuP/tynEBv+X3kVrQCYryP3k8u/8uSjADh7GgBO9n/liXYCwBYLQGevb3xMwt/t
obcjImABfMhoygMNZKxtgCvwBeFgH0gHeeAkqAT1oA30gGEwCWbBPFgC3yEURIJYIX5IAlKAtCAT
yA5yh/yhSCgRyoDyoVNQFXQRaod6odvQPegptAB9hn6gYBQZxY4SQO1CKaF0UGYoe9ReVAAqCpWM
ykQdRZWgalBNqKuoPtQIahr1DPUWtYzagDEwA8wJC8JSsDKsC5vDDrAnHATHwKlwNlwIl8Ln4Ga4
E74Bj8EP4Ofwe3gF3kRj0RQ0F1oYLYNWReujLdFOaC90MDoWvR+dgy5Cl6Nr0a3oa+gB9Dj6IfoF
ehG9iv6FwWOYMDwYUYwsRg1jgLHCOGNomFBMPOYg5jDmBKYCU4e5hOnGDGImMI8wrzAfMetYgCVg
mbG8WDGsHFYDa4S1wbpifbHh2ARsGvYIthh7FluPbcP2YIexk9hZ7GvsJ+w3HIQj4Vhx/DgJnAJO
C2eCs8W54fxwEbhEXAYuH3cKV4W7iLuCu467hZvCPcEt4D7jfuBhPBnPjqfiJfGKeG28Kd4evxcf
gI/CJ+Mz8QX40/hqfCP+Kr4PP4Kfxj/Dv8Uv438S0AR6AgdBkCBFUCboEswJDgQPQiAhmpBCyCIU
EkoJ5wjNhE7CDcIo4T5hjvCO8JWwScQSKUQuojBRhqhC1CNaEB2JXsRgYixxPzGHWEQsJ54nthC7
iDeJM8SPJIjERpIi6ZGcSWGkDFIJqYU0SJolfaHD0vHSKdCZ09HoEukK6erortM9oPtIRpO5yQpk
C7IvOYV8gtxEHiQ/I6/R09OL0evSu9LH0ufT19H30T+mX2EgM4gx6DG4MyQwHGNoZBhmeMmwSWGn
yFOsKcGULEoVpYfyiLLKyMgozWjOGMB4iLGK8TrjLOM3JhYmeSYbpnCmPKYGpltMC8xoZkFmPWZv
5gPMFcw9zE+ZN1i4WdRZ3FiSWcpYullmWTZYuVk1WT1YD7BWsvazvmSD2YTZjNmC2I6wNbFNsC2z
M7Mrs7uyp7JXst9kX+AgcEhz2HLEcZRwXOd4yYnhlOS04YzlLOXs5XzNheeS4XLgSuaq4hrm+sjN
xK3G7c2dw93C/YB7k0eIx4InlqecZ4DnAy8zrwavH28Bbwfvcz48nxyfO18mXwvfI34UvxS/M386
fxP/DBVFlaa6UA9RW6lPBHACCgJeAnkCXQLzgoyC2oKhgiWCw4IrQgJCNkL7hRqFHgvjhVWE/YWL
hQeFV0QERexFMkTaRF6JMonqi8aKnhe9L4YRUxELEisTGxPbEt8tThMvFh8W/yEhJeElcVxiSOKH
pJSkt2Sx5G3JzV1yuwJ2le26K4WRUpeKlKqVeiLNKG0ivV+6XXpRRkDGRaZQ5pbMr93KuyN21+2e
k2WXtZHNlb0h+1NOQS5Mrk7uhTyXvIP8UfkRBVhBWyFJoV3hi+IuxUDFc4rPlbiVnJWKlaaU6ZUt
lHOVh1VgFT2VgyrXVTZV1VWTVLtUv6kpqyWodaitqyurJ6h3qH/TUNVI0ujW2NDU0jyg2a+F0jLU
ytEa1abTttE+of1Qh0vHQ6daZ0FXUjdC94rudz0tvQy92/pk/T36pfovDEQNwg3aDTYM9Q0PG04Z
cRrRjBqMlo3VjQ8Zj5uwmnia1Jssm2qYZplOmnGZ+ZtdMtswNzE/bj5nIWmRYHHTksFyr2WD5bqV
gVWR1Zy1lHWK9YgNu02AzVVbtK2D7TnbFTsDuxN28/aK9ln2D/eI70naM+bA4xDpcMOR2THA8ZoT
nZOX0xVnnLO7c6sL7OLi0uyKcnV2bXJDubm4tbij3d3dL+/F7/Xa2+lB7xHg0evJ5hnpecuL6pXk
Ne0t5Z3t/YKmTiumffYx96n1Bb57fTv9mP0i/cb9xf2z/F8F6AZUBGwEugZ2BrEGxQVNB8sHFwV/
CbENuRRKCY0KnQqTDzsRthruFN4VwRWRGjEXqRd5PgoXFRI1ES0ffSr6Z4xnzECseGxB7EqcS1xv
vHB8XvxygktC3z7RfUf3rSV6JA4nySSdTgbJwcn3UjRT6lIpqcmpC/tt9ncfED1QdGDrYPDBB2n6
aS3p3OmH09cz/DLuHdI91JLJm5mfuZEVkjWbbZ7dnSOZU55Lyk3NXTrsdXjqiMGRjjzxvPJ8+vz0
/LWCoIKnR+2ODhWqF7YeEz5WVkQpyi7aPB5z/P0J7xMzxTbFt07qnOw8tftU/WmB02UlLCVHS/Gl
GaVbZfvKvpZHlL8/43/mZYVHxexZ57P3K+0q71ZZVY1Vm1XfrjGpGT5ndG7ovNH5oVrj2uE6k7qR
C+YXxuut6ycb9jQ8vOh68Wmjd+N8U1DTx+bo5vWWlFbQmn2J7tLxy5yXq9rE2lquKF+53m7cPnHV
+eqLjuCOr52pXdiuY9e4r9V1y3X3/GX61/0e756P15N6sb0n+gT6Wvq1+sduuN14dzNxADdwelBs
sHPIdOjxcMjwxq2C2/y3L48YjDwcDR7dGjs2LjzedcfqzsuJhLt0d6snVSbvTPlN/bxXNC0x3X/f
5f6XB4cfCjzsntkz8+lRzmOBx3/NOs0uP8l/Kv508Jn3s8250ufKz6dfRL+kf9n8yuLV4uvD8+Lz
txYC3+De1L81e7v4Lu+99Pu7i9EfmD90fHT9uPmpaslw6d3ngi/yX2aWU78Kfr29ErHKutqz5rtO
Wm/75vYd/t70w/HHr58XNuw2Njfrtuy2Nn9d+L3n9+8oWgztz1oARsJtDxZskKXfZQDEqgEwSvt7
vfmnBlIOIcsMRKeBAlAPsUGuUDm0hDJG9cP8cB78Be2DvosxxVzFSmNbcUK4Grwo/jxBlNBMlCa2
kzRJo3R2dHPkcPIWfS4DL0MrRY8yjbzHN5iKmMWZ+1icWZZZc9mE2PrYXdhXOY5zynCOcQVz47gv
8BjyzPMe4hPmG+IPoBKoFwWsBJYEi4SUhB4J70fefcOioWIUsQ5xTwm0RJOkA/JGq5WylvouXSNj
LfNjd62svexvuWZ5NwW8wlVFmhKDUrdyoAqzSr9qqBqH2qB6lAa3xm3NOC2q1rh2ko6Izj3dg3rS
ek/0cw2UDV4bFhgpGT0zPmQibjJuGmHGaNZu7mT+3aLMUsvypVWWtaT1pM0+W6rtuF2Svbj97J5j
DmaOOMdRpxPOvi6arvxuFHemvZIepp4BXlnetbQhnzd+eH/JAOvAmKCS4N6QN2EM4WoRfpFFUX3R
n2Opcfbx2QnX960lySaHpVxM/XBA5mB82vUM/CHnzPqsXzlOuVeOMOcl5r86als4UKR5vKfY4OTd
094l38qOn5GreFh5sFqq5vn503X29cwNM41VzRGtOpdZ2j60D3Wc68ro9u0x6hXrJ9z4MDA+1Hgr
d4Q2pnqHODEzWX0v5L78g58zNx8feWL/jGvu1YvGV3HzOm+Ibx++P/8h9pPRZ/YvH78Orp5dT/nu
9lN7U+QX5ffvnfnfmf+d5///8/P/977Dtk3gUAbgYhoAdoiX1wWgCYlF+5GtDCS21QXAQRdAxm/+
8TDCm9v2Y9tByIVCLA4GYAEeEJCdGjKgACbACjgAN8KjgkAEYXlphEqVES7VQfYBzBE2dQRuwBsE
IHwaC5IRQs0FheA0wqgXQCvoBP3gNpj6Q6mfwDcI+kOpVEgSUoL0IEvIGfJFGDUFyoWKoWqoBeqB
RqAZhE5XUBCKguJDSaO0UJYIlYahUlH5qApUM6oXNYl6iVpBOJQdloA1YRvYB46HD8Nn4EvwEPwY
XkLDaA6ENA3QruhIdDb6DPoKehT9Cv0Tw4iRxOhj3DFxmAKEHvsxs5hVLD1WAmuI9cImY08hbDiB
/YDD4YRx+jgv3H5cOe4a7hFuHc+GV8I74OPwxQjVPcCvE9gJagQ3QiqhEuG1eSKOKEm0JkYTTxK7
iXMkmCROsiLFkkpJfaQFOjqEvdzo0uka6KbofpAFyebkWPIZ8jD5Mz0nvQF9BH0p/QD9ZwYuBiOG
aIYKhlGGdYoQxZZygNJIecyIZ1RBLPFJxiHGNSYRJiemHKZrTIvMPMw2zBnMV5nfsfCw2LJkslxj
WWIVZnVlLWQdZt1iU2QLZTvH9gShJUv2LPY+9h8cChzhHPUcrzn5ON04T3FOczFwWXId4brNjeU2
5D7EfZMH4tHjSee5wQvx6vNm8g7x4fjM+PL5JvgZ+R35S/mfUQWoAdRG6lcBNYF0gRFBJsG9gnWC
y0KaQoeFHggLCUcL94nQi3iKtIj8FrUTrRFdEzMVKxf7LG4gXiL+ScJAolTis6SxZIXk2i7LXbW7
tqScpFql8dI+0j0ybDJRMqO7RXYf3D0rqyR7TPaDnLFctdymvLN8mwJZIUhhQJFXMVHxnpKUUrbS
c2VV5SLlRRV9lTKVZVVT1UrVNTVztUq1FXUT9TL1jxraGoUazzVlNFM1R7XYtHy0mrXWtXW0s7XH
dZh0HHVKdGZ1uXTddMt0Z/W49dz1zug90+fT99Kv0n9pIGTgZ1Bn8M5Q0jDMsMXwi5G8UbxRl9FP
Yy3jNOMBE6yJuUmByZQpi6mL6RnTF2bCZkFmTWbL5krmyeZ9FrCFqUWBxbQlh6WHZY3lOysZq1ir
a1a/rY2s86ynbDhsPG1qbT7Yytsm2fbZYe2s7IrtntoL2YfYt9n/2KO3J3fPpAOHg7dDvcMXR1XH
NMcRJ0YnV6cap0VnBedU50EXsouTS6XLO1c512TXQTeym5Nbldt7dwX3VPfhvZS9rnvP7f3koeKR
7jHmyerp5dngueKl5ZXjdc+bxzvA+7L3Bs2Ydoz2xEfEJ8qn2xfja+tb5rvgJ+uX4jfkT/F396/z
Xw7QDMgOmArkCQwMbAvcCjINOhE0FywRHBfcF0IMcQypCvkQqhyaFjoWxhZGC2sK+xauH14Q/ihC
MCI8oisSjrSKLIl8HSUdlRg1EE2Odomuif4UoxKTHjMeyxbrHXsxdi1OJ+5w3HQ8b3xA/KX4nwmG
CQUJM/uo+0L2Xdm3lWicWJj4KEkgKSTpStJmsmFyQfKDFL6UgJSWlG+pOqk5qRP72fZ77q/d/+mA
4oGUAwMHiQdtD54+OJcmnBaadjnte7p2elb6WAZjhnPG2Yz5Q5KHog51HNrM1M/MzZzIYslyy6rM
WsjelR2V3ZG9maOXk5MznsuU65xbkfvqsNjhsMNth78d0TySfmQ4j5Rnm3cybzafP98vvyF/qUCh
ILGg5yh01PjokaN3C1kKXQorCl8eEz0Wcqzl2EqRSlFqUf9x9HHT4wXHp06wnnA9UXHiVbFocUhx
S/HXk8onk0/2nkKdMj515NTEacbTjqdLTz8rESjxL2ko+VgqWxpX2lW6WaZTdqjsVjmp3Lr8ePnD
M1xnPM5Un1moEK8Iq7hUsXpW5WzK2b5KuNKk8kjlRBVTlVNVWdWzaoFq/+qG6k81cjXxNddqts7p
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
AElFTkSuQmCC
</data>

          </attachment>
      

    </bug>