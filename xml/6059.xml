<bug>
          <bug_id>6059</bug_id>
          
          <creation_ts>2012-01-19 11:01:00 +0100</creation_ts>
          <short_desc>Not replace existing properties of native object&#39;s prototypes</short_desc>
          <delta_ts>2014-03-03 15:24:54 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.6.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28316</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-01-19 11:01:07 +0100</bug_when>
            <thetext>Currently, we replace properties of native objects even when already existing. For instance, modern browsers feature Array.prototype.indexOf. While we use the native implementation when present, we still replace the property in any case.

Replaced properties are enumerable by default. Apart from other potential issues, this has the considerable drawback that those properties appear in for in loops. This may break 3rd-party-code. For example, the Ace editor breaks when loaded after qooxdoo (uses for in to iterate over array).

We should only replace properties when no native implementation is present. Unfortunately, it is not possible to declare properties not enumerable in older browsers.

Classes to verify
- qx.lang.Core
- qx.lang.Generics</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28317</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-01-19 11:24:55 +0100</bug_when>
            <thetext>In qx.lang.Core, only write property when feature is missing. qx.lang.Generics does not modify any prototypes.

Fixed with:

3b50f9c (master)
7006348 (branch_1_6_x)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28350</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-01-24 09:50:16 +0100</bug_when>
            <thetext>Replace Error.prototype.toString in IE if non existing or implementation is incomplete.

ec040c4 (master)
86b1e8c (branch_1_6_x)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38562</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:54 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>