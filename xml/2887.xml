<bug>
          <bug_id>2887</bug_id>
          
          <creation_ts>2009-10-02 22:49:00 +0200</creation_ts>
          <short_desc>Add asserts for none-scalar method parameters</short_desc>
          <delta_ts>2014-03-03 08:45:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev.testing</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fritz Zaucker">fritz.zaucker</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>12839</commentid>
            <who name="Fritz Zaucker">fritz.zaucker</who>
            <bug_when>2009-10-02 22:49:05 +0200</bug_when>
            <thetext>As discussed with Fabian, it would be useful to check the type of none-scalar method parameters in the source version like, e.g. in table.model.Simple.setData():

if (qx.core.Variant.isSet(&quot;qx.debug&quot;, &quot;on&quot;)) {
      this.assertArray(rowarr[0], &quot;Parameter must be an array of arrays.&quot;);
}

As this code is optimized away in the build version, it helps to find programming errors quickly in the source version and doesn&#39;t hurt performance in the build version.

Of course, this applies to all public API methods.

Cheers,
Fritz</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12850</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-05 09:43:25 +0200</bug_when>
            <thetext>There have been ideas for quite some time to automatically insert such assertions to explicitly enforce certain aspects of the API contract, e.g. argument types. It might be worth thinking about such a generic tooling support during development (e.g. extracted from the JSDocs), rather than cluttering (manually and prone to errors) too much of the existing code. Of course, some individual, specific checks might still be best for many of the method invocations, and are often needed for the build version as well. 

Ideas?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35264</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:42 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>