<bug>
          <bug_id>2904</bug_id>
          
          <creation_ts>2009-10-07 18:54:00 +0200</creation_ts>
          <short_desc>Add Library name spaces as automatic fulfilled Dependencies</short_desc>
          <delta_ts>2014-03-03 15:26:43 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          <dependson>2376</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>carsten.lergenmueller</cc>
    
    <cc>daniel.wagner</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>12958</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-07 18:54:00 +0200</bug_when>
            <thetext>With the overhauled dependency checker (cf. bug#2376) tests for library name 
spaces, like &#39;qx&#39; in 
   
   if (win.qx == qx)  (qx.event.Manager:50)

are complained about as unknown references.

This could be amended by adding, for each involved library, the list of library 
name spaces, like for the framework

  qx
  qx.bom
  qx.bom.client
  ...
  qx.ui
  qx.ui.basic
  ...

to the list of &quot;known symbols&quot;. The library scan could provide for that, and 
the dependency checker would treat them on the same level as lang.GLOBALS and 
QXGLOBALS.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13074</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-12 12:02:08 +0200</bug_when>
            <thetext>down prio, as this issue is not very frequent</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13136</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-12 19:10:44 +0200</bug_when>
            <thetext>As a first step, auto-ignore&#39;d the library name spaces of the app (&#39;qx&#39;, 
&#39;htmlarea&#39;, &#39;custom&#39;, ...).

With r20336.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14821</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:48 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15714</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-11 11:31:25 +0100</bug_when>
            <thetext>mass move to 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16539</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:31:17 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20731</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-10-15 19:09:30 +0200</bug_when>
            <thetext>The issue is resolved. Library names spaces (and sub-name spaces) are picked up 
and treated as auto-ignores, so they can be used as bare symbols in code 
without getting warnings about them, e.g.

     if (qx &amp;&amp; qx.ui &amp;&amp; qx.ui.table)

assuming the application actually *uses* a class from the qx.ui.table.* name 
space. Contrary to my earlier beliefs I could not just use the the scan lists 
from the library scans. This would have included *all* name spaces of any given 
library. But at run time, only for those classes being defined the name space 
is added to the JS run time. So using all library class directories would be 
overgenerating, auto-ignoring name spaces of classes which are never used in 
the build, and could lead to a situation in which a name space is silently 
ignored during compilation, which is then not available at run time. Therefore, 
the auto-ignoring is done *after* the final class list has been assembled, and 
only for those classes (currently in DependencyLoader).

With r23539.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39207</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:43 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>