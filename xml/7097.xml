<bug>
          <bug_id>7097</bug_id>
          
          <creation_ts>2012-12-14 07:55:00 +0100</creation_ts>
          <short_desc>Enable global error handling for Xhr errors in the class qx.bom.request.Xhr</short_desc>
          <delta_ts>2014-03-03 15:19:34 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>alexander.steitz</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31732</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2012-12-14 07:55:43 +0100</bug_when>
            <thetext>Qooxdoo offers a global error handling. 
The documentation in the class qx.event.GlobalError says:
  Further each JavaScript &quot;entry point&quot; must be wrapped with a call to
  qx.event.GlobalError#observeMethod

This kind of global error handling is missing for the class qx.bom.request.Xhr.

The Xhr class contains the following code:
  this.__onNativeReadyStateChangeBound = qx.Bootstrap.bind(this.__onNativeReadyStateChange, this);
  this.__nativeXhr.onreadystatechange = this.__onNativeReadyStateChangeBound;

To enable the global error handling, the code should be:
  this.__onNativeReadyStateChangeBound = qx.event.GlobalError.observeMethod(
      qx.Bootstrap.bind(this.__onNativeReadyStateChange, this) );

We need this kind of error handling for this class.
Our error logs show that our customers experience 5000 javascript errors per day.
We were not yet able to reproduce this errors, because this error is a &quot;window error&quot;.
&quot;Window errors&quot; do not contain a stack trace, but only the line number.
And the line number points to the following line in the class qx.bom.request.Xhr:
  this.__nativeXhr.getResponseHeader(header)
The error only occurs when using the chrome browser and the exceptions says
that the response headers were requested although the object is not yet ready.
We were not yet able to figure out the stack trace and the reason for this error.
Therefore we need this global error handling and the stack trace.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31737</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2012-12-14 13:23:47 +0100</bug_when>
            <thetext>Thanks for the detailed report! Getting a stack trace for this error seems to be a good approach to get nearer to the root cause.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31765</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2012-12-18 14:01:26 +0100</bug_when>
            <thetext>The class qx.bom.NativeHistory does also not support global errors:
  qx.bom.Event.addNativeListener(window, &quot;hashchange&quot;, this.__checkOnHashChange);

If you care, you could also add the global error handling to the class qx.bom.NativeHistory.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32852</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-05-29 21:29:27 +0200</bug_when>
            <thetext>Done.

master: 8de38f0704945541786fd5ebd303d6795774fa6f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36538</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:34 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>