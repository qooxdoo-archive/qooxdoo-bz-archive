<bug>
          <bug_id>5437</bug_id>
          
          <creation_ts>2011-07-25 12:12:00 +0200</creation_ts>
          <short_desc>Support Multiple Parser Frontends (Treegenerators)</short_desc>
          <delta_ts>2014-03-03 15:23:34 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>1.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26226</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-25 12:12:05 +0200</bug_when>
            <thetext>Make the treegenerator a parameter for the generator action that needs class 
trees (runCompiled, runPrettyPrinting, runApiData), so that e.g. runCompiled 
can use a different frontend than runPrettyPrinting and runApiData.

This will allow us to improve the parser for real code work (optimizations, 
correct precendences in parse trees, skipping comments, ...), while still 
retaining the old AST for the comment-processing actions like pretty-printing 
and API data extraction.  The latter two can then be later migrated 
successively to the new parser, once it supports comments properly. But this 
also decouples improving the AST on the code level and on the comment level, 
which makes these changes much easier.

This is also a good preparation if we want to support different JavaScript 
language levels (1.5, 1.9, Harmony, ...) for the user to choose from.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29327</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-05-07 12:37:09 +0200</bug_when>
            <thetext>The various compile pipelines (script, api-data, pretty-printing) can now chose 
which treegenerator they want to use. Currently we&#39;re in the process of porting 
all those pipelines to the new treegenerator, but we should retain this 
possibility if we want to test/introduce other treegenerators in the future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38063</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:34 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>