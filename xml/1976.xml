<bug>
          <bug_id>1976</bug_id>
          
          <creation_ts>2009-02-20 21:30:00 +0100</creation_ts>
          <short_desc>Remove deprecated/legacy code at major milestone</short_desc>
          <delta_ts>2009-11-24 20:14:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7966</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-02-20 21:30:48 +0100</bug_when>
            <thetext>Search for @deprecated tags and remove unnecessary cruft.

As one example, the deprecated method qx.ui.treevirtual.TreeVirtual.setCellFocusAttributes() can be removed during 0.9 development.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9231</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-09 10:42:13 +0200</bug_when>
            <thetext>We&#39;ll definitively remove all deprecated code in 0.9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12456</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-21 12:21:11 +0200</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12482</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-21 17:37:46 +0200</bug_when>
            <thetext>to Martin. After we get positive feedback from the other devs (tomorrow), you&#39;d proceed as planned.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12688</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-28 09:47:32 +0200</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12728</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-29 17:52:45 +0200</bug_when>
            <thetext>Removed all deprecated code with revision 20234.
@Derrell, could you please check and set the bug to verified?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12758</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-09-30 15:44:02 +0200</bug_when>
            <thetext>A grep-find for @deprecated still returns the following list. Shouldn&#39;t all but a very few of these (the newly-deprecated ones) be removed?

./ui/core/Blocker.js:271:     * @deprecated Use &#39;getBlockerElement&#39; instead. (for 0.9)
./ui/core/Blocker.js:351:     * @deprecated Use &#39;getContentBlockerElement&#39; instead. (for 0.9)
./ui/core/MBlocker.js:144:     * @deprecated Use &#39;getBlocker().getContentBlockerElement()&#39; instead. (for 0.9)
./ui/core/MBlocker.js:162:     * @deprecated Use &#39;getBlocker().getBlockerElement()&#39; instead. (for 0.9)
./ui/form/Form.js:226:     * @deprecated Create the renderer and add the form as constructor 
./ui/table/ITableModel.js:69:     * @deprecated
./ui/table/ITableModel.js:77:     * @deprecated
./bom/Shortcut.js:266:     * @deprecated for 0.9
./bom/Shortcut.js:282:     * @deprecated for 0.9
./util/range/IRange.js:23: * @deprecated This range implementation is expected to be replaced by an  
./util/range/Range.js:24: * @deprecated This range implementation is expected to be replaced by an  
./util/range/__init__.js:4: * @deprecated This range implementation is expected to be replaced by an 
./util/Json.js:479:     * @deprecated Use &#39;qx.util.Json.parse&#39; instead! (for 0.9)
./event/Command.js:22: * @deprecated for 0.9
./event/Command.js:51:     * @deprecated for 0.9
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12759</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-09-30 15:53:37 +0200</bug_when>
            <thetext>We are aware of all these left deprecations:

- All messages in the list containing &quot;for 0.9&quot; are new once added after the 0.8.3 release.
- The one for the form rendere was added after the removing of the deprecated code, so its even newer than the once marked for 0.9
- We also left the two constants in the table interface because we had not the chance to warn the user not to use it. So its hard to deprecate such constants and we need to find a solution for that.
- The deprecation of the range is also ok because as long as we don&#39;t have the new solution, the old one should be keept, at least for documentation that there is a new one coming.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12761</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-09-30 16:02:21 +0200</bug_when>
            <thetext>Ok, then I guess we can consider it verified.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12762</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-09-30 16:04:10 +0200</bug_when>
            <thetext>Actually, I&#39;m going to re-open this and change the milestone to 1.0 and severity back to normal, to remind, again, to remove deprecations.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12815</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-10-02 10:44:50 +0200</bug_when>
            <thetext>Good idea! As this is a &quot;new bug&quot;, I assigne it back to none.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12825</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-02 13:41:56 +0200</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12837</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-02 19:10:16 +0200</bug_when>
            <thetext>Just wonder why you are not working with separate issues for different versions. So you can correctly setup the version/target version and complete tasks which are done.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12847</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-05 09:32:39 +0200</bug_when>
            <thetext>Absolutely, such recurring tasks should not be handled as a single report that keeps being pushed forward. If the task has been resolved for a specific release (at least significantly been addressed), it should be closed for that release, and a new task be opened for the next release.

There are a number of recurring tasks already (e.g. updates to external libs like Sizzle, Codemirror, polib, etc.), and we&#39;ll come up with a way to handle them appropriately.

For the issue here, there might be a misunderstanding. The deprecations that were introduced for or after 0.8.3 are not to be removed in the next release. Only temporary intra-trunk deprecations might be removed, all others are intended for the next release, at least. If they are to be removed in the release(s) after the next one, depends on the release scheme, which is to be established in general terms for 1.0 and beyond (along the lines of maintenance, minor, major releases).
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12848</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-05 09:33:08 +0200</bug_when>
            <thetext>.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12849</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-05 09:34:18 +0200</bug_when>
            <thetext>verified closed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14454</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:14:42 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
      
      

    </bug>