<bug>
          <bug_id>7216</bug_id>
          
          <creation_ts>2013-02-07 18:14:00 +0100</creation_ts>
          <short_desc>Add possibility to create namespaces with different root than &#39;window&#39;</short_desc>
          <delta_ts>2013-05-23 10:08:07 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          <cc>romeo.kenfacktsakem</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32182</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-02-07 18:14:32 +0100</bug_when>
            <thetext>Right now the window object is the root for all classes. With each &quot;createNamespace&quot; call the global window object is populated.

There are special cases when a different root is helpful, so it would be great to have the possibility to add / set a different root which is used by the &quot;createNamespace&quot; method to work on.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32204</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-02-11 13:28:54 +0100</bug_when>
            <thetext>Added a &#39;setRoot&#39; method to bootstrap (internal) to enable the shift of the root for createNamespace.

master: a16c494bc40ed84ea9802dfc5f3bbe93c69b879d</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32416</commentid>
              <attachid>1241</attachid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-03-06 17:54:51 +0100</bug_when>
            <thetext>Created attachment 1241
Patch for Bootstrap.js</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32417</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-03-06 17:56:16 +0100</bug_when>
            <thetext>We missed one use case in this implementation: I can&#39;t predict which namespace is created by the application developer. This should default ot the global window object, however the check is not sufficient in this case.

See the attached patch to get the idea.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32429</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2013-03-08 17:34:38 +0100</bug_when>
            <thetext>Fixed issue when creating a new class with a different top-level namespace than defined in the custom root object.

Fixed with 

59768e33d0f9611591c4c9f6e75367426372f517 (master)</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>1241</attachid>
            <date>2013-03-06 17:54:00 +0100</date>
            <delta_ts>2013-03-06 17:54:51 +0100</delta_ts>
            <desc>Patch for Bootstrap.js</desc>
            <filename>Bootstrap.js.patch</filename>
            <type>text/plain</type>
            <size>605</size>
            <attacher>alexander.steitz</attacher>
            
              <data encoding="base64">SW5kZXg6IGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvQm9vdHN0cmFwLmpzDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQotLS0gZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC9Cb290c3RyYXAuanMJKHJldmlzaW9uIDU3
MTkyKQ0KKysrIGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvQm9vdHN0cmFwLmpzCSh3b3JraW5n
IGNvcHkpDQpAQCAtNDcsNyArNDcsOCBAQA0KICAgY3JlYXRlTmFtZXNwYWNlIDogZnVuY3Rpb24o
bmFtZSwgb2JqZWN0KQogICB7CiAgICAgdmFyIHNwbGl0cyA9IG5hbWUuc3BsaXQoIi4iKTsKLSAg
ICB2YXIgcGFyZW50ID0gdGhpcy5fX3Jvb3QgfHwgd2luZG93OworICAgIHZhciB0b3BMZXZlbE5h
bWVzcGFjZSA9IHNwbGl0c1swXTsKKyAgICB2YXIgcGFyZW50ID0gdGhpcy5fX3Jvb3QgJiYgdGhp
cy5fX3Jvb3RbdG9wTGV2ZWxOYW1lc3BhY2VdID8gdGhpcy5fX3Jvb3QgOiB3aW5kb3c7CiAgICAg
dmFyIHBhcnQgPSBzcGxpdHNbMF07CiAKICAgICBmb3IgKHZhciBpPTAsIGxlbj1zcGxpdHMubGVu
Z3RoLTE7IGk8bGVuOyBpKyssIHBhcnQ9c3BsaXRzW2ldKQo=
</data>

          </attachment>
      

    </bug>