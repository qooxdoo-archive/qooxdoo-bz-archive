<bug>
          <bug_id>7032</bug_id>
          
          <creation_ts>2012-11-22 14:57:00 +0100</creation_ts>
          <short_desc>Source-over-HTTP: Add Support for Running a Source Version through a Dedicated Webserver</short_desc>
          <delta_ts>2014-03-03 15:22:41 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://qooxdoo.org/docs/general/snippets#running_a_source_version_from_a_web_server</bug_file_loc>
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          <blocked>7090</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31436</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-22 14:57:45 +0100</bug_when>
            <thetext>Running the source version of an application from a web server requires special 
consideration (s.URL), the main being that the relative paths to all the 
involved libraries must map to valid URIs under the web server.

To ease this requirement and even allow for a programming model that develops 
the source version over HTTP, a local, dedicated web server could be started 
that exposes the app under development in a suitable way to the user. 

The Python web server(s) that are part of the standard distribution can play 
the part of the dedicated web server. The generator could start it through a 
job, with a suitable configuration like e.g. choosing the right document root 
directory so that all libraries can be reached.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31665</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-12-06 15:50:56 +0100</bug_when>
            <thetext>A new job, &#39;source-server&#39;, is established in base.json, the corresponding 
config key is &#39;web-server&#39;. The job launches a Python BaseHTTPServer-based mini 
web server which exports the common root of all &#39;libraries&#39; as its document 
root. Server port (default 8080) and remote access (default false) are 
configurable in config.json.

master: c09b7d6</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31723</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-12-13 10:14:23 +0100</bug_when>
            <thetext>Alex reports two issues under Windows:

1. With Mingw32 the process bombs with

$ ./generate.py source-server

 &lt;type &#39;exceptions.WindowsError&#39;&gt; :Traceback (most recent call last):
  File &quot;C:\users\aback\development\workspace\qooxdoo\tool\bin\generator.py&quot;, 
line 266, in &lt;module&gt;
    print &gt;&gt; sys.stderr, el[:300]
TypeError: &#39;int&#39; object is not subscriptable

2. With bash under cygwin, there is the usual issue with the common root being 
not &quot;minimal&quot; enough:

With skeleton under
C:\Users\aback\development\playground\qx_examples\serverTest
and qooxdoo at
 C:\Users\aback\development\workspace\qooxdoo

the common root gets as high as &quot;C:&quot;:

$ ./generate.py source-server

&gt;&gt;&gt; Starting web server on port &#39;8080&#39;, document root is &#39;C:&#39;
&gt;&gt;&gt; For security reasons, connections are only allowed from &#39;localhost&#39;

&gt;&gt;&gt; Access your source application under 
&#39;http://localhost:8080/Users/aback/development/playground/qx_examples/serverTest/source/index.html&#39;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31725</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-12-13 13:54:34 +0100</bug_when>
            <thetext>(In reply to comment #2)
&gt; &gt;&gt;&gt; Access your source application under 
&gt; 
&#39;http://localhost:8080/Users/aback/development/playground/qx_examples/serverTest/source/index.html&#39;

Apparently, the issue is more substantial. Turns out that the URL is wrong, as 
well as the purported document root (&quot;C:&quot;). Rather, the document root seems to 
be the serverTest/ folder of the current app, and the URL would be like 
http://localhost:8080/source/index.html. (Which only works when no resources 
from the qooxdoo framework are requested).

[This result was cross-checked with PowerShell].</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37768</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:41 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>