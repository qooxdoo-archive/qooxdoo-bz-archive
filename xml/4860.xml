<bug>
          <bug_id>4860</bug_id>
          
          <creation_ts>2011-03-24 19:53:00 +0100</creation_ts>
          <short_desc>Dependency Logging: Harmonize Generator.lookupUsingDeps with DependencyLoader.getCombinedDeps</short_desc>
          <delta_ts>2014-03-03 08:45:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.dependencies</component>
          <version>1.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23543</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-03-24 19:53:08 +0100</bug_when>
            <thetext>The two functions do not work on exactly the same dependency information. Both 
take the Class.dependencies() and apply some form of post-processing.

- lookupUsingDeps works on the pure lexical dependencies (Class.dependencies, 
lexical infered dependencies + #require etc. hints), which is basically what 
you want
- getCombinedDeps adds deps configured in config.json (e.g. &quot;require&quot; key); 
this you probably don&#39;t want to add in dependency  logging, as it is 
config-dependend and can change between builds; it doesn&#39;t change a class has 
&quot;of itself&quot;
- both remove self references, and multiple depsItems that refer to the same 
class
- a big difference is that getCombinedDeps fixes lost dependencies to 
qx.core.Variant/qx.core.Environment for source/hybrid builds; this is missing 
from deps. logging


It&#39;s probably better to use the exact dependency information for both 
functions, as this is what most people would expect: see the dependencies that 
are also in effect when building the application.

For &quot;pure&quot; lexical dependencies we could add a dedicated job that works on the 
same class list as a build job, but leaves out any config &quot;requires&quot; etc.?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35313</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:50 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>