<bug>
          <bug_id>2535</bug_id>
          
          <creation_ts>2009-06-30 18:03:00 +0200</creation_ts>
          <short_desc>Destroying a tree item causes the tree scrolling up/down</short_desc>
          <delta_ts>2014-03-03 15:22:47 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.tree</component>
          <version>0.7.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.7.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ivan Furnadjiev">ivan</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>rherrmann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10693</commentid>
            <who name="Ivan Furnadjiev">ivan</who>
            <bug_when>2009-06-30 18:03:30 +0200</bug_when>
            <thetext>When a tree item is destroyed the tree is scrolling up and down. Digging into the problem I found that the problem is in the methods TreeFolder#remove(), TreeFolder#removeAt(), TreeFolder#removeAll(). The actual removal code in these methods is surrounded with __saveSelectionBeforeRemove() and __restoreSelectionAfterRemove().  __saveSelectionBeforeRemove() causes the tree to scroll up, because the selected item is set to the tree itself ( line 542 ). __restoreSelectionAfterRemove() causes the tree to scroll down, because the selection is restored ( line 559 ). As a result we have:
1. Tree flickering ( scroll up/down )
2. The selected item is always scrolled to the bottom of the tree - selection jumping.
Are these methods __saveSelectionBeforeRemove(), __restoreSelectionAfterRemove() really needed here? Why the selection is changed ( set to tree ) on tree item removal?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10694</commentid>
              <attachid>544</attachid>
            <who name="Ivan Furnadjiev">ivan</who>
            <bug_when>2009-06-30 18:06:48 +0200</bug_when>
            <thetext>Created attachment 544
Application to reproduce the bug.

Steps to reproduce:
1. Start the attached application.
2. Scroll the tree down and select &quot;Item 50&quot; for example. Make sure that the &quot;Item 50&quot; is not the last visible item.
3. Click &quot;Dispose last item&quot; button.
Tree flickers and the &quot;Item 50&quot; scrolls down to the bottom of the tree.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11058</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-07-23 17:23:17 +0200</bug_when>
            <thetext>to Fabian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17325</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-17 13:43:33 +0100</bug_when>
            <thetext>to Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17479</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-23 15:03:29 +0100</bug_when>
            <thetext>Exclusive 0.7.x</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17777</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-14 14:10:29 +0200</bug_when>
            <thetext>Removed all core developers as assignee from 0.7 only bugs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18394</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-05-19 09:29:12 +0200</bug_when>
            <thetext>Set all open 0.7.x-only issues that have no assignee to WONTFIX. This is in accordance with 0.7.x users like the RAP team. If you want to work on such an 0.7.x issue, feel free to reopen it and assign it to you. The issues should only exist in the legacy 0.7.x versions and be already resolved in qooxdoo 0.8 or above.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37803</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:47 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>544</attachid>
            <date>2009-06-30 18:06:00 +0200</date>
            <delta_ts>2009-06-30 18:06:48 +0200</delta_ts>
            <desc>Application to reproduce the bug.</desc>
            <filename>Application.js</filename>
            <type>application/x-javascript</type>
            <size>1299</size>
            <attacher>ivan</attacher>
            
              <data encoding="base64">LyogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoNCiAgIENvcHlyaWdodDoNCg0KICAgTGljZW5zZToNCg0KICAg
QXV0aG9yczoNCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqICovDQoNCi8qKg0KICogWW91ciBhcHBsaWNhdGlv
bg0KICovDQpxeC5DbGFzcy5kZWZpbmUoIkFwcGxpY2F0aW9uIiwNCnsNCiAgZXh0ZW5kIDogcXgu
YXBwbGljYXRpb24uR3VpLA0KDQogIG1lbWJlcnMgOg0KICB7DQogICAgbWFpbiA6IGZ1bmN0aW9u
KCkNCiAgICB7DQogICAgICB0aGlzLmJhc2UoYXJndW1lbnRzKTsNCiAgICAgIHZhciB0ID0gbmV3
IHF4LnVpLnRyZWUuVHJlZSgiUm9vdCIpOw0KDQogICAgICB3aXRoKHQpDQogICAgICB7DQogICAg
ICAgIHNldEJhY2tncm91bmRDb2xvcigid2hpdGUiKTsNCiAgICAgICAgc2V0Qm9yZGVyKCJpbnNl
dCIpOw0KICAgICAgICBzZXRPdmVyZmxvdygic2Nyb2xsWSIpOw0KICAgICAgICANCiAgICAgICAg
c2V0VG9wKDQ4KTsNCiAgICAgICAgc2V0TGVmdCgyMCk7DQogICAgICAgIHNldFdpZHRoKDIwMCk7
DQogICAgICAgIHNldEhlaWdodCgxMDApOw0KICAgICAgfTsNCg0KICAgICAgcXgudWkuY29yZS5D
bGllbnREb2N1bWVudC5nZXRJbnN0YW5jZSgpLmFkZCh0KTsNCiAgICAgIA0KICAgICAgZm9yKCB2
YXIgaSA9IDA7IGkgPCAxMDA7IGkrKyApIHsNCiAgICAgIAl0LmFkZCggbmV3IHF4LnVpLnRyZWUu
VHJlZUZvbGRlciggIkl0ZW0gIiArIGkgKSApOw0KICAgIAl9ICAgICAgDQoNCiAgICAgIHZhciB0
ZXN0QnV0dG9uID0gbmV3IHF4LnVpLmZvcm0uQnV0dG9uKCAiRGlzcG9zZSBsYXN0IGl0ZW0iICk7
DQogICAgICB0ZXN0QnV0dG9uLnNldExlZnQoMjUwKTsNCiAgICAgIHRlc3RCdXR0b24uc2V0VG9w
KDQ4KTsNCiAgICAgIHRlc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lciggImV4ZWN1dGUiLCBmdW5j
dGlvbiggZSApIHsNCgkJCQl2YXIgY3VycmVudEl0ZW0gPSB0LmdldExhc3RUcmVlQ2hpbGQoKTsN
CiAgICAgICAgaWYgKGN1cnJlbnRJdGVtICE9IG51bGwpIHsNCiAgICAgICAgICAgIGN1cnJlbnRJ
dGVtLmRlc3Ryb3koKTsNCiAgICAgICAgICAgIGN1cnJlbnRJdGVtID0gbnVsbDsNCiAgICAgICAg
fQ0KICAgICAgfSApOw0KDQogICAgICBxeC51aS5jb3JlLkNsaWVudERvY3VtZW50LmdldEluc3Rh
bmNlKCkuYWRkKCB0ZXN0QnV0dG9uICk7DQogICAgfQ0KICB9DQp9KTsNCg0K
</data>

          </attachment>
      

    </bug>