<bug>
          <bug_id>3014</bug_id>
          
          <creation_ts>2009-11-01 22:04:00 +0100</creation_ts>
          <short_desc>grid layout fails to lay out properly with colSpan</short_desc>
          <delta_ts>2014-03-03 15:20:46 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>13755</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-01 22:04:23 +0100</bug_when>
            <thetext>When colSpan is used in a grid layout, the column widths are not properly calculated. See the following three playground examples. The first uses colSpan and you can see that the button widths are not taken into account when layouting. Removing the colSpan and putting the buttons into either col 0 (the second example) or col 1 (the third example) cause proper layouting (but an undesirable layout).

This is _almost_ like what actually works in the FormController demo in demobrowser. That one lays out properly because the label and form field widths total more than the button widths, so the button widths don&#39;t need to be taken into account.

var root = this.getRoot();
root.setLayout(new qx.ui.layout.VBox(20));

////////////////////////////////////////////////////////////////////////////////////
// colspan example that fails
var gridLayout = new qx.ui.layout.Grid()
gridLayout.setColumnAlign(0, &quot;right&quot;, &quot;middle&quot;);
var grid = new qx.ui.container.Composite(gridLayout);

root.add(grid);

grid.add(new qx.ui.basic.Label(&quot;Value 1: &quot;), { row:0, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:0, column:1 });
grid.add(new qx.ui.basic.Label(&quot;Value 2: &quot;), { row:1, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:1, column:1 });

var hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));
grid.add(hbox, { row:2, column:0, colSpan:2 });

var saveButton = new qx.ui.form.Button(&quot;Save&quot;);
saveButton.setWidth(70);
hbox.add(saveButton);

var cancelButton = new qx.ui.form.Button(&quot;Cancel&quot;);
cancelButton.setWidth(70);
hbox.add(cancelButton);

////////////////////////////////////////////////////////////////////////////////////
// buttons in col 0, no colspan
var gridLayout = new qx.ui.layout.Grid()
gridLayout.setColumnAlign(0, &quot;right&quot;, &quot;middle&quot;);
var grid = new qx.ui.container.Composite(gridLayout);

root.add(grid);

grid.add(new qx.ui.basic.Label(&quot;Value 1: &quot;), { row:0, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:0, column:1 });
grid.add(new qx.ui.basic.Label(&quot;Value 2: &quot;), { row:1, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:1, column:1 });

var hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));
grid.add(hbox, { row:2, column:0 });

var saveButton = new qx.ui.form.Button(&quot;Save&quot;);
saveButton.setWidth(70);
hbox.add(saveButton);

var cancelButton = new qx.ui.form.Button(&quot;Cancel&quot;);
cancelButton.setWidth(70);
hbox.add(cancelButton);

////////////////////////////////////////////////////////////////////////////////////
// buttons in col 1, no colspan
var gridLayout = new qx.ui.layout.Grid()
gridLayout.setColumnAlign(0, &quot;right&quot;, &quot;middle&quot;);
var grid = new qx.ui.container.Composite(gridLayout);

root.add(grid);

grid.add(new qx.ui.basic.Label(&quot;Value 1: &quot;), { row:0, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:0, column:1 });
grid.add(new qx.ui.basic.Label(&quot;Value 2: &quot;), { row:1, column:0 });
grid.add(new qx.ui.form.Spinner(),   { row:1, column:1 });

var hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));
grid.add(hbox, { row:2, column:1 });

var saveButton = new qx.ui.form.Button(&quot;Save&quot;);
saveButton.setWidth(70);
hbox.add(saveButton);

var cancelButton = new qx.ui.form.Button(&quot;Cancel&quot;);
cancelButton.setWidth(70);
hbox.add(cancelButton);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13756</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-01 22:48:09 +0100</bug_when>
            <thetext>Just to be a bit clearer, the original app is not three separate playground examples, as each of the three sections require the two lines at the beginning to initialize root and set its layout. Copying the entire script to the playground will show all three grids.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13765</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-02 10:41:45 +0100</bug_when>
            <thetext>to Fabian</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13824</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-11-03 15:20:44 +0100</bug_when>
            <thetext>You have to give one or both columns a flex value != 0, otherwise the grid layout is unable to decide, which of the spanned columns to grow.

Adding a &quot;gridLayout.setColumnFlex(0, 1);&quot; fixes the problem


http://demo.qooxdoo.org/devel/playground/#%7B%22code%22%3A%20%22var%2520root%2520%253D%2520this.getRoot%28%29%253B%250A%250A%250A%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%252F%250A%252F%252F%2520colspan%2520example%2520that%2520fails%250Avar%2520gridLayout%2520%253D%2520new%2520qx.ui.layout.Grid%28%29%253B%250AgridLayout.setColumnFlex%280%252C%25201%29%253B%2520%2520%2520%2520%250AgridLayout.setColumnAlign%280%252C%2520%2522right%2522%252C%2520%2522middle%2522%29%253B%250Avar%2520grid%2520%253D%2520new%2520qx.ui.container.Composite%28gridLayout%29%253B%250A%250Aroot.add%28grid%29%253B%250A%250Agrid.add%28new%2520qx.ui.basic.Label%28%2522Value%25201%253A%2520%2522%29%252C%2520%257B%2520row%253A0%252C%2520column%253A0%2520%257D%29%253B%250Agrid.add%28new%2520qx.ui.form.Spinner%28%29%252C%2520%257B%2520row%253A0%252C%2520column%253A1%2520%257D%29%253B%250Agrid.add%28new%2520qx.ui.basic.Label%28%2522Value%25202%253A%2520%2522%29%252C%2520%257B%2520row%253A1%252C%2520column%253A0%2520%257D%29%253B%250Agrid.add%28new%2520qx.ui.form.Spinner%28%29%252C%2520%257B%2520row%253A1%252C%2520column%253A1%2520%257D%29%253B%250A%250Avar%2520hbox%2520%253D%2520new%2520qx.ui.container.Composite%28new%2520qx.ui.layout.HBox%285%29%29%253B%250Agrid.add%28hbox%252C%2520%257B%2520row%253A2%252C%2520column%253A0%252C%2520colSpan%253A2%2520%257D%29%253B%250A%250Avar%2520saveButton%2520%253D%2520new%2520qx.ui.form.Button%28%2522Save%2522%29%253B%250AsaveButton.setWidth%2870%29%253B%250Ahbox.add%28saveButton%29%253B%250A%250Avar%2520cancelButton%2520%253D%2520new%2520qx.ui.form.Button%28%2522Cancel%2522%29%253B%250AcancelButton.setWidth%2870%29%253B%250Ahbox.add%28cancelButton%29%253B%250A%250A%22%7D</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13834</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-03 15:48:42 +0100</bug_when>
            <thetext>Ok, then the problem is in qx.ui.form.renderer.Single(). I was tracking down why *it* wasn&#39;t laying out the buttons correctly, and tracked it down to the grid layout while doing exactly what it does. Reopening. I&#39;ve fixed that now.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13835</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-03 15:50:56 +0100</bug_when>
            <thetext>Re-opening with a suggestion. Shouldn&#39;t column 0 default to flex? What problems would that cause?
It would prevent the problem demonstrated by this bug report for the future, and it&#39;s not at all obvious that colSpan should cause such layout problems.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13861</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-11-04 15:05:45 +0100</bug_when>
            <thetext>Grid layouts would behave very different if the first column is flexible. This will affect all uses of the grid layout, which don&#39;t already have the first column flexible. Since we are approaching the 1.0 release I don&#39;t want to break the framework with this change. 
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13862</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-11-04 15:11:21 +0100</bug_when>
            <thetext>I still contend that it&#39;s broken and non-intuitive in its current implementation. Even developers within the core team don&#39;t realize the consequences, as we saw with renderer.Single. There&#39;s clearly a problem.

I won&#39;t re-open this, but hopefully you (Fabian) or Andreas will agree that it needs more review, and will re-open this to have a closer look. Before the 1.0 release is a far better time to fix it than later. If column 1 is made flexible by default, existing application, upon upgrade, can turn that off to regain the previous behavior, but new code will behave more intuitively.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14667</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:16:29 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37019</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:46 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>