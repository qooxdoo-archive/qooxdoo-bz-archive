<bug>
          <bug_id>2241</bug_id>
          
          <creation_ts>2009-04-16 02:29:00 +0200</creation_ts>
          <short_desc>Manually setting maxLength(null) causes the control to not accept input</short_desc>
          <delta_ts>2014-03-03 15:26:09 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jim Hunter">Jim</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9301</commentid>
            <who name="Jim Hunter">Jim</who>
            <bug_when>2009-04-16 02:29:09 +0200</bug_when>
            <thetext>The default value for maxLength is null and does allow you to enter text. But if you manually set maxLenth(null) you no longer can enter text in the control. In both cases, if you do getMaxLength(), null is returned. So there doesn&#39;t look like there is a difference, but there is in the behavior.  You can see the behavior with the example code below, used in the Playground. If you run the code like it is, the alert says null and you can enter data. If you uncomment out the one line that sets the maxLength you will again get null as the alert value but you will not be able to enter text.

var doc = this.getRoot();
var t = new qx.ui.form.TextField;
//t.setMaxLength(null);
doc.add(t);
alert(t.getMaxLength());</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9302</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-04-16 08:32:39 +0200</bug_when>
            <thetext>to Alex</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9364</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-17 15:57:03 +0200</bug_when>
            <thetext>.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9425</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-21 13:58:45 +0200</bug_when>
            <thetext>Fixed with Revision #18800.

Thanks for the detailed bug report, Jim!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9466</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-22 13:05:42 +0200</bug_when>
            <thetext>The change breaks all other properties. For example setAttribute(&quot;html&quot;, null) do not work anymore.

I would say to correctly support this, we must first find a good way to remove properties crossbrowser (with incoming attribute value &#39;null&#39;). There is currently support for handling these cases in attributes where we differ between the types of values e.g. null, boolean or other.

This definitely needs more investigation. For the moment I would suggest to revert the changes applied as this breaks other things and this way is not a valid solution.

As soon as I have some minutes I would be happy to help out here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9479</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-22 14:59:59 +0200</bug_when>
            <thetext>.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9484</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-22 15:17:25 +0200</bug_when>
            <thetext>Added section to list all properties which are nonremovable ones (like &quot;innerHTML&quot;). Instead of trying to remove them the value (e.g. &quot;null&quot;) is set directly at the attribute. This way &quot;setAttribute(element, &#39;innerHTML&#39;, null)&quot; does work again.

Fixed with Revision #18830.

@Sebastian: Please have a look if I missed something important.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9495</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-22 17:23:38 +0200</bug_when>
            <thetext>I think this is still suboptimal. We have some kind of removal strategy for *real* attributes and in my opinion we need something like this for properties as well. I will attach a patch to the current SVN version with a suggestion, storing the default values of properties into a special map.

BTW: I removed the block which handles &quot;style&quot; attributes. This has been introduced someday ago but is basically the wrong API. The user should use qx.bom.element.Style.setCss() instead.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9497</commentid>
              <attachid>489</attachid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-22 17:30:10 +0200</bug_when>
            <thetext>Created attachment 489
Patch for improved property support.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9560</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-23 17:29:27 +0200</bug_when>
            <thetext>Applied patch of Sebastian. Thanks for the reviewing!

Revision  #18866</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9628</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-24 15:59:17 +0200</bug_when>
            <thetext>Patch is not sufficient. It does not work for boolean values e.g. 

	qx.bom.element.Attribute.set(el, &quot;checked&quot;, true);
	
does not correctly.

-&gt; REOPEN</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9636</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-04-24 17:00:41 +0200</bug_when>
            <thetext>Apparently this issue was two-folded: an issue in &quot;qx.bom.element.Attribute&quot; which led to no default values and on the other side logically wrong unit tests.

Fixed with Revision #18884</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9639</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-24 17:42:31 +0200</bug_when>
            <thetext>Interesting error in Attribute code :)

That happens when writing code without ever running it ;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39008</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:09 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>489</attachid>
            <date>2009-04-22 17:30:00 +0200</date>
            <delta_ts>2009-04-22 17:30:10 +0200</delta_ts>
            <desc>Patch for improved property support.</desc>
            <filename>attr.patch</filename>
            <type>text/plain</type>
            <size>2238</size>
            <attacher>info</attacher>
            
              <data encoding="base64">LS0tIGM6L1RlbXAvQXR0cmlidXRlLmpzLXJldkJBU0Uuc3ZuMDAwLnRtcC5qcwlNaSBBcHIgMjIg
MTc6MjA6NDAgMjAwOQ0KKysrIEQ6L1JlcG9zaXRvcmllcy9xb294ZG9vL2ZyYW1ld29yay9zb3Vy
Y2UvY2xhc3MvcXgvYm9tL2VsZW1lbnQvQXR0cmlidXRlLmpzCU1pIEFwciAyMiAxNzoxOTo1OSAy
MDA5DQpAQCAtMTMwLDYgKzEzMCwyNCBAQA0KICAgICAgICAgaHRtbEZvciAgICAgOiAxLAogICAg
ICAgICB0YWJJbmRleCAgICA6IDEKICAgICAgIH0sCisgICAgICAKKyAgICAgIC8vIERlZmF1bHQg
dmFsdWVzIHdoZW4gIm51bGwiIGlzIGdpdmVuIHRvIGEgcHJvcGVydHkKKyAgICAgIHByb3BlcnR5
RGVmYXVsdCA6IAorICAgICAgeworICAgICAgICBkaXNhYmxlZCA6IGZhbHNlLAorICAgICAgICBj
aGVja2VkIDogZmFsc2UsCisgICAgICAgIHJlYWRPbmx5IDogZmFsc2UsCisgICAgICAgIG11bHRp
cGxlIDogZmFsc2UsCisgICAgICAgIHNlbGVjdGVkIDogZmFsc2UsCisgICAgICAgIHZhbHVlIDog
IiIsCisgICAgICAgIG1heExlbmd0aCA6IDEwMDAwMDAwLAorICAgICAgICBjbGFzc05hbWUgOiAi
IiwKKyAgICAgICAgaW5uZXJIVE1MIDogIiIsCisgICAgICAgIGlubmVyVGV4dCA6ICIiLAorICAg
ICAgICB0ZXh0Q29udGVudCA6ICIiLAorICAgICAgICBodG1sRm9yIDogIiIsCisgICAgICAgIHRh
YkluZGV4IDogMAorICAgICAgfSwKIAogICAgICAgLy8gVXNlIGdldEF0dHJpYnV0ZShuYW1lLCAy
KSBmb3IgdGhlc2UgdG8gcXVlcnkgZm9yIHRoZSByZWFsIHZhbHVlLCBub3QKICAgICAgIC8vIHRo
ZSBpbnRlcnByZXRlZCBvbmUuCkBAIC0xMzgsMTQgKzE1Niw2IEBADQogICAgICAgICBocmVmIDog
MSwKICAgICAgICAgc3JjICA6IDEsCiAgICAgICAgIHR5cGUgOiAxCi0gICAgICB9LAotICAgICAg
Ci0gICAgICAvLyBQcm9wZXJ0aWVzIHdoaWNoIGFyZSBub3QgcmVtb3ZhYmxlCi0gICAgICBub25y
ZW1vdmFibGUgOgotICAgICAgewotICAgICAgICBpbm5lckhUTUwgOiAxLAotICAgICAgICBpbm5l
clRleHQgOiAxLAotICAgICAgICB0ZXh0Q29udGVudCA6IDEKICAgICAgIH0KICAgICB9LAogCkBA
IC0yNzIsMTcgKzI4MiwyNyBAQA0KICAgICAgIH0KIAogICAgICAgLy8gYXBwbHkgYXR0cmlidXRl
Ci0gICAgICBpZiAoKGhpbnRzLnByb3BlcnR5W25hbWVdICYmIGhpbnRzLm5vbnJlbW92YWJsZVtu
YW1lXSkgfHwgCi0gICAgICAgICAgKGhpbnRzLnByb3BlcnR5W25hbWVdICYmICh2YWx1ZSAhPT0g
dHJ1ZSAmJiB2YWx1ZSAhPT0gZmFsc2UgJiYgdmFsdWUgIT09IG51bGwpKSkgeworICAgICAgaWYg
KGhpbnRzLnByb3BlcnR5W25hbWVdKSAKKyAgICAgIHsKKyAgICAgICAgaWYgKHZhbHVlID09IG51
bGwpIAorICAgICAgICB7CisgICAgICAgICAgdmFsdWUgPSBoaW50cy5wcm9wZXJ0eURlZmF1bHRb
dmFsdWVdOworICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7CisgICAgICAgICAg
ICB2YWx1ZSA9IG51bGw7CisgICAgICAgICAgfQorICAgICAgICB9CisgICAgICAgIAogICAgICAg
ICBlbGVtZW50W25hbWVdID0gdmFsdWU7Ci0gICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSB0cnVl
KSB7Ci0gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIG5hbWUpOwotICAgICAgfSBl
bHNlIGlmICh2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IG51bGwpIHsKLSAgICAgICAgZWxl
bWVudC5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7Ci0gICAgICB9IGVsc2UgaWYgKHF4LmNvcmUuVmFy
aWFudC5pc1NldCgicXguY2xpZW50IiwgIm1zaHRtbCIpICYmIG5hbWUgPT0gInN0eWxlIikgewot
ICAgICAgICBlbGVtZW50LnN0eWxlLnNldEF0dHJpYnV0ZSgiY3NzVGV4dCIsIHZhbHVlKTsKLSAg
ICAgIH0gZWxzZSB7Ci0gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTsK
KyAgICAgIH0gCisgICAgICBlbHNlCisgICAgICB7CisgICAgICAgIGlmICh2YWx1ZSA9PT0gdHJ1
ZSkgeworICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIG5hbWUpOworICAgICAg
ICB9IGVsc2UgaWYgKHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gbnVsbCkgeworICAgICAg
ICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpOworICAgICAgICB9IGVsc2UgeworICAg
ICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTsKKyAgICAgICAgfQogICAg
ICAgfQogICAgIH0sCiAK
</data>

          </attachment>
      

    </bug>