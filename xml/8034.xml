<bug>
          <bug_id>8034</bug_id>
          
          <creation_ts>2014-01-15 15:44:00 +0100</creation_ts>
          <short_desc>&#39;forEach&#39; should allow to break a loop</short_desc>
          <delta_ts>2014-04-11 08:05:14 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.0</target_milestone>
          <dependson>8035</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34782</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-01-15 15:44:09 +0100</bug_when>
            <thetext>Just like for the native &#39;forEach&#39; we should support a possibility to break a 
loop.

-&gt; 
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Breaking_a_loop

There might be use cases when this support might help.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34956</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-02-05 10:06:28 +0100</bug_when>
            <thetext>I just checked the docs in detail and saw that this is not a specified behavior. Quote from MDN:

Note : There is no way to stop or break a forEach loop. The solution is to use Array.every or Array.some. See example below.

The link given shows those samples using some or every. I also checked the spec which does not has that feature specified: http://es5.github.io/#x15.4.4.18

So I think we should not add this feature and stick with the native behavior for &#39;forEach&#39;. The mentioned methods &#39;some&#39; and &#39;every&#39; are already included via our normalization layer.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34957</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-02-05 10:20:53 +0100</bug_when>
            <thetext>As agreed: we should provide a sample for &quot;every&quot; and &quot;some&quot; to show the developers what to use to fulfill their requirement.

If it&#39;s against the upcoming ES5 spec we should not introduce it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34958</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-02-05 10:22:10 +0100</bug_when>
            <thetext>Agree with that, be we should wait until &#39;some&#39; and &#39;every&#39; are in the api viewer, see bug #8035</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39931</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-04-10 14:19:02 +0200</bug_when>
            <thetext>Added samples to Array.some and Array.every and cross links to the forEach docs.

master: 76de00ce4b94b34e0c735b9b0fd992b63d7f9ba6</thetext>
          </long_desc>
      
      

    </bug>