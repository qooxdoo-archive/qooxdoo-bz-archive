<bug>
          <bug_id>3043</bug_id>
          
          <creation_ts>2009-11-11 14:05:00 +0100</creation_ts>
          <short_desc>Nullpointer after unsubscribing from message bus</short_desc>
          <delta_ts>2010-08-06 09:54:14 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Titze">daniel.titze</reporter>
          <assigned_to name="Christian Boulanger">info</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>14041</commentid>
            <who name="Daniel Titze">daniel.titze</who>
            <bug_when>2009-11-11 14:05:34 +0100</bug_when>
            <thetext>r20549
class &#39;qx.event.message.Bus&#39;:
&#39;subscribers&#39; is null in method &#39;__callSubscribers&#39;, if you do the following:

do subscribe in class A on event X with context A
do unsubscribe in class B on event X with context B
(context and callback are different)

should all subscriptions bei removed, if context and callback are not matching?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14043</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-11 14:20:19 +0100</bug_when>
            <thetext>Christian, would be great you&#39;d have a look.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14045</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2009-11-11 14:43:20 +0100</bug_when>
            <thetext>Hello Daniel, it would be great if you wrote a snippet of code (preferrably for the playground) that demonstrates the problem. Then I can quickly write a patch that fixes the bug and include the code in a test for the test suite.

Thanks,

Christian </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14047</commentid>
            <who name="Daniel Titze">daniel.titze</who>
            <bug_when>2009-11-11 15:16:58 +0100</bug_when>
            <thetext>hello christian,

here is a example:

// &#39;subscribers is null&#39;
qx.event.message.Bus.subscribe(&quot;eX&quot;, function(){}, this);
qx.event.message.Bus.unsubscribe(&quot;eX&quot;, function(){}, this); // -&gt; sub[message] = null;
qx.event.message.Bus.dispatch(&quot;eX&quot;); // -&gt; &#39;subscribers is null&#39;

// works
var cb1 = function() {};
qx.event.message.Bus.subscribe(&quot;eX&quot;, cb1, this);
qx.event.message.Bus.unsubscribe(&quot;eX&quot;, cb1, this);
qx.event.message.Bus.dispatch(&quot;eX&quot;);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14067</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2009-11-12 10:18:54 +0100</bug_when>
            <thetext>Thanks. I am very busy right now, but I&#39;ll have a look at it as soon as I can. Shouldn&#39;t be hard to fix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14079</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2009-11-12 13:59:48 +0100</bug_when>
            <thetext>With the latest trunk, I don&#39;t see the error you&#39;re seeing.

Try this code in the playground, either with your local trunk copy or in the public devel playground at http://demo.qooxdoo.org/devel/playground/


var flag = false;
qx.event.message.Bus.subscribe(&quot;eX&quot;, function(){
  flag = true;
}, this);
qx.event.message.Bus.unsubscribe(&quot;eX&quot;, function(){}, this);
try {
  qx.event.message.Bus.dispatch(&quot;eX&quot;);
} catch(e) {
  this.assertTrue(false, &quot;Unsubscribing not-subscribed function lead to error dispatching the message.&quot;);
}
this.assertTrue(flag, &quot;Unsubscribing not-subscribed function corrupted message registration.&quot;);
â€‹
The test passes without error. 

Please confirm. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14080</commentid>
            <who name="Daniel Titze">daniel.titze</who>
            <bug_when>2009-11-12 14:41:54 +0100</bug_when>
            <thetext>sorry, seems to be fixed with r20563</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14113</commentid>
              <attachid>655</attachid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2009-11-15 17:53:40 +0100</bug_when>
            <thetext>Created attachment 655
Patch to add a test to avoid reappearance of this bug</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14682</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:16:35 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>655</attachid>
            <date>2009-11-15 17:53:00 +0100</date>
            <delta_ts>2009-11-15 17:53:40 +0100</delta_ts>
            <desc>Patch to add a test to avoid reappearance of this bug</desc>
            <filename>qx.test.event.message.Bus.patch</filename>
            <type>application/octet-stream</type>
            <size>2355</size>
            <attacher>info</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBxb294ZG9vLXRydW5rCkluZGV4OiBm
cmFtZXdvcmsvc291cmNlL2NsYXNzL3F4L3Rlc3QvZXZlbnQvbWVzc2FnZS9CdXMuanMKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQotLS0gZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC90ZXN0L2V2ZW50L21lc3NhZ2UvQnVz
LmpzCShyZXZpc2lvbiAyMDU4MSkKKysrIGZyYW1ld29yay9zb3VyY2UvY2xhc3MvcXgvdGVzdC9l
dmVudC9tZXNzYWdlL0J1cy5qcwkod29ya2luZyBjb3B5KQpAQCAtMTMwLDI2ICsxMzAsMzkgQEAK
IAogICAgIH0sCiAgICAgCi0gICAgLy8gc2VlIGh0dHA6Ly9idWd6aWxsYS5xb294ZG9vLm9yZy9z
aG93X2J1Zy5jZ2k/aWQ9Mjk5NgorICAgIAogICAgIHRlc3RVbnN1YnNjcmliZSA6IGZ1bmN0aW9u
KCkKICAgICB7Ci0gICAgICAgIHZhciBmbGFnID0gZmFsc2U7Ci0gICAgICAgIGZ1bmN0aW9uIGhh
bmRsZXIoKSB7Ci0gICAgICAgICAgIGZsYWcgPSB0cnVlOyAKLSAgICAgICAgfQotICAgICAgICAK
LSAgICAgICAgZnVuY3Rpb24gYW5vdGhlckhhbmRsZXIoKSB7Ci0gICAgICAgIH0KLSAgICAgICAg
Ci0gICAgICAgIHZhciBtZXNzYWdlQnVzID0gcXguZXZlbnQubWVzc2FnZS5CdXMuZ2V0SW5zdGFu
Y2UoKTsKLSAgICAgICAgbWVzc2FnZUJ1cy5zdWJzY3JpYmUoIm1lc3NhZ2UiLCBoYW5kbGVyLCB0
aGlzKTsKLSAgICAgICAgbWVzc2FnZUJ1cy51bnN1YnNjcmliZSgibWVzc2FnZSIsIGFub3RoZXJI
YW5kbGVyLCB0aGlzKTsKLSAgICAgICAgbWVzc2FnZUJ1cy5kaXNwYXRjaCgibWVzc2FnZSIpOwot
ICAgICAgICB0aGlzLmFzc2VydFRydWUoZmxhZywgIkhhbmRsZXIgd2FzIG5vdCBjYWxsZWQuIik7
Ci0gICAgICAgIGZsYWcgPSBmYWxzZTsKLSAgICAgICAgbWVzc2FnZUJ1cy51bnN1YnNjcmliZSgi
bWVzc2FnZSIsIGhhbmRsZXIsIHRoaXMpOwotICAgICAgICBtZXNzYWdlQnVzLmRpc3BhdGNoKCJt
ZXNzYWdlIik7Ci0gICAgICAgIHRoaXMuYXNzZXJ0RmFsc2UoZmxhZywgIkhhbmRsZXIgd2FzIGNh
bGxlZCBhbHRob3VnaCB1bnN1YnNjcmliZWQuIik7CisgICAgICAvLyBzZWUgaHR0cDovL2J1Z3pp
bGxhLnFvb3hkb28ub3JnL3Nob3dfYnVnLmNnaT9pZD0yOTk2CisgICAgICB2YXIgZmxhZyA9IGZh
bHNlOworICAgICAgZnVuY3Rpb24gaGFuZGxlcigpIHsKKyAgICAgICAgIGZsYWcgPSB0cnVlOyAK
KyAgICAgIH0KKyAgICAgIAorICAgICAgZnVuY3Rpb24gYW5vdGhlckhhbmRsZXIoKSB7fQorICAg
ICAgCisgICAgICB2YXIgbWVzc2FnZUJ1cyA9IHF4LmV2ZW50Lm1lc3NhZ2UuQnVzLmdldEluc3Rh
bmNlKCk7CisgICAgICBtZXNzYWdlQnVzLnN1YnNjcmliZSgibWVzc2FnZSIsIGhhbmRsZXIsIHRo
aXMpOworICAgICAgbWVzc2FnZUJ1cy51bnN1YnNjcmliZSgibWVzc2FnZSIsIGFub3RoZXJIYW5k
bGVyLCB0aGlzKTsKKyAgICAgIG1lc3NhZ2VCdXMuZGlzcGF0Y2goIm1lc3NhZ2UiKTsKKyAgICAg
IHRoaXMuYXNzZXJ0VHJ1ZShmbGFnLCAiSGFuZGxlciB3YXMgbm90IGNhbGxlZC4iKTsKKyAgICAg
IGZsYWcgPSBmYWxzZTsKKyAgICAgIG1lc3NhZ2VCdXMudW5zdWJzY3JpYmUoIm1lc3NhZ2UiLCBo
YW5kbGVyLCB0aGlzKTsKKyAgICAgIG1lc3NhZ2VCdXMuZGlzcGF0Y2goIm1lc3NhZ2UiKTsKKyAg
ICAgIHRoaXMuYXNzZXJ0RmFsc2UoZmxhZywgIkhhbmRsZXIgd2FzIGNhbGxlZCBhbHRob3VnaCB1
bnN1YnNjcmliZWQuIik7CisgICAgICAKKyAgICAgIC8vIHNlZSBodHRwOi8vYnVnemlsbGEucW9v
eGRvby5vcmcvc2hvd19idWcuY2dpP2lkPTMwNDMKKyAgICAgIGZsYWcgPSBmYWxzZTsKKyAgICAg
IHF4LmV2ZW50Lm1lc3NhZ2UuQnVzLnN1YnNjcmliZSgiZVgiLCBmdW5jdGlvbigpeworICAgICAg
ICBmbGFnID0gdHJ1ZTsKKyAgICAgIH0sIHRoaXMpOworICAgICAgcXguZXZlbnQubWVzc2FnZS5C
dXMudW5zdWJzY3JpYmUoImVYIiwgZnVuY3Rpb24oKXt9LCB0aGlzKTsKKyAgICAgIHRyeSB7Cisg
ICAgICAgIHF4LmV2ZW50Lm1lc3NhZ2UuQnVzLmRpc3BhdGNoKCJlWCIpOworICAgICAgfSBjYXRj
aChlKSB7CisgICAgICAgIHRoaXMuYXNzZXJ0VHJ1ZShmYWxzZSwgIlVuc3Vic2NyaWJpbmcgbm90
LXN1YnNjcmliZWQgZnVuY3Rpb24gbGVhZCB0byBlcnJvciBkaXNwYXRjaGluZyB0aGUgbWVzc2Fn
ZS4iKTsKKyAgICAgIH0KKyAgICAgIHRoaXMuYXNzZXJ0VHJ1ZShmbGFnLCAiVW5zdWJzY3JpYmlu
ZyBub3Qtc3Vic2NyaWJlZCBmdW5jdGlvbiBjb3JydXB0ZWQgbWVzc2FnZSByZWdpc3RyYXRpb24u
Iik7CiAKICAgICB9CiAgIH0K
</data>

          </attachment>
      

    </bug>