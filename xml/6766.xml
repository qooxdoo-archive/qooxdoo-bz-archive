<bug>
          <bug_id>6766</bug_id>
          
          <creation_ts>2012-09-03 10:49:00 +0200</creation_ts>
          <short_desc>q should support a no-conflict mode</short_desc>
          <delta_ts>2012-11-19 09:26:10 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30568</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2012-09-03 10:49:44 +0200</bug_when>
            <thetext>It might happen that other libraries will use the &quot;q&quot; variable in the global namespace for their own.

To prevent q from breaking at runtime a no-conflict mode should be added to make sure q is working even if the global &quot;q&quot; variable is already set or gets overridden.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30689</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-09-13 14:34:14 +0200</bug_when>
            <thetext>I think a solution during the build time would be fine and could be done by renming q during the build time. As this is intended to work for framework only, this should not be such a problem.

I did a try by using the editor and some reg exps to get it done! Maybe thats not the best approach because we could rename the object right in the build.
I will have a word with Thomas about that and get a proper solution.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30691</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-09-13 16:42:55 +0200</bug_when>
            <thetext>Just using a regexp like \bq\b does the trick in the current scenario.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30830</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-09-28 10:53:10 +0200</bug_when>
            <thetext>On demand of Andreas, we should solve that on the client side.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30971</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-10-16 13:55:41 +0200</bug_when>
            <thetext>Moved the q class to a class named qxWeb which mirrors its own content to q if q is not already taken.

master: f0e011953001d96f530bf2e3fd00c64ed3862a3d</thetext>
          </long_desc>
      
      

    </bug>