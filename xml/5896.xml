<bug>
          <bug_id>5896</bug_id>
          
          <creation_ts>2011-12-06 08:57:00 +0100</creation_ts>
          <short_desc>Comma separated job call doesn&#39;t work with PowerShell</short_desc>
          <delta_ts>2014-03-03 15:22:30 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.6</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.6.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27833</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2011-12-06 08:57:45 +0100</bug_when>
            <thetext>A generator call with a comma separated job list doesn&#39;t work with the Windows PowerShell.

For example:
./generate.py build,api,test

When the example is executed with the PowerShell, only the build job runs, all other jobs are ignored.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27835</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-12-06 09:48:59 +0100</bug_when>
            <thetext>The general issue is that Powershell parses comma-separated elements as 
*individual* command line arguments, whereas e.g. Bash and Cmd break up the 
argument line on *whitespace*.  That means that an invocation like

    generate.py build,api,test

gets parsed into a commandline of 

   [&#39;generate.py&#39;, &#39;build, &#39;api&#39;, &#39;test&#39;] (len 4), 

whereas in other shells it gets parsed into

   [&#39;generate.py&#39;, &#39;build,api,test&#39;]  (len 2),

and this is what the generator expects. An immediate workaround is by usind 
quotes:

   generate.py &quot;build,api,test&quot;

or

   generate.py &#39;build,api,test&#39;

will do what you want in most cases.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27836</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-12-06 09:53:15 +0100</bug_when>
            <thetext>There is another issue, even when using quotes. In certain combinations of 
jobs, e.g.

   generate.py &quot;info,build,source&quot;

the generator throws an exception:

  File &quot;C:\tmp\qooxdoo-1.5.1-sdk\tool\pylib\generator\Generator.py&quot;, line 1290, 
in runCollectEnvironmentInfo
    buildScriptFile =  expandedjobs[0].get(&quot;compile-options/paths/file&quot;, None)
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28390</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-01-27 19:34:12 +0100</bug_when>
            <thetext>Turns out that the issue mentioned in my last comment (&#39;str&#39; object has no 
attribute &#39;get&#39;) is neither Powershell- nor Windows-related, but applies across 
all platforms. Handle this in dedicated bug#6083.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37703</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:30 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>