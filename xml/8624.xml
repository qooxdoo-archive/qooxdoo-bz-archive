<bug>
          <bug_id>8624</bug_id>
          
          <creation_ts>2014-10-13 09:39:00 +0200</creation_ts>
          <short_desc>Replace sizzle with querySelectorAll</short_desc>
          <delta_ts>2014-11-21 16:44:43 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>web</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41368</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-10-13 09:39:30 +0200</bug_when>
            <thetext>With the dropped browser support of IE 7, we could replace Sizzle with the default DOM API querrySelectorAll [1] and matches [2]. With that, we could reduce the code size of the basic qxWeb packacke by some kb which would bring down the standalone qxWeb package to minimal code size.

[1] https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll
[2] https://developer.mozilla.org/en-US/docs/Web/API/Element.matches</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41369</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-10-13 09:47:25 +0200</bug_when>
            <thetext>Implemented a first prototype as a prove of concept in the next branch. The two added methods will still be overridden in the current state but the traversing unit tests worked as expected. But there are still some todos left in the code.

next: b502f482f9340eb3281c29cc156e3e7c52e7d3e7</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41666</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-11-21 13:15:48 +0100</bug_when>
            <thetext>Removed sizzle from the qx.bom.Selector code and added a thin wrapper around the browser APIs. With that, we lost the following, sizzle only selectors:

:contains(TEXT)
:header
:parent

:first
:even
:eq
:lt

:input
:password
:submit
:image
:reset
:button

We used only the :first selection in the blocker implementation but this could be replaced with the native selector :first-child. Don&#39;t seem too much of a loss here.

I also did some size comparison before and after the removal:

core-min
----------
with sizzle: 197k
without: 175k

qxWeb only
--------------
with sizzle: 54k
without: 32k

next: 761f18de2665c7b609b0cf2ea535e62a3e7cce40</thetext>
          </long_desc>
      
      

    </bug>