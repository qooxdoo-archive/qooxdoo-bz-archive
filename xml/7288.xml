<bug>
          <bug_id>7288</bug_id>
          
          <creation_ts>2013-03-08 15:56:00 +0100</creation_ts>
          <short_desc>Optimizer Mis-Quotes String with Embedded Quotes</short_desc>
          <delta_ts>2014-03-03 15:25:32 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>Matthias.Hellriegel</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32427</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-03-08 15:56:59 +0100</bug_when>
            <thetext>The string in qx.bom.htmlarea.HtmlArea from code snippet

         var idForFontElement = ...  ?  &#39;id=&quot;__elementToFocus__&quot;&#39; : &#39;&#39;;

ends up as something like

         var H=&quot;id=&quot;__elementToFocus__&quot;&quot;;

in the optimized code, using double quotes for the entire string when they are 
also used inside of it.

This is the effect of some optimization (prob. variant optimization) and shows 
when &#39;string&#39; optimization is being turned *off* (e.g. in Playground).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32430</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-03-08 18:26:31 +0100</bug_when>
            <thetext>To trigger it in Playground, you also need to activate a certain variant (which 
will apply to the qx.bom.htmlarea.HtmlArea code place).
 E.g. &quot;environment&quot;: {&quot;engine.name&quot;: &quot;gecko&quot;}.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32450</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-03-13 12:30:50 +0100</bug_when>
            <thetext>It actually suffices to set some variant in the config &quot;environment&quot; so to 
trigger reduction of a hook operator to a string. The &quot;string&quot; optimization can 
be left on, the bug will still manifest itself albeit less obvious (the 
original string will be broken up).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32451</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-03-13 12:37:57 +0100</bug_when>
            <thetext>Decided to use singlequotes for the result string, and escape all unescaped 
single quotes within it.

master: 47184f0
branch: 57d39d7</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38782</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:32 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>