<bug>
          <bug_id>5514</bug_id>
          
          <creation_ts>2011-08-12 21:11:00 +0200</creation_ts>
          <short_desc>Seemingly nonsensical implementation of qx.bom.Element.matchesSelector() returns true when any sibling matches selector</short_desc>
          <delta_ts>2014-03-03 15:27:39 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.bom</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.6.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>vincent</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26479</commentid>
            <who name="">vincent</who>
            <bug_when>2011-08-12 21:11:16 +0200</bug_when>
            <thetext>Here&#39;s the current trunk implementation:
--
    /**
     * Tests if the element matches the selector
     *
     * @param element {Element} DOM element to test against
     * @param selector {String} Valid selector (CSS3 + extensions)
     * @return {Boolean} whether the element can be selected by the selector or not
     */
    matchesSelector : function(element,selector) {
      if (selector) {
        return qx.bom.Selector.query(selector,element.parentNode).length&gt;0;
      } else {
        return false;
      }
    }
--

It seems to me that the above code returns true if the element *or any  of its sibling* matches the selector. Which is exactly the problem I have in my app.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26480</commentid>
            <who name="">vincent</who>
            <bug_when>2011-08-12 22:53:50 +0200</bug_when>
            <thetext>I am currently using this as a workaround:
 (-1 != qx.bom.Selector.query(selector,element.parentNode).indexOf(element));</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26484</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-08-15 08:39:38 +0200</bug_when>
            <thetext>Alex, please have a look at that. How should that method be implemented?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29759</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2012-06-13 18:07:07 +0200</bug_when>
            <thetext>The implementation of &quot;matchesSelector&quot; will be deprecated with the 2.0 
release. Please use the &quot;is&quot; method of the &quot;qx.module.Traversing&quot; class.

-&gt; http://demo.qooxdoo.org/devel/website-api/#.is</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39542</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:39 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>