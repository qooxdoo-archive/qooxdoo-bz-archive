<bug>
          <bug_id>3662</bug_id>
          
          <creation_ts>2010-04-29 16:03:00 +0200</creation_ts>
          <short_desc>Move the manual into the repository</short_desc>
          <delta_ts>2010-08-06 10:19:13 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>website</product>
          <component>documentation</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          <dependson>3713</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18107</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-29 16:03:08 +0200</bug_when>
            <thetext>Moving the manual into the repository has some serious advantages over having a separate manual in a wiki:
1. The manual should always fit to the current state of the trunk.
2. You can build the manual for every revision.
3. You have all advantages of your version control system like merging, branching, history, ...

As a first step, we should set up a set of requirements we have for the new system.
After that, we should search for available solutions and compare them. Especially the format is a big factor. If we can use a format which is used by many other products, we could make the next move more easy if necessary.
The last step should be to decide which system might be suitable for us!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18413</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-05-19 12:47:00 +0200</bug_when>
            <thetext>To Martin.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18449</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-21 10:01:02 +0200</bug_when>
            <thetext>--&gt; Thomas</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18576</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-07 15:55:08 +0200</bug_when>
            <thetext>working on it</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18609</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-09 14:32:36 +0200</bug_when>
            <thetext>The data transformation (bug#3713) is done; also, the setup for editing, 
checking, generating and publishing the manual is place. Things left here to do 
are:

- rough copy editing the introduction/about.rst
- adding license information
- announcing the manual preview on the blog</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18747</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-06-17 16:12:28 +0200</bug_when>
            <thetext>- brushed up introduction/about
- added license texts (LGPL, EPL)
- add glossary
- add application (feedreader etc.) stubs
- publish infrastructure is set up (make -f tool/admin/release/Makefile.release 
build-docs, publish-docs) and integrated with demo publishing (make -f ... 
publish-build, publish)
- blog announcement is online (15jun10)</thetext>
          </long_desc>
      
      

    </bug>