<bug>
          <bug_id>1387</bug_id>
          
          <creation_ts>2008-09-08 17:37:00 +0200</creation_ts>
          <short_desc>Check absolute paths in .meta files</short_desc>
          <delta_ts>2014-03-03 15:21:31 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.system</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>5417</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2008-09-08 17:37:51 +0200</bug_when>
            <thetext>Check if the absolute paths in the meta files of combined images are necessary. 
If they are not in use it&#39;s maybe a better idea to remove them to avoid any mis-understandings.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5418</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2008-09-08 17:39:46 +0200</bug_when>
            <thetext>Asbolute paths like

{&quot;/home/aback/dev/qooxdoo/qooxdoo.trunk/framework/source/resource/qx/decoration/Modern/splitpane/knob-vertical.png&quot;: 
[8, 1, &quot;png&quot;, 
&quot;/home/aback/dev/qooxdoo/qooxdoo.trunk/framework/source/resource/qx/decoration/Modern/splitpane-knobs-combined.png&quot;, 
0, 0], 
&quot;/home/aback/dev/qooxdoo/qooxdoo.trunk/framework/source/resource/qx/decoration/Modern/splitpane/knob-horizontal.png&quot;: 
[1, 8, &quot;png&quot;, 
&quot;/home/aback/dev/qooxdoo/qooxdoo.trunk/framework/source/resource/qx/decoration/Modern/splitpane-knobs-combined.png&quot;, 
0, -1]}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6937</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-12-15 19:02:41 +0100</bug_when>
            <thetext>moving to 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7903</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 12:15:32 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8587</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-13 11:33:51 +0100</bug_when>
            <thetext>The point here is:

So far, image clipping and combining worked on pure file paths: You enter a set 
of source files and a set of output files, and it would work as long as these 
file paths are reachable on the local hard disk. The jobs were ignorant of 
qooxdoo libraries. This allows you to create clipped and combined images 
anywhere on your disk. As a consequence I need absolute paths to them so I will 
be able to find them later.

Cutting of the absolute part of paths would require to locate them by library. 
That means, input and output images have to be under some qooxdoo library. This 
is exactly the way we use them, but adding this restriction in the 
implementation would limit the use of the clipping and combining jobs. I&#39;m fine 
with that if everybody agrees that it is acceptable to restrict these generic 
image manipulations to images within libraries.

@Alex, Andreas, Fabian: Could you leave your vote on that?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8609</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-13 15:19:12 +0100</bug_when>
            <thetext>I&#39;m in favor of restricting it to libraries. First we can remove the .meta files and second are the image clipping and combining - as far as I know - the only case where we use absolute paths and are not working under a certain library path.
Correct me if I&#39;m wrong.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11410</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-19 20:35:39 +0200</bug_when>
            <thetext>up prio and target to 0.8.3, since this issue gained significance for a large 
project</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11439</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-23 00:33:39 +0200</bug_when>
            <thetext>Fixed with r19855.
Meta files now only contain image id&#39;s, not entire paths. To support this, I 
chose a compromise. The combine-images config key now takes extra &quot;prefix&quot; 
attributes. These path prefixes are stripped from input and output file paths, 
to obtain the image id&#39;s. So this retains that combining images only relies on 
image paths, but forces the user to identify where the image id starts (which 
always starts with the name space). This was also instrumental for 
cross-library combined images, or when input and output images reside in 
different parts of the file system. See the reference documentation for the 
combine-images key for details about the new key syntax. Maybe at a later time 
we can re-consider if libraries should be integrated more tightly with combined 
image creation (e.g. by specifying a library name space with each image).
The generator has been adapted accordingly, and all combined images in the 
framework and their meta files have been re-generated.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26171</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-07-21 17:09:41 +0200</bug_when>
            <thetext>verified</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37322</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:31 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>