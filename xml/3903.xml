<bug>
          <bug_id>3903</bug_id>
          
          <creation_ts>2010-07-29 17:21:00 +0200</creation_ts>
          <short_desc>&quot;provider&quot; job: wrong i18n dependency added</short_desc>
          <delta_ts>2010-11-24 15:53:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19515</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-07-29 17:21:52 +0200</bug_when>
            <thetext>When creating the qooxdoo framework as code provider e.g. the class &quot;qx.locale.Number&quot; does include the dependency &quot;/locale/i18n-${lang}&quot; which has a wrong format (the id is missing).

This is also true for the class &quot;qx.locale.String&quot;. Both classes have in common that the &quot;#cdlr&quot; hint is set. Maybe this hint is responsible for the wrong dependency.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19648</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-08-04 12:46:00 +0200</bug_when>
            <thetext>I guess these are the cldr data which are listed in the &quot;dependencies.json&quot; file. At the moment the cldr data is not listed in the &quot;dependencies.json&quot; and the dependency to those data is not fulfilled.

This bug is related to bug #3958</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19698</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-06 16:38:43 +0200</bug_when>
            <thetext>I don&#39;t get it.

Concerning CLDR data, there are no individual keys (There is currently no 
functionality to extract individual CLDR keys from the source). Hence, the 
dependency is to the entire CLDR file. The aggreed format for such a file 
dependency is &quot;/&lt;path&gt;/&lt;to&gt;/&lt;file&gt;&quot; under the &quot;data&quot; root. That&#39;s exactly 
what&#39;s get generated into the dependencies.json file.

Please clarify.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19704</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-08-09 09:17:50 +0200</bug_when>
            <thetext>The problem here is that the entry in the &quot;dependencies.json&quot; file does need to define a key in the listed file. So the format should be

&quot;/&lt;path&gt;/&lt;to&gt;/&lt;file&gt;#&lt;key&gt;&quot;

Is is possible to generate one key for all CLDR entries and link this key as dependency in the &quot;dependencies.json&quot; file?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19706</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-09 10:31:13 +0200</bug_when>
            <thetext>The dependency is now recorded as &quot;.../locale-${lang}#cldr&quot; in 
dependencies.json. The file itself has a single &#39;cldr&#39; key which holds all 
locale keys in its &#39;data&#39; subkey,  like this

{ &quot;cldr&quot; : [{
     &quot;target&quot; : &quot;locale-en&quot;,
     &quot;data&quot;    : { &quot;cldr_am&quot; : &quot;AM&quot;, &quot;alternativeQuotationEnd&quot; : &quot;&#39;&quot;, ... }
}]}

With r22972</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19707</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-08-09 11:50:33 +0200</bug_when>
            <thetext>verified</thetext>
          </long_desc>
      
      

    </bug>