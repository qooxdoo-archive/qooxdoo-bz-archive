<bug>
          <bug_id>7760</bug_id>
          
          <creation_ts>2013-09-30 12:55:00 +0200</creation_ts>
          <short_desc>Refactoring qx.io.remote into qx.io.rpc</short_desc>
          <delta_ts>2014-03-03 09:55:58 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io.remote</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          <bug_file_loc>http://socrates.io/#bQrkXZB/read</bug_file_loc>
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="saaj">id</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34003</commentid>
            <who name="saaj">id</who>
            <bug_when>2013-09-30 12:55:31 +0200</bug_when>
            <thetext>This is a design bugreport originated from the discussion in #6064.

Redundancy
----------
As the most of end-user tasks are covered by other classes and packages under ``qx.io``, ``qx.io.remote`` is currently has only purpose of *RPC*. So it will surely gain clarity renaming the package into ``qx.io.rpc``.

Currently all other classes in the package but ``qx.io.remote.Rpc`` are marked as deprecated, internal or with internal-class caution in description. So in fact the package is already prepared for such a change.


Re-implementation
-----------------
The package has its own full-stack transport layer. So to minimize the codebase and improve maintainability it can make sense to base transport classes on ones from ``qx.bom.request`` or ``qx.io.request``. However this is a low priority thing, because once renamed package&#39;s purpose is clear, and current implementation is pretty stable.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36208</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 09:55:58 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year or we don&#39;t think it will be fixed in the near future.</thetext>
          </long_desc>
      
      

    </bug>