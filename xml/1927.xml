<bug>
          <bug_id>1927</bug_id>
          
          <creation_ts>2009-02-10 18:58:00 +0100</creation_ts>
          <short_desc>Privateoptimizer renames text in strings</short_desc>
          <delta_ts>2014-03-03 15:22:07 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>tristan.koch</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7679</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-02-10 18:58:46 +0100</bug_when>
            <thetext>The following code will not behave like expected:

    main : function()
    {
      // Call super class
      this.base(arguments);

      console.log(this.__test());
      console.log(&quot;__test&quot;);
      console.log(&quot;__te&quot; + &quot;st&quot;);
    },
    
    __test: function() {
      return &quot;__test&quot;;
    }

Running this in a build application with the private optimizer on, the result 
will look something like this:
__cQ
__cQ
__test

The optimizer renames also the name of the function in the string!
I also added a unit text for that in 
qx.test.toolchain.Optimizer.testStringRenaming()</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7751</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-02-13 15:06:42 +0100</bug_when>
            <thetext>The problem is actually with the private optimizer which modifies string 
literals.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7843</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-02-17 16:38:30 +0100</bug_when>
            <thetext>Disabled replacing privates in larger strings (with r17893, and the framework 
test adapted). We still need to replace privates in compact strings (where 
there&#39;s nothing else in the string besides the private name), since passing 
private names as strings is used in &#39;destruct&#39; sections and for property 
definitions. Once these &quot;weak&quot; string references can be replaced by normal 
references, string manipulation in the private optimizer can be disabled 
altogether.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24986</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-08 11:25:36 +0200</bug_when>
            <thetext>Rectified summary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24999</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-06-08 16:55:21 +0200</bug_when>
            <thetext>*** Bug 5218 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37553</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:07 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>