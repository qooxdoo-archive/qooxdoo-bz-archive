<bug>
          <bug_id>6602</bug_id>
          
          <creation_ts>2012-07-05 17:48:00 +0200</creation_ts>
          <short_desc>Improve string formatting facility</short_desc>
          <delta_ts>2014-03-03 08:47:46 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.lang</component>
          <version>2.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="saaj">id</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30040</commentid>
            <who name="saaj">id</who>
            <bug_when>2012-07-05 17:48:15 +0200</bug_when>
            <thetext>Current implementation of qx.lang.String.format doesn&#39;t follow analogues in other languages, as such C-like printf and Python 2.6+ str.format. At most it reminds only of Windows command line arguments.

Beside format itself, passing arguments as array isn&#39;t conventional. Treating arguments as varargs is preferable.

Because the framework has an exception in String.prototype policy (String.quote which isn&#39;t used in the framework, isn&#39;t standard) so it could be worth thinking of possibility of adding format to String&#39;s prototype. It could be minimal Python&#39;s str.format subset, 

String.prototype.format = function()
{
  var value = this;
  for(var i = 0; i &lt; arguments.length; i++)
  {
    value = value.replace(&#39;{&#39; + i + &#39;}&#39;, arguments[i]);
  }

  return value;
};

or something more sophisticated (e.g. including number and date formatting option which are implemented in qx.util.format). 

Originated from #6581.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36020</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:46 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>