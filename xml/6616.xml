<bug>
          <bug_id>6616</bug_id>
          
          <creation_ts>2012-07-10 13:27:00 +0200</creation_ts>
          <short_desc>Improvement: allow source target to be hosted on a different web server than the loading html file</short_desc>
          <delta_ts>2014-03-03 08:46:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>2.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          <blocked>6709</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter>vincent</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>michael</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30078</commentid>
            <who name="">vincent</who>
            <bug_when>2012-07-10 13:27:09 +0200</bug_when>
            <thetext>Currently, in source mode, the generator dynamically creates a &quot;__out__&quot; library with a relative uri which is used to load a secondary javascript file. This doesn&#39;t work when the HTML loading file is not on the same server as the web application because the uri is relative and can not be configured (whereas other libraries base uri can be configured in config.json).

A workaround is to use a:
				&quot;code&quot;:
				{
					&quot;decode-uris-plug&quot;: &quot;decode-uris-plug.js&quot;
				}				

in the source-script job, and have the decode-uris-plug.js search and replace the uri by absolute one.

For example:

euri = euri.replace(/^script/, &quot;http://www.mydomain.org/js/myapp/source/script&quot;);

A clean solution would likely be to have a configuration key dedicated to setting the uri for the __out__ library in config.json.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30436</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 13:43:26 +0200</bug_when>
            <thetext>I have a fix for this here:

https://github.com/aspectit/qooxdoo/commit/30348f56cdd43897106ea2d72b70fe3d46eb15a6

Part of this pull request:

https://github.com/qooxdoo/qooxdoo/pull/30

It simply re-uses the compile-options/uris/script key that is also used read by the build job.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30439</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2012-08-21 14:02:01 +0200</bug_when>
            <thetext>Actually, the above commit would override the scriptUri of all libraries. This
is the one that is working for me:

https://github.com/aspectit/qooxdoo/commit/7dd93f2a49a05db68dfb8eb3a3a787cd1eed3c79</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32265</commentid>
            <who name="Michael Elsdoerfer">michael</who>
            <bug_when>2013-02-16 22:50:47 +0100</bug_when>
            <thetext>I&#39;ve created a pull request that deals with just this issue:

https://github.com/qooxdoo/qooxdoo/pull/51</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35499</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:21 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>