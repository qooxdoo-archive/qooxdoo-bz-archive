<bug>
          <bug_id>3861</bug_id>
          
          <creation_ts>2010-07-14 13:15:00 +0200</creation_ts>
          <short_desc>No global error handling for events</short_desc>
          <delta_ts>2014-03-03 08:45:44 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          <votes>1</votes>
          <everconfirmed>1</everconfirmed>
          <reporter name="Matthias Braun">matthias.braun</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>daniel.wagner</cc>
    
    <cc>info</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19304</commentid>
            <who name="Matthias Braun">matthias.braun</who>
            <bug_when>2010-07-14 13:15:34 +0200</bug_when>
            <thetext>If the handler for an event contains an error, the global error handler will not be triggered due to missing try/catch or qx.event.GlobalError.observeMethod in the qooxdoo event dispatcher classes (qx.event.dispatch.Direct|AbstractBubbling|...).

Most cases are covered by the mouse and keyboard handlers that all contain observeMethod wrapper, but there seems to be no exception handling for events fired for Requests (completed, failed, aborted, timeout, ...). Maybe there are other cases where events are not covered by the global error handling.

Steps to reproduce:
Just send a (XMLHTTP) request via the qooxdoo transport layer and throw an error / add broken code to your &quot;completed&quot; handler</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20581</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:08 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23490</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-03-23 15:36:15 +0100</bug_when>
            <thetext>Removed wrapping of __forwardEvent to catch errors in _oncompleted handler.

Leaving this bug open because it remains unclear whether other handlers that (originally) used __forwardEvent can throw errors (that would no longer be caught by the global error handling).

Changed with r25983 on trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35274</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:44 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>