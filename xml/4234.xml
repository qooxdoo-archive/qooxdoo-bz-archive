<bug>
          <bug_id>4234</bug_id>
          
          <creation_ts>2010-10-25 14:14:00 +0200</creation_ts>
          <short_desc>Memory leak in the class qx.data.controller.MSelection</short_desc>
          <delta_ts>2010-11-11 08:19:13 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20857</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2010-10-25 14:14:57 +0200</bug_when>
            <thetext>When fixing memory leaks in our application, we have found a memory leak in the qooxdoo-class qx.data.controller.MSelection:

The method MSelection._changeTargetSelection calls the method &quot;selection.splice()&quot; on an object of class qx.data.Array.
This method call returns a newly created object of class qx.data.Array.
The method _changeTargetSelection ignores the returned object, but the returned object has to be disposed.

If the object that is returned by &quot;splice()&quot; is not disposed, the class qx.dev.ObjectSummary shows that the object-registry of qooxdoo will hold more and more arrays. This is a memory leak.

There are several more calls of the method splice() in the class MSelection which probably also cause memory leaks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20858</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-25 14:23:50 +0200</bug_when>
            <thetext>Thanks for the report and analysis. To Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21214</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-10 13:31:51 +0100</bug_when>
            <thetext>Thats a good one, thanks for investigating. Sure you have to get rid of all data array because they are based on qx.core.Object which means they are stored in the global object registry. 
Added the dispose to all uses of splice in the mixin. Also added a hint to the splice methods documentation.

trunk: r23737
1.2.x: r23739</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21225</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2010-11-11 08:19:13 +0100</bug_when>
            <thetext>The fix has been successfully tested.</thetext>
          </long_desc>
      
      

    </bug>