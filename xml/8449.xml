<bug>
          <bug_id>8449</bug_id>
          
          <creation_ts>2014-06-26 14:11:00 +0200</creation_ts>
          <short_desc>Tap event would not be fired if browser needs longer then 500ms between gesture begin and end</short_desc>
          <delta_ts>2014-09-26 09:39:25 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>iOS</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>andreas.parusel</cc>
    
    <cc>daniel.wagner</cc>
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40585</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-06-26 14:11:27 +0200</bug_when>
            <thetext>Mind you have an application with a big count of DOM elements and CSS rules.
IOS slows down on applying new CSS rules, which happens on tapping a button with pressed and / or hover state, however. Even if the user action (tap) was faster.

As I could see on GestureCore handler, the long tap timer is set to 500ms. IOS seems to call the timer before calling the event handler #gestureFinish. This behavior will prevent the tap event.

Recommended to take that in count.

A solution could be to encapsulate the time out into a animation frame request. This will ensure that the timer starts after any heawy DOM operation of the browser.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40586</commentid>
              <attachid>1327</attachid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-06-26 14:13:35 +0200</bug_when>
            <thetext>Created attachment 1327
Encapsulate long tap time into animation frame request</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40591</commentid>
            <who name="Andreas Parusel">andreas.parusel</who>
            <bug_when>2014-06-27 11:26:46 +0200</bug_when>
            <thetext>this bug should be no big issue anymore if [Bug #8451] should be implemented</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40661</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-07-02 16:59:21 +0200</bug_when>
            <thetext>In my opinion this issue can occur every time expensive DOM operations are running on touchstart.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41135</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-09-05 14:24:59 +0200</bug_when>
            <thetext>As talked with Martin, it could be a good solution to count ticks (animation frames?) to determine a time period instead of window.setTimeout. 

If the browser needs more time to fire the generic tap event, the tick solution would take this time lag in count.

It is OK for me if a long tap needs longer than 500ms, because usually the user waits for a visual feed back from application (drag session, context menu pops up, ...)

The user does an tap action in a quick touch movement. We have to clearly represent the intention of the user by the event qooxdoo fires.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41147</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-09-08 13:05:52 +0200</bug_when>
            <thetext>It is also true that tap event would not be fired if the debugger interrupts. So a long tap will be fired which can cause in a unwanted drag session.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41243</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-09-24 11:28:44 +0200</bug_when>
            <thetext>&gt; As I could see on GestureCore handler, the long tap timer is set to 500ms. IOS
&gt; seems to call the timer before calling the event handler #gestureFinish. This
&gt; behavior will prevent the tap event.

Why not change the 500ms value to a suitable one? This configuration can be done within the application code, since it is a static variable.

If this works out for your application it is not necessary to change the framework code at all.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>1327</attachid>
            <date>2014-06-26 14:13:00 +0200</date>
            <delta_ts>2014-06-26 14:13:35 +0200</delta_ts>
            <desc>Encapsulate long tap time into animation frame request</desc>
            <filename>Bug 8449.diff</filename>
            <type>application/octet-stream</type>
            <size>1133</size>
            <attacher>mustafa.sak</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL3Fvb3hkb28vZnJhbWV3b3JrL3NvdXJjZS9jbGFzcy9xeC9ldmVudC9oYW5k
bGVyL0dlc3R1cmVDb3JlLmpzIGIvcW9veGRvby9mcmFtZXdvcmsvc291cmNlL2NsYXNzL3F4L2V2
ZW50L2hhbmRsZXIvR2VzdHVyZUNvcmUuanMKaW5kZXggMzdjMTU1ZS4uZDk5NDIwNyAxMDA2NDQK
QEAgLTE4NCwxMCArMTg0LDE3IEBAIHF4LkJvb3RzdHJhcC5kZWZpbmUoInF4LmV2ZW50LmhhbmRs
ZXIuR2VzdHVyZUNvcmUiLCB7CiAgICAgICAgICJ0YXJnZXQiIDogdGFyZ2V0LAogICAgICAgICAi
aXNUYXAiIDogdHJ1ZSwKICAgICAgICAgImlzUHJpbWFyeSIgOiBkb21FdmVudC5pc1ByaW1hcnks
Ci0gICAgICAgICJsb25nVGFwVGltZXIiIDogd2luZG93LnNldFRpbWVvdXQoCi0gICAgICAgICAg
dGhpcy5fX2ZpcmVMb25nVGFwLmJpbmQodGhpcywgZG9tRXZlbnQsIHRhcmdldCksCi0gICAgICAg
ICAgcXguZXZlbnQuaGFuZGxlci5HZXN0dXJlQ29yZS5MT05HVEFQX1RJTUUKLSAgICAgICAgKQor
ICAgICAgICAibG9uZ1RhcFRpbWVyIiA6IHF4LmJvbS5BbmltYXRpb25GcmFtZS5yZXF1ZXN0KGZ1
bmN0aW9uKCkgeworICAgICAgICAgIC8vIHRpbWUgb3V0IHdpbGwgYmUgY2FsbGVkIGJlZm9yZSAj
Z2VzdHVyZUZpbmlzaCB3YXMgY2FsbGVkLAorICAgICAgICAgIC8vIGV2ZW4gaWYgdGhlIHVzZXIg
YWN0aW9uIHdhcyBmYXN0ZXIgdGhlbiA1MDBtcy4KKyAgICAgICAgICAvLyBUaGlzIGRlcGVuZHMg
b24gRE9NIGl0ZXJhdGlvbiAoZS5nLiBhZGQgYSBuZXcgY3NzIHJ1bGUpLgorICAgICAgICAgIC8v
IFRoZXJlZm9yIHdlIG5lZWQgdG8gZW5jYXBzdWxhdGUgdGhlIHRpbWVyIGludG8gYW4gYW5pbWF0
aW9uCisgICAgICAgICAgLy8gZnJhbWUgcmVxdWVzdC4KKyAgICAgICAgICB3aW5kb3cuc2V0VGlt
ZW91dCgKKyAgICAgICAgICAgIHRoaXMuX19maXJlTG9uZ1RhcC5iaW5kKHRoaXMsIGRvbUV2ZW50
LCB0YXJnZXQpLAorICAgICAgICAgICAgcXguZXZlbnQuaGFuZGxlci5HZXN0dXJlQ29yZS5MT05H
VEFQX1RJTUUKKyAgICAgICAgICApOworICAgICAgICB9LmJpbmQodGhpcywgZG9tRXZlbnQsIHRh
cmdldCkpCiAgICAgICB9OwoKICAgICAgIGlmKGRvbUV2ZW50LmlzUHJpbWFyeSkgewo=
</data>

          </attachment>
      

    </bug>