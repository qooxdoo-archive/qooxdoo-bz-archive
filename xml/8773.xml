<bug>
          <bug_id>8773</bug_id>
          
          <creation_ts>2014-12-04 17:04:00 +0100</creation_ts>
          <short_desc>Callback registered with .once fire twice on special conditions</short_desc>
          <delta_ts>2015-02-06 12:43:04 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>romeo.kenfacktsakem</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41838</commentid>
            <who name="">romeo.kenfacktsakem</who>
            <bug_when>2014-12-04 17:04:25 +0100</bug_when>
            <thetext>When you register a callback using once and, fire the same event type
inside of that callback, some other listener register with once will fire twice.

Just run the code below to reproduce:

var element = q(&quot;body&quot;);

  element.once(&quot;myEvent&quot;, function() {
    element.emit(&quot;myEvent&quot;);
  });

  element.once(&quot;myEvent&quot;, function() {
    console.log(&quot;Should fire once&quot;);
  });

  element.emit(&quot;myEvent&quot;);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42398</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-06 12:43:04 +0100</bug_when>
            <thetext>Just talked to Romeo and there is a easy workaround for the given problem:

element.once(&quot;myEvent&quot;, function() {
  window.setTimeout(function() {
    element.emit(&quot;myEvent&quot;);
  }, 0);
});

Just fire the event async and everything works as expected.
As this is such an edge case, I will close the bug as WONTFIX.</thetext>
          </long_desc>
      
      

    </bug>