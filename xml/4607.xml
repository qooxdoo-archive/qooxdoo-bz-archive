<bug>
          <bug_id>4607</bug_id>
          
          <creation_ts>2011-02-02 10:22:00 +0100</creation_ts>
          <short_desc>Meta Bug: Implement new transport layer</short_desc>
          <delta_ts>2011-09-20 07:40:55 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io.remote</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.5</target_milestone>
          <dependson>2171</dependson>
    
    <dependson>2308</dependson>
    
    <dependson>3484</dependson>
    
    <dependson>4422</dependson>
    
    <dependson>4476</dependson>
    
    <dependson>5104</dependson>
          <blocked>4709</blocked>
    
    <blocked>5023</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Tristan Koch">tristan.koch</assigned_to>
          <cc>mail</cc>
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22526</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-02-02 10:22:53 +0100</bug_when>
            <thetext>Bug 3484 â€“ Complete Iframe transport
Bug 2308 - Improve support for HTTP requests
Bug 2171 - Enhance XMLHttpRequest (XHR) implementation
Bug 4422 - Processing time for request handlers is counted for timeouts
Bug 2667 - Use clearAttributes for JSONP in qx.io2
Bug 4476 - IE status code 1223
Bug 3975 - Introduce new RPC layer</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24219</commentid>
            <who name="Sebastian Fastner">mail</who>
            <bug_when>2011-04-27 09:54:11 +0200</bug_when>
            <thetext>You use qx.xml.Document.fromString for parsing the responseText as XML in qx.io.request.Xhr. Is there a reason you don&#39;t use responseXML but reparse the string? Maybe this could be an performance issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24249</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-04-29 16:38:15 +0200</bug_when>
            <thetext>Thanks for the feedback. Yes, it may seem a little strange, but I think there are good reasons.

First, the parsing is done via a host object (DOMParser) [*]. In other words, it may be the same parser that produces the responseXML attribute (if the response is XML, see below). I don&#39;t expect any major performance issues therefore.

responseXML is a bit of a misnomer. The XML in its name is of historical reasons. Actually, responseXML also parses HTML (tag soup) documents and presents them as a &quot;document&quot; object,  just like XML documents.

That&#39;s okay in qx.bom.request.Xhr since this class is nothing more (or less) than a wrapper around the native XMLHttpRequest. But in qx.io.request.Xhr I want to avoid this kind of confusion. Therefore, I don&#39;t rely on responseXML and manually trigger the parsing as XML instead. This has the added benefit that XML parsing can be forced, even if the content type of the response does not indicate so.

Hope you&#39;re following my reasoning.

[*] https://developer.mozilla.org/en/DOMParser</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24326</commentid>
            <who name="Sebastian Fastner">mail</who>
            <bug_when>2011-05-05 09:31:35 +0200</bug_when>
            <thetext>(In reply to comment #2)

Thanks Tristan for the information. I will check the performance in my applications and change my usage of the new Xhr class in unify.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24327</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-05-05 09:35:28 +0200</bug_when>
            <thetext>If you encounter any performance issues, please let us know. 

If you know you&#39;re getting back XML from the server, as an alternative, you can query the transport&#39;s responseXML property directly with something like this:

req.getTransport().responseXML</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25334</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-06-29 11:56:18 +0200</bug_when>
            <thetext>With r27863 on trunk.</thetext>
          </long_desc>
      
      

    </bug>