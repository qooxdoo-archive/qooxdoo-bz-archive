<bug>
          <bug_id>1705</bug_id>
          
          <creation_ts>2008-12-09 10:44:00 +0100</creation_ts>
          <short_desc>Expensive keyboard handling</short_desc>
          <delta_ts>2014-03-03 15:22:42 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Petr Kobalíček">kobalicek.petr</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>helder.magalhaes</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>6798</commentid>
            <who name="Petr Kobalíček">kobalicek.petr</who>
            <bug_when>2008-12-09 10:44:26 +0100</bug_when>
            <thetext>In some browsers/configurations is expensive keyboard handling. Qooxdoo app eats 100% CPU in cases that nothing is changed (from example pressing up arrow in table)

This bug report is inspired from qooxdoo mailing list:

&gt; I try to more describe my point of event handling. For example try any
&gt; qooxdoo component (container like, list, table, tree) and press up
&gt; arrow. Cpu meter will jump to 100% and stay in 100% usage until you
&gt; unpress the key.
We observed this behaviour and found out that it&#39;s only affecting some
setups. My setup (Firefox 3 running on Linux) doesn&#39;t show the &quot;100%&quot;
issue. Another windows machine also does not show up these values. We&#39;ve
managed to observe this issue on a Mac/Firefox3 (don&#39;t blame the Mac ;-)
), so it&#39;s seems to be not a &quot;normal&quot; behaviour.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9270</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-04-15 08:14:05 +0200</bug_when>
            <thetext>@Johnny, is this a valid issue? May be related to pressing the up arrow key. 

You could contact Petr for figuring out a scenario. In principle there&#39;s nothing wrong for a CPU to go to 100% for calculations, as long as that does not happen for a time span significantly longer than expected.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9288</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-04-15 11:02:34 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9293</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2009-04-15 17:08:09 +0200</bug_when>
            <thetext>(In reply to comment #0)
&gt; In some browsers/configurations is expensive keyboard handling. Qooxdoo app
&gt; eats 100% CPU in cases that nothing is changed (from example pressing up arrow
&gt; in table)
[...]
&gt; We observed this behaviour and found out that it&#39;s only affecting some
&gt; setups. My setup (Firefox 3 running on Linux) doesn&#39;t show the &quot;100%&quot;
&gt; issue. Another windows machine also does not show up these values. We&#39;ve
&gt; managed to observe this issue on a Mac/Firefox3 (don&#39;t blame the Mac ;-)
&gt; ), so it&#39;s seems to be not a &quot;normal&quot; behaviour.

Hummm... Although I haven&#39;t made any test to prove my theory, I suspect this may have to due to the keyboard repeat rate of the system configuration: If the system outputs keyboard strokes at a very fast rate, qooxdoo will need to process them all (even if not for doing anything interesting). At least, it would explain the incoherent behavior across machines and/or operating systems...

In Windows, for example, this can be access through &quot;Control Panel&quot;, &quot;Keyboard&quot;, &quot;Speed&quot; tab, &quot;Repeat rate:&quot; slider. Note that this is can also be configured in BIOS and I&#39;m not sure if the system configuration overrides the BIOS setting (although I&#39;m fairly convinced that it does).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9337</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-04-17 10:18:44 +0200</bug_when>
            <thetext>I was not able to change the repeat state in the BIOS of my Dell computer, but 
I set this value to maximum in Window&#39;s Control Panel. However, even with these 
settings I could not reproduce this issue with all widgets mentioned in this 
bug report. I also tried this on my Mac.

Anyway, I can remember that we had these kind of issue in Firefox 3 during an 
alpha or beta release of 0.8, but it did not occur in the final version.

I will ask some of the guys using Linux if they can reproduce this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9353</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-04-17 14:54:40 +0200</bug_when>
            <thetext>I can reproduce this issue in FF 3.0.8/Linux. but not in FF 2 or 3.1b3. I&#39;ll take a look.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9434</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-04-21 17:04:36 +0200</bug_when>
            <thetext>It seems this issue is caused by Firebug: If it&#39;s disabled, CPU load stays below ~10%. This behavior is consistent across Firefox versions (2.0.0, 3.0.8, 3.1b3) and also noticeable under Windows, though the CPU load increase was much lower on the Windows PC.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9438</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2009-04-21 18:11:19 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; It seems this issue is caused by Firebug: If it&#39;s disabled, CPU load stays
&gt; below ~10%.

Humm, this suggests towards a performance hit due to an apparent minor issue in qooxdoo key handling. Actually, I guess I had seen this already but had somehow ignored up till now.

When testing with Firebug disabled, pressing keys in qooxdoo widgets (probably only ones with key event handling and after giving focus) outputs warnings [1] in Firefox Error Console. As two warnings is output per keystroke (keydown/keyup), keeping the key pressed can cause a performance nightmare. (I&#39;ve made a quick test using a nightly build [2] on the legacy demo browser [3].)

A related issue [4] in Firebug tracker suggests this might be avoided by simply disabling strict JavaScript option. Nevertheless, I&#39;ve checked &quot;javascript.options.strict&quot; is set to false and I can still see the warnings so I believe this is not a very related.

A few experiments are required to validate this theory, of course! :-)  If this is confirmed, then these warnings should probably receive some attention, as not only Firefox+Firebug is affected: stock Firefox versions will be suffering in the background also (and most users don&#39;t care about the Error Console but will suffer from the performance hit).

I&#39;ve reopened the issue and slightly increased priority to call for attention, as this will likely be affecting most (all?) qooxdoo users. :-)

[1] Warning: The &#39;charCode&#39; property of a keydown event should not be used. The value is meaningless.
[2] Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2a1pre) Gecko/20090420 Minefield/3.6a1pre
[3] http://demo.qooxdoo.org/0.7.4/demobrowser/
[4] http://code.google.com/p/fbug/issues/detail?id=867#c5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9444</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-04-22 10:34:37 +0200</bug_when>
            <thetext>I guess the warning about the &quot;keyCode&quot; property comes from qx/bom/Event.js in 
preventDefault (line 141). Perhaps it is costly to try to set this property to 
0 inside a try-block. This would explain why the CPU load gets higher when 
&quot;Show stactrace with errors&quot; is enabled.
I will check if this line is still needed or if there is a better way to 
prevent keypress events.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9445</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-04-22 10:36:15 +0200</bug_when>
            <thetext>Back to me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9453</commentid>
            <who name="Jonathan Weiß">qooxdoo-bugs</who>
            <bug_when>2009-04-22 11:01:39 +0200</bug_when>
            <thetext>Thank you Helder for this important information! I was able to locate the line of code causing this warning and corrected it in r18821.

Daniel, could you check again if the CPU load is better now?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9454</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2009-04-22 11:20:55 +0200</bug_when>
            <thetext>(In reply to comment #10)
&gt; Thank you Helder for this important information! I was able to locate the line
&gt; of code causing this warning and corrected it in r18821.

Great! :-)  Could this fix be back-ported to the legacy branch too? I&#39;m convinced that this may be causing an unneeded performance degradation for widgets with medium-to-high keyboard handling such as:
 * Forms (text areas, text fields);
 * Table field editing;
 * Navigation (tab, space, up/down arrows, page up/page);
 * etc.

It would be great if this (small but relevant) improvement would be available in 0.7.5. ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9493</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-22 16:42:11 +0200</bug_when>
            <thetext>I have backported it to the legacy_0_7_x branch</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9561</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-23 19:36:05 +0200</bug_when>
            <thetext>fixed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37778</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:42 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>