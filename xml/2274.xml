<bug>
          <bug_id>2274</bug_id>
          
          <creation_ts>2009-04-22 10:36:00 +0200</creation_ts>
          <short_desc>Improve browser detection</short_desc>
          <delta_ts>2014-03-03 15:18:50 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          <blocked>1737</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9446</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-04-22 10:36:16 +0200</bug_when>
            <thetext>At the moment is isn&#39;t possible to know which browser is running. We only know the JavaScript engine, but this is in some use cases not enough. e.g. Safari and Chrome, both use the webkit engine, so it isn&#39;t possible to infer form the webkit engine to the running browser. A new implementation like a &quot;qx.bom.client.Browser&quot; class, which contains the browser name and version could be helpful. 

To implement a &quot;qx.bom.client.Browser&quot; is only a suggestion. Other ideas are welcome.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9447</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-04-22 10:39:06 +0200</bug_when>
            <thetext>An uncompleted browser list that could be important for the implementation:
Google Chrome
Safari
Internet Explorer
Maxthon (major IE alternative in China)
Firefox
Flock (Social Firefox alternative)
Opera
Opera mini/mobile</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9449</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-04-22 10:41:45 +0200</bug_when>
            <thetext>*** Bug 1783 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9452</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-04-22 10:53:03 +0200</bug_when>
            <thetext>*** Bug 2153 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9467</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-22 13:09:14 +0200</bug_when>
            <thetext>Opera mini/mobile are in fact two browsers.

Netfront is a huge browser for mobiles in Asia.

I would also add:
* Konqueror (what&#39;s the state about konq at all?)
* Epiphany (uses webkit)
* Camino (Mac Firefox alternative, uses gecko)

Important would be IMHO to have the browser detection in the specific variants of the clients to not include Camino detection in an MSHTML build for example.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12505</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-22 10:54:20 +0200</bug_when>
            <thetext>to Daniel. Please come up with a concept/proposal first.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12569</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-23 10:37:57 +0200</bug_when>
            <thetext>I have a set of improved Feature/Engine/Client/Browser detection classes here which I could contribute.

But they break the compatibility with the current implementation (at least if one uses the same class names)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12573</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-09-23 11:42:31 +0200</bug_when>
            <thetext>Sounds interesting, could you please attach the diffs to this bug report so we can review them?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12584</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-23 12:57:02 +0200</bug_when>
            <thetext>I will do this as soon as I have them a little bit more complete for our needs. I will put me a reminder in my calendar for next week. Hope this is OK for you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12599</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-09-24 10:57:37 +0200</bug_when>
            <thetext>Sure, that&#39;s fine. Looking forward to seeing the code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12914</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-10-07 13:14:22 +0200</bug_when>
            <thetext>Sebastian, updates on this one?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12948</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-07 17:13:14 +0200</bug_when>
            <thetext>I will attach what I have at the moment... </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12956</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-07 17:47:17 +0200</bug_when>
            <thetext>I need a few further tweaks. I will do the other stuff tomorrow. Sorry for the delay.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13039</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-08 23:12:32 +0200</bug_when>
            <thetext>I still need some time to figure out some things. Would it be ok to commit the stuff to qx.bom.client2 so you can see my progress and give comments?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13186</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-14 16:34:12 +0200</bug_when>
            <thetext>Alex, Christian, any news here?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13645</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-10-28 17:08:38 +0100</bug_when>
            <thetext>See also #1995</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13827</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-03 15:30:59 +0100</bug_when>
            <thetext>Sebastian, would be great to get your current implementation into &quot;the pipeline&quot; for review/discussion.

Working towards 1.0, of course, the # of &quot;*2&quot; namespaces should decrease not increase , so I suggest attaching a patch here or creating a qooxdoo-contrib. The latter should be pretty straightforward, and it might be the best incubation for some larger (but self-contained) additions/alternatives (also depending on the size/impact of your code). When using identical class names, a robocopying script could be handy, what&#39;ya think? Please note that Daniel isn&#39;t here this week.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13845</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-03 20:00:00 +0100</bug_when>
            <thetext>If there is currently no interest in bringing these things in, I keep them where they are in our project as it makes it easier for now to updating it and supporting new platforms.

The only issue I have with this approach is the size penalty added through a double implementation of the client detection.

When I look into my code the only really problematic class is Engine.js which is basically crap in qooxdoo (yeah yeah - it was part of my original work) ;)

Other classes are basically additions which should be easily doable or splits (into separate files) which might be solvable with migration. As I said the main issue in Engine.js.

What&#39;s about adding a &quot;client2&quot; namespace for the moment with the new layout where I put all these files together with the original files. That might help to get an image of the changes. IMHO better than dealing with patch files in this case.

What do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14018</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-10 10:43:25 +0100</bug_when>
            <thetext>Sure there&#39;s much interest in your contribution, that&#39;s what I said. Christian is about to look into an improved client detection himself, so it would be best to get your code into the pipeline to not end up with some redundant or even conflicting solutions.

It would be best you attached the code as a patch (or even a client2 zip) as suggested. This should be a minimum of effort on your side, and would allow Christian to take that into account easily. That way there&#39;ll be no need for a temporary &quot;client2&quot; namespace, and we hopefully have an improved detection in trunk soon.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14034</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-10 19:40:52 +0100</bug_when>
            <thetext>What I can offer easily is a ZIP of our currently onmodified files with the wrong namespace: unify.bom.client.*

This would me allow to easily add new features from our trunk as soon as they are ready. Our code already depend on these classes and they have some tweaks from week to week. 

As I am already away from my company workplace I would attach the files tomorrow. Let&#39;s see how far we get with the implementation.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14038</commentid>
              <attachid>652</attachid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-11 10:36:43 +0100</bug_when>
            <thetext>Created attachment 652
Re-implementation of client-detection

Goals:
* Browser Detection
* Mobile Platform Detection
* Device Category Detection
* Modularity (Split Version/Engine Detection)
* Split Feature &amp; Extension Detection</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14053</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-11 16:19:18 +0100</bug_when>
            <thetext>BTW: The patch I submitted in comment #20 is licensed under LGPL/EPL and this way might be used in qooxdoo.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14249</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-11-20 14:01:12 +0100</bug_when>
            <thetext>To me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14250</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-11-20 14:01:41 +0100</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14283</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-11-23 10:47:55 +0100</bug_when>
            <thetext>Sebastian, thanks for sharing your code. I talked with Fabian and we will use your Browser and Version code, this would solve our browser detection issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14308</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-11-23 14:40:51 +0100</bug_when>
            <thetext>Sebastian, I committed your Browser and Version class on trunk with rev. 20733. Could you please have a look on it, especially on the header? Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14315</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2009-11-23 15:05:11 +0100</bug_when>
            <thetext>I opened a separate bug 3097 for the improvements on qx.bom.client.* and set the bug to fixed. Sebastian, please reopen the bug if something is wrong with my commit rev. 20733.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14351</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-23 20:06:42 +0100</bug_when>
            <thetext>@Christian: Great you have integrated both of them. Still I would love to have a migration plan for the other things as well. The headers looks OK!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14352</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-23 20:09:50 +0100</bug_when>
            <thetext>Just using Version.js without Engine.js produces some kind of overhead as both classes have some kind of engine detection. Regarding your idea of a as-clean-as-possible 1.0 release this addition makes not a lot of sense.

May I suggest to have a slightley modified Engine.js (from my contrib) to be compatible with the previous version and add migration data to have the version stuff moved to qx.bom.client.Version?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14353</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-11-23 20:20:29 +0100</bug_when>
            <thetext>What&#39;s about this:

* Renaming qx.bom.client.Engine to qx.bom.client.Client (which reflects the variants name)
* Add qx.bom.client.Engine from my contribution
* Add a variant &quot;qx.engine&quot; which uses the value of the new Engine class (trident, gecko, presto, webkit)
* Use &quot;qx.engine&quot; in qooxdoo whereever previously &quot;qx.client&quot; has been used. 
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14486</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:14:54 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36232</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:18:50 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>652</attachid>
            <date>2009-11-11 10:36:00 +0100</date>
            <delta_ts>2009-11-11 10:36:43 +0100</delta_ts>
            <desc>Re-implementation of client-detection</desc>
            <filename>client.zip</filename>
            <type>application/zip</type>
            <size>11300</size>
            <attacher>info</attacher>
            
              <data encoding="base64">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
CAAIALgCAABWKQAAAAA=
</data>

          </attachment>
      

    </bug>