<bug>
          <bug_id>6680</bug_id>
          
          <creation_ts>2012-07-27 10:36:00 +0200</creation_ts>
          <short_desc>getResponse() returns null for error status</short_desc>
          <delta_ts>2013-05-23 10:08:09 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>2.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rafael Chaves">rafael</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>christian.hagendorn</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>30275</commentid>
            <who name="Rafael Chaves">rafael</who>
            <bug_when>2012-07-27 10:36:32 +0200</bug_when>
            <thetext>It seems Xhr will not read the response entity if the request resulted in a non-successful HTTP status code.

I have a HTTP endpoint that will return a JSON object in case of success (200/201) or error (say, a 400).

var req = new qx.io.request.Xhr(saveUri, method);
req.setRequestHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);
req.setRequestData(qx.util.Serializer.toJson(toSave, (function() {})));
req.addListener(&quot;loadEnd&quot;, function(e) {
    var response = req.getResponse();
    console.log(response);
});


In the case of success, the code above logs the object created returned by the server. In case of failure, it shows null, even if the server included a JSON object describing the error. 

Note that if I change the server to return 200 even in the case of error, the error object is logged.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32061</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-01-31 09:57:34 +0100</bug_when>
            <thetext>Fixed, the response will now also be parsed and set in the case of a non successful request.

master: 16311c4118077c7beb47da112c6a44d16462268b</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32082</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-02-01 13:30:40 +0100</bug_when>
            <thetext>Wrapped the response parsing in a try catch for the fail case to make sure we don&#39;t get exceptions if the response is expected to be json format but the error is not.

master: 13af5c20479570d033d9f20872f3b6168462c624</thetext>
          </long_desc>
      
      

    </bug>