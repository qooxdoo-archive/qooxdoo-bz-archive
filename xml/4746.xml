<bug>
          <bug_id>4746</bug_id>
          
          <creation_ts>2011-03-07 22:50:00 +0100</creation_ts>
          <short_desc>Allow ISO date formats to be processed during marshalling/unmarshalling of JSON</short_desc>
          <delta_ts>2014-03-03 08:47:52 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>sub.contact</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23119</commentid>
            <who name="">sub.contact</who>
            <bug_when>2011-03-07 22:50:32 +0100</bug_when>
            <thetext>The current framework supports serializing QX objects to a JSON string notation using the ISO standard for dates (qx.util.Json). 
But serializing in the opposite direction - a JSON string notation into QX objects (qx.data.marshal.Json) does not attempt to process string literals in the ISO Date notation (EG &quot;2011-02-19T04:49:14.534Z&quot;). 

I think it would be a good thing to allow for this. My thoughts are to include a delegate interface to qx.data.marshal.Json that allows for extending the toModel() method. That would allow for a default delegate to parse strings for date notations and also allow for any other processing similar to the data binding delegates.


See -&gt; http://qooxdoo.678.n2.nabble.com/JSON-Date-format-td6047708.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23125</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-03-08 08:17:22 +0100</bug_when>
            <thetext>Thanks for the report. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36054</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:52 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>