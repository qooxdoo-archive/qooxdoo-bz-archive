<bug>
          <bug_id>4187</bug_id>
          
          <creation_ts>2010-10-14 17:36:00 +0200</creation_ts>
          <short_desc>Confusing references to &quot;old&quot; and &quot;new&quot; behavior</short_desc>
          <delta_ts>2014-03-03 15:27:04 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>documentation.manual</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://manual.qooxdoo.org/current/pages/core/property_behavior.html</bug_file_loc>
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.4</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Alexander Steitz">alexander.steitz</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20715</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2010-10-14 17:36:50 +0200</bug_when>
            <thetext>Please review core/property_behavior.rst. There are references to an &quot;old&quot; and a &quot;new&quot; behavior, but it seems that the &quot;old&quot; behavior is still the current one.

&gt; var a = new A();
&gt; a.setA(a.getA()); // changeA fired (first set)
&gt; a.setA(a.getA()); // changeA NOT fired (every other set)

This sample code is in sync with the current implementation.

But:

&gt; It does not fire a change event when setting the init value, which is the correct and expected behavior.

From my point of view, what this chapter should do in the first place is to explain the rather unexpected behavior of qooxdoo when it comes to setting values to the same value as the init value. 

See the attached patch for a suggestion.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20716</commentid>
              <attachid>823</attachid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2010-10-14 17:38:37 +0200</bug_when>
            <thetext>Created attachment 823
removed section history and references to &quot;old&quot; and &quot;new&quot; version</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23230</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-03-11 13:51:30 +0100</bug_when>
            <thetext>Fixed the documentation with revision #25586 (1.3.x) and revision #25587 
(trunk).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39335</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:04 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>823</attachid>
            <date>2010-10-14 17:38:00 +0200</date>
            <delta_ts>2010-10-14 17:38:37 +0200</delta_ts>
            <desc>removed section history and references to &quot;old&quot; and &quot;new&quot; version</desc>
            <filename>property_behavior.rst.patch</filename>
            <type>text/plain</type>
            <size>7484</size>
            <attacher>tristan.koch</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL3Fvb3hkb28vZG9jdW1lbnRhdGlvbi9tYW51YWwvc291cmNlL3BhZ2VzL2Nv
cmUvcHJvcGVydHlfYmVoYXZpb3IucnN0IGIvcW9veGRvby9kb2N1bWVudGF0aW9uL21hbnVhbC9z
b3VyY2UvcGFnZXMvY29yZS9wcm9wZXJ0eV9iZWhhdmlvci5yc3QKaW5kZXggNTZjMmVmYy4uMjhi
Y2Y2ZSAxMDA2NDQKLS0tIGEvcW9veGRvby9kb2N1bWVudGF0aW9uL21hbnVhbC9zb3VyY2UvcGFn
ZXMvY29yZS9wcm9wZXJ0eV9iZWhhdmlvci5yc3QKKysrIGIvcW9veGRvby9kb2N1bWVudGF0aW9u
L21hbnVhbC9zb3VyY2UvcGFnZXMvY29yZS9wcm9wZXJ0eV9iZWhhdmlvci5yc3QKQEAgLTMsODYg
KzMsNzkgQEAKIEluaXRpYWxpemF0aW9uIEJlaGF2aW9yCiAqKioqKioqKioqKioqKioqKioqKioq
KgogCi1UaGlzIGRvY3VtZW50IHN1bW1hcml6ZXMgc29tZSB0aG91Z2h0cyBhYm91dCB0aGUgYmVo
YXZpb3Igb2YgdGhlIGluaXRpYWxpemF0aW9uIG9mIHByb3BlcnRpZXMuCi0KLS4uIF9wYWdlcy9w
cm9wZXJ0eV9mZWF0dXJlcy9iZWhhdmlvciN0aGVfcHJvYmxlbToKLQotVGhlIFByb2JsZW0KLT09
PT09PT09PT09Ci1JbWFnaW5lIGEgY2xhc3MgY29udGFpbmluZyBhIHByb3BlcnR5IG5hbWVkIGBg
YWBgIHdpdGggYW4gaW5pdCB2YWx1ZSwgbGlrZSB0aGUgZm9sbG93aW5nOgorVGhlIGluaXRpYWxp
emF0aW9uIGJlaGF2aW9yIG9mIHByb3BlcnRpZXMgc2hvd3Mgc29tZSBwZWN1bGlhcml0aWVzIHdo
aWNoIGNhbiBiZSBjb25mdXNpbmcgYXQgZmlyc3QuIFN1cHBvc2UgdGhlcmUgaXMgYSBjbGFzcyBj
b250YWluaW5nIGEgcHJvcGVydHkgbmFtZWQgYGBzaXplYGAgd2l0aCBhbiBpbml0IHZhbHVlOgog
CiA6OgogCi0gICAgcXguQ2xhc3MuZGVmaW5lKCJBIiwgewotICAgICAgICAgICAgZXh0ZW5kIDog
cXguY29yZS5PYmplY3QsCi0gICAgICAgICAgICBwcm9wZXJ0aWVzIDogewotICAgICAgICAgICAg
ICBhIDogewotICAgICAgICAgICAgICAgIGluaXQgOiAiYiIsCi0gICAgICAgICAgICAgICAgZXZl
bnQgOiAiY2hhbmdlQSIKLSAgICAgICAgICAgICAgfQotICAgICAgICAgICAgfQotICAgICAgICAg
IH0pOworICAgIHF4LkNsYXNzLmRlZmluZSgiQ2xhc3NXaXRoUHJvcGVydHkiLCB7CisgICAgICBl
eHRlbmQgOiBxeC5jb3JlLk9iamVjdCwKKyAgICAgIHByb3BlcnRpZXMgOiB7CisgICAgICAgIHNp
emUgOiB7CisgICAgICAgICAgaW5pdCA6ICIwIiwKKyAgICAgICAgICBldmVudCA6ICJjaGFuZ2VT
aXplIgorICAgICAgICB9CisgICAgICB9CisgICAgfSk7CiAKLUFzIHlvdSBjYW4gc2VlLCB0aGUg
cHJvcGVydHkgYGBhYGAgaGFzIGFuIGluaXQgdmFsdWUsIGBgYmBgLiBOb3csIGlmIHlvdSBhY2Nl
c3MgYGBhYGAgd2l0aCBpdHMgZ2V0dGVyLCB5b3UgZ2V0IHRoZSBpbml0IHZhbHVlIGluIHJldHVy
bjoKK0FzIHlvdSBjYW4gc2VlLCB0aGUgcHJvcGVydHkgYGBzaXplYGAgaGFzIHRoZSBpbml0IHZh
bHVlIGBgMGBgLiBOb3csIGlmIHlvdSBhY2Nlc3MgYGBhYGAgd2l0aCBpdHMgZ2V0dGVyLCB5b3Ug
Z2V0IHRoZSBpbml0IHZhbHVlIGluIHJldHVybjoKIAogOjoKIAotICAgIHZhciBhID0gbmV3IEEo
KTsKLSAgICBhLmdldEEoKTsgIC8vIHJldHVybnMgImIiCisgICAgdmFyIGEgPSBuZXcgQ2xhc3NX
aXRoUHJvcGVydHkoKTsKKyAgICBhLmdldEEoKTsgIC8vIHJldHVybnMgIjAiCiAKIElmIHlvdSBu
b3cgc2V0IHNvbWV0aGluZyBkaWZmZXJlbnQgdGhhbiB0aGUgaW5pdGlhbCB2YWx1ZSwgeW91IGdl
dCBhIGNoYW5nZSBldmVudCwgYmVjYXVzZSB0aGUgY29udGVudCBvZiB0aGUgcHJvcGVydHkgY2hh
bmdlZC4KIAogOjoKIAotICAgIGEuc2V0QSgieCIpOyAgLy8gY2hhbmdlQSBmaXJlZAorICAgIGEu
c2V0QSgiMTAwIik7ICAvLyBjaGFuZ2VTaXplIGZpcmVkCiAKLUFzIGZhciwgZXZlcnl0aGluZyBi
ZWhhdmVzIGFzIGRlc2lyZWQuIEJ1dCBpZiBzZXQgdGhlIGluaXQgdmFsdWUgaW5zdGVhZCBvZiBh
IG5ldyB2YWx1ZSwgdGhlIGNoYW5nZSBldmVudCB3aWxsIGJlIGFsc28gZmlyZWQuIFRoZSBmb2xs
b3dpbmcgY29kZSBzaG93cyB0aGUgcHJvYmxlbToKK0FzIGZhciwgZXZlcnl0aGluZyBiZWhhdmVz
IGFzIGV4cGVjdGVkLiBOb3csIHN1cHBvc2UgeW91IHNldCB0aGUgaW5pdCB2YWx1ZSBpbnN0ZWFk
IG9mIGEgbmV3IHZhbHVlLgogCiA6OgogCiAgICAgdmFyIGEgPSBuZXcgQSgpOwotICAgIGEuc2V0
QShhLmdldEEoKSk7IC8vIGNoYW5nZUEgZmlyZWQgKGZpcnN0IHNldCkKLSAgICBhLnNldEEoYS5n
ZXRBKCkpOyAvLyBjaGFuZ2VBIE5PVCBmaXJlZCAoZXZlcnkgb3RoZXIgc2V0KQorICAgIGEuc2V0
QShhLmdldEEoKSk7IC8vIGNoYW5nZUEgSVMgZmlyZWQKKyAgICBhLnNldEEoYS5nZXRBKCkpOyAv
LyBjaGFuZ2VBIGlzIG5vdCBmaXJlZCBhZ2FpbgogCi0uLiBfcGFnZXMvcHJvcGVydHlfZmVhdHVy
ZXMvYmVoYXZpb3IjaGlzdG9yeToKK0EgY2hhbmdlIGV2ZW50IGlzIGZpcmVkIG9uIHRoZSBmaXJz
dCBzZXQsIGV2ZW4gdGhvdWdoIHRoZSB2YWx1ZSBwYXNzZWQgdG8gYGBzZXRBYGAgaXMgdGhlIHNh
bWUgYXMgdGhlIGluaXQgdmFsdWUhIElmIGFuIGFwcGx5IGZ1bmN0aW9uIGlzIGF0dGFjaGVkIHRv
IHRoZSBwcm9wZXJ0eSwgdGhpcyBmdW5jdGlvbiBpcyBleGVjdXRlZC4gV2hpbGUgdGhpcyBiZWhh
dmlvdXIgbWlnaHQgYmUgdW5leHBlY3RlZCwgaXQgY2FuIGJlIGhlbHBmdWwgdG8gZW5zdXJlIGEg
Y29uc2lzdGVudCBzdGF0ZS4KIAotSGlzdG9yeQotPT09PT09PQotQW4gaW50ZXJlc3RpbmcgcG9p
bnQgYWJvdXQgdGhpcyBiZWhhdmlvciBpcyB0aGUgaGlzdG9yeSBvZiBpdC4gSXQgd2FzIGludHJv
ZHVjZWQgd2l0aCBxb294ZG9vIDAuOCBhbmQgaXMgc2luY2UgdGhhdCBpbml0aWFsIDAuOCByZWxl
YXNlIGluIGV2ZXJ5IHJlbGVhc2UgaW5jbHVkZWQuIAotVGhlIGJlaGF2aW9yIGluIDAuNyB3YXMg
ZGlmZmVyZW50LiBJdCBkb2VzIG5vdCBmaXJlIGEgY2hhbmdlIGV2ZW50IHdoZW4gc2V0dGluZyB0
aGUgaW5pdCB2YWx1ZSwgd2hpY2ggaXMgdGhlIGNvcnJlY3QgYW5kIGV4cGVjdGVkIGJlaGF2aW9y
LgotCi0uLiBfcGFnZXMvcHJvcGVydHlfZmVhdHVyZXMvYmVoYXZpb3Ijd2h5X25vdF9qdXN0X2No
YW5nZV9pdF9iYWNrX2FzX2l0X3dhczoKLQotV2h5IG5vdCBqdXN0IGNoYW5nZSBpdCBiYWNrIGFz
IGl0IHdhcz8KLT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci1JdCdzIGFs
d2F5cyBoYXJkIHRvIGNoYW5nZSBhIGJlaGF2aW9yIGxpa2UgdGhhdCBiZWNhdXNlIHRoZXJlIGlz
IG5vIGRlcHJlY2F0aW9uIHN0cmF0ZWd5IGZvciBpdC4gSWYgd2UgY2hhbmdlIGl0LCBpdCBpcyBj
aGFuZ2VkIGFuZCBldmVyeSBsaW5lIG9mIGNvZGUgcmVseWluZyBvbiB0aGF0IGJlaGF2aW9yIHdp
bGwgZmFpbC4gCi1FdmVuIHdvcnNlLCB0aGUgb25seSB0aGluZyB3ZSBjb3VsZCB1c2UgYXMgYSBj
aGVjayBmb3IgdGhlIHdyb25nIHVzZWQgYmVoYXZpb3IgaXMgdG8gc2VhcmNoIGZvciBhbGwgcHJv
cGVydGllcyBoYXZpbmcgYW4gaW5pdCB2YWx1ZSBhbmQgZWl0aGVyIGFuIGFwcGx5IGZ1bmN0aW9u
IG9yIGFuIGV2ZW50LiBOb3cgeW91IGhhdmUgdG8gY2hlY2sgaWYgb25lIG9mIHRoZXNlIHByb3Bl
cnRpZXMgY291bGQgYmUgc2V0IHdpdGggdGhlIGluaXQgdmFsdWUsIGJlZm9yZSBhbnkgb3RoZXIg
dmFsdWUgaGFzIGJlZW4gc2V0LiBJZiBpdCBpcyBwb3NzaWJsZSB0aGF0IHRoZSBpbml0IHZhbHVl
IGlzIHNldCBhcyBmaXJzdCB2YWx1ZSwgY2hlY2sgaWYgdGhlIGF0dGFjaGVkIGFwcGx5IGlzIHJl
cXVpcmVkIHRvIHJ1biBvciBhbnkgbGlzdGVuZXIgcmVnaXN0ZXJlZCB0byB0aGUgY2hhbmdlIGV2
ZW50IG9mIHRoYXQgcHJvcGVydHkuCi1BIGdvb2QgZXhhbXBsZSBpbiB0aGUgZnJhbWV3b3JrIHdo
ZXJlIHdlIHJlbHkgb24gdGhlIGJlaGF2aW9yIGlzIHRoZSBTcGlubmVyOgorQSBnb29kIGV4YW1w
bGUsIGZvdW5kIGluIHRoZSBmcmFtZXdvcmsgY29kZSBpdHNlbGYsIGlzIHRoZSBleGVjdXRpb24g
ZmxvdyBpbiBxeC51aS5mb3JtLlNwaW5uZXIgZm9yIGRpZmZlcmVudCBpbmNvbWluZyB2YWx1ZXM6
CiAKIDo6CiAKLSAgICAvLyAuLi4KKyAgICAvLworICAgIC8vIFsuLi5dCisgICAgLy8KICAgICAg
IGNvbnN0cnVjdCA6IGZ1bmN0aW9uKG1pbiwgdmFsdWUsIG1heCkgewotICAgIC8vIC4uLgorICAg
IC8vCisgICAgLy8gWy4uLl0KKyAgICAvLwogICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5l
ZCkgewogICAgICAgICAgIHRoaXMuc2V0VmFsdWUodmFsdWUpOwogICAgICAgICB9IGVsc2Ugewog
ICAgICAgICAgIHRoaXMuaW5pdFZhbHVlKCk7CiAgICAgICAgIH0KLSAgICAvLyAuLi4KKyAgICAv
LworICAgIC8vIFsuLi5dCisgICAgLy8KICAgICAgICAgX2FwcGx5VmFsdWU6IGZ1bmN0aW9uKHZh
bHVlLCBvbGQpCi0gICAgLy8gLi4uCisgICAgLy8KKyAgICAvLyBbLi4uXQorICAgIC8vCiAgICAg
ICAgICAgICAgICAgdGhpcy5fdXBkYXRlQnV0dG9ucygpOwotICAgIC8vIC4uLgorICAgIC8vCisg
ICAgLy8gWy4uLl0KKyAgICAvLworCitUaGUgZXhhbXBsZSBzaG93cyB0aGUgY29uc3RydWN0b3Ig
YW5kIHRoZSBhcHBseSBtZXRob2Qgb2YgdGhlIHByb3BlcnR5IGBgdmFsdWVgYCwgd2hpY2ggaW4g
dHVybiBpbnZva2VzIHRoZSBgYF91cGRhdGVCdXR0b25zYGAgbWV0aG9kLiBXZSBoYXZlIHRocmVl
IGNhc2VzIHRvIGNvbnNpZGVyOgorCisgIy4gVGhlIHZhbHVlIG9mIHRoZSBhcmd1bWVudCBpcyBg
YHVuZGVmaW5lZGBgOiBUaGUgaW5pdFZhbHVlIG1ldGhvZCBpcyBjYWxsZWQsIHdoaWNoIGludm9r
ZXMgdGhlIGFwcGx5IGZ1bmN0aW9uIGZvciB0aGUgcHJvcGVydHkgd2l0aCB0aGUgaW5pdCB2YWx1
ZSBhcyB2YWx1ZS4KIAotVGhlIGV4YW1wbGUgc2hvd3MgdGhlIGNvbnN0cnVjdG9yIGFuZCB0aGUg
YXBwbHkgb2YgdGhlIHZhbHVlIHByb3BlcnR5LiBUaGUgcHJvYmxlbSBiZWdpbnMgaW4gdGhpcyBj
YXNlIHdpdGggdGhlIGNvbnN0cnVjdG9yIHBhcmFtZXRlciBuYW1lZCBgYHZhbHVlYGAsIHdoaWNo
IGlzIG9wdGlvbmFsLiBTbyB3ZSBoYXZlIHRocmVlIGNhc2VzIHRvIGNvbnNpZGVyLgorICMuIFRo
ZSB2YWx1ZSBnaXZlbiBhbmQgaXQgaXMgKmRpZmZlcmVudCogYXMgdGhlIGluaXQgdmFsdWU6IFRo
ZSB2YWx1ZSBpcyBub3QgdW5kZWZpbmVkIGFuZCB0aGUgc2V0dGVyIGZvciB0aGUgdmFsdWUgcHJv
cGVydHkgd2lsbCBiZSBjYWxsZWQsIHdoaWNoIGludm9rZXMgdGhlIGFwcGx5IGZ1bmN0aW9uLgog
Ci0jLiBUaGUgdmFsdWUgYXJndW1lbnQgaXMgdW5kZWZpbmVkOiBUaGUgaW5pdFZhbHVlIG1ldGhv
ZCBpcyBjYWxsZWQsIHdoaWNoIGludm9rZXMgdGhlIGFwcGx5IGZ1bmN0aW9uIGZvciB0aGUgcHJv
cGVydHkgd2l0aCB0aGUgaW5pdCB2YWx1ZSBhcyB2YWx1ZS4KLSMuIEEgdmFsdWUgaXMgZ2l2ZW4g
ZGlmZmVyZW50IGFzIHRoZSBpbml0IHZhbHVlOiBTbyB0aGUgdmFsdWUgaXMgbm90IHVuZGVmaW5l
ZCBhbmQgdGhlIHNldHRlciBmb3IgdGhlIHZhbHVlIHByb3BlcnR5IHdpbGwgYmUgY2FsbGVkLCB3
aGljaCBpbnZva2VzIHRoZSBhcHBseSBmdW5jdGlvbi4KLSMuIEEgdmFsdWUgaXMgZ2l2ZW4gYW5k
IGl0cyBleGFjdGx5IHRoZSBpbml0IHZhbHVlOiBJbiB0aGlzIGNhc2UsIHRoZSBzZXR0ZXIgd2ls
bCBiZSBjYWxsZWQgd2l0aCB0aGUgaW5pdCB2YWx1ZS4gVGhlIG9sZCBiZWhhdmlvciBjYWxscyB0
aGUgYXBwbHkgYW5kIGludm9rZXMgd2l0aCB0aGF0IGFwcGx5IHRoZSBgYF91cGRhdGVCdXR0b25z
YGAgbWV0aG9kLiBUaGlzIG1ldGhvZCBjaGVja3MgdGhlIGdpdmVuIHZhbHVlIGFuZCBlbmFibGVz
IC8gZGlzYWJsZWQgdGhlIGJ1dHRvbnMgZm9yIGluY3JlYXNpbmcgLyBkZWNyZWFzaW5nIHRoZSBz
cGlubmVyLiBTbyBpdCBpcyBuZWNlc3NhcnkgdGhhdCB0aGUgYXBwbHkgbWV0aG9kIGlzIGF0IGxl
YXN0IGNhbGxlZCBvbmNlIHRoYXQgdGhlIGJ1dHRvbnMgaGF2ZSB0aGUgcHJvcGVyIHN0YXRlcy4K
KyAjLiBBIHZhbHVlIGlzIGdpdmVuIGFuZCBpdCBpcyB0aGUgKnNhbWUqIGFzIHRoZSBpbml0IHZh
bHVlOiBJbiB0aGlzIGNhc2UsIHRoZSBzZXR0ZXIgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGUgaW5p
dCB2YWx1ZS4KIAotVGhlIHByb2JsZW0gd2l0aCB0aGUgbmV3IGJlaGF2aW9yIGlzIG9idmlvdXMu
IEluIHRoZSB0aGlyZCBjYXNlLCB0aGUgYXBwbHkgbWV0aG9kIGlzIG5vdCBjYWxsZWQgYW5kIHRo
ZSBidXR0b25zIGVuYWJsZWQgc3RhdGVzIGNvdWxkIGJlIHdyb25nIHdpdGhvdXQgdGhyb3dpbmcg
YW4gZXJyb3IuIEFuZCB0aGV5IGFyZSBvbmx5IHdyb25nLCBpZiB0aGUgdmFsdWUgaXMgZXhhY3Rs
eSB0aGUgaW5pdCB2YWx1ZSBhbmQgb25lIG9mIHRoZSBtaW5pbXVtIG9yIG1heGl1bXVtIHZhbHVl
cyBpcyB0aGUgc2FtZS4gQmVjYXVzZSBvbmx5IGluIHRoYXQgc2NlbmFyaW8sIG9uZSBvZiB0aGUg
YnV0dG9ucyBuZWVkIHRvIGJlIGRpc2FibGVkLgorVGhlIGBgX3VwZGF0ZUJ1dHRvbnNgYCBtZXRo
b2QgY2hlY2tzIHRoZSBnaXZlbiB2YWx1ZSBhbmQgZW5hYmxlcyAob3IgZGlzYWJsZXMpIHRoZSBi
dXR0b25zIGZvciBpbmNyZWFzaW5nIChvciBkZWNyZWFzaW5nKSB0aGUgc3Bpbm5lci4gU28gaXQg
aXMgbmVjZXNzYXJ5IHRoYXQgdGhlIGFwcGx5IG1ldGhvZCBpcyBhdCBsZWFzdCBjYWxsZWQgb25j
ZSB0byBtYWtlIHN1cmUgdGhlIGJ1dHRvbnMgaGF2ZSB0aGUgcHJvcGVyIHN0YXRlcy4KIAotV2hl
biBjYW4gaXQgYmUgY2hhbmdlZD8KLT09PT09PT09PT09PT09PT09PT09PT09Ci1DdXJyZW50bHkg
d2UgZG9uJ3QgcGxhbiB0byBjaGFuZ2UgaXQgYmVjYXVzZSBpdCBjYW4gaGF2ZSBzb21lIGhhcmQg
dG8gdHJhY2sgc2lkZSBlZmZlY3RzIGFzIHNlZW4gaW4gdGhlIGV4YW1wbGUgYWJvdmUgYW5kIHdl
IGRvbid0IGhhdmUgYW55IGRlcHJlY2F0aW9uIHN0cmF0ZWd5LiBNYXliZSBpdCBjYW4gYmUgY2hh
bmdlIG9uIGEgbWFqb3IgdmVyc2lvbiBsaWtlIDIuMCBidXQgY3VycmVudGx5IHRoZXJlIGFyZSBu
byBwbGFucyB0byBkbyBzby4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCitQcm92aWRlZCB0
aGUgdmFsdWUgcGFzc2VkIGludG8gdGhlIGNvbnN0cnVjdG9yIGVxdWFscyB0aGUgaW5pdCB2YWx1
ZSwgYXMgc2hvd24gaW4gdGhlIHRoaXJkIGNhc2UgYWJvdmUuIE5vdyBzdXBwb3NlIG9uZSBvZiB0
aGUgbWluaW11bSBvciBtYXhpbXVtIHZhbHVlcyBpcyB0aGUgc2FtZSBhcyB0aGUgaW5pdCB2YWx1
ZS4gSW4gdGhhdCBzY2VuYXJpbywgb25lIG9mIHRoZSBidXR0b25zIHNob3VsZCBiZSBkaXNhYmxl
ZC4gSWYgaG93ZXZlciwgdGhlIGBgX3VwZGF0ZUJ1dHRvbnNgYCBtZXRob2Qgd2VyZSBub3QgaW52
b2tlZCwgdGhlIHN0YXRlIG9mIHRoZSBidXR0b24gd291bGQgYmUgd3JvbmcuClwgTm8gbmV3bGlu
ZSBhdCBlbmQgb2YgZmlsZQo=
</data>

          </attachment>
      

    </bug>