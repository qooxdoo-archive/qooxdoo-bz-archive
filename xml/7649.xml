<bug>
          <bug_id>7649</bug_id>
          
          <creation_ts>2013-08-12 21:12:00 +0200</creation_ts>
          <short_desc>Slider breaks when setting minimum value &gt; 100</short_desc>
          <delta_ts>2014-03-03 15:26:09 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>3.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan">jonathan.wolfe</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33619</commentid>
            <who name="Jonathan">jonathan.wolfe</who>
            <bug_when>2013-08-12 21:12:28 +0200</bug_when>
            <thetext>Here is an example when the slider breaks when you provide a minimum value &gt; 100.

http://preview.tinyurl.com/k8gyr2u</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33685</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-08-22 08:29:42 +0200</bug_when>
            <thetext>This is more or less an error in the application code, even if its hard to track. Here is the relevant snippet of your sample:

var HighestSlider = new qx.ui.form.Slider().set({
    minimum: 101,
    maximum: 1500,
    value: 1000
});

If we check that code step by step, we will see the problem. First, the slider is generated. As we don&#39;t specify any values for min, max or initial value, the slider is initialized with its default values: min: 0; max: 100. After that, the set method takes that map and calls for each entry the setter as its a map, the order of the calls is not guaranteed but in most bases, its from first to last. So it is in chrome e.g. in this case. The first setter called is the setter for the minimum. While setting the minimum to 101 the check fails which checks if the min is above the max value (max values hasn&#39;t been changed at that time). That explains the error. But how to fix it?
You can either change the order in the map (not recommended because you should not rely on the order of map execution) or use standalone setter for each property.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33703</commentid>
            <who name="Jonathan">jonathan.wolfe</who>
            <bug_when>2013-08-22 14:57:39 +0200</bug_when>
            <thetext>Ok, that makes sense. I will use the stand-alone setters after creation. :-)

(In reply to comment #1)
&gt; This is more or less an error in the application code, even if its hard to
&gt; track. Here is the relevant snippet of your sample:
&gt; 
&gt; var HighestSlider = new qx.ui.form.Slider().set({
&gt;     minimum: 101,
&gt;     maximum: 1500,
&gt;     value: 1000
&gt; });
&gt; 
&gt; If we check that code step by step, we will see the problem. First, the slider
&gt; is generated. As we don&#39;t specify any values for min, max or initial value, the
&gt; slider is initialized with its default values: min: 0; max: 100. After that,
&gt; the set method takes that map and calls for each entry the setter as its a map,
&gt; the order of the calls is not guaranteed but in most bases, its from first to
&gt; last. So it is in chrome e.g. in this case. The first setter called is the
&gt; setter for the minimum. While setting the minimum to 101 the check fails which
&gt; checks if the min is above the max value (max values hasn&#39;t been changed at
&gt; that time). That explains the error. But how to fix it?
&gt; You can either change the order in the map (not recommended because you should
&gt; not rely on the order of map execution) or use standalone setter for each
&gt; property.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39011</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:09 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>