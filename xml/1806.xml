<bug>
          <bug_id>1806</bug_id>
          
          <creation_ts>2008-12-18 13:55:00 +0100</creation_ts>
          <short_desc>Create qx.core.BaseArray to make it easy to subclass native Arrays</short_desc>
          <delta_ts>2014-03-03 15:22:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>0.8.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabian Jakobs">fabian.jakobs</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          <cc>info</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7202</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-12-18 13:55:15 +0100</bug_when>
            <thetext>Right now we have qx.List.define, which is inconsistent with the way sub class native JavaScript Objects in qooxdoo. Right now we have qx.core.BaseString and qx.core.BaseError. We should consider moving the subclassing code from qx.List to qx.core.BaseArray.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7532</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-02-02 13:16:33 +0100</bug_when>
            <thetext>to sw</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7533</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-02 13:19:51 +0100</bug_when>
            <thetext>Working on this one.

Would suggest a renaming of the classes into a separate namespace e.g.:

qx.base.Array
qx.base.String
qx.base.Error

Maybe even more classes will be added in the future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7539</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-02 14:54:18 +0100</bug_when>
            <thetext>The class is part of qooxdoo since r17523/trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7540</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-02 14:55:20 +0100</bug_when>
            <thetext>For renamings back to Fabian. Not to mention that I would really like this :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7627</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-02-05 15:20:36 +0100</bug_when>
            <thetext>After discussion with sebastian I suggest to use qx.type as top level namespace for these classes:

qx.type.Array
qx.type.String
...

we could later place derived data types there as well like

qx.type.Stack
qx.type.Set
...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8139</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-02 10:32:31 +0100</bug_when>
            <thetext>Fabian, lets have a look at this, also given Sebastian&#39;s input.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8218</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-03 14:48:11 +0100</bug_when>
            <thetext>The following classes have been moved in r18265 as follows:

qx.core.Base(Array|Error|String) to the identical class names in qx.type.

qx.core.ComfortArray has been moved to qx.type.Array (see bug #1918).
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8230</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-03 17:17:07 +0100</bug_when>
            <thetext>fixed in rev. 18275</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8242</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-04 09:52:48 +0100</bug_when>
            <thetext>I don&#39;t like to have the ComfortArray as the normal Array though as it introduces a lot of methods normally not found on the Array type in JavaScript. This means for example that this class is not as easy usable for derivation as the methods like contains may be implemented in another way in derived classes.

I would suggest to rename the classes based as follows:
qx.type.Array =&gt; qx.type.Set
qx.type.BaseArray =&gt; qx.type.Array
qx.type.BaseString =&gt; qx.type.String
qx.type.BaseError =&gt; qx.type.Error

In this case the old &quot;ComfortArray&quot; is renamed to &quot;Set&quot; - a feature-rich variant mainly thought as a storage instance. The classic Array is named &quot;Array&quot; like the JavaScript default so it may be used the same as the normal Array as well with no additional methods.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8254</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-04 10:56:45 +0100</bug_when>
            <thetext>The idea behind the names is that the &quot;BaseXXX&quot; classes serve as abstract base classes for derived Arrays, Strings, etc while the Array and maybe later String classes are the ones the user will instantiate directly. These classes come with much of the functionality found in the equivalent static qx.lang.XXX classes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8265</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-04 11:39:25 +0100</bug_when>
            <thetext>I understood your idea, but your answer still do not helps with the question I had. The issue is that these classes are basically wrappers around the native types. It&#39;s easier to tell users to use qx.type.Array instead of Array for extending but this wouldn&#39;t work in most cases because the ComfortArray adds a lot of features not wanted in the derived classes.

The issue is to name the extended &quot;ComfortArray&quot; array as it contains methods which are not found in the normal array. Also there is no need for the &quot;Base&quot; prefix. &quot;BaseArray&quot; is like the native Array as a qooxdoo type. While ComfortArray is more a nice data type which acts like a &quot;Set&quot;. The new &quot;qx.type.Array&quot; is not an equivalent of the native array and that&#39;s the main reason why this name is bad for an extended class.

The current strategy seems to be to prefix the most basic types (So the logic is that the extendable variant is named &quot;qx.type.Base&quot; + nativeName) and to have nice names for the extended ones which is maybe not the best choice one could have done.

Seems to be a bit ugly though that the discussion for the applied changes was held outside the bug report and is now done afterwards. Would have wished this had be done differently.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8266</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-04 12:06:33 +0100</bug_when>
            <thetext>I don&#39;t tell users to extend from Array so this is not a problem. I tell users to extend from BaseArray. The Array class is the one a user would instantiate in his own code and in this case it does not matter that the functionality is more than that of a native JavaScript array. In fact this extra functionality is what makes up a framework. We already provide this functionality in qx.lang.Array and we just make this more accessible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8270</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-03-04 12:11:08 +0100</bug_when>
            <thetext>change MS</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8274</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-04 13:59:11 +0100</bug_when>
            <thetext>You don&#39;t tell them to exted from Array, I get this point, but it&#39;s still more natural.

I found out that &quot;Set&quot; might be a bad name as in most cases I found it is based on a hashmap - at least in Dojo, Java etc. - so it might be he same in qooxdoo and this way do not extend the BaseArray/Array.

Dojo uses &quot;ArrayList&quot; as a name for the enhanced Array (http://api.dojotoolkit.org/jsdoc/dojox/1.2/dojox.collections.ArrayList). I could perfectly live with &quot;List&quot; as well. It&#39;s also natural to have something like &quot;contains&quot; working on a list: e.g. maylist.contains(foo);

Basically qx.type.Array than is (mostly) identical native Array while qx.type.List is the type to work with when dealing with list data in the application code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9566</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-23 21:42:31 +0200</bug_when>
            <thetext>Closing bugs without answering open questions/disussion is not nice. Reopened!

Still think that the most-native form we offer should be named like the native name (just with the &quot;qx&quot; namespace though). We should find a name for the extended Array. What is so wrong with &quot;List&quot;?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9581</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-04-24 10:29:46 +0200</bug_when>
            <thetext>Sorry for closing without comment. I thought it was obvious that we don&#39;t plan to change
the class names. We have settled with a consistent naming scheme for the qx.type 
namespace and renaming BaseArray to something else would make it inconsistent with
BaseString and BaseError. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>9595</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-04-24 10:58:18 +0200</bug_when>
            <thetext>Just to make sure. I want to rename BaseError and BaseString as well to Error and String :) There is no conflict anymore then.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37530</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:03 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>