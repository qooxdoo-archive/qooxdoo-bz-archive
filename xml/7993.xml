<bug>
          <bug_id>7993</bug_id>
          
          <creation_ts>2013-12-11 16:07:00 +0100</creation_ts>
          <short_desc>Throw error or a warning if q.create returns an empty collection</short_desc>
          <delta_ts>2015-02-10 08:23:10 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>8892</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>8051</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>34609</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-12-11 16:07:39 +0100</bug_when>
            <thetext>q.create(&quot;div&quot;) creates an empty collection. But the main idea of calling q.create is to create a DOM element, not just a collection.

So I would love to see an error or warning in console if some one tried to create a DOM element, but nothing was created. Such a finger point needs just to be in debug mode.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34625</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-12-12 08:48:45 +0100</bug_when>
            <thetext>A warning in the debug variant sounds like a good idea.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34844</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-01-27 10:28:09 +0100</bug_when>
            <thetext>I just checked how this could / should be solved. I see still two issues:

1. The warning should only appear in the devel version. But we currently do not have the qx.debug flag enabled for the non minimized version which needs to be done before fixing this issue. See bug #8051

2. If we add one warning, we should think of adding warnings for the most reasonable wrong input values possibilities for every method. See bug #8052

3. qxWeb does not have an assertion nor logging module. We could use the console for logging but if we want to have proper checks, we should add assertions as we know them. So we need to make sure we don&#39;t add any additional dependency on implementing that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34847</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-01-27 10:38:31 +0100</bug_when>
            <thetext>Hi Martin,

at 1. how about using qx.Bootstrap.DEBUG like in qx.core.GlobalError?

at 3. Since qx.core.Assert is defined by qx.Class, all dependencies of OO will be included. This makes it difficult to create a qooxdoo native app which only based on qx.Bootstrap. I would prefer to convert qx.core.Assert to a qx.Bottstrap class. This would solve your point also.

What do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34870</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-01-28 08:14:33 +0100</bug_when>
            <thetext>(In reply to comment #3)
&gt; at 1. how about using qx.Bootstrap.DEBUG like in qx.core.GlobalError?
I don&#39;t see a reason to use that flag (which is intended only for the time in the load sequence before the environment system is loaded) instead of the real environment setting. Why should we?

&gt; at 3. Since qx.core.Assert is defined by qx.Class, all dependencies of OO will
&gt; be included. This makes it difficult to create a qooxdoo native app which only
&gt; based on qx.Bootstrap. I would prefer to convert qx.core.Assert to a
&gt; qx.Bottstrap class. This would solve your point also.
Exactly, that was the plan.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42413</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-10 08:22:29 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42429</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-02-10 08:23:10 +0100</bug_when>
            <thetext>I think we should make sure we cover this issue in bug #8892

*** This bug has been marked as a duplicate of bug 8892 ***</thetext>
          </long_desc>
      
      

    </bug>