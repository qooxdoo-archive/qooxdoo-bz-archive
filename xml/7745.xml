<bug>
          <bug_id>7745</bug_id>
          
          <creation_ts>2013-09-23 15:27:00 +0200</creation_ts>
          <short_desc>qx.ui.form.Button does not implement qx.ui.form.IForm</short_desc>
          <delta_ts>2014-10-21 07:59:23 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.controls</component>
          <version>3.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Niels Steenbeek">nielssteenbeek</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33962</commentid>
            <who name="Niels Steenbeek">nielssteenbeek</who>
            <bug_when>2013-09-23 15:27:11 +0200</bug_when>
            <thetext>The qx.ui.form.Button is a form widget, but does not implement qx.ui.form.IForm.
I would suggest to copy current qx.ui.form.Button to qx.ui.basic.Button and have qx.ui.form.Button like:
qx.Class.define(&quot;qx.ui.form.Button&quot;, {
  extend: qx.ui.basic.Button,
  implement : [
    qx.ui.form.IForm,
    qx.ui.form.INumberForm
  ]
});
This has some advantages:
1) Button can be added using Form#add 
   form.add(button) instead of form.addButton(button)
2) Page can have basic button instead of Form button, which is more intuitive.
   page.getContent().add(new qx.ui.basic.Button(&quot;But&quot;)) instead of
   page.getContent().add(new qx.ui.form.Button(&quot;But&quot;))
3) Removes method difference between page and form. Page has no #addButton method.
   Page.getContent().add(button) versus form.addButton(button)

Maybe difficult for backward-compatibility, but maybe a good suggestion.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33966</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-09-24 08:32:08 +0200</bug_when>
            <thetext>Adding the interfaces is one part but implementing the methods with something meaningful is also important and the reason why we did not add those interfaces.

Lets check some methods from the interfaces

What does it mean if a button is required?
How to check if a button is valid?
What is the value of a button?
Why should a button have a number value and not a string or any other kind of data?

Keep in mind that all these questions need to be answered for a standard button, not only for a toggle button which makes it kind of like a radio button of check box.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33972</commentid>
            <who name="Niels Steenbeek">nielssteenbeek</who>
            <bug_when>2013-09-24 12:18:36 +0200</bug_when>
            <thetext>Ok, I read the documentation of IForm mentioning: &quot;Form interface for all form widgets.&quot; and than stopped reading :).I expected it to be the base interface for all form widgets.

But this means that you only allow form widgets which can enable, required, etc., but there are two kinds of form items:
1) The current IForm ones; having enabled, required, etc.
2) Other form elements without enabled, required, etc. like Button, Group, Label, Image, etc.
For now there is a method form.addButton, but no form.addGroup, form.addLabel, form.addImage, etc. So I can&#39;t add those widgets to a form.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33976</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-09-25 07:56:52 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; But this means that you only allow form widgets which can enable, required,
&gt; etc., but there are two kinds of form items:
&gt; 1) The current IForm ones; having enabled, required, etc.
&gt; 2) Other form elements without enabled, required, etc. like Button, Group,
&gt; Label, Image, etc.
&gt; For now there is a method form.addButton, but no form.addGroup, form.addLabel,
&gt; form.addImage, etc. So I can&#39;t add those widgets to a form.

Right, there are two kind of widgets which can be displayed in a form. But the form we have in qooxdoo is not about the visual representation, its about the logic and as the group, label and image e.g. don&#39;t have any influence on the logic, those items should not be in the form itself. Nevertheless, they can be in the visual representation of the form by writing a custom renderer and add those additional widgets as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41419</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-10-21 07:59:23 +0200</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>