<bug>
          <bug_id>3669</bug_id>
          
          <creation_ts>2010-05-03 09:43:00 +0200</creation_ts>
          <short_desc>Warn about non-String Expressions in this.tr()</short_desc>
          <delta_ts>2014-03-03 15:20:19 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18124</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-03 09:43:34 +0200</bug_when>
            <thetext>Currently, an expression like this.tr(a+b) or this.tr(foo(x)) will cause the 
generator to bomb. This is despite the fact that at *run time* the code might 
work perfectly (if a+b or foo(x) evaluate to strings that can be looked up as 
translation keys).

So the non-string argument condition should only be warned about when the 
generator runs, and it should be left to the developer&#39;s discretion whether 
this is considered an issue, or will work out at run time of the app. This is 
also in sync with unknown symbols in the code that are warned about at compile 
time, but might be perfectly available at run time.

It has to be remembered, though, that the keys the argument to this.tr() et al. 
evaluates at run time, has to be given as string literal *somewhere* in the 
application code (e.g. using .marktr()). Otherwise, those keys will not be 
included in the I18N data of the app, although they might be in the .po files.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18126</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-03 13:13:40 +0200</bug_when>
            <thetext>Make this.tr() issue warnings instead of raising an exception if the msgid 
argument is not a string literal (or a concat thereof); only add po entries if 
we have a proper msgid; literal keys have to be supplied elsewhere in the code; 
this allows expressions as this.tr() et al. arguments that evaluate to strings 
at runtime.

With r22104</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18127</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-03 13:46:44 +0200</bug_when>
            <thetext>Add contrib/Bugs/3669</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19204</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-07-09 09:10:18 +0200</bug_when>
            <thetext>*** Bug 2639 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36837</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:19 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>