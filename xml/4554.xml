<bug>
          <bug_id>4554</bug_id>
          
          <creation_ts>2011-01-14 13:55:00 +0100</creation_ts>
          <short_desc>Load more for virtual list</short_desc>
          <delta_ts>2014-04-28 09:48:06 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.virtual</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>b.collignon</cc>
    
    <cc>derrell.lipman</cc>
    
    <cc>simonwhite</cc>
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22251</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-14 13:55:46 +0100</bug_when>
            <thetext>A well known design patter in the mobile world is to show only a set of items in a list and offer a button on the end of the list to load more into the list. Its also available on facebooks wall for example. It would be nice if we could add a button to the virtual list which could be used for that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22254</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-01-14 14:12:04 +0100</bug_when>
            <thetext>(In reply to comment #0)
&gt; A well known design patter in the mobile world is to show only a set of items
&gt; in a list and offer a button on the end of the list to load more into the list.
&gt; Its also available on facebooks wall for example. It would be nice if we could
&gt; add a button to the virtual list which could be used for that.

Sigh. That design pattern is a hold-over from traditional, 1990&#39;s vintage HTML pages requiring a way to view long lists. Those old pages didn&#39;t want to load the entire data set into the page, yet had no way to request new data as the user scrolled, so they provided manual page-up/page-down buttons.

With the current (no longer new) ability to receive more data as it is needed, as the users scrolls, the use of page-up/page-down buttons should really be discouraged. Instead, ensure that the Virtual widgets provide the features of the Remote Table Model, whereby data is requested as needed. (If a designer really wants page-up/page-down buttons, that can be easily accommodated by adding buttons that programmatically issue scroll-up and scroll-down commands.)

I don&#39;t recall that the Remote Table Model ever throws away data once it&#39;s retrieved it. For the mobile environment, you&#39;d want high water marks on the cached data, so that &quot;least recently used&quot; data could be discarded when the high water mark is reached (possibly under some kind of program control).

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22277</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-17 09:09:09 +0100</bug_when>
            <thetext>Thanks for your feedback Derrell. The plan here is not to put a 1990&#39;s like paging on top of the virtual widgets. That would not make much sense because the whole scrolling would be useless then. But think about scenarios where bandwidth matters and you can&#39;t / don&#39;t want to use a remote data model.

&gt; With the current (no longer new) ability to receive more data as it is needed,
&gt; as the users scrolls, the use of page-up/page-down buttons should really be
&gt; discouraged. 
The current list can not do that. Its bound to the missing data binding feature of that. Only the table is capable of that currently.

&gt; Instead, ensure that the Virtual widgets provide the features of
&gt; the Remote Table Model, whereby data is requested as needed. 
Thats in a separate bug report somewhere. ;)

&gt; (If a designer
&gt; really wants page-up/page-down buttons, that can be easily accommodated by
&gt; adding buttons that programmatically issue scroll-up and scroll-down commands.)
That exactly the point because it can not be done easily with the current implementation. Maybe we need to make the way to do it more accessible of something like that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27048</commentid>
            <who name="">simonwhite</who>
            <bug_when>2011-09-29 15:25:48 +0200</bug_when>
            <thetext>I would like the virtual list to support the features of a remote model so that it could handle loading blocks of data.  There is a need for this when building database applications.  Let&#39;s suppose you want to show a history of a customer&#39;s sales transactions.  There could easily be hundred&#39;s of thousands of transactions.  I have a possible opportunity for a project where a company generates 10000 - 20000 transactions per day.  So if I give them the ability to view a transaction history I do not want to send tens of thousands of transactions to the browser.  I would prefer that the application request more transactions as the user scrolls up or down the list.  I do not see a need for special paging button.  The request for more data block should be triggered by scrolling down the list.  The data cache should only keep a fixed number of data blocks because there is no need to hold all the data in memory.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32540</commentid>
            <who name="Benoît Collignon">b.collignon</who>
            <bug_when>2013-04-04 09:59:05 +0200</bug_when>
            <thetext>I also think it would be nice to have such kind of &quot;remote&quot; or &quot;partial&quot; qx.data.Array or model (inspired by the table Remote model).

The problem is when you load a huge list of data, you must first convert it to a model (or a qx.data.Array depending the case) using qx.data.marshal.Json.createModel(). 

This operation is quite expensive and long... I recently tried to include Webworkers in the process to avoid &quot;freezing&quot; browsers during the transformation but I came to the conclusion it&#39;s simply impossible beacause WebWorkers cannot send real js object but only strings.

For the moment, I use a comboTable widget (available in the contribs) instead of a virtualSelectBox but &quot;bindings&quot; aren&#39;t available.

Best,

Benoît.</thetext>
          </long_desc>
      
      

    </bug>