<bug>
          <bug_id>2650</bug_id>
          
          <creation_ts>2009-08-05 09:46:00 +0200</creation_ts>
          <short_desc>Make flush more robust</short_desc>
          <delta_ts>2014-03-03 15:27:31 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>2649</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabian Jakobs">fabian.jakobs</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>11193</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-08-05 09:46:05 +0200</bug_when>
            <thetext>If an exception is thrown during the queue flush, the queue might be left in an 
inconsistent state and any further flushed fail.

We should guard all places where custom user code might be executed during a flush
with try/catch statements and try to recover to the point where we are able to run the
queue flush again.

Hooks for user code are:

 - resize/move events handler
 - styleAppearance event handler
 - invalid theme entries
 - appear/disappear event handler
 - dispose methods
 
 There might even be some more. In addition we need a way to detect if the flush fails
 all the time and abort the recovery attempts.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11196</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-08-05 10:02:04 +0200</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 2649 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39496</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:31 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>