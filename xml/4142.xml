<bug>
          <bug_id>4142</bug_id>
          
          <creation_ts>2010-09-30 07:18:00 +0200</creation_ts>
          <short_desc>Variable domain access error</short_desc>
          <delta_ts>2010-10-04 09:59:42 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan Andersson">dev</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20407</commentid>
            <who name="Stefan Andersson">dev</who>
            <bug_when>2010-09-30 07:18:21 +0200</bug_when>
            <thetext>The following setting

file1.js
---------
class X {
.....
__pts : null, // a private variable
.....
}

file2.js
---------
class Y {
.....
var _pts = this.getLayoutParent().getLayoutParent().__pts, // accessing a private variable
.....
}

Y is a layout child of X.
__pts is defined as a private variable.

When run from localhost the _pts get its right value both in class X and Y. (Class Y should not be able to access.)
When run from a remote server the _pts is undefined for class Y but defined with the right value in class X. (normal behaviour but missing access error message)

Refactoring of the code gives a working example:

file1.js
---------
class X {
.....
pts : null, // a private variable
.....
}

file2.js
---------
class Y {
.....
var _pts = this.getLayoutParent().getLayoutParent().pts, // accessing a private variable
.....
}

pts is not a public variable.

Now it fully works as it should!

Additionally, no error message has been printed when trying to access a private variable outside the class.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20451</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-04 09:59:42 +0200</bug_when>
            <thetext>This should not depend on remote or not, it either depends on build version or source version. In the build version, usually privates optimization is turned on which means, that all private members will be optimized (shortend) an with that renamed. So in the build version, __pts will sure not have the same name which leads to your described behavior. You should use getter to access private variables.</thetext>
          </long_desc>
      
      

    </bug>