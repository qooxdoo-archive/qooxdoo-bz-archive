<bug>
          <bug_id>6127</bug_id>
          
          <creation_ts>2012-02-10 09:53:00 +0100</creation_ts>
          <short_desc>Toggle display state of an element</short_desc>
          <delta_ts>2014-03-03 15:20:05 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.bom</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>tristan.koch</cc>
          <qa_contact name="Alexander Steitz">alexander.steitz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28488</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-02-10 09:53:03 +0100</bug_when>
            <thetext>In the mobile framework the CSS &quot;display&quot; property is used to exclude an element from the ui (see exclude method from mobile widget) by setting &quot;display:none&quot;. This worked fine as all elements used to be block elements. Right now we have also elements with &quot;display:inline&quot; and &quot;display:box&quot;. Instead of fixing this in the mobile widget, by remembering the old value of the display property, we should provide a low level solution for the problem so that also the new q library can benefit from that. 

We could add a Display class with the methods show / hide / exclude to the bom namespace and remember the old display value on the element.

Both, the RIA and mobile widgets, should use this new functionality.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28489</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-02-10 09:54:58 +0100</bug_when>
            <thetext>jQuery remembers the previous display type and reapplies it on show. See http://api.jquery.com/hide/.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28490</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-02-10 10:37:23 +0100</bug_when>
            <thetext>Just for your information: I have fixed this in the mobile framework with a &quot;exclude&quot; CSS class.

.exclude {
  display:none !important;
}

The exclude method adds the class and the show method removes it. This has the following advantages: Even when someone changes the display value in the framework JS code (e.g. in the atom widget orientation) with an inline style, the display:none !important will win. The mobile widget set won&#39;t need this feature anymore.

But we will still need this feature for the low level framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>30288</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-07-30 14:53:37 +0200</bug_when>
            <thetext>Added hide() and show() methods to q&#39;s CSS module. Behavior is essentially the same as the jQuery equivalents.

Fixed with 2b530a77 on master.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36753</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:05 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>