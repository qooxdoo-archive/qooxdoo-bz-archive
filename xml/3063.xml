<bug>
          <bug_id>3063</bug_id>
          
          <creation_ts>2009-11-16 18:05:00 +0100</creation_ts>
          <short_desc>Create an extensible testing infrastructure for the Demo Browser</short_desc>
          <delta_ts>2014-01-14 10:34:53 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.test.automation</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          <dependson>4702</dependson>
    
    <dependson>5938</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>martin.wittemann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>14138</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-11-16 18:05:27 +0100</bug_when>
            <thetext>Authors of demos included in the framework Demo Browser should be able to easily write Selenium tests for their code. These tests should automatically be integrated in the nightly framework, without having to manually modify the test configuration. To achieve this, we could create an infrastructure similar to that of the Test Runner: Demo test scripts could be located in folders named after the category/demo structure. The demobrowser simulation script would be extended to search for a corresponding test script for each demo it encounters and execute the code within, logging errors and failures as usual.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22348</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-01-18 16:29:02 +0100</bug_when>
            <thetext>Added a &quot;simulation&quot; folder to the demobrowser (r24587). This contains an abstract class that should be extended by test cases named after individual demos, e.g. a test case for the widget.Tree demo would be demobrowser.simulation.demo.widget.Tree.

Since the demos are loaded in the demobrowser&#39;s iframe, the abstract class also contains pre-fab a locator string for the iframe widget. Test cases need to use this as the base for their own locators.

The Simulator will automatically run any test cases it finds in the source/class/demobrowser/simulation directory, so no further configuration is necessary to add new test cases.

Still to do:
* Integrate this suite in the nightly test setup
* Include the functionality of the existing demobrowser Selenium test (not Simulator-based), such as checking the demo&#39;s log output for error messages.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23675</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-03-28 18:01:24 +0200</bug_when>
            <thetext>demobrowser.simulation.demo.Abstract is feature complete as of r26160. Integration in our nightly test setup isn&#39;t ready yet but since that&#39;s independent of the 1.4 release it can wait until after the release.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34765</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2014-01-14 10:34:53 +0100</bug_when>
            <thetext>This depends on the Simulator infrastructure which will be deprecated since it relies on Selenium RC.</thetext>
          </long_desc>
      
      

    </bug>