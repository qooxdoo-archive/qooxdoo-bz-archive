<bug>
          <bug_id>4153</bug_id>
          
          <creation_ts>2010-10-04 11:09:00 +0200</creation_ts>
          <short_desc>&quot;provider&quot; job: Should be possible to generate compiled versions of the files</short_desc>
          <delta_ts>2010-11-24 15:53:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>1.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20459</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-10-04 11:09:24 +0200</bug_when>
            <thetext>At the moment the &quot;provider&quot; job does generate the files as source version. It should be possible via configuration to generate a source and a build version of the provider files (resulting in the same as the source and build version of an application).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20460</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-10-04 11:26:33 +0200</bug_when>
            <thetext>How should the versions be represented in the &quot;provider&quot; tree?

At the moment, you have the code/ directory, under which the source files are stored according to name space package (e.g. code/qx/util/ResourceManager.js).

Would you rather have a code/source/ and code/build sub-tree, to hold source and build versions of a class respectively (e.g. as code/source/qx/util/ResourceManager.js and code/build/qx/util/ResourceManager.js? 

Or would you rather have a single code/ root, and then the files for one class be distinguished by e.g. some name suffix (like code/qx/util/ResourceManager.source.js, ResourceManager.build.js)?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20462</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-10-04 13:34:13 +0200</bug_when>
            <thetext>What about a third option:
Keeping the original &quot;code&quot; directory and create a &quot;code-build&quot; directory for the compiled classes. 

Is this also possible?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20463</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-10-04 13:48:53 +0200</bug_when>
            <thetext>(In reply to comment #2)
&gt; What about a third option:
&gt; Keeping the original &quot;code&quot; directory and create a &quot;code-build&quot; directory for
&gt; the compiled classes. 
&gt; 
&gt; Is this also possible?

Of course, just give me your decision.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20464</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-10-04 14:00:52 +0200</bug_when>
            <thetext>Yepp,

I&#39;ll go for 

  * &quot;code&quot; directory for the unoptimized (&quot;source&quot;) classes 
  * &quot;code-build&quot; for the optimized (&quot;build&quot;) classes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20526</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-10-07 14:54:14 +0200</bug_when>
            <thetext>&#39;code-build&#39; is now created alongside &#39;code&#39;. New keys have been provided for 
the &quot;provider&quot; job in base.json, and for the &quot;provider&quot; key. The job has an 
extended &quot;compile-options&quot; section, with &quot;format&quot; and &quot;optimize&quot; sub-keys. The 
&quot;provider&quot; key now supports a
  &quot;compile&quot; : [&quot;source&quot;, &quot;build&quot;]
sub-key, to indicate which version is desired. The default &quot;provider&quot; job 
specifies both, but this can be locally overwritten with &quot;=compile&quot;.

Mind that private optimization is not possible on this level (currently only 
possible for complete applications).

Mind also that through fixing bug#1455 the dependency lists of certain classes 
can be considerably longer, or dependencies move from &#39;run&#39; to &#39;load&#39;. This 
shows in the dependencies.json.

With r23478.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20543</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-10-08 13:37:20 +0200</bug_when>
            <thetext>verified</thetext>
          </long_desc>
      
      

    </bug>