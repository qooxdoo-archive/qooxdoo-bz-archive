<bug>
          <bug_id>4526</bug_id>
          
          <creation_ts>2010-12-28 15:12:00 +0100</creation_ts>
          <short_desc>image load events are not fired</short_desc>
          <delta_ts>2014-03-03 15:27:22 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.bom</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.3.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gabriel Munteanu">jajalinux</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          <cc>tristan.koch</cc>
          <qa_contact name="Alexander Steitz">alexander.steitz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22103</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-12-28 15:12:24 +0100</bug_when>
            <thetext>this is a playground demo of this bug:
http://tinyurl.com/37wduw2
if you change loaded with click, it works.

it all started from the same problem with load event in the bom applications.
here is an onReady code that you can replace it the bom application generated by create_application.
-------------------------
function onReady()
    {
       var newElement = qx.bom.Element.create(&#39;img&#39;);
       newElement.src=&#39;http://farm2.static.flickr.com/1113/525944346_d5855e81fa_t.jpg&#39;;
       qx.bom.Element.addListener(newElement,&#39;loaded&#39;,function(){
            console.log(&#39;loaded&#39;);
          },newElement,true);
       qx.dom.Element.insertAt(newElement,document.body);
    }
-------------------------------</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22104</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-12-28 16:22:20 +0100</bug_when>
            <thetext>This is a duplicate of bug #3585.

Here is an example with the use of the ImageLoader to get to know if an image is actually loaded successful.

-&gt; http://tinyurl.com/2vx7r7d

*** This bug has been marked as a duplicate of bug 3585 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22106</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-12-28 17:08:10 +0100</bug_when>
            <thetext>solving 3585 will make load fire here:
qx.bom.Element.addListener(image,&#39;load&#39;,function(){
            console.log(&#39;loaded&#39;);
          },image,true);
?
in other words:
the event there is &quot;loaded&quot; as it is related to qx.ui.basic.Image class.
but does 3585 address the low-level event &quot;load&quot; too?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22107</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-12-28 17:39:57 +0100</bug_when>
            <thetext>&gt; in other words:
&gt; the event there is &quot;loaded&quot; as it is related to qx.ui.basic.Image class.
&gt; but does 3585 address the low-level event &quot;load&quot; too?
No, it doesn&#39;t. If you want to address this issue and not use the ImageLoader, then we should re-open this issue. Sorry, for mark it as a duplicate too early.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22224</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-01-13 12:21:12 +0100</bug_when>
            <thetext>fixed on trunk with rev. 24537
there is a problem though.
load event is a non-bubbling event, but it is a capture event on opera.
is you do:
qx.bom.Element.addListener(imgEl,&#39;load&#39;,myFunc,imgEl,true);
it won&#39;t work.
this is due to the fact that capture argument is lost when handlers register the event with the native system.
in qx.event.Manager.addListener method the targetMap has keys dependent on the capture variable.
when the image loads and the event is fired, [for example in qx.event.handler.Element.js] _onNative method is called and the initial capture variable is not present. further on qx.event.Registration.fireNonBubblingEvent is called and in that one qx.event.Manager.hasListener is called with capture set to false, regardless of the initial setting. and when looking for listeners in the targetMap which has the key with &quot;capture&quot; included and it was true, of course no listeners are found.
shall i report a new bug somewhere? or am I missing something ?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22227</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-01-13 13:17:30 +0100</bug_when>
            <thetext>@Gabriel
Please report your findings to Martin so we can discuss if we need an additional bug report.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39442</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:22 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>