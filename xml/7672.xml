<bug>
          <bug_id>7672</bug_id>
          
          <creation_ts>2013-08-21 18:30:00 +0200</creation_ts>
          <short_desc>TypeError: opr() takes exactly 3 arguments (2 given)</short_desc>
          <delta_ts>2014-03-03 15:19:07 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33681</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-08-21 18:30:51 +0200</bug_when>
            <thetext>This statement occurs following error on generator at build job.

//JS statement
if (qx.core.Environment.get(&quot;build.incarnation&quot;).indexOf(&quot;touch_&quot;) &gt; -1) {
  return;
}

//Error
File &quot;.../qooxdoo/tool/pylib/ecmascript/transform/evaluate/evaluate.py&quot;, line 153, in _visit_monadic
    node.evaluated = self.operations[operator](op1.evaluated)
TypeError: opr() takes exactly 3 arguments (2 given)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33688</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-08-22 08:58:57 +0200</bug_when>
            <thetext>As a possible workaround you could save the environment setting into a variable.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33695</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-08-22 12:00:12 +0200</bug_when>
            <thetext>Cannot repro.

I would need to see the entire stack trace to be sure, but this path 
(.../evaluate/evaluate.py) shouldn&#39;t be called at all. The evaluate.py module 
has mostly be replaced by the reducer.py module towards the 3.0 release. Are 
you sure you are using master?!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33747</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-08-27 11:31:06 +0200</bug_when>
            <thetext>Mustafa was working against a pre-3.0 version of the framework (not master).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33850</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-09-09 11:10:33 +0200</bug_when>
            <thetext>As part of looking at this bug I discovered another issue where &#39;()&#39; (the empty 
tuple as denoting &#39;could not evaluate&#39;) was propagated to upstream evaluations 
and could cause issues there. Hence guarded against setting &#39;()&#39; as the value 
for .evaluated in _visit_monadic and _visit_dyadic.

I couldn&#39;t reproduce this issue in 3.0.x, but it seems like a sensible patch to 
apply anyway.

master: 066c81681e2
3.0.x: d191f75</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36354</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:07 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>