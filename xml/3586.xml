<bug>
          <bug_id>3586</bug_id>
          
          <creation_ts>2010-04-14 12:48:00 +0200</creation_ts>
          <short_desc>qx.Class.patch doesn&#39;t work on IE and Chrome</short_desc>
          <delta_ts>2012-05-16 09:33:45 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.oo</component>
          <version>master</version>
          <rep_platform>IE</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>1.1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Christian Hagendorn">christian.hagendorn</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17754</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-14 12:48:40 +0200</bug_when>
            <thetext>The method on the current trunk for the release 1.1 doesn&#39;t work for IE8 and Chrome. The unit test &quot;qx.test.Class:testPatchWithConstructor&quot; fails, with an error that the &quot;dispose&quot; method is missing.

It seems to me that the object loses the extended methods after calling the &quot;patch&quot; method.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17755</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-14 13:48:37 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17811</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-04-16 10:16:46 +0200</bug_when>
            <thetext>Applied a hot fix on trunk with rev. 21907 to solve the problem, but the reason why the &quot;prototype&quot; is not copied is unknown. We should spend more time in 1.2 to fix this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18458</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-05-21 16:41:22 +0200</bug_when>
            <thetext>We should also check the complete implementation in the __retrospectWrapConstruct method (qx.Class). The checks on the results from qx.Bootstrap.getKeys() with hasOwnProperty() is not needed, because the result should only contain keys from own properties. See: http://ejohn.org/blog/ecmascript-5-objects-and-properties/  </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18741</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-06-17 15:16:00 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18778</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-06-17 17:15:57 +0200</bug_when>
            <thetext>Fixed on trunk with rev. 22458 and branch rev. 22460.</thetext>
          </long_desc>
      
      

    </bug>