<bug>
          <bug_id>8244</bug_id>
          
          <creation_ts>2014-04-08 14:44:00 +0200</creation_ts>
          <short_desc>Event handler of native event &quot;play&quot; added by .on() will not called on Safari</short_desc>
          <delta_ts>2014-12-16 11:44:12 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.widgets</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.0.2</target_milestone>
          
          
          
          
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Tobias Oberrauch">tobias.oberrauch</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>tobias.oberrauch</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>39903</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-04-08 14:44:15 +0200</bug_when>
            <thetext>qx.bom.Event#supportsEvent() does not recognize &quot;play&quot; event on audio elements. That why event handler added by qx.module.Event#on will not be called.

In that special case &quot;play&quot; event exists but no .onplay property.

Recommended to be able to detect following events on audio and video elements:
loadeddata, progress, timeupdate, seeked, canplay, play, playing, pause, loadedmetadata, ended, volumechange

I would advice you to try to create and dispatch HTML events on dummy elements to check if an event is supported by the element.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41242</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2014-09-24 11:16:16 +0200</bug_when>
            <thetext>&gt; I would advice you to try to create and dispatch HTML events on dummy elements
&gt; to check if an event is supported by the element.

Just for the record: the &#39;supportsEvent&#39; method is synchron. So either fire these events async upfront or just add a special handling for those events (as already implemented in this class).

I would favor the latter solution, because firing many events upfront and not knowing about if this event is ever checked for is not efficient.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41245</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-09-24 17:03:31 +0200</bug_when>
            <thetext>Fixed Bug in master with 7b02bc3eed155b3d221430f432ef4ec353e40660</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41246</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-09-24 17:06:13 +0200</bug_when>
            <thetext>Pushed also into branch_4_0_x with a0a13f668b67699b68a4277d4d4b0da7f6318ead</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41254</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-09-25 15:15:02 +0200</bug_when>
            <thetext>fyi:
I added [3] for &quot;mobile safari&quot; [1] supported events [2] manually.
It&#39;s just a list of supported [2] events taken from Mustafa&#39;s comment.

[1]
qx.core.Environment.get(&quot;engine.name&quot;) === &quot;webkit&quot; &amp;&amp;
qx.core.Environment.get(&quot;browser.name&quot;) === &quot;mobile safari&quot;

[2]
var supportedEvents = [
    &#39;loadeddata&#39;, &#39;progress&#39;, &#39;timeupdate&#39;, &#39;seeked&#39;, &#39;canplay&#39;, &#39;play&#39;,
    &#39;playing&#39;, &#39;pause&#39;, &#39;loadedmetadata&#39;, &#39;ended&#39;, &#39;volumechange&#39;
];

[3]
if (supportedEvents.indexOf(type.toLowerCase() &gt; -1)) {
    return true;
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41255</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-09-25 16:08:04 +0200</bug_when>
            <thetext>Also enable events for safari desktop:
branch_4_0_x e6a16dc7fb120bf0537bb5f0c7f8eafe2568661e
master ebeb67e73b876b02f2f968216549fbc7fea9541f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41257</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-09-25 16:34:50 +0200</bug_when>
            <thetext>Now there is also a support for safari on desktop</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41259</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-09-25 17:36:33 +0200</bug_when>
            <thetext>Works fine, thanks!</thetext>
          </long_desc>
      
      

    </bug>