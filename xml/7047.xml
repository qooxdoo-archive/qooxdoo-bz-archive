<bug>
          <bug_id>7047</bug_id>
          
          <creation_ts>2012-11-27 16:40:00 +0100</creation_ts>
          <short_desc>Switch from LESS to SCSS/SASS</short_desc>
          <delta_ts>2014-03-03 15:21:55 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile.theming</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christopher Zuendorf">christopher.zuendorf</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          <cc>richard.sternagel</cc>
    
    <cc>thron7</cc>
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31470</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-27 16:40:41 +0100</bug_when>
            <thetext>As an important precondition for providing a Theme Roller for qx.Mobile, we should switch from LESS to SASS/SCSS.

We are not allowed to include LESS or provide a LESS compiling solution in our framework, because it is licensed under the Apache License.
This makes it difficult for the developers to compile our Application-Specific qx.Mobile themes, we want to provide them in version 2.2.
When it is about the compilation of our themes, developers have to look on their own, of how to compile them.
A better solution would be a qooxdoo generator job for this purpose, for example &quot;compile-theme&quot;. 

A watch job for compiling LESS/SCSS files on change would also be very helpful. This is also impossible with LESS because there are no reliable parsing solution for python. SCSS does provide a watchjob compiler out-of-the-box, which can be easily started.  Maybe we could provide a python-based watch job for the SCSS files. 

The switch would help us and our developers to develop and maintain the qx.Mobile themes. The error and warnings of SCSS on compilation are much better and precise than in LESS.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31471</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-27 17:23:26 +0100</bug_when>
            <thetext>Time Effort approximately 2-4h for qx.Mobile Theming Files.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31472</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-27 17:25:13 +0100</bug_when>
            <thetext>Bug for Watch Jobs:

http://bugzilla.qooxdoo.org/show_bug.cgi?id=5679</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31473</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-27 18:46:42 +0100</bug_when>
            <thetext>+1  There is a promising Python module available, pyScss, which we could 
deploy, with a liberal license (MIT). Should be straight-forward to integrate 
this with the generator.

I can take care of migrating our website .less files (in 
tool/admin/www/resources/less) to .scss.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31478</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-28 08:47:42 +0100</bug_when>
            <thetext>+1 for the move. Integrating a solution into our toolchain is really important, not only for the mobile part of the framework. I think it might also be good for website and even desktop in the future. The only thing we currently loose, as far as I know, is the in browser compilation of the files but having a watch mode can compensate that.

Btw, there is also a npm module:
https://npmjs.org/package/scss</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31557</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-30 12:08:48 +0100</bug_when>
            <thetext>PyScss: The issue we currently have with pyScss is the lack of support for 
varargs in mixins. There is already a pyScss issue for that:

  https://github.com/Kronuz/pyScss/issues/100</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31558</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-30 12:39:32 +0100</bug_when>
            <thetext>PyScss: The other issue might be relative includes with &#39;up&#39; navigation, like 
@include &quot;../foo/bar&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37475</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:55 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>