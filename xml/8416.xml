<bug>
          <bug_id>8416</bug_id>
          
          <creation_ts>2014-06-11 14:22:00 +0200</creation_ts>
          <short_desc>Offer a set of predefined media queries</short_desc>
          <delta_ts>2014-07-03 15:30:17 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          <blocked>8413</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>tobias.oberrauch</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40486</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-06-11 14:22:30 +0200</bug_when>
            <thetext>As application developer, it would be very handy to have a set of predefined media queries to rely on. A sample would be small-screen, medium-screen and big-screen. 
We could build that on top of a function taking a media query and a classname which adds the classname to the root element e.g. if the media query evaluates to true.
Based on that, we could go a step further and offer default classes for default actions like hide on small screens.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40510</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-06-12 14:53:15 +0200</bug_when>
            <thetext># enquire.js
enquire.js is a lightweight, pure JavaScript library for responding to CSS media queries.
```
enquire.register(&quot;screen and (max-width:45em)&quot;, {
    // If supplied, triggered when a media query matches.
    match : function() {},      
    unmatch : function() {},    
    setup : function() {},    
    deferSetup : true,
    destroy : function() {}
      
});
```</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40511</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-06-12 14:58:36 +0200</bug_when>
            <thetext># (Part of) Foundation Framework
```
$small-range: (0em, 40em); /* 0, 640px */
$medium-range: (40.063em, 64em); /* 641px, 1024px */
$large-range: (64.063em, 90em); /* 1025px, 1440px */
$xlarge-range: (90.063em, 120em); /* 1441px, 1920px */
$xxlarge-range: (120.063em); /* 1921px */

// Media Queries
$screen: &quot;only screen&quot; !default;

$landscape: &quot;#{$screen} and (orientation: landscape)&quot; !default;
$portrait: &quot;#{$screen} and (orientation: portrait)&quot; !default;

$small-up: $screen !default;
$small-only: &quot;#{$screen} and (max-width: #{upper-bound($small-range)})&quot; !default;

$medium-up: &quot;#{$screen} and (min-width:#{lower-bound($medium-range)})&quot; !default;
$medium-only: &quot;#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})&quot; !default;

$large-up: &quot;#{$screen} and (min-width:#{lower-bound($large-range)})&quot; !default;
$large-only: &quot;#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})&quot; !default;

$xlarge-up: &quot;#{$screen} and (min-width:#{lower-bound($xlarge-range)})&quot; !default;
$xlarge-only: &quot;#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})&quot; !default;

$xxlarge-up: &quot;#{$screen} and (min-width:#{lower-bound($xxlarge-range)})&quot; !default;
$xxlarge-only: &quot;#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})&quot; !default;
```</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40522</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-06-13 10:55:03 +0200</bug_when>
            <thetext># Possible solution
Introduce new config in add-css section:
&quot;add-css&quot; : [{ 
    &quot;uri&quot; : &quot;../../abc.core/source/resource/abc/core/chart.css&quot;,
    &quot;media-query&quot;: &quot;screen and (max-width:45em)&quot;
}]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40674</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-07-03 15:29:34 +0200</bug_when>
            <thetext>I fixed this issue by
- create media query listener with callback that toggles a css class
- provide method to add common pre-defined size classes
- add better API Documentation including the default classes and a better description
- add samples for the website API viewer
- Add a small section in the manual</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40675</commentid>
            <who name="Tobias Oberrauch">tobias.oberrauch</who>
            <bug_when>2014-07-03 15:30:17 +0200</bug_when>
            <thetext>Fixed in master with 7845aa408b16c63cd8ed5ca5ce10309cfefd434d</thetext>
          </long_desc>
      
      

    </bug>