<bug>
          <bug_id>3821</bug_id>
          
          <creation_ts>2010-07-01 10:14:00 +0200</creation_ts>
          <short_desc>API-Viewer does not show native JavaScript baseclasses (e.g. &quot;Error&quot;)</short_desc>
          <delta_ts>2014-03-03 15:24:17 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.4</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Peter Schneider">schnepe2</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          
          <qa_contact name="Adrian Olaru">adrian.olaru</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19071</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2010-07-01 10:14:26 +0200</bug_when>
            <thetext>The API viewer does not show the correct base class when a class extends native JavaScript classes (e.g. &quot;Error&quot; or &quot;Array&quot;).

The API-Viewer should show the correct base class for native JavaScript types like &quot;Error&quot; and &quot;Array&quot;.


This can be seen for example at &quot;qx.type.BaseError&quot;. The inheritance hierarchy
shows
-------------------------------
  (C) Object
     +- (C) qx.type.BaseError
-------------------------------

but should show:

-------------------------------
  (C) Error
     +- (C) qx.type.BaseError
-------------------------------
because &quot;qx.type.BaseError&quot; extends &quot;Error&quot;, not &quot;Object&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19078</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-01 14:49:01 +0200</bug_when>
            <thetext>Thanks for the report. :)

--&gt; daniel</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22294</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-17 12:53:34 +0100</bug_when>
            <thetext>This could be useful for the class hierarchy as described but also for return types and parameter. Maybe a good idea is to link to MDC&#39;s documentation for the native types.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22661</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-02-10 11:25:38 +0100</bug_when>
            <thetext>problem is that the json file generated by &quot;./generate.py api&quot; : qx.type.BaseError.json does not contain the native object in the superclass attribute, only qooxdoo objects. i looked around who actually generates this, but i haven&#39;t found the responsible class. my guess is that some python code does this job, and there we need to address this issue first.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22669</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-02-10 15:32:52 +0100</bug_when>
            <thetext>Daniel, could you (or Thomas) have a look, please?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22699</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-02-14 09:54:58 +0100</bug_when>
            <thetext>Changed the API data generation so that the &quot;superClass&quot; attribute is set for qooxdoo classes extending native JavaScript classes (r25002).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22743</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-02-15 11:39:55 +0100</bug_when>
            <thetext>fixed on trunk with rev. 25016</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22755</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2011-02-15 18:24:38 +0100</bug_when>
            <thetext>Sorry, but this fix seems to have created a regression:

When you look at the (trunk) API-Viewer you will see, that the namespace
&quot;qx.type&quot; does not contain any information for class &quot;qx.type.Array&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22768</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2011-02-16 09:43:31 +0100</bug_when>
            <thetext>The regression I&#39;ve reported was due to a different build-setup. Sorry

For the record:
a) create application path
     &quot;$&gt; tool\bin\create-application.py --name _test&quot;
   build API from app-path
     &quot;$&gt; cd _test&quot;
     &quot;$&gt; generate.py api&quot;
   WORKS!

b) Just build the API-Viewer from the components path (component\apiviewer\)
     &quot;$&gt; cd component\apiviewer&quot;
     &quot;$&gt; generate.py&quot;
   DOESN&#39;T WORK.

Somehow I forgot yesterday that option (b) doesn&#39;t work, sorry again</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38329</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:17 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>