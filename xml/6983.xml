<bug>
          <bug_id>6983</bug_id>
          
          <creation_ts>2012-11-08 15:34:00 +0100</creation_ts>
          <short_desc>Allow for rudimentary support of Jython</short_desc>
          <delta_ts>2014-03-03 15:24:35 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Andreas Ecker">qooxdoo</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31293</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2012-11-08 15:34:31 +0100</bug_when>
            <thetext>While not officially supported, several users have been using or trying to use Jython, a Java-based Python implementation to run the qooxdoo toolchain.

The generator takes advantage of explicitly turning on and off garbage collection in certain situations to boost performance, but disabling the GC isn&#39;t supported by the Java VM, see http://bugs.jython.org/issue1175

As a workaround, the GC should be tried to be turned off when using Jython. Certainly, this further decreases performance, so that Jython runs the qooxdoo toolchain significantly slower (by orders of magnitude) than a regular Python implementation. YMMV.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31294</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2012-11-08 15:38:20 +0100</bug_when>
            <thetext>Fix committed to master (0806b39b) for review.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38443</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:24:35 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>