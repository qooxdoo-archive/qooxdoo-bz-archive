<bug>
          <bug_id>1433</bug_id>
          
          <creation_ts>2008-09-25 15:12:00 +0200</creation_ts>
          <short_desc>Misleading error message when &quot;extend&quot; is not used.</short_desc>
          <delta_ts>2014-03-03 15:22:28 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.oo</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Hagendorn">christian.hagendorn</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>5645</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2008-09-25 15:12:47 +0200</bug_when>
            <thetext>See the code and the error. When the &quot;extend&quot; key is used it worked fine.

Code:
=====
qx.Class.define(&quot;demo1.Name&quot;, 
{
  //extend : qx.core.Object,
  
  include : [
    demo1.MMixinA,
    demo1.MMixinB
  ]
});
=====

Error message:
=====
The configuration key &quot;include&quot; in class &quot;demo1.Name&quot; is not allowed!
    throw new Error(&#39;The configu... class &quot;&#39; + name + &#39;&quot; is not allowed!&#39;);
=====</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5663</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-09-29 10:35:29 +0200</bug_when>
            <thetext>to AE. Error messages (i.e. in OO layer) should be checked for comprehensibility.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6919</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-12-15 15:11:12 +0100</bug_when>
            <thetext>@Daniel, please check if there could easily be a better error message for the scenario described (without much code restructuring). In general do the error messages make sense and are they in proper English?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6945</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2008-12-16 10:45:48 +0100</bug_when>
            <thetext>There already is a specific error message for this case. i.e. a non-static class missing the &quot;extend&quot; key. It&#39;s just never thrown because qx.Class.define defaults the class type to &quot;static&quot; if both the &quot;type&quot; and &quot;extend&quot; keys are missing.
Alex suggests checking for the &quot;statics&quot; key to more accurately identify static classes. Thoughts?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8378</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-09 10:14:49 +0100</bug_when>
            <thetext>to 0.8.3</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12027</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-09-08 19:23:00 +0200</bug_when>
            <thetext>Accepted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12028</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-09-08 19:23:44 +0200</bug_when>
            <thetext>Fixed in trunk r20035: qx.Class.define now checks for the &quot;statics&quot; key before setting the class type to &quot;static&quot;. qx.Class.__validateConfig will throw the correct exception if a regular class has no &quot;extend&quot; key. Also added a unit test, qx.test.Class.testMissingExtendKey.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12031</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 20:06:18 +0200</bug_when>
            <thetext>Reopened and reverted last change. It looks trivial at first, but there might be subtle problems due to the modification of static class detection? We should take the chance to review/add unit tests (e.g. for empty classes).
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12032</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 20:07:04 +0200</bug_when>
            <thetext>Moved as enhancement to 0.9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14838</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:30:24 +0100</bug_when>
            <thetext>to 1.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17911</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-04-21 18:03:00 +0200</bug_when>
            <thetext>Fixed in r21979: Added a notice to any validation errors if the class type was implicitly set to &quot;static&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37688</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:28 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>