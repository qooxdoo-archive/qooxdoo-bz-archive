<bug>
          <bug_id>7244</bug_id>
          
          <creation_ts>2013-02-19 11:55:00 +0100</creation_ts>
          <short_desc>Ability to scroll within a drag session</short_desc>
          <delta_ts>2014-03-03 15:20:28 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>martin.wittemann</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32291</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-02-19 11:55:27 +0100</bug_when>
            <thetext>If we are in a drag session, it would be helpful to be able to scroll any scroll-able area. Moving the mouse to the edges of a scroll area should be a trigger to scroll. As long as you stay on an edge, the scrolling should speed up.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33054</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-06-21 10:25:41 +0200</bug_when>
            <thetext>*** Bug 3235 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33831</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-09-04 16:54:03 +0200</bug_when>
            <thetext>Done - implemented as Mixin (&quot;qx.ui.core.MDragDropScrolling&quot;). 

Widgets which now support it:
* qx.ui.form.List
* qx.ui.list.List
* qx.ui.tree.Tree
* qx.ui.tree.VirtualTree
* qx.ui.table.Table

Demos which showcase it:
* Demobrowser =&gt; ui &gt; DragDrop
* Demobrowser =&gt; table &gt; Drang And Drop
* Demobrowser =&gt; virtual &gt; List
* Demobrowser =&gt; virtual &gt; Tree
* Demobrowser =&gt; widget &gt; Tree
* Showcase Desktop =&gt; Drag &amp; Drop
* Feature Config Editor


Commits (master): &#39;git log --grep &quot;BUG #7244&quot; --oneline&#39;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33842</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2013-09-06 17:57:11 +0200</bug_when>
            <thetext>As seen in the &quot;Reorderable&quot; list of demo http://demo.qooxdoo.org/devel/demobrowser/#ui~DragDrop.html

The scrolling doesn&#39;t stop when dropping the item. Please have a look.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33845</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-09-06 21:47:13 +0200</bug_when>
            <thetext>@Andreas: Uh-oh, that&#39;s embarrassing - thanks a lot!

master: a13c923bc1cef54fbe0076bda06b3ee80ee65224</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33887</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-09-11 11:48:05 +0200</bug_when>
            <thetext>well done.

Would you please increase the scroll speed progressive? Starting from a low speed increasing to a max in maybe 1,5 - 2 seconds?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33889</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-09-11 11:59:21 +0200</bug_when>
            <thetext>Scrolling does not stop on DragEnd event.

Drag an item, start scrolling, leave mouse button but don&#39;t move the mouse position. Scrolling does still work. Some if you stop dragging by &quot;escape&quot; key.

Expected: Scrolling stops, if &quot;dragend&quot; event fires.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33890</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-09-11 12:48:45 +0200</bug_when>
            <thetext>(In reply to comment #7)
&gt; ... Expected: Scrolling stops, if &quot;dragend&quot; event fires.

See comment #5.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33902</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-09-12 09:37:29 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; Would you please increase the scroll speed progressive? Starting from a low
&gt; speed increasing to a max in maybe 1,5 - 2 seconds?

The speed depends on the distance to the border of the container and not the time hovered. This is the native behavior of OSX, Linux and windows as far as I could test.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33903</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-09-12 10:35:08 +0200</bug_when>
            <thetext>You are right, OS are doing like you said, but our implementation reacts to sudden. I guess the way with the distance is a good one, but please implement the progressivity. Top speed should only be appeared on the very next pixel to the borders.

A good example is chrome I guess. 

(In reply to comment #9)
&gt; (In reply to comment #6)
&gt; &gt; Would you please increase the scroll speed progressive? Starting from a low
&gt; &gt; speed increasing to a max in maybe 1,5 - 2 seconds?
&gt; 
&gt; The speed depends on the distance to the border of the container and not the
&gt; time hovered. This is the native behavior of OSX, Linux and windows as far as I
&gt; could test.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>33934</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-09-16 20:57:55 +0200</bug_when>
            <thetext>@Mustafa: Your point is valid. 

I&#39;ve changed basically two things: 

* The scrollbar size (i.e. height or width) is now taken into account. This means that a widget with tiny dimensions (e.g. 300x500) scrolls slower than a bigger one (e.g. 600x800).

* There is now a dragScrollSlowDownFactor which can be overridden by the widget to adapt the scrolling speed individually.

master: 2b76d99ca7ada809ca5c638cfb8a3a65749d59a5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34375</commentid>
              <attachid>1291</attachid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2013-11-22 16:50:14 +0100</bug_when>
            <thetext>Created attachment 1291
Patch file to bind drag scrolling to widget queue

In an environment with a virtual widget, which renders a big amount of virtual items, scrolling is an expensive task. As I could see in some cases the event chain of mouse events are breaking, which also breaks drag event chain.

A positive effect was to synchronize the scroll method with the widget queue. Virtual scroller (pane) is also bound to widget queue. This should prevent timing issues.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34468</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-12-03 09:51:14 +0100</bug_when>
            <thetext>Richi, please check that it works in the common use case and close this bug and open a follow up bug for the issue in Mustafas use case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34481</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2013-12-03 15:06:31 +0100</bug_when>
            <thetext>Fixed the &#39;common use case&#39; (Math.floor() the scroll amount) and added follow-up bug for Mustafa&#39;s Use Case (bug #7927).

master: 72940da7b3523741b8060b0ca8855e66e2f25c1e</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36901</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:28 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>1291</attachid>
            <date>2013-11-22 16:50:00 +0100</date>
            <delta_ts>2013-11-22 16:50:14 +0100</delta_ts>
            <desc>Patch file to bind drag scrolling to widget queue</desc>
            <filename>0001-[MAMOSCLIENT-486]-MDragDropScrolling-bound-to-widget-queue.patch</filename>
            <type>text/plain</type>
            <size>4140</size>
            <attacher>mustafa.sak</attacher>
            
              <data encoding="base64">RnJvbSBmMGJmOGQ0YzI3NzMyN2JiMWFlY2E1Y2UwNjVlZmUzZjQyMmIxODEyIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBNdXN0YWZhIFNhayA8bXVzdGFmYS5zYWtAMXVuZDEuZGU+CkRh
dGU6IEZyaSwgMjIgTm92IDIwMTMgMTY6MzU6NTcgKzAxMDAKU3ViamVjdDogW1BBVENIXSBbTUFN
T1NDTElFTlQtNDg2XSBNRHJhZ0Ryb3BTY3JvbGxpbmcgYm91bmQgdG8gd2lkZ2V0IHF1ZXVlCgot
LS0KIC4uLi9zb3VyY2UvY2xhc3MvcXgvdWkvY29yZS9NRHJhZ0Ryb3BTY3JvbGxpbmcuanMgIHwg
ICA2NCArKysrKysrKysrKysrKy0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDQ2IGluc2VydGlvbnMo
KyksIDE4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3Fvb3hkb28vZnJhbWV3b3JrL3NvdXJj
ZS9jbGFzcy9xeC91aS9jb3JlL01EcmFnRHJvcFNjcm9sbGluZy5qcyBiL3Fvb3hkb28vZnJhbWV3
b3JrL3NvdXJjZS9jbGFzcy9xeC91aS9jb3JlL01EcmFnRHJvcFNjcm9sbGluZy5qcwppbmRleCBl
ZTJiZjhjLi5iMDM4NmQxIDEwMDY0NAotLS0gYS9xb294ZG9vL2ZyYW1ld29yay9zb3VyY2UvY2xh
c3MvcXgvdWkvY29yZS9NRHJhZ0Ryb3BTY3JvbGxpbmcuanMKKysrIGIvcW9veGRvby9mcmFtZXdv
cmsvc291cmNlL2NsYXNzL3F4L3VpL2NvcmUvTURyYWdEcm9wU2Nyb2xsaW5nLmpzCkBAIC03OSw2
ICs3OSwyOSBAQCBxeC5NaXhpbi5kZWZpbmUoInF4LnVpLmNvcmUuTURyYWdEcm9wU2Nyb2xsaW5n
IiwKICAgICBfX3hEaXJzIDogbnVsbCwKICAgICBfX3lEaXJzIDogbnVsbCwKIAorICAgIF9fc2Ny
b2xsTWV0YURhdGEgOiBudWxsLAorICAgIF9faXNTY3JvbGxpbmcgOiBudWxsLAorCisKKyAgICAv
KioKKyAgICAgKiBEZXRlcm1pbmVzIGlmIHdpZGdldCBpcyBzY3JvbGxpbmcgb24gYSBkcmFnIHNl
cXVlbmNlLgorICAgICAqIEByZXR1cm4ge0Jvb2xlYW59IFJldHVybnMgPGNvZGU+dHJ1ZTwvY29k
ZT4gaWYgY3VycmVudGx5IHNjcm9sbGluZworICAgICAqLworICAgIGlzU2Nyb2xsaW5nT25EcmFn
IDogZnVuY3Rpb24oKQorICAgIHsKKyAgICAgIHJldHVybiAhISh0aGlzLl9faXNTY3JvbGxpbmcp
OworICAgIH0sCisKKworICAgIC8vb3ZlcnJpZGRlbgorICAgIHN5bmNXaWRnZXQgOiBmdW5jdGlv
bihqb2JzKQorICAgIHsKKyAgICAgIGlmIChqb2JzLnNjcm9sbEJ5RHJhZyAmJiB0aGlzLl9fc2Ny
b2xsTWV0YURhdGEpIHsKKyAgICAgICAgdGhpcy5fc2Nyb2xsQnkodGhpcy5fX3Njcm9sbE1ldGFE
YXRhLnNjcm9sbGFibGUsIAorICAgICAgICAgIHRoaXMuX19zY3JvbGxNZXRhRGF0YS5heGlzLCB0
aGlzLl9fc2Nyb2xsTWV0YURhdGEuZXhjZWVkYW5jZUFtb3VudCk7CisgICAgICB9CisgICAgfSwK
KwogICAgIC8qKgogICAgICAqIEZpbmRzIHRoZSBmaXJzdCBzY3JvbGxhYmxlIHBhcmVudCAoaW4g
dGhlIHBhcmVudCBjaGFpbikuCiAgICAgICoKQEAgLTI0Myw3ICsyNjYsNyBAQCBxeC5NaXhpbi5k
ZWZpbmUoInF4LnVpLmNvcmUuTURyYWdEcm9wU2Nyb2xsaW5nIiwKICAgICAgKi8KICAgICBfY2Fs
Y3VsYXRlU2Nyb2xsQW1vdW50IDogZnVuY3Rpb24oc2Nyb2xsYmFyU2l6ZSwgZXhjZWVkYW5jZUFt
b3VudCkKICAgICB7Ci0gICAgICByZXR1cm4gKChzY3JvbGxiYXJTaXplIC8gMTAwKSAqIGV4Y2Vl
ZGFuY2VBbW91bnQpICogdGhpcy5nZXREcmFnU2Nyb2xsU2xvd0Rvd25GYWN0b3IoKTsKKyAgICAg
IHJldHVybiBNYXRoLmZsb29yKCgoc2Nyb2xsYmFyU2l6ZSAvIDEwMCkgKiBleGNlZWRhbmNlQW1v
dW50KSAqIHRoaXMuZ2V0RHJhZ1Njcm9sbFNsb3dEb3duRmFjdG9yKCkpOwogICAgIH0sCiAKICAg
ICAvKioKQEAgLTI2MiwxMSArMjg1LDE2IEBAIHF4Lk1peGluLmRlZmluZSgicXgudWkuY29yZS5N
RHJhZ0Ryb3BTY3JvbGxpbmciLAogICAgICAgICAgIHNjcm9sbGJhclNpemUgPSBheGlzID09PSAi
eCIgPyBib3VuZHMud2lkdGggOiBib3VuZHMuaGVpZ2h0LAogICAgICAgICAgIGFtb3VudCA9IHRo
aXMuX2NhbGN1bGF0ZVNjcm9sbEFtb3VudChzY3JvbGxiYXJTaXplLCBleGNlZWRhbmNlQW1vdW50
KTsKIAotICAgICAgaWYgKHRoaXMuX2lzU2Nyb2xsYmFyRXhjZWVkaW5nTWF4UG9zKHNjcm9sbGJh
ciwgYXhpcywgYW1vdW50KSkgewotICAgICAgICB0aGlzLl9fZHJhZ1Njcm9sbFRpbWVyLnN0b3Ao
KTsKLSAgICAgIH0KLQogICAgICAgc2Nyb2xsYmFyLnNjcm9sbEJ5KGFtb3VudCk7CisKKyAgICAg
IGlmICghdGhpcy5faXNTY3JvbGxiYXJFeGNlZWRpbmdNYXhQb3Moc2Nyb2xsYmFyLCBheGlzLCBh
bW91bnQpICYmIHRoaXMuX19zY3JvbGxNZXRhRGF0YSkgeworICAgICAgICBxeC5ib20uQW5pbWF0
aW9uRnJhbWUucmVxdWVzdChmdW5jdGlvbiAoKSB7CisgICAgICAgICAgcXgudWkuY29yZS5xdWV1
ZS5XaWRnZXQuYWRkKHRoaXMsICJzY3JvbGxCeURyYWciKTsKKyAgICAgICAgICB0aGlzLl9faXNT
Y3JvbGxpbmcgPSB0cnVlOworICAgICAgICB9LCB0aGlzKTsKKyAgICAgIH0gZWxzZSB7CisgICAg
ICAgIHRoaXMuX19pc1Njcm9sbGluZyA9IGZhbHNlOworICAgICAgfQogICAgIH0sCiAKICAgICAv
KgpAQCAtMjgyLDEwICszMTAsOCBAQCBxeC5NaXhpbi5kZWZpbmUoInF4LnVpLmNvcmUuTURyYWdE
cm9wU2Nyb2xsaW5nIiwKICAgICAgKi8KICAgICBfX29uRHJhZyA6IGZ1bmN0aW9uKGUpCiAgICAg
ewotICAgICAgaWYgKHRoaXMuX19kcmFnU2Nyb2xsVGltZXIpIHsKLSAgICAgICAgLy8gc3RvcCBs
YXN0IHNjcm9sbCBhY3Rpb24KLSAgICAgICAgdGhpcy5fX2RyYWdTY3JvbGxUaW1lci5zdG9wKCk7
Ci0gICAgICB9CisgICAgICB0aGlzLl9fc2Nyb2xsTWV0YURhdGEgPSBudWxsOworICAgICAgdGhp
cy5fX2lzU2Nyb2xsaW5nID0gZmFsc2U7CiAKICAgICAgIHZhciBzY3JvbGxhYmxlID0gdGhpcy5f
ZmluZFNjcm9sbGFibGVQYXJlbnQoZS5nZXRPcmlnaW5hbFRhcmdldCgpKTsKIApAQCAtMzEzLDEy
ICszMzksMTUgQEAgcXguTWl4aW4uZGVmaW5lKCJxeC51aS5jb3JlLk1EcmFnRHJvcFNjcm9sbGlu
ZyIsCiAgICAgICAgIGlmICh0aGlzLl9pc1Njcm9sbGJhclZpc2libGUoc2Nyb2xsYWJsZSwgYXhp
cykpIHsKICAgICAgICAgICBleGNlZWRhbmNlQW1vdW50ID0gdGhpcy5fY2FsY3VsYXRlVGhyZXNo
b2xkRXhjZWVkYW5jZShkaWZmW2VkZ2VUeXBlXSwgdGhpcy5fZ2V0VGhyZXNob2xkQnlFZGdlVHlw
ZShlZGdlVHlwZSkpOwogCi0gICAgICAgICAgdGhpcy5fX2RyYWdTY3JvbGxUaW1lciA9IG5ldyBx
eC5ldmVudC5UaW1lcig1MCk7Ci0gICAgICAgICAgdGhpcy5fX2RyYWdTY3JvbGxUaW1lci5hZGRM
aXN0ZW5lcigiaW50ZXJ2YWwiLAotICAgICAgICAgICAgZnVuY3Rpb24oc2Nyb2xsYWJsZSwgYXhp
cywgYW1vdW50KSB7Ci0gICAgICAgICAgICAgIHRoaXMuX3Njcm9sbEJ5KHNjcm9sbGFibGUsIGF4
aXMsIGFtb3VudCk7Ci0gICAgICAgICAgICB9LmJpbmQodGhpcywgc2Nyb2xsYWJsZSwgYXhpcywg
ZXhjZWVkYW5jZUFtb3VudCkpOwotICAgICAgICAgIHRoaXMuX19kcmFnU2Nyb2xsVGltZXIuc3Rh
cnQoKTsKKyAgICAgICAgICB0aGlzLl9fc2Nyb2xsTWV0YURhdGEgPSB7CisgICAgICAgICAgICBz
Y3JvbGxhYmxlIDogc2Nyb2xsYWJsZSwKKyAgICAgICAgICAgIGF4aXMgOiBheGlzLAorICAgICAg
ICAgICAgZXhjZWVkYW5jZUFtb3VudCA6IGV4Y2VlZGFuY2VBbW91bnQKKyAgICAgICAgICB9Owor
CisKKyAgICAgICAgICBxeC51aS5jb3JlLnF1ZXVlLldpZGdldC5hZGQodGhpcywgInNjcm9sbEJ5
RHJhZyIpOworICAgICAgICAgIHRoaXMuX19pc1Njcm9sbGluZyA9IHRydWU7CiAgICAgICAgIH0K
ICAgICAgIH0KICAgICB9LApAQCAtMzMwLDkgKzM1OSw4IEBAIHF4Lk1peGluLmRlZmluZSgicXgu
dWkuY29yZS5NRHJhZ0Ryb3BTY3JvbGxpbmciLAogICAgICAqLwogICAgIF9fb25EcmFnZW5kIDog
ZnVuY3Rpb24oZSkKICAgICB7Ci0gICAgICBpZiAodGhpcy5fX2RyYWdTY3JvbGxUaW1lcikgewot
ICAgICAgICB0aGlzLl9fZHJhZ1Njcm9sbFRpbWVyLnN0b3AoKTsKLSAgICAgIH0KKyAgICAgIHRo
aXMuX19zY3JvbGxNZXRhRGF0YSA9IG51bGw7CisgICAgICB0aGlzLl9faXNTY3JvbGxpbmcgPSBm
YWxzZTsKICAgICB9CiAgIH0KIH0pOwotLSAKMS43LjkuNQoK
</data>

          </attachment>
      

    </bug>