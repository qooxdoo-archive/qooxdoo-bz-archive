<bug>
          <bug_id>9040</bug_id>
          
          <creation_ts>2015-03-23 15:39:00 +0100</creation_ts>
          <short_desc>Run eslint (apps, framework, toolchain) within CI</short_desc>
          <delta_ts>2015-03-25 14:45:30 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>testing</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Richard Sternagel">richard.sternagel</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>42924</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-23 15:39:47 +0100</bug_when>
            <thetext>Check all code (apps, framework, toolchain) with &#39;eslint&#39;. Use top-level Gruntfile task eslint for that:

$ grunt eslint</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42936</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2015-03-24 19:17:09 +0100</bug_when>
            <thetext>Back story:
We needed a way to run eslint with the default format *and* the &quot;tap&quot; format. 

Main plot:
Unfortunately the author of &quot;grunt-eslint&quot; doesn&#39;t want to support cmd line option processing for &quot;format&quot; (which would work in combination with &quot;grunt-run-grunt&quot; and their gruntOptions feature):

https://github.com/sindresorhus/grunt-eslint/issues/60

So I decided to go with grunt targets (see hash below).

This accomplishes the goal with config only, but has one drawback. Running &quot;$ grunt eslint&quot; within e.g. the framework dir runs *all* targets (eslint:default *and* eslint:ci). Unfortunately this is still a popular open GitHub issue (no default task if no target specified) in the Grunt repo. So you now need to run explicitly &quot;eslint:default&quot; in such cases.

https://github.com/gruntjs/grunt/issues/815

End of the story:
Use new top-level Gruntfile task eslintci:

$ grunt eslintci

master: 7bd12bab2518ce1d6caa5311583c31ed37d4e9ad</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42942</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-03-25 14:45:30 +0100</bug_when>
            <thetext>Epilogue:
Added Jenkins jobs that run eslint to our CI setup.</thetext>
          </long_desc>
      
      

    </bug>