<bug>
          <bug_id>4305</bug_id>
          
          <creation_ts>2010-11-11 10:36:00 +0100</creation_ts>
          <short_desc>Memory leak: the Json-store should automatically dispose the old models</short_desc>
          <delta_ts>2010-11-15 16:22:02 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>21232</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2010-11-11 10:36:33 +0100</bug_when>
            <thetext>We are using a Json-Store. The Json-Store is automatically reloaded every few minutes. This reload causes a memory leak.

To fix this memory leak, I would recommend to add a functionality to the Json-Store that automatically disposes the old model after the new model has been loaded:

qx.Class.define(&quot;qx.data.store.Json&quot;, {
  members: {
    __requestCompleteHandler : function(ev)
    {
        // New:
        var oldModel = this.getModel();

        this.setModel(this._marshaler.toModel(data));

        // fire complete event
        this.fireDataEvent(&quot;loaded&quot;, this.getModel());

        // New:
        if( oldModel ) {
          oldModel.dispose();
        }


See also [Bug 4236].</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21292</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-15 11:45:21 +0100</bug_when>
            <thetext>Removed the old model if available on a reload.

trunk: r23810
1.2.x: r23811</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21309</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2010-11-15 16:22:02 +0100</bug_when>
            <thetext>The fix has been successfully tested.</thetext>
          </long_desc>
      
      

    </bug>