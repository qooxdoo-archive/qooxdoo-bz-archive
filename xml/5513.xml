<bug>
          <bug_id>5513</bug_id>
          
          <creation_ts>2011-08-12 13:52:00 +0200</creation_ts>
          <short_desc>regexp ascii only aware patterns used throughout the framework</short_desc>
          <delta_ts>2014-03-03 08:48:07 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gabriel Munteanu">jajalinux</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>thron7</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26476</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-08-12 13:52:15 +0200</bug_when>
            <thetext>As happened in bug: http://bugzilla.qooxdoo.org/show_bug.cgi?id=5229 , \b or \w are ASCII only and not UTF-8. As our framework uses UTF-8, we must be able to handle UTF-8 strings. But there are many places where these regexp patterns are used, so we can&#39;t handle UTF-8 strings.
1 example:
camelCase and toArray methods in qx.lang.String.
potentially more methods like these exist in our framework.
they must be made UTF-8 compatible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26485</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-08-15 09:12:50 +0200</bug_when>
            <thetext>Gabriel, please come up with a list of methods which are not capable of UTF8.

@Thomas, added you as CC to have an eye on the topic because you are the pro when it comes to UTF8.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26574</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-08-23 14:20:17 +0200</bug_when>
            <thetext>Just to clarify: We need to make regexp&#39;s *Unicode* aware (not UTF-8 which is 
just an encoding, mostly for transport and serialization, but I doubt many JS 
engines use UTF-8 internally).

http://www.regular-expressions.info/javascript.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26575</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-08-23 14:47:14 +0200</bug_when>
            <thetext>I was surprised to find that JS regexp engines do not support Unicode in 
character groups and assertions such as \w or \b. My concern is that the places 
in the framework that are directly affected by this go far beyond utility 
functions such as &#39;capitalize&#39;  or &#39;camelCase&#39; which are directly used to 
modify strings.

E.g. there must be multiple places in the framework where class names, method 
or property names are analysed using regexp&#39;s, all of which can be made of 
unicode characters. Here are just two apparent examples:

qx.lang.Function:
   var fcnReResult = fcn.toString().match(/function\s*(\w*)\s*\(.*/);

qx.bom.element.Class:
   var reg = new RegExp(&quot;\\b&quot; + classes.join(&quot;\\b|\\b&quot;) + &quot;\\b&quot;, &quot;g&quot;);

Maybe this begs the question whether we should introduce an own class, like 
qx.lang.RegExp that handles all of this transparently and can be used 
throughout the framework and in application classes, although it&#39;s unclear to 
me what and how it should implement .

http://www.regular-expressions.info/javascriptexample.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26702</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-09-07 16:44:37 +0200</bug_when>
            <thetext>Maybe we should rise the questions if the benefit of having unicode classnames is worth the effort of if we should just restrict the whole thing to ASCII.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36144</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:48:07 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>