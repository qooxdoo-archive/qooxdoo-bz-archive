<bug>
          <bug_id>7023</bug_id>
          
          <creation_ts>2012-11-21 10:24:00 +0100</creation_ts>
          <short_desc>Detect PhantomJS</short_desc>
          <delta_ts>2014-03-03 15:22:12 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Johannes Kissel">johannes.kissel</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31402</commentid>
            <who name="Johannes Kissel">johannes.kissel</who>
            <bug_when>2012-11-21 10:24:45 +0100</bug_when>
            <thetext>PhantomJS is currently detected as Safari.

I need to disable some tests via MRequirements, for which I&#39;m not able to figure out, why they do not run in PhantomJS.

My current implementation:

  hasNoPhantomJs : function() {
    return ! /phantom/i.test(navigator.userAgent);
  }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31422</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-22 08:10:27 +0100</bug_when>
            <thetext>We talked about that recently and don&#39;t want to return Phantom instead of safari because it is somehow a safari browser and we don&#39;t want to change all spots in the framework where we test on safari and add Phantom as well. Still, the possibility for detecting Phantom is a valid use case and we will figure out how we can get that done.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31593</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2012-12-03 16:15:03 +0100</bug_when>
            <thetext>We went over this again in detail and decided that it shouldn&#39;t be a problem to have &quot;browser.name&quot; return &quot;phantomjs&quot; instead of &quot;safari&quot;. There are only two lines in the framework code that explicitly check for Safari (in qx.bom.webfonts.Manager and qx.bom.Label) and both are concerned with visual stuff that shouldn&#39;t cause anything to break in PhantomJS.

Fixed with 11087e2d31c3e0007c04715160077ccf2be81347 (master)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37589</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:12 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>