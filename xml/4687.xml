<bug>
          <bug_id>4687</bug_id>
          
          <creation_ts>2011-02-21 00:45:00 +0100</creation_ts>
          <short_desc>toolbar&#39;s overflow handling does not work on dynamically added buttons</short_desc>
          <delta_ts>2011-04-11 08:59:51 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.bars</component>
          <version>1.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.3.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>cheef-daniel</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22816</commentid>
            <who name="">cheef-daniel</who>
            <bug_when>2011-02-21 00:45:34 +0100</bug_when>
            <thetext>Hi, just started to learn qooxdoo.

I&#39;m trying to use the toolbar similar like a taskbar.
On runtime I dynamically add and remove qx.ui.form.ToggleButtons to the toolbar by using toolbar&#39;s add() and remove() function. (Just  hiding them is not a option for me)

The overflow-handling of the toolbar seems not to handle this case, it only works when I resize my browser (Firefox/IE).

I looked at ToolBar&#39;s code, there is only a listener for onResize which triggers _recalculateOverflow, but _recalculateOverflow seems not get called when using remove() or add() functions.

Then I extended the ToolBar class and just tried to call _recalculateOverflow(qx.ui.core.Viewport.getWidth()) myself after add(button)/remove(button). It didn&#39;t work well, this just seems to be related with getting the correct width, but worked a little better than before. 

Problem I have with this solution: when I resize my browser a few times, the whole browser freezes completely up. I think it seems not to freeze when I don&#39;t call _recalculateOverflow manually after add/remove.


Next step, Instead of using _recalculateOverflow above I then used:

this.add(button); //(or this.remove(button))
//forcing reinitialization of overflow handling
this._applyOverflowHandling(false);
this._applyOverflowHandling(true)

This method seems to work better because I don&#39;t have to determine the correct width. But with this the browser keeps freezing too.


I hope you can fix the overflow-handling with dynamically added/removed buttons or other elements internally, or/and give me a hint what could cause these freezes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22817</commentid>
            <who name="">cheef-daniel</who>
            <bug_when>2011-02-21 02:12:25 +0100</bug_when>
            <thetext>I added a test case to playground, the toolbar will growing instead of showing the overflow indicator:

http://tinyurl.com/45z9zlp</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22821</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-21 09:31:58 +0100</bug_when>
            <thetext>Thanks for the report. I&#39;ll take care of that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22941</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-24 13:54:44 +0100</bug_when>
            <thetext>The adding of childs does not trigger a resize which caused that issue. But it also depends in the parent layout and much more things. Fixed that with overriding the child handling methods and trigger the overflow recalculation. 

trunk: r25217, r25215
1.3.x: r25220, r25218</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22986</commentid>
            <who name="">cheef-daniel</who>
            <bug_when>2011-02-28 04:36:27 +0100</bug_when>
            <thetext>Thank you for fixing this. Works fine here now.

Had first some issues in Firefox (IE was fine):
if I added new childs to toolbar to fast, the indicator appeared to late and half out of screen, it then never disappered when removing all childs.

Atm I don&#39;t have this bug anymore, don&#39;t know why. Things changed is a update to Firefox beta 12 from 11 and now I develop with qooxdoo&#39;s trunk instead of 1.3 with applied patches from 1.3.x r25220, r25218.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22987</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-02-28 08:03:31 +0100</bug_when>
            <thetext>Thanks for the feedback!</thetext>
          </long_desc>
      
      

    </bug>