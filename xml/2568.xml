<bug>
          <bug_id>2568</bug_id>
          
          <creation_ts>2009-07-09 16:54:00 +0200</creation_ts>
          <short_desc>Optimization: Optimize non-numeric, non-string literals</short_desc>
          <delta_ts>2014-03-03 08:46:48 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10830</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-07-09 16:54:51 +0200</bug_when>
            <thetext>Optimize non-numeric, non-string literal values (true, false, null, undefined, 
...), by assigning them to a variable and use the variable in places where the 
literal was used (e.g. comparisons).

function(){var bool_true = true; ...
   ...
   if (b==bool_true) {...
}

(Variable optimization can then shorten the variable names). The example uses a 
scoped variable but this doesn&#39;t have to be the case; global vars would work 
too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22303</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-01-17 14:58:17 +0100</bug_when>
            <thetext>This should be tested if its worth the effort of building an optimization. Adrian, please check what the benefit would be.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22402</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2011-01-25 13:45:36 +0100</bug_when>
            <thetext>This is really a case where an optimization really trumps code readability. We, as JavaScript developers are used to true and false and null...and all the other primitive values.


Also, let&#39;s take for example the 
  
  var bool_true = true; 

Will be this declared in all the functions where true is used, or will be declared somewhere up on the stack, maybe in the parent function, or &quot;better&quot; in the global object?

In the first case, we should make sure that we declare all of these variables upfront in all of our functions. This is cumbersome.

The second case will actually make our code ran slower, because of the variable lookup. 

Overall, I think that this optimization is a little too much. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22404</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-25 14:13:44 +0100</bug_when>
            <thetext>(In reply to comment #2)

Again, same misunderstanding as in bug#2570. You should devise some hand-crafted tests and time measurements that allow for an informed decision about the relevance of such *automatically applied* optimizations. Please go ahead.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26005</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-13 17:34:53 +0200</bug_when>
            <thetext>-&gt; to unspec</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35670</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:48 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>