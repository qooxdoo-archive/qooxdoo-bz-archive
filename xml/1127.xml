<bug>
          <bug_id>1127</bug_id>
          
          <creation_ts>2008-08-04 18:07:00 +0200</creation_ts>
          <short_desc>Revise relative path handling of imported configs</short_desc>
          <delta_ts>2014-03-03 08:46:11 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4135</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-08-04 18:07:00 +0200</bug_when>
            <thetext>Currently, relative paths are not treated when they stem from imported configs. The current work-around is to hide relative paths behind macros that get overridden by the importing config (where relative path handling then works).

The problem is that in the fully expanded job, the information *where* a key stems from is lost, and all remaining relative paths are treated as if they were from the current config. 
- Either config entries have to retain a reference to their originating config (as do jobs already), so they can be treated correctly at evaluation time.
- Or paths have to be treated by the Config handler at import time, which has the ugly consequence that the Config handler has to know all the places where relative paths might show up.
- Or path values are tagged (e.g. by a &#39;path:&#39; prefix), so the Config handler can do the path correction without a-priori knowledge (which has the ugly consequence of extra syntax, namely the &#39;path:&#39; prefix in values).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5094</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:10:07 +0200</bug_when>
            <thetext>Severity is not enhancement so this might be defects. Please re-categorize if needed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5328</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-06 15:36:48 +0200</bug_when>
            <thetext>These internals should be fixed ASAP before building more features on top.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7890</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 11:15:53 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35441</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:11 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>