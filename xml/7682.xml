<bug>
          <bug_id>7682</bug_id>
          
          <creation_ts>2013-08-26 13:15:00 +0200</creation_ts>
          <short_desc>Release Notes: Add List of API Changes</short_desc>
          <delta_ts>2014-03-03 09:46:32 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>website</product>
          <component>other</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>33724</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-08-26 13:15:58 +0200</bug_when>
            <thetext>The release notes for a release should have a comprehensive list of changes 
that come with the new API. It should list

- APIs that have been removed (after being deprecated in the previous release)
- APIs that have been added
- APIs that have been changed (rare)

against the relevant previous release.

A good approach to achieve this is to compare the released API docs of the 
framework classes. A tool could go through the set of .json files of 
framework/api/script, detect new classes, missing classes, and for existing 
classes diff the two .json files. The output should consist of a list of API 
&quot;paths&quot; (classname/classfeature) and pot. links to its online documentation.</thetext>
          </long_desc>
      
      

    </bug>