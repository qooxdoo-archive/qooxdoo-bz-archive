<bug>
          <bug_id>2279</bug_id>
          
          <creation_ts>2009-04-22 12:36:00 +0200</creation_ts>
          <short_desc>Create generator config viewer application</short_desc>
          <delta_ts>2014-03-03 08:47:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.config</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>9463</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2009-04-22 12:36:12 +0200</bug_when>
            <thetext>It would be nice to have an interactive documentation viewer similar to the API Viewer for the generator and its various options and default jobs. It could display a tree generated from the structure of a config.json file:

Generator
  config
    &quot;name&quot;
    &quot;include&quot;
    	&quot;path&quot;
    	...
    	
Similarly, command line options and default job configurations could also be displayed as trees. Clicking on a tree item would open the relevant documentation: Description, type, possible values and so on.

This documentation could be stored in text files with a directory structure corresponding to the config JSON&#39;s.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35747</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:00 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>