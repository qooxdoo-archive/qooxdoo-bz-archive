<bug>
          <bug_id>1984</bug_id>
          
          <creation_ts>2009-02-23 13:36:00 +0100</creation_ts>
          <short_desc>Add support for improved loader which supports variants</short_desc>
          <delta_ts>2014-03-03 08:47:35 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>alexander.steitz</cc>
    
    <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>7977</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-23 13:36:28 +0100</bug_when>
            <thetext>qooxdoo has a few features which are that deeply hidden into the system that they are far from optiomal - regarding usage - than would be possible.

One thing which is important here would be to benefit from the variant support added with qooxdoo 0.7, but never made available through an intelligent loader system.

GWT has such a system built into the normal setup so it&#39;s easily available for every GWT user. The name for the system in GWT is &quot;Deferred Binding&quot;. 

There are a few videos available at Youtube:
http://www.youtube.com/watch?v=uX1Nhr75zDI
http://www.youtube.com/watch?v=nvti32k4xyU

Basically GWT creates a &quot;bootstrap&quot; selection script which is capable of choosing the right variant combination. In GWT this also includes languages which are supported in a specific built. It generates unique IDs from the indivual set which can also be generated on the client side based on the incoming data - maybe some kind of hash algorithm. In GWT this also includes respecting the built time of the files so that all files my be cached for-ever as with every update the file loaded are named differently (except the loader script which is marked as non-cachable).

One way to select a script would be using GET parameters on the script loader or one the page URL like: http://mypage/?variants=lang:de,engine:gecko,theme:classic</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7978</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-02-23 13:38:12 +0100</bug_when>
            <thetext>Also interesting how this is combinable with the idea of a single-script-source for low-level use-cases. Needs to post-pone the load event until the variant-selected script is loaded as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12304</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-15 11:22:22 +0200</bug_when>
            <thetext>As enhancement, also adding Thomas and Alex on CC, for loader script or low-level loading, respectively.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12312</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-15 13:15:11 +0200</bug_when>
            <thetext>Not sure if we need some kind of qooxdoo low-level classes here. For me the best solution would be to have some kind of static pre-loader script which is not based on qooxdoo classes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12318</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-15 13:55:08 +0200</bug_when>
            <thetext>&quot;low-level&quot; referred to your own comment #1, since addressing qooxdoo&#39;s use as low-level lib should also be handled in such a variant-specific loading. Certainly, the more &quot;native&quot; the loader, the better.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12324</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-09-15 16:15:47 +0200</bug_when>
            <thetext>Sorry, Andreas. Yes you are right. The more native the better. Right.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35951</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:35 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>