<bug>
          <bug_id>2966</bug_id>
          
          <creation_ts>2009-10-22 11:15:00 +0200</creation_ts>
          <short_desc>Several issues with AbstractImage cell renderer</short_desc>
          <delta_ts>2014-03-03 15:20:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Matthias Reuter">creu</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>13423</commentid>
            <who name="Matthias Reuter">creu</who>
            <bug_when>2009-10-22 11:15:41 +0200</bug_when>
            <thetext>There are several issues with qx.ui.table.cellrenderer.AbstractImage (rev 20037):

1) in __getImageSize in line 143 there is a comma, where there should be a semicolon: width = ResourceManager.getImageWidth(source),

2) _getContentHtml is buggy. I had a case where both imageData.width and height were null, resulting in a style attribute string containing &quot;width:nullpx;height:nullpx&quot;. In another case I had specified a tooltip, though no image url. Due to a missing whitespace character, this leads to an html string &lt;divtitle=&quot;Tooltip&quot;&gt;&lt;/div&gt;, which at least firefox interpreted as an opening divtitle-tag (which of course is unknown) and a closing div-tag (which is fatal to the application).

Though a fast solution just requires the insertion of one whitespace, in my opionion a more stable approach would be return a DOM element instead of HTML.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13511</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-10-26 12:24:36 +0100</bug_when>
            <thetext>to me</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13722</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-10-30 10:12:45 +0100</bug_when>
            <thetext>(In reply to comment #0)
&gt; There are several issues with qx.ui.table.cellrenderer.AbstractImage (rev
&gt; 20037):
&gt; 
&gt; 1) in __getImageSize in line 143 there is a comma, where there should be a
&gt; semicolon: width = ResourceManager.getImageWidth(source),

fixed

&gt; 2) _getContentHtml is buggy. I had a case where both imageData.width and height
&gt; were null, resulting in a style attribute string containing
&gt; &quot;width:nullpx;height:nullpx&quot;.

In this case AbstractImage will now fall back to the default size 16x16. However the image sizes should always be provided.

&gt; In another case I had specified a tooltip, though
&gt; no image url. Due to a missing whitespace character, this leads to an html
&gt; string &lt;divtitle=&quot;Tooltip&quot;&gt;&lt;/div&gt;, which at least firefox interpreted as an
&gt; opening divtitle-tag (which of course is unknown) and a closing div-tag (which
&gt; is fatal to the application).

Fixed. The tooltip is now applied in a more robust way.

&gt; Though a fast solution just requires the insertion of one whitespace, in my
&gt; opionion a more stable approach would be return a DOM element instead of HTML.

returning DOM elements is more robust be also much slower as well. Since this method is called to render each cell we simply cannot use DOM methods in this place.


fixed in r20541</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14658</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:16:25 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36883</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:26 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>