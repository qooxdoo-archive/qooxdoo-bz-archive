<bug>
          <bug_id>2407</bug_id>
          
          <creation_ts>2009-05-22 12:58:00 +0200</creation_ts>
          <short_desc>selectAll() of disabled TextField leads to error in IE</short_desc>
          <delta_ts>2014-03-03 15:23:05 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>0.7.4</version>
          <rep_platform>IE</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.7.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ivan Furnadjiev">ivan</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>qooxdoo</cc>
    
    <cc>rherrmann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10076</commentid>
            <who name="Ivan Furnadjiev">ivan</who>
            <bug_when>2009-05-22 12:58:38 +0200</bug_when>
            <thetext>Calling selectAll() of disabled TextField leads to the following error in IE:

Message: Can&#39;t move focus to the control because it is invisible, not enabled, or of a type that does not accept the focus.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10099</commentid>
            <who name="Ivan Furnadjiev">ivan</who>
            <bug_when>2009-05-25 14:03:19 +0200</bug_when>
            <thetext>The actual problem is in calling this._inputElement.focus(); in selectAll() function. Why this focus() is needed here? If this is really needed, a fix is to change it to:
if( this.isEnabled() ) {
   this._inputElement.focus();
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10224</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-05-29 12:54:27 +0200</bug_when>
            <thetext>to alex</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10392</commentid>
            <who name="Ivan Furnadjiev">ivan</who>
            <bug_when>2009-06-16 10:38:26 +0200</bug_when>
            <thetext>We ovsereved the same error if TextField is not visible. Proposed fix:
if( this.isEnabled() &amp;&amp; this.isSeeable() ) {
   this._inputElement.focus();
}
And I ask the same question again - is this &quot;this._inputElement.focus();&quot; needed here at all?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10555</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-06-24 17:13:08 +0200</bug_when>
            <thetext>assigned</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10556</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-06-24 17:24:44 +0200</bug_when>
            <thetext>Applied proposed fix of Ivan to solve this issue.

The call for the &quot;focus&quot; method is only needed if the element is seeable and enabled. Otherwise it doesn&#39;t make sense anyway since the &quot;focus&quot; method can only visualize the selection if the DOM input element is enabled.

Thanks Ivan for this fix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10557</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-06-24 17:25:05 +0200</bug_when>
            <thetext>Fixed with Revision #19429</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10558</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2009-06-24 17:42:49 +0200</bug_when>
            <thetext>Could someone please answer the question raised in the description and in comment #1?

&quot;[ ... ] is this &quot;this._inputElement.focus();&quot; needed here at all?&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10563</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-06-25 10:15:27 +0200</bug_when>
            <thetext>(In reply to comment #7)
&gt; Could someone please answer the question raised in the description and in
&gt; comment #1?
&gt; 
&gt; &quot;[ ... ] is this &quot;this._inputElement.focus();&quot; needed here at all?&quot;
See at my comment #5. 

The call is needed if the input element is enabled and visible. The focus is necessary for the incoming key events. If you call &quot;selectAll&quot; you probably want that the user can type ahead inside the textfield or can perform a shortcut like &quot;Ctrl+C&quot;.

Is this answering your question?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10565</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2009-06-25 10:45:26 +0200</bug_when>
            <thetext>(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; &gt; [ ... ]
&gt; &gt; &quot;[ ... ] is this &quot;this._inputElement.focus();&quot; needed here at all?&quot;
&gt; 
&gt; The call is needed if the input element is enabled and visible. The focus is
&gt; necessary for the incoming key events. 
&gt; If you call &quot;selectAll&quot; you probably want that the user can type ahead inside the textfield or can perform a shortcut like
&gt; &quot;Ctrl+C&quot;.
Thanks, this answers my question, however I disagree: selectAll(), should select all the text, no more. Don&#39;t count on probabilities. 
If the user should be able to copy text, I will set the focus. Combining these actions makes the framework inflexible since I cannot just set the selection.
Furthermore the method is unintuitive to use, it is called selectAll() and not selectAllAndFocus().
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10711</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-07-01 15:49:05 +0200</bug_when>
            <thetext>(In reply to comment #9)
&gt; Thanks, this answers my question, however I disagree: selectAll(), should select
&gt; all the text, no more. Don&#39;t count on probabilities.
&gt; If the user should be able to copy text, I will set the focus. Combining these
&gt; actions makes the framework inflexible since I cannot just set the selection.
&gt; Furthermore the method is unintuitive to use, it is called selectAll() and not
&gt; selectAllAndFocus().
Yes, you&#39;re right. &quot;selectAll&quot; is the wrong method here. However, changing this method name would lead to multiple changes in the API since the Spinner, ComboBox, 2 Table cell editors are relying on this method. And maybe there is user code which relies on this behaviour too.

To only set the selection on a textfield a &quot;selectAllWithoutFocus&quot; method could be introduced. This way you can select the textfield without focus and the existing API need no changes.

Is this proposal acceptable for you?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10726</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2009-07-02 10:41:40 +0200</bug_when>
            <thetext>(In reply to comment #10)
&gt; [ .. ]
&gt; To only set the selection on a textfield a &quot;selectAllWithoutFocus&quot; method could
&gt; be introduced. This way you can select the textfield without focus and the
&gt; existing API need no changes.
&gt; Is this proposal acceptable for you?
Sure, we can work around this and use setSelectionStart/Length.
Still, from an API point of view I would consider this a severe bug and rather risk a breaking change than having misleading method names. Just my 2c</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10728</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-07-02 10:52:39 +0200</bug_when>
            <thetext>We should not break the API. I doubt it&#39;s critical for typical use cases. What the existing method (and the one that may be added) does, should be documented in the API docs.

Rüdiger, you suggested to &quot;work around this and use setSelectionStart/Length&quot;. Does it mean you wouldn&#39;t be using such an additional selectAllWithoutFocus() at all?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10742</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2009-07-02 13:51:40 +0200</bug_when>
            <thetext>(In reply to comment #12)
&gt; We should not break the API. I doubt it&#39;s critical for typical use cases. What
&gt; the existing method (and the one that may be added) does, should be documented
&gt; in the API docs.
Just for the record, it is critical for RAP though I am not sure if RAP is a &quot;typical use case&quot;.
Anyway, we can work around this, so it is up to you to leave it or change it.

&gt; 
&gt; Rüdiger, you suggested to &quot;work around this and use setSelectionStart/Length&quot;.
&gt; Does it mean you wouldn&#39;t be using such an additional selectAllWithoutFocus() at
&gt; all?
Yes
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10753</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-07-02 18:11:57 +0200</bug_when>
            <thetext>No, no, I was not talking about RAP being a typical use case or not. It was a general statement about what any qooxdoo user would expect from that very API and how critical the results/behavior would be in an actual app.

What seems obvious is that we should have a method that does just select all text (and not focus). This is indeed missing (AFAIK only in 0.7, not 0.8). Nevertheless, as Alex suggested, one should keep the existing method sellectAll(), also because other 0.7 framework parts and existing 0.7 users rely on its behavior, document that it also focuses the element and that another method (selectAllWithoutFocus()) is available for selection only. Otherwise we&#39;d force users into reviewing and rewriting existing 0.7.x code (including RAP custom widgets).

Isn&#39;t it merely an internal mapping of given SWT API via RAP to qooxdoo? In your RAP code wouldn&#39;t you simply call selectAllWithoutFocus() anywhere you&#39;d call selectAll() now? Of course, that would mean you&#39;re the only ones that need to make an effort, but this is also the advantage, because nobody else and no other code is affected and you might only have a few specific cases to address.

With this additional info, do you also think that&#39;s the best way to proceed, or are we missing anything? Please let me know, or give me a call.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10758</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2009-07-02 20:12:55 +0200</bug_when>
            <thetext>(In reply to comment #14)
&gt; [ ... ]
&gt; With this additional info, do you also think that&#39;s the best way to proceed, or
&gt; are we missing anything? Please let me know, or give me a call.
For RAP there is no need to do anything from your side. We will replace the two or so occurences and we&#39;re done.

My intention was to point out that I consider it a bug calling a method selectAll() that does more than just select text. And the only valid fix in my eyes would be to reduce the method to what it is called.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17436</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-03-22 15:20:55 +0100</bug_when>
            <thetext>For the record: this bug is only affecting the 0.7.x code base.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17437</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-03-22 15:21:33 +0100</bug_when>
            <thetext>back to &quot;NEW&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17761</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-14 14:10:09 +0200</bug_when>
            <thetext>Removed all core developers as assignee from 0.7 only bugs.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18378</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-05-19 09:29:04 +0200</bug_when>
            <thetext>Set all open 0.7.x-only issues that have no assignee to WONTFIX. This is in accordance with 0.7.x users like the RAP team. If you want to work on such an 0.7.x issue, feel free to reopen it and assign it to you. The issues should only exist in the legacy 0.7.x versions and be already resolved in qooxdoo 0.8 or above.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37884</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:05 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>