<bug>
          <bug_id>8285</bug_id>
          
          <creation_ts>2014-04-24 13:39:00 +0200</creation_ts>
          <short_desc>Create an npm module for qooxdoo development</short_desc>
          <delta_ts>2014-05-12 13:16:37 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>3.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Boulanger">info</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>richard.sternagel</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40048</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2014-04-24 13:39:05 +0200</bug_when>
            <thetext>It would be very useful - and an additional way of distributing qooxdoo - to have an npm module to quickly install compontents of the qooxdoo sdk.  Something along the lines of

$&gt; npm install qooxdoo-devtools # installs the qx executable
$&gt; qx install qooxdoo master # installs the latest qooxdoo from npm, but only the &quot;framework&quot; and &quot;tool&quot; folders
$&gt; qx install qooxdoo 3.5 # install version 3.5
$&gt; qx install component  * # install all components
$&gt; qx install application playground # install playground application
$&gt; qx install manual # installs the manual
$&gt; qx build # shorthand vor ./generate.py build
$&gt; qx create contribution # ...

This would add convenience to qooxdoo development (for example, when using the cloud9 IDE) and might have the potential to attract node devs to qooxdoo.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40063</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2014-04-25 17:29:10 +0200</bug_when>
            <thetext>This could also be tied to the qooxdoo contrib infrastructure, supplying a command line tool to add contribs programmatically - the script would update config.json

$&gt; qx contrib install TokenField # install the newest compatible TokenField version 
$&gt; qx contrib install --use-version 1.0  TokenField
$&gt; qx contrib remove TokenField 

or you could even automatically create a pull request based on the local Manifest.json (after linting and checking the manifest)

$&gt; qx contrib publish 

... as we discussed on the ML, this all means choosing conventions &amp; convenience over freedom - but I am sure it results in more contributions.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40182</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-05-09 18:16:30 +0200</bug_when>
            <thetext>Basically this would be just another CLI in addition to the current one. I like the idea, but it would eat up developer time we strongly need for more important things, like moving the toolchain to Node.js.

I think it&#39;s out of scope of what we want to offer with regard to the core tooling CLI. For me that&#39;s a perfect contribution but nothing the core team should work on.

Along with building on Grunt we also provide npm packages (not yet released, i.e. not yet &quot;npm installable&quot;) [1] which go in a related direction. Small building blocks which can be equipped with an CLI (here Grunt). So maybe someday you will be able to just write a CLI by yourself by putting together just qooxdoo npm packages and an option/argument parser (like nopt [2] or commander [3]).

[1] https://github.com/qooxdoo/qooxdoo/tree/master/tool/grunt/task/package
[2] https://www.npmjs.org/package/nopt
[3] https://www.npmjs.org/package/commander</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40192</commentid>
            <who name="Christian Boulanger">info</who>
            <bug_when>2014-05-12 13:16:37 +0200</bug_when>
            <thetext>Looks great and will basically do what I was thinking of. It will be easy to put some command line sugar on top. Thanks!</thetext>
          </long_desc>
      
      

    </bug>