<bug>
          <bug_id>7330</bug_id>
          
          <creation_ts>2013-04-05 10:38:00 +0200</creation_ts>
          <short_desc>bind mechanism inadvertently triggers lots of exceptions from qx.Interface.assert</short_desc>
          <delta_ts>2013-07-22 12:48:39 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="John Spackman">john.spackman</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32542</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2013-04-05 10:38:10 +0200</bug_when>
            <thetext>The bind mechanism (and other code) uses qx.Class.implementsInterface when determining the correct action for binding property values, and qx.Class.implementsInterface uses qx.Interface.assert to do the work.

However, qx.Interface.assert throws an exception if the class does not implement the specified interface and qx.Class.implementsInterface has to trap the exception and return false.

Because the binding mechanism also traps exceptions thrown by the application code (eg an exception caused by an apply method), if you want to catch the original exception you have to tell your debugger to catch all exceptions (ie not just the uncaught exceptions).  But because the binding mechanism needs to call qx.Class.implementsInterface so often, this can generate dozens (or hundreds) of exceptions which are not normal exceptions at all, making it really hard to find the bug in the application.

It would be much better for debugging to avoid using exceptions for normal true/false detection.  

Please see attached pull request (next comment) which provides a solution and is backward compatible; unit tests are included.

I&#39;ve modified qx.Interface to add two methods classImplements and objectImplements which correspond to the existing assert and assertObject methods; Ive also modified qx.Class.implementsInterface to use these methods.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32543</commentid>
            <who name="John Spackman">john.spackman</who>
            <bug_when>2013-04-05 10:44:56 +0200</bug_when>
            <thetext>Pull request is here: https://github.com/qooxdoo/qooxdoo/pull/58</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32554</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-04-09 08:11:03 +0200</bug_when>
            <thetext>Thanks for the report and the pull request.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32968</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2013-06-18 10:20:12 +0200</bug_when>
            <thetext>Merged the pull request. Also refactored the code a bit to reduce the code duplication.

master: 5efabd2a70690adca6cd4b3a3e6e5f35f1ed5105</thetext>
          </long_desc>
      
      

    </bug>