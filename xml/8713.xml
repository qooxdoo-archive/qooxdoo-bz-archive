<bug>
          <bug_id>8713</bug_id>
          
          <creation_ts>2014-11-20 09:16:00 +0100</creation_ts>
          <short_desc>Allow to override toString while marshaling</short_desc>
          <delta_ts>2014-11-21 16:36:23 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41647</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-11-20 09:16:34 +0100</bug_when>
            <thetext>The JSON marshaler does not allow overriding methods during the marshaling process. So the following code results in an error:

qx.data.marshal.Json.createModel({id: 123, toString: function() {return this.id;}});

But overriding the toString method could be very handy, especially when you want to store models in the DOM e.g. as attribute to send it in a form. It might be enough, like in the sample above, to set the id as value of the selectbox e.g.

A current workaround is to override the toString after the marshaling but this is not as handy as adding it right away.</thetext>
          </long_desc>
      
      

    </bug>