<bug>
          <bug_id>3890</bug_id>
          
          <creation_ts>2010-07-27 17:12:00 +0200</creation_ts>
          <short_desc>Create a generator-driven GUI testing framework</short_desc>
          <delta_ts>2014-03-03 15:19:47 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.test.automation</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          <blocked>2903</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19442</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-07-27 17:12:11 +0200</bug_when>
            <thetext>Setting up automated GUI tests for a qooxdoo application using Selenium and the Simulator contribution is tedious, error-prone and requires quite a lot of configuration. There should be a way to write and run such tests with minimal effort, similar to qooxdoo&#39;s built-in unit testing framework.

Some ideas/requirements:
Use conventions where possible to minimize configuration, e.g. test classes should be located in a predefined path within the application&#39;s &quot;source&quot; dir.

Use the application&#39;s config.json to store necessary settings like the Selenium server&#39;s host/port info or the browser to be used.

Selenium-specific boilerplate code, e.g. starting the Selenium session, reading the qooxdoo application&#39;s log etc. should be abstracted away from the test developer.

Tests should be written in JavaScript and run in Rhino like the existing framework application tests.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19686</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-08-06 11:00:02 +0200</bug_when>
            <thetext>Thanks to Martin&#39;s work on the qx-oo library, I was able to modify the JavaScript parts of the existing Rhino-based Selenium infrastructure as qooxdoo classes. This is a significant step as it will make the transition from developing a qooxdoo application to writing interaction tests for it almost seamless and will allow toolchain integration for GUI test code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20849</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-10-22 16:20:09 +0200</bug_when>
            <thetext>Added a new job type &quot;test-interaction&quot; to the Generator. The next step is to find a place for the Rhino-specific JS class files to live in the framework.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21373</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-11-17 16:31:17 +0100</bug_when>
            <thetext>Added the testing tool to the framework as a new component named &quot;Simulator&quot; in r23852.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21678</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-12-01 17:55:10 +0100</bug_when>
            <thetext>Added default jobs &quot;simulation-run&quot; and &quot;simulation-build&quot; to application.json (r24119)
Added a &quot;simulation&quot; directory with a &quot;DemoSimulation&quot; template file to the Inline and GUI skeletons. Also added &quot;simulation-run&quot; and &quot;simulation-build&quot; to their configs templates&#39; export lists. (r24110)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21710</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2010-12-02 17:09:15 +0100</bug_when>
            <thetext>Documented the component and related Generator jobs and macros.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36627</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:47 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>