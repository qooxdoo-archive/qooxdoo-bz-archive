<bug>
          <bug_id>3902</bug_id>
          
          <creation_ts>2010-07-29 17:16:00 +0200</creation_ts>
          <short_desc>&quot;provider&quot; job: Performance of &quot;Dependency logging&quot; is improvable</short_desc>
          <delta_ts>2011-02-22 19:19:29 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19513</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-07-29 17:16:21 +0200</bug_when>
            <thetext>The last step &quot;Dependency logging&quot; is taking more time than the step &quot;Resolving dependencies&quot; even if the cache is empty. We should take a look at this implementation to determine if there are performance improvements possible.

Maybe it&#39;s already faster if the resources are all taken into account (mentioned in Bug #3901).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21360</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-17 11:34:40 +0100</bug_when>
            <thetext>Alex, can you confirm the issue still persists, now after ther re-work on the 
provider job definition?!

I&#39;ve improved the console logging a bit, to make more visible what is going on. 
The dependency logging itself is really fast on my machine. What takes extra 
time now that we have two sub-jobs is the re-sorting of the classes in the 
&quot;provider-deps&quot; step. But this is unavoidable since the dependencies are 
calculated from the &#39;source&#39; version of the classes, and have to be calculated 
often for the first time, even after the preceding &quot;provider-classes&quot; step.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21361</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-11-17 11:47:10 +0100</bug_when>
            <thetext>I&#39;ll ask Til, since he came up with this issue and let you know the results.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21500</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-23 13:09:47 +0100</bug_when>
            <thetext>Restructured &#39;provider&#39; config trigger. The &#39;provider-class&#39; job now only uses 
the library&#39;s class list, which skips any dependency calculation at this stage, 
which is a speed gain. The &#39;provider-deps&#39; job, which then calculates class 
dependencies, only works on the library&#39;s classes as well (transitive load deps 
are followed, though!). The dependencies are calculated on the grounds of the 
source version of the classes (no variants), which may result in more 
dependencies than with variants in effect (e.g. qx.debug=off). But I think that 
makes sense when you use the source version of the provider for development and 
debugging. Maybe you have to think about it.

With r23889.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21522</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-24 10:17:51 +0100</bug_when>
            <thetext>As a future option: The provider-deps job doesn&#39;t need *sorted* classes.</thetext>
          </long_desc>
      
      

    </bug>