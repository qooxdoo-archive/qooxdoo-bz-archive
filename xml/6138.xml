<bug>
          <bug_id>6138</bug_id>
          
          <creation_ts>2012-02-11 10:29:00 +0100</creation_ts>
          <short_desc>Create a Technical Manual</short_desc>
          <delta_ts>2014-03-03 15:19:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>documentation.manual</component>
          <version>1.6</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://manual.qooxdoo.org/1.6.x/pages/tool/astlets.html</bug_file_loc>
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>tristan.koch</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28515</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-02-11 10:29:07 +0100</bug_when>
            <thetext>Our existing manual (documentation/manual) is a user manual, which is very important in its own right.

Besides that, I suggest that we create a second manual for developer information, a &quot;technical&quot; or &quot;developer manual&quot;. The information should serve both (existing and future) core developers as well as external (and pot. sporadic) code contributors. Information in this manual could include:

* Commiters guide
* Coding style
* Contribution workflow (Github, &quot;how to pull-request&quot; [1])
* Implementation/design documents for framework features
* Implementation/design documents for the tool chain / generator

We have already information in our repo that would better go into a technical manual (e.g. tool/doc/diagram, documentation/manual/source/pages/tool/astlets.rst, s. URL).

The motivation to place this information in a repository-based manual is that it may change over time as the framework evolves (cf. e.g. the recent switch from Sourceforge to Github). The implementation could easily share the infrastructure we have for the user manual (Sphinx, theming, ...).

[1] http://ipython.org/ipython-doc/rel-0.12/development/gitwash/development_workflow.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28546</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-02-15 09:13:16 +0100</bug_when>
            <thetext>In general, that sounds like a good idea to have a place for such technical documentation. But do you think another manual is the right way to go? I mean having the documentation in a common place in the repo is desirable.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28619</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-02-23 08:47:04 +0100</bug_when>
            <thetext>(In reply to comment #1)
&gt; In general, that sounds like a good idea to have a place for such technical
&gt; documentation. But do you think another manual is the right way to go? I mean
&gt; having the documentation in a common place in the repo is desirable.

Yes, of course in the repo. But the question is how tight you define &quot;common place&quot;. My idea was to have a separate document tree (a separate Sphinx project), like

   documentation/tech_manual

besides

   documentation/manual

I think we could also manage to intermix the technical pages in the same document tree with the user manual, and then tell Sphinx to create one or the other (that might become tedious although it would e.g. make cross-referencing easy). But I would definitely not simply include the technical pages in the existing user manual. That would defy the whole intention and mix the two audiences.

I think two separate document trees would serve us fine, as the topics are clearly separated and there is also not much need for cross-referencing between the two.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28691</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-03-01 13:35:20 +0100</bug_when>
            <thetext>@Thomas:

Where do you suggest to move installation instruction like those found in the comments of bug 6178? Do  you consider the tech manual the right place for it?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28692</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-03-01 13:40:13 +0100</bug_when>
            <thetext>… and http://bugzilla.qooxdoo.org/show_bug.cgi?id=5999#c5

(I wonder, is it possible to link to a bug&#39;s comment like this: bug 5999#c5)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28719</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-03-02 19:21:23 +0100</bug_when>
            <thetext>(In reply to comment #3)
&gt; @Thomas:
&gt; 
&gt; Where do you suggest to move installation instruction like those found in the
&gt; comments of bug 6178? Do  you consider the tech manual the right place for it?

No. Everything installation-related has to be in the user manual. Every information a user might need for working with qooxdoo has to be in the user manual.

The technical manual is for framework commiters, for information that is not relevant for users.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28720</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-03-02 19:29:31 +0100</bug_when>
            <thetext>(In reply to comment #4)
&gt; … and http://bugzilla.qooxdoo.org/show_bug.cgi?id=5999#c5
&gt; 
(Sphinx version)

Yes in this case. Sphinx is nothing our users need to be concerned about, certainly not for creating the user manual. But creating the manual from the sources is important for *us*.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28938</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-03-22 15:08:17 +0100</bug_when>
            <thetext>Also consider moving the wiki page &quot;How to build a release&quot; into the new manual.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28943</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-03-23 11:03:15 +0100</bug_when>
            <thetext>(In reply to comment #7)
&gt; Also consider moving the wiki page &quot;How to build a release&quot; into the new 
manual.

Done.

master: 3e88eaf</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29487</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-05-18 18:16:48 +0200</bug_when>
            <thetext>master: 2d8e018</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36443</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:20 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>