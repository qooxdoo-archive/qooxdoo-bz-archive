<bug>
          <bug_id>4161</bug_id>
          
          <creation_ts>2010-10-05 17:18:00 +0200</creation_ts>
          <short_desc>Add information to Properties section of manual about &quot;transform&quot;</short_desc>
          <delta_ts>2010-12-13 08:33:44 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>website</product>
          <component>documentation</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andy Jarrell">andyjarrell</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>derrell.lipman</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20492</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-10-05 17:18:12 +0200</bug_when>
            <thetext>I recently learned of the &quot;transform&quot; key for a property by seeing someone use it in contrib code.  After search the manual and forums I found no information until grepping the qooxdoo source and then also seeing a reference in the API docs.

Not a big deal, but a small blurb in the manual would be helpful for folks learning qooxdoo.

Thanks, as always, for a fantastic tool!!!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20496</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-06 08:02:41 +0200</bug_when>
            <thetext>Thanks for the hint and the kind words. :) We will take care to add it to the manual.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20512</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2010-10-06 14:18:15 +0200</bug_when>
            <thetext>The &quot;transform&quot; key is actually documented with all of the other keys, in the documentation for qx.core.Property: http://demo.qooxdoo.org/current/apiviewer/#qx.core.Property. It probably should be mentioned elsewhere, as well. Although it&#39;s a somewhat infrequently-used key, there are times when it&#39;s indispensable.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20513</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-10-06 15:15:09 +0200</bug_when>
            <thetext>I did find very helpful documentation in the API viewer.  However, my first search was for it in the manual where I didn&#39;t find anything.  Maybe a short paragraph right before the section on &quot;Validation of incoming values&quot; (http://manual.qooxdoo.org/1.2.x/pages/core/defining_properties.html#validation-of-incoming-values).  Something like:

Transforming incoming values
You can transform incoming values before they are stored by using the transform key to the corresponding property definition.  The transform method occurs before the check and apply functions and can also throw an error if the value passed to it is invalid.  This  method is useful if you wish accept different formats or value types for a property.

Example

Here we define both a check and transform method for the width property.  Though the check method requires that the property be a integer, we can use the transform method to accept a string and transform it into an integer.  Note that we can still rely on the check method to catch any other incorrect values, such as if the user mistakenly assigned a Widget to the property.

properties :
{
   width : 
   {
      init : 0,
      transform: &quot;_transformWidth&quot;,
      check: &quot;Integer&quot;
   }
},

members :
{
   _transformWidth : function(value) 
   {
      if ( qx.lang.Type.isString(value) ) 
      {
          value = parseInt(value, 10);
      }

      return value;
   }
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21629</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-11-30 10:16:45 +0100</bug_when>
            <thetext>Thanks for supplying the text Andy. I took it and added it to the manual. (r24059)</thetext>
          </long_desc>
      
      

    </bug>