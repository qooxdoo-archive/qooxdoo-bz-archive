<bug>
          <bug_id>7269</bug_id>
          
          <creation_ts>2013-02-27 11:53:00 +0100</creation_ts>
          <short_desc>Lint Check is performed on Optimized Trees</short_desc>
          <delta_ts>2014-03-03 15:26:53 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>daniel.wagner</cc>
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>32374</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-02-27 11:53:06 +0100</bug_when>
            <thetext>This issue comes up when running the &#39;log-deps&#39; job in 
component/standalone/website. The log job needs to collect the dependencies of 
the involved classes. But since the website build is statics-optimized this has 
to be reflected in the log job, so the log job is based on optimized trees.

But this conflicts with the lint system, as e.g. the stringoptimizer extracts 
string constants into variables, so &#39;qx.core.Environment.get(&quot;foo&quot;)&#39; results in 
&#39;var a=&quot;foo&quot;; qx.core.Environment.get(a)&#39;, which causes lint to complain about 
a non-literal argument to q.c.Env.get(), which isn&#39;t an issue in the original 
source.

The Lint system needs to be fed true source trees (or at least close enough), 
without optimizations that interfer with the lint checks such as &#39;string&#39;. 
OTOH, this is another case where the compulsive compile-lint checking in 
MClassCode.tree() seems questionable. It might be better that the top-level 
action implementation (like log, compile, ...) runs the lint checks explicitly 
and independent of MClassCode, with a suitable lint config. (E.g. for the deps 
logging, q.c.Env key issues *are* interesting, as they alter dependencies to 
the feature check classes; others checks may be inappropriate).

Deps logging should be based on trees that have only those optimizations that 
change dependencies, and these are the code pruning optimizations: variants and 
statics. Passing the fully optimized trees in Class._tmp_tree seems to be 
questionable (both for the tree and the way it is passed).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>32382</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2013-02-27 16:45:58 +0100</bug_when>
            <thetext>With resolving bug#7270 deps logging doesn&#39;t trigger lint checking any more, so 
there are no spurious lint warnings anymore.

In the specific case of the &#39;log-deps&#39; job in component/website, a build has to 
be constructed beforehand to get the optimized class list, so warnings are 
issued there.

The issue of passing highly optimized trees to dependency logging is still 
open, and might be addressed at a later point in time.

master: 9689a1b</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39268</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:53 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>