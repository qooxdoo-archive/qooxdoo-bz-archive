<bug>
          <bug_id>2129</bug_id>
          
          <creation_ts>2009-03-18 14:37:00 +0100</creation_ts>
          <short_desc>Packages: Split off infos of resources and translations</short_desc>
          <delta_ts>2014-03-03 15:27:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.1</target_milestone>
          
          <blocked>2008</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>info</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8709</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-18 14:37:14 +0100</bug_when>
            <thetext>At the moment the infos about resources and translations (&quot;qx.$$resources&quot; and &quot;qx.$$translations&quot;) are combined at the boot package. 

Since this will increase the boot pacakge and will load infos at startup which might not be used during the application lifecycle it&#39;s better to spit off the info into the packages they belong to.

Important: to achieve this there has be some kind of merging functionality because one cannot simply re-declare e.g. the &quot;qx.$$translations&quot; map at a package - this would cause overwriting existing translations.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8738</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-03-19 09:28:37 +0100</bug_when>
            <thetext>I am not sure it P4 is really a good level here because I think that the large projects typical qooxdoo users build may really benefit from the changes described in this bug. Would suggest P2 instead to keep this on the radar of some of the next versions.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8739</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-03-19 09:45:21 +0100</bug_when>
            <thetext>P4-&gt;P2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10024</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-05-19 11:06:08 +0200</bug_when>
            <thetext>Up importance: would be important for internal apps, too.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10058</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-05-20 14:24:44 +0200</bug_when>
            <thetext>This could also lead to multi-language and multi-themed applications without having the overhead of including all of them in one build.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11604</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-26 19:28:54 +0200</bug_when>
            <thetext>down prio for now</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11964</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-08 09:41:32 +0200</bug_when>
            <thetext>moved from 0.8.3 to 0.9</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13168</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-13 15:11:26 +0200</bug_when>
            <thetext>up prio; plan to work on</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13746</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-30 15:23:13 +0100</bug_when>
            <thetext>Add support for resource info in build packages; the packages now contain a 
data section ahead of the class code; resource info is removed from the loader, 
qx.$$resource is initially empty and gets populated with every loaded package; 
added a new loader.tmpl.js template to support that, with a new method 
qx.$$loader.importPackageData which is also used in qx.io2.PartLoader/Package 
modules; add new config option &quot;packages/part/*/no-merge-private-package&quot; to 
protect the single package that is unique to each part from being merged; this 
is to allow isolated (and possibly alternative) parts to retain their 
individual classes and resources.

With r20546.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14019</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-10 11:03:36 +0100</bug_when>
            <thetext>un-focus</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14307</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-23 14:31:14 +0100</bug_when>
            <thetext>This bug relates to bug#2800, which is about generating I18N data in files 
other than the loader script (which is relevant even when you have no parts at 
all). Still, I think #2800 will be solved by regarding I18N data files as 
degenerated packages, which may be organized in auto-created parts (see there 
for comments).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14753</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:09 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15701</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-11 11:31:20 +0100</bug_when>
            <thetext>mass move to 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16505</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:30:53 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17402</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-03-20 21:31:37 +0100</bug_when>
            <thetext>A related bug has been implemented, bug#3473, which carries on from bug#2800 and allows to have I18N information in dedicated parts. Still, this bug is open as it targets to integrate this information with *existing* (rather than dedicated) packages that actually use this information in their code section.

It is open to me, how exactly these two approaches relate to each other, but it seems clear that this bug, once implemented, would be the default behavior when using parts. Without any further configuration requirement, each package would receive its own amount of resource and I18N information, so that this information is spread across all packages rather then collected in a single one (the loader). There would also be no need for special treatment (ie. dedicated PartLoader.require calls) on the client side; the data simply arrives with the code as it is requested, and the loader functionality implemented with bug#3473 will automatically evaluate it. As a pay-off, in this scenario I18N information for *all* supported languages would be shipped with each package, though (Bug#3473 collects this information, and thus makes it loadable, for each language separately).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17441</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-03-22 16:15:18 +0100</bug_when>
            <thetext>Implemented package-local data (translations, locales).

With r21787.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17460</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-03-23 10:57:57 +0100</bug_when>
            <thetext>There could quite a bit refactoring be done in CodeGenerator.py, part. 
surrounding serialization of packages (moving the compile interface to 
Package.py, using the data in a Package for both generating code packages, 
locale packages and the loader package, etc.). But I leave that to later.

For details of the behaviour of the current implementation see the manual 
(http://qooxdoo.org/documentation/1.0/tool/generator_config_articles#class_data).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26172</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2011-07-21 17:09:45 +0200</bug_when>
            <thetext>verified</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39403</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:15 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>