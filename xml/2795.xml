<bug>
          <bug_id>2795</bug_id>
          
          <creation_ts>2009-09-14 15:21:00 +0200</creation_ts>
          <short_desc>Cloning of mouse events</short_desc>
          <delta_ts>2012-05-16 09:36:35 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.core</component>
          <version>0.8.3</version>
          <rep_platform>IE 7</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miron Brezuleanu">mbrezu</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          <cf_browser_version>7</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>12260</commentid>
            <who name="Miron Brezuleanu">mbrezu</who>
            <bug_when>2009-09-14 15:21:38 +0200</bug_when>
            <thetext>It appears that mouse events aren&#39;t cloned properly.

I&#39;m trying to reuse information from a cloned table cellclick event in a Timer.once callback and retrieving mouse information in IE7 (in the Timer.once callback) doesn&#39;t work (haven&#39;t tested in IE8). Since IE reuses events, this is normal when reusing the original event, but I find it surprising that cloning the event doesn&#39;t make things better.

There is of course a workaround (saving the values I&#39;m interested in myself), but since there is a clone method it should either work without surprises or document the potential issues.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12277</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-15 09:26:13 +0200</bug_when>
            <thetext>Miron, I doubt on can properly clone the underlying native event. qooxdoo&#39;s events should rather behave as a wrapper around those native events and replicate some of their properties. What are your exact &quot;interesting values&quot; that you have to take care of manually?

I&#39;ll assign to Fabian to have a look at this as well and extend documentation as necessary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12298</commentid>
            <who name="Miron Brezuleanu">mbrezu</who>
            <bug_when>2009-09-15 10:58:58 +0200</bug_when>
            <thetext>Hello Andreas,

thanks for looking into this. The &#39;interesting&#39; values for me are those used by placeToMouse method of qx.ui.menu.Menu (getDocumentLeft() and getDocumentRight()).

I agree that duplicating the native event completely seems very complicated. But if I clone an instance of a qx.event.type.Mouse, I expect that qx.event.type.Mouse methods return the same results on the clone (if not modified) as on the original, at the time of cloning. So the clone should behave the same, at least as far as Qooxdoo API calls. I don&#39;t expect any guarantees if I forego the API and start poking the object directly.

This would imply saving all the fields that are used by qx.event.type.Mouse methods when cloning a qx.event.type.Mouse. The problem I see here is that every time a method code changes the way the native event is used, the clone method code needs revisiting. Doable, but tedious :-(

As far as I&#39;m concerned, a warning in the documentation of clone would be OK. Maybe also specify safe usage patterns of clone()?

Many thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13306</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-10-19 15:47:35 +0200</bug_when>
            <thetext>all native events can now be cloned without breaking any of the public API.

fixed in r20416

@mbrezu: Can you check the fix and mark the bug as verified if it works?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13310</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-10-19 16:15:17 +0200</bug_when>
            <thetext>it is r20417</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13354</commentid>
            <who name="Miron Brezuleanu">mbrezu</who>
            <bug_when>2009-10-20 13:53:21 +0200</bug_when>
            <thetext>Cloning works for me now.

Thanks,
Miron</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14565</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:15:35 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
      
      

    </bug>