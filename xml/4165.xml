<bug>
          <bug_id>4165</bug_id>
          
          <creation_ts>2010-10-06 16:17:00 +0200</creation_ts>
          <short_desc>Remove browser detection from mouse wheel code</short_desc>
          <delta_ts>2010-11-08 09:10:17 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>20515</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-06 16:17:49 +0200</bug_when>
            <thetext>The normalization of the mouse wheel speed is a real browser nightmare. It would be great if we can get rid of that and do some calculations to adjust the speed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20516</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-10-06 16:33:51 +0200</bug_when>
            <thetext>I guess I found the solution by using a two part algorithm. On systems not having a acceleration for the mouse wheel, thats easy because we only need to handle the direction right and detect if the acceleration is used.

Detecting is easy because we just check if the current wheel delta is the same as the maximum wheel delta evers used. After that, you can just return a the value you would like:

return 2 * (delta / absDelta);

The case with acceleration is more complicated and can be tricky cross browser. My general idea was to use the current delta and divide it by the max delta. This gives me the percent of intensity the user scrolled. To get rid of the huge acceleration on mac for example, we multiply that with the log of the maximum and dive that by 1.75. Sounds like magic... it is! It leads to a acceptable result in all the browser / OS combinations I were able to test.

trunk: r23467</thetext>
          </long_desc>
      
      

    </bug>