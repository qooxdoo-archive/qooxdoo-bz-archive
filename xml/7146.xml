<bug>
          <bug_id>7146</bug_id>
          
          <creation_ts>2013-01-18 13:26:00 +0100</creation_ts>
          <short_desc>Enhance touchmove by distance (deltaX/deltaY) and direction</short_desc>
          <delta_ts>2014-01-13 17:12:09 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile.core</component>
          <version>2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christopher Zuendorf">christopher.zuendorf</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>31938</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2013-01-18 13:26:08 +0100</bug_when>
            <thetext>As the swipe already contains a distance parameter and a direction, the touchmove also needs this.

These parameters are needed for qx.Mobile widgets like the Carousel or the Picker. The distance calculates the the delta between the position of the touchstart event.
The direction is needed for a scroll lock logic. It contains information whether the touch move had initially a vertical or horizontal direction.  For this calculation, the following code snippet can be used:

      var distanceX = touchX - this.__touchStartPoints[0];
      var distanceY = touchY - this.__touchStartPoints[1];
      
      if(this.__isVerticalScroll == null) {
        var cosDelta = distanceX/distanceY;
        this.__isVerticalScroll = Math.abs(cosDelta) &lt; 1;
      }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>34760</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-01-13 17:12:09 +0100</bug_when>
            <thetext>Master:

00c6fcc9048ec06d244b3f9d8f1068aecc3e247b</thetext>
          </long_desc>
      
      

    </bug>