<bug>
          <bug_id>3495</bug_id>
          
          <creation_ts>2010-03-02 15:07:00 +0100</creation_ts>
          <short_desc>Avoid Browser Caching through &#39;nocache&#39; URL Parameter</short_desc>
          <delta_ts>2010-08-06 09:51:36 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>dietrich.streifert</cc>
    
    <cc>martin.wittemann</cc>
    
    <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17062</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-02 15:07:25 +0100</bug_when>
            <thetext>In Webkit/Safari/Chrome the cache clear/disabling does not work with qooxdoo. This is mainly an issue with the source version during development. I would like to have some kind of random parameter on script files loaded by loader.tmpl.js.

In build case it could be some kind of build timestamp (which keeps the same on every load of the same build file) e.g.
app.js?x=1933893

In source versions it might be the best to just use the value of (new Date).valueOf() which should be dynamically evaluated every load time.

I will attach a patch for &quot;loader.tmpl.js&quot; to apply the timestamp to all files. I am not sure about how to detect whether it is the &quot;build&quot; or &quot;source&quot; version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17064</commentid>
              <attachid>718</attachid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-02 15:30:59 +0100</bug_when>
            <thetext>Created attachment 718
Patch for template file and code generator

This adds two new variables into the template and adds random/build numbers to the script file path to omit caching when unwanted. Tested with Safari, Chrome etc. and really works wonders.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17065</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-02 15:32:02 +0100</bug_when>
            <thetext>I have solved this already as well in my patch:
&gt;&gt; I am not sure about how to detect whether it is the &quot;build&quot; or &quot;source&quot;
version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17070</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-02 17:20:19 +0100</bug_when>
            <thetext>That problem is well known here in the qooxdoo team. I use safari for development and opened a bug for it some time ago:
http://bugzilla.qooxdoo.org/show_bug.cgi?id=2619

Currently, I use a custom hock (decode-uris-plug) added to the user specific config file: http://gist.github.com/279985

The plug itself just adds a random number to the URIs:
euri = euri + &quot;?noCache=&quot; + Math.random();

Do you think that could do it for you too?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17072</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-02 19:26:05 +0100</bug_when>
            <thetext>Martin, thanks. Haven&#39;t seen this issue before.

The problem is that this is really a bug in qooxdoo - at least this is what everybody who tries out qooxdoo thinks first. The adoption rate of Safari/Chrome is pretty high, so this is really more like all other kind of browser issues which we also fix (and not offering some kind of support thread only).

So in my opinion the patch I submitted should be applied. It&#39;s also quite reasonable for the build version where you want to load new builds with some kind of security. This could also be done manually during distribution, but with this patch is really works independently from the method of deployment.

In our case this also happens with file-system level access - and also when using via Tomcat. Even when we use some kind of header manipulation on the Tomcat it do not work.

For me it&#39;s pretty easy: The attached patch improves developer experience for both source and build version without any negative side effects.

The workaround you offer with the GIST way is IMHO not enough. Nobody knows when Webkit will fix this issue and even then only newer versions are fixed. It might be not work for many years in all kind of versions. So let&#39;s fix this. Really. :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17077</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-03 08:33:16 +0100</bug_when>
            <thetext>I took a look at your patch and it looks good. The only thing i&#39;m not sure it the part for the build version. With it, we disable the caching for every file with every new build?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17079</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-03 08:33:48 +0100</bug_when>
            <thetext>*** Bug 2619 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17089</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-03 09:45:31 +0100</bug_when>
            <thetext>Not sure that you mean by &quot;we disable the caching for every file with every new build&quot;. This forces the browser to reload a script based on the build time - this is basically only relevant for packages (aka parts) in the build version.

Even if this is not used in the build version it might still useful to have the time of the build available in the client.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17090</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-03 09:49:43 +0100</bug_when>
            <thetext>Just to complete my hint:

When you use parts it might be the case that the top-level (aka boot) package is the new version while the post-loaded packages are older versions because the browser do not correctly refresh them. The browser do not know about source/build differences, but there is clearly a misbehavior in caching of scripts loaded dynamically in Webkit. So this fixes this issue in parts as well. Correctly behaving browser should not need this: they already behave the way we now somehow force for every browser.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17092</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-03 10:18:36 +0100</bug_when>
            <thetext>I talked to fabian about the patch and we both disagreed with the code for the build part. We would destroy our caching of the not changed packages on every change. Thats something we really don&#39;t want to have, especially for huge applications like the gmx mailer.
Additionally, your patch does not consider the part loading. Packages will still be loaded without the &quot;anti cache&quot; parameter using the ScriptLoader.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17094</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2010-03-03 10:29:50 +0100</bug_when>
            <thetext>It&#39;s OK for me to not include this dynamic into the build version. This would mean to modify the patch to:

+  if (qx.$$type === &quot;source&quot;) {
+    elem.src = uri + &quot;?r=&quot; + qx.$$start;
+  } else {
+    elem.src = uri;
+  }

I still would like to keep the qx.$$build variable as this is quite useful to verifying that one really has the newly build version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18296</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2010-05-11 13:43:00 +0200</bug_when>
            <thetext>We have the same problem with IE8. Looking over the code i found out that the
&quot;nocache&quot; parameter is missing. In the source version all requests that loaded
resources used to have a nocache parameter added to the request. Please make this
nocache parameter available again for the source version (or as a variant).
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18299</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-11 15:15:31 +0200</bug_when>
            <thetext>Clarified summary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18301</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-11 15:32:23 +0200</bug_when>
            <thetext>(In reply to comment #11)
&gt; We have the same problem with IE8. Looking over the code i found out that the
&gt; &quot;nocache&quot; parameter is missing. In the source version all requests that 
loaded resources used to have a nocache parameter added to the request. Please 
make this nocache parameter available again for the source version (or as a 
variant).

That&#39;s not quite true. The &#39;nocache&#39; URL parameter was and is used in 
qx.io.remote.Request and friends. But this API was never used to load 
application scripts.

But in contrast to earlier versions of qooxdoo (e.g. 0.7.x), where all script 
tags for the application were pre-generated literally in the loader and added 
with document.write, the current loader creates DOM script nodes and adds them 
dynamically to the &#39;head&#39; element. It seems this is triggering the browser 
behaviour.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18302</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-11 15:40:46 +0200</bug_when>
            <thetext>This will become a config option. Whether it will be on or off by default, has 
yet to be determined.

-&gt; me, 1.2, P2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18303</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-11 16:43:53 +0200</bug_when>
            <thetext>Fixed in trunk with r22172. Controlled by config key 
compile-options/uris/add-nocache-param, which is true in &#39;source&#39; and false in 
&#39;build&#39; version by default.

-&gt; Martin, for verify and resolve.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18310</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-12 08:01:25 +0200</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18348</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-17 10:33:10 +0200</bug_when>
            <thetext>Thomas fix works --&gt; fixed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18349</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-05-17 10:33:36 +0200</bug_when>
            <thetext>and verified</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>718</attachid>
            <date>2010-03-02 15:30:00 +0100</date>
            <delta_ts>2010-03-02 15:30:59 +0100</delta_ts>
            <desc>Patch for template file and code generator</desc>
            <filename>patch-v1.patch</filename>
            <type>text/plain</type>
            <size>2066</size>
            <attacher>info</attacher>
            
              <data encoding="base64">SW5kZXg6IHRvb2wvcHlsaWIvZ2VuZXJhdG9yL2FjdGlvbi9Db2RlR2VuZXJhdG9yLnB5Cj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLS0tIHRvb2wvcHlsaWIvZ2VuZXJhdG9yL2FjdGlvbi9Db2RlR2VuZXJhdG9yLnB5CShy
ZXZpc2lvbiAyMTY3NCkKKysrIHRvb2wvcHlsaWIvZ2VuZXJhdG9yL2FjdGlvbi9Db2RlR2VuZXJh
dG9yLnB5CSh3b3JraW5nIGNvcHkpCkBAIC0yMCw3ICsyMCw3IEBACiAjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIwogCiBpbXBvcnQgb3MsIHN5cywgc3RyaW5nLCB0eXBlcywgcmUsIHpsaWIsIHRpbWUK
LWltcG9ydCB1cmxsaWIsIHVybHBhcnNlLCBvcHRwYXJzZSwgcHByaW50CitpbXBvcnQgdXJsbGli
LCB1cmxwYXJzZSwgb3B0cGFyc2UsIHBwcmludCwgdGltZQogaW1wb3J0IHNpbXBsZWpzb24KIGZy
b20gZ2VuZXJhdG9yLmFjdGlvbi5JbWFnZUluZm8gaW1wb3J0IEltYWdlSW5mbywgSW1nSW5mb0Zt
dAogZnJvbSBnZW5lcmF0b3IuY29uZmlnLkxhbmcgICAgICBpbXBvcnQgTGFuZwpAQCAtOTIyLDYg
KzkyMiwxMCBAQAogICAgICAgICAgICAgcGx1Z0NvZGUgPSBmaWxldG9vbC5yZWFkKHNlbGYuX2Nv
bmZpZy5hYnNQYXRoKGRlY29kZVVyaXNGaWxlKSkgICMgbGV0IGl0IGJvbWIgaWYgZmlsZSBjYW4n
dCBiZSByZWFkCiAgICAgICAgICAgICB2YWxzWyJEZWNvZGVVcmlzUGx1ZyJdID0gcGx1Z0NvZGUu
c3RyaXAoKQogICAgICAgICAKKyAgICAgICAgIyBBZGQgYnVpbGQgZGV0YWlscworICAgICAgICB2
YWxzWyJCdWlsZCJdID0gIiVpIiAlICh0aW1lLnRpbWUoKSoxMDAwKSAKKyAgICAgICAgdmFsc1si
VHlwZSJdID0gdmVyc2lvbgorICAgICAgICAKICAgICAgICAgIyBMb2NhdGUgYW5kIGxvYWQgbG9h
ZGVyIGJhc2ljIHNjcmlwdAogICAgICAgICB0ZW1wbGF0ZSA9IGxvYWRUZW1wbGF0ZShib290Q29k
ZSkKIApJbmRleDogdG9vbC9kYXRhL2dlbmVyYXRvci9sb2FkZXIudG1wbC5qcwo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
Ci0tLSB0b29sL2RhdGEvZ2VuZXJhdG9yL2xvYWRlci50bXBsLmpzCShyZXZpc2lvbiAyMTY3NCkK
KysrIHRvb2wvZGF0YS9nZW5lcmF0b3IvbG9hZGVyLnRtcGwuanMJKHdvcmtpbmcgY29weSkKQEAg
LTIsNyArMiw5IEBACiAKIGlmICghd2luZG93LnF4KSB3aW5kb3cucXggPSB7fTsKIAotcXguJCRz
dGFydCA9IG5ldyBEYXRlKCk7CitxeC4kJHN0YXJ0ID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7Citx
eC4kJGJ1aWxkID0gJXtCdWlsZH07CitxeC4kJHR5cGUgPSAiJXtUeXBlfSI7CiAgIAogaWYgKCF3
aW5kb3cucXhzZXR0aW5ncykgcXhzZXR0aW5ncyA9IHt9OwogdmFyIHNldHRpbmdzID0gJXtTZXR0
aW5nc307CkBAIC01NSw3ICs1Nyw2IEBACiBmdW5jdGlvbiBsb2FkU2NyaXB0KHVyaSwgY2FsbGJh
Y2spIHsKICAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAg
ZWxlbS5jaGFyc2V0ID0gInV0Zi04IjsKLSAgZWxlbS5zcmMgPSB1cmk7CiAgIGVsZW0ub25yZWFk
eXN0YXRlY2hhbmdlID0gZWxlbS5vbmxvYWQgPSBmdW5jdGlvbigpCiAgIHsKICAgICBpZiAoIXRo
aXMucmVhZHlTdGF0ZSB8fCB0aGlzLnJlYWR5U3RhdGUgPT0gImxvYWRlZCIgfHwgdGhpcy5yZWFk
eVN0YXRlID09ICJjb21wbGV0ZSIpCkBAIC02NCw2ICs2NSwxMyBAQAogICAgICAgY2FsbGJhY2so
KTsKICAgICB9CiAgIH07CisKKyAgaWYgKHF4LiQkdHlwZSA9PT0gInNvdXJjZSIpIHsKKyAgICBl
bGVtLnNyYyA9IHVyaSArICI/cj0iICsgcXguJCRzdGFydDsKKyAgfSBlbHNlIHsKKyAgICBlbGVt
LnNyYyA9IHVyaSArICI/cj0iICsgcXguJCRidWlsZDsKKyAgfQorICAKICAgdmFyIGhlYWQgPSBk
b2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdOwogICBoZWFkLmFwcGVuZENo
aWxkKGVsZW0pOwogfQo=
</data>

          </attachment>
      

    </bug>