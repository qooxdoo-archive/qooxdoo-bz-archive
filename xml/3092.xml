<bug>
          <bug_id>3092</bug_id>
          
          <creation_ts>2009-11-23 13:03:00 +0100</creation_ts>
          <short_desc>Data binding fails with changes in the target chain</short_desc>
          <delta_ts>2010-07-12 09:00:16 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          <blocked>2985</blocked>
    
    <blocked>3141</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>matthew+qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>14299</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-11-23 13:03:48 +0100</bug_when>
            <thetext>The current implementation of the single value binding ignores the changes in the target property chain. Take a look at the following example which demonstrates how to reproduce the failing.

var o1 = qx.data.marshal.Json.createModel({a:{b:{c: &quot;affe&quot;}}});
var o2 = qx.data.marshal.Json.createModel({a:{b:{c: &quot;x&quot;}}});

// change the middle target chain element
var o2a = qx.data.marshal.Json.createModel({b:{c: &quot;xxx&quot;}});
o2.setA(o2a);
this.assertEquals(&quot;affe&quot;, o2.getA().getB().getC());

I would suggest to add listeners to the target as well. But only if the target properties supply the possibility for listening to changes. If no change events are available, the behavior should be equal to the current behavior.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14303</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-11-23 13:20:48 +0100</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15038</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-11-27 17:54:24 +0100</bug_when>
            <thetext>Fixed with revision 20801.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15123</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-12-01 08:18:10 +0100</bug_when>
            <thetext>Nightly tests were ok --&gt; CLOSED</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16352</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2010-01-22 15:20:33 +0100</bug_when>
            <thetext>This fix has completely wrecked our application, I&#39;ve done digging and it seems that the problem is because __setUpTargetBinding ignores the options map</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16369</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-01-25 09:28:09 +0100</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16396</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-01-25 16:25:51 +0100</bug_when>
            <thetext>Could you perhaps supply an example where the binding fails? Without that, I have no chance of fixing anything.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17151</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-08 10:30:28 +0100</bug_when>
            <thetext>I still don&#39;t have an idea whats wrong with the current behavior. Matthew, can you supply an example?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17152</commentid>
            <who name="Matthew">matthew+qooxdoo</who>
            <bug_when>2010-03-08 11:16:24 +0100</bug_when>
            <thetext>Sorry Martin,
I haven&#39;t been ignoring you, I have just been very very busy recently! (You might have noticed my recent absense from the mailing list).
I will try and get something done in the playground soon for you to demonstrate this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18644</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-11 11:35:10 +0200</bug_when>
            <thetext>Hello Mathew,
Do you still have that problem? I found a bug in the target chain binding which could cause you problem. You can find it in bug #3760. Could you please check if you still have that problem?
Best,
Martin </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18953</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-06-28 08:39:19 +0200</bug_when>
            <thetext>Marked this bug as &quot;works for me&quot; as long as I don&#39;t have anything to reproduce. </thetext>
          </long_desc>
      
      

    </bug>