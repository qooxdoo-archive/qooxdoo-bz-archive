<bug>
          <bug_id>8108</bug_id>
          
          <creation_ts>2014-02-11 17:15:00 +0100</creation_ts>
          <short_desc>Generator draws in deps of qx.Class for some classes</short_desc>
          <delta_ts>2015-03-10 09:26:21 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.dependencies</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Richard Sternagel">richard.sternagel</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>35032</commentid>
            <who name="Richard Sternagel">richard.sternagel</who>
            <bug_when>2014-02-11 17:15:39 +0100</bug_when>
            <thetext>Normally the Generator should create a data structure of the direct dependencies for each class only and then later use this information in its entirety, to explore all (transitive) dependencies (e.g. when reading the &quot;dependencies.json&quot;).

However, when computing the dependencies for *some* classes the Generator sometimes (no pattern recognized yet) draws in the direct dependencies from qx.Class (which would be already satisfied by just including qx.Class). Some of the affected classes:

* qx.type.BaseError
* qx.lang.Array
* qx.core.AssertionError
* qx.core.Assert
* qx.data.IListData
* qx.core.ValidationError
* qx.bom.Event
* qx.event.IEventHandler
* qx.core.MProperty
* qx.core.MAssert
* qx.util.DisposeUtil
* qx.core.Object
* qx.core.ObjectPool

This can be verified by generating the dependencies.json. 

&quot;qx.Class&quot;: {
  &quot;load&quot;: [
     &quot;qx.util.OOUtil&quot;,
     &quot;qx.lang.normalize.String&quot;,  // by @require
     &quot;qx.lang.normalize.Object&quot;,  // ...
     &quot;qx.lang.normalize.Function&quot;,  // ...
     &quot;qx.lang.normalize.Error&quot;,  // ..
     &quot;qx.lang.normalize.Date&quot;,  // ..
     &quot;qx.lang.normalize.Array&quot;, // ..
     &quot;qx.core.Property&quot;,
     &quot;qx.core.Environment&quot;,
     &quot;qx.core.Aspect&quot;,
     &quot;qx.Mixin&quot;,
     &quot;qx.Interface&quot;,
     &quot;qx.Bootstrap&quot;
   ],
  &quot;run&quot;: []
}

&quot;qx.type.BaseError&quot;: {
  &quot;load&quot;: [
    &quot;qx.util.OOUtil&quot;,
    &quot;qx.core.Property&quot;,
    &quot;qx.core.Environment&quot;,
    &quot;qx.core.Aspect&quot;,
    &quot;qx.Mixin&quot;,
    &quot;qx.Interface&quot;,
    &quot;qx.Class&quot;,
    &quot;qx.Bootstrap&quot;
  ],
  &quot;run&quot;: []
}

&quot;qx.util.DisposeUtil&quot;: {
  &quot;load&quot;: [
    &quot;qx.util.OOUtil&quot;,
    &quot;qx.core.Property&quot;,
    &quot;qx.core.Environment&quot;,
    &quot;qx.core.Aspect&quot;,
    &quot;qx.Mixin&quot;,
    &quot;qx.Interface&quot;,
    &quot;qx.Class&quot;,
    &quot;qx.Bootstrap&quot;
  ],
  &quot;run&quot;: [
    &quot;qx.core.ObjectRegistry&quot;,
    &quot;qx.core.Assert&quot;
  ]
}

&quot;qx.util.ObjectPool&quot;: {
  &quot;load&quot;: [
    &quot;qx.util.OOUtil&quot;,
    &quot;qx.core.Property&quot;,
    &quot;qx.core.Object&quot;,
    &quot;qx.core.Environment&quot;,
    &quot;qx.core.Aspect&quot;,
    &quot;qx.Mixin&quot;,
    &quot;qx.Interface&quot;,
    &quot;qx.Class&quot;,
    &quot;qx.Bootstrap&quot;
  ],
  &quot;run&quot;: []
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42752</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2015-03-10 09:26:21 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>