<bug>
          <bug_id>2578</bug_id>
          
          <creation_ts>2009-07-13 11:54:00 +0200</creation_ts>
          <short_desc>Add support for a clear cache command</short_desc>
          <delta_ts>2014-03-31 08:59:19 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10857</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-07-13 11:54:50 +0200</bug_when>
            <thetext>The cache folder was moved multiple times now in the default qooxdoo configuration. It would be nice to have a easily reachable option to clear the configured cache folder.

Maybe something like:
generate.py clear

or more specific
generate.py clear-compiled (which deletes compiled*, privates-* etc.)

As this is typical in &quot;make&quot; etc. as well this might be a handy addition.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11253</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-08-10 11:46:32 +0200</bug_when>
            <thetext>@Thomas, sounds like a reasonable enhancement. Could you comment, please, if this is feasible, i.e. the expected behavior is clear or are there issues (e.g. multiple libraries, etc.). We could then decide about a possible target milestone.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11304</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-12 11:37:09 +0200</bug_when>
            <thetext>I&#39;m not sure I understand the request correctly.

The default cache location has changed only once, from a local &quot;./cache&quot; 
subdirectory of the current application, to a system-wide ${TEMP_DIR}/cache 
directory. The meaning of the existing clean jobs have stayed the same all the 
way:

- &#39;generate.py clean&#39; deletes an (application-) local ./cache directory

- &#39;generate.py distclean&#39; deletes any cache directory wherever it is configured.

For all I know they are working, and I&#39;m not sure why somebody wouldn&#39;t use 
them.

As for more specific deletes, rather than an entire cache directory:

- Deleting cache objects by prefix, as suggested (compiled-*, privates-*, 
lib-*, etc.), could be easily achieved, it would be just another job in the 
config. But the utility of this seems rather unclear. It would delete files 
indiscriminately of applications and libraries. And why would you want to 
delete the results of library scans (&quot;lib-*&quot;), when they are refreshed 
automatically?! The same applies to the tree-* and compiled-* cache objects. 
They should all be refreshed reliably due to their cache invalidation 
algorithms. The only possible exception I can think of would be the privates-* 
hashes, which might currently escape proper invalidation. So a &#39;clear-privates&#39; 
job might make sense. 

- Deleting cache objects by application/library might make more sense, but 
would be much harder to implement (it would need access to the cache key 
generation).

If this latter requirement had to do with errors in the cache invalidation, I&#39;d 
rather work on a concrete bug to solve this. Other than that, the established 
&#39;clean&#39; jobs are available and are doing their job.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11312</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2009-08-12 19:27:02 +0200</bug_when>
            <thetext>Thomas, when being using trunk it really has moved a few times, but for the final qooxdoo version it might be only one transition, right. It seems that I have overseen the &quot;clear&quot; command. Man, that was stupid.

But one thing I am not sure with is: Does your comment  mean that &quot;clean&quot; do never cleanup the default cache directory which is placed in the system&#39;s temp folder? I remember that &quot;clean&quot; is a basic cleanup and distclean does cleanup more stuff (reverting the structure to the one which is typically stored in some kind of VCS). Please explain this. Thanks.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11313</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-13 09:59:45 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; Does your comment  mean that &quot;clean&quot; do never cleanup the default cache 
directory which is placed in the system&#39;s temp folder?

Yep. The &#39;clean&#39; and &#39;distclean&#39; jobs are fairly straight ports from the 0.7 
&#39;clean&#39; and &#39;distclean&#39; Makefile targets, where it was implemented that way.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12554</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-09-22 17:28:50 +0200</bug_when>
            <thetext>I think the main issue has been clarified, but keeping this bug open for 
refined clear targets, like the mentioned

  generate.py clear-compiled
  generate.py clear-libscans
  ...

which might be a good enhancement.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39819</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-31 08:59:19 +0200</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>