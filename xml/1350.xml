<bug>
          <bug_id>1350</bug_id>
          
          <creation_ts>2008-09-01 19:39:00 +0200</creation_ts>
          <short_desc>Making create-application namespace aware</short_desc>
          <delta_ts>2014-03-03 15:21:40 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Claus Augusti">claus</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4942</commentid>
            <who name="Claus Augusti">claus</who>
            <bug_when>2008-09-01 19:39:04 +0200</bug_when>
            <thetext>Using the create-application.py script to create a new application with 

create-application.py ... --namepace=de.foo.bar

created a folder named &quot;de.foo.bar&quot; inside my application&#39;s source folder. This behavior differs from what I&#39;d expect compared, e.g. compared to Java-tools for class generation (JAXB, WADL tools). Target namespaces are resolved into a directory structure under the classpath&#39;s folder. 

I find this behavior also to be inconsistent with the handling of namespaces in qooxdoo.

It&#39;d be helpful to be able to specify a real classpath during the instantiation of a skeleton application and not be forced afterwards to build the structure and tweak the config files manually.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8887</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-24 19:38:35 +0100</bug_when>
            <thetext>Thomas, please look into this issue. Isn&#39;t there a related bug?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8908</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-25 14:09:45 +0100</bug_when>
            <thetext>see bug#1861</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8911</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-25 15:27:31 +0100</bug_when>
            <thetext>Notes:
- use misc/PathType,NameSpace as a helper class?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14712</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:25:45 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15012</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-27 10:51:02 +0100</bug_when>
            <thetext>has been fixed in 0.8.3</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37376</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:40 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>