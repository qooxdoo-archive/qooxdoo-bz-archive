<bug>
          <bug_id>8462</bug_id>
          
          <creation_ts>2014-07-02 11:52:00 +0200</creation_ts>
          <short_desc>Carousel gets broken if swipe ends on target outside of scroll container</short_desc>
          <delta_ts>2014-12-16 11:44:29 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christopher Zuendorf">christopher.zuendorf</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Christopher Zuendorf">christopher.zuendorf</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>40652</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-02 11:52:10 +0200</bug_when>
            <thetext>If the user starts a swipe, but ends the swipe on a target outside of the scroll container (pagination label), the carousel gets in an unexpected state. The carousel does not snap to the page, and do not even get the swipe event, because it is fired on the wrong target.

The right target should be the element, where the swipe target (defined inside the GestureCore as &quot;gesture.target&quot;).

Additionally the carousel needs a little bit of refactoring for refreshing its state also when property &quot;currentIndex&quot; hasn&#39;t changed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40653</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-02 12:41:45 +0200</bug_when>
            <thetext>Master:

a2f98cc47cb7c3e7d984ef59922f560c9e7fb20e</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40668</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-03 13:00:31 +0200</bug_when>
            <thetext>* Handling vacuum touches. Some touches will not get a touchend from device, in some cases. Adding detection and firing pointercancel for previously active touches.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40669</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-03 13:00:47 +0200</bug_when>
            <thetext>Master:

46a12ba3a3cb249e93a0a4d9e3b21fbff5db7adc</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40670</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-03 13:17:40 +0200</bug_when>
            <thetext>In some instances, a touchstart can happen without a touchend. This leaves the gesture recognition in a broken state.

That is why, we now have an array which knows about active touches on screen. On touchstart we add the touches of &quot;changedTouches&quot; array. On touchend and touchcancel we remove the touches from this array.

If we compare the content of this array, to the DOM event touches array, we are able to recognize which touches did not fire a &quot;touchend&quot; event, despite the digitizer says they are not active on screen anymore.

For all these &quot;vacuum touches&quot; we fire a pointercancel event, making sure, that gesture recognition is reset.

You can easily reproduce vacuum touches, if you quickly move around more than 5 finger on the screen.  Without our recognition, the application did get in an invalid state, where only a reset of the application helps to get rid of that problem.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40671</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2014-07-03 13:21:14 +0200</bug_when>
            <thetext>The problem is very well described here (also the solution):

http://www.html5gamedevs.com/topic/3109-multitouch-issue/</thetext>
          </long_desc>
      
      

    </bug>