<bug>
          <bug_id>3590</bug_id>
          
          <creation_ts>2010-04-16 13:54:00 +0200</creation_ts>
          <short_desc>Add a way to create the API-Doc for a single class</short_desc>
          <delta_ts>2010-08-06 10:19:04 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>17818</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-16 13:54:37 +0200</bug_when>
            <thetext>Writing API-Docs is an important task for every developer who uses qooxdoo. But checking what the written doc looks like is really painful because you have to build the whole API-Viewer for every single change. This means it takes several minutes to check if your single change in the doc looks right.
Thats why we need a possibility to build the API-Doc for a single file.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19212</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-09 11:38:42 +0200</bug_when>
            <thetext>working on</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19281</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-13 13:58:09 +0200</bug_when>
            <thetext>It is now possible to create API docs for a single class. The work flow is as 
follows:

- A new generator jobs has been added, &quot;api-data&quot;. It allows to generate the 
api data in an application, without (re-) generating the Apiviewer application. 
That means, you should run &#39;generate.py api&#39; at the beginning, to have the 
viewer ready.

- &quot;api-data&quot; will generate the ususal api data .json files. The default is to 
do this for the full scope of classes of this application, as with the default 
&quot;api&quot; job. 

- But you can add class id&#39;s on the command line. Then, the api data for only 
those class(es) will be generated.

- A caveat is that with every run, also the general &quot;apidata.json&quot; file is 
generated, which provides the index structure of the classes viewable in the 
Apiviewer (what you see in the tree view to the left). If you pass class names 
on the command line, only those class(es) and their ancestor classes will show 
up in Apiviewer. But for developing api documentation this is deemed sufficient.

With r22676.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19328</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-07-15 10:26:24 +0200</bug_when>
            <thetext>Seems like there are some problems with inherited documentations. Just build the qx.ui.form.Slider to see that the documentation for 

_createChildControlImpl
appearance 		
focusable

is missing.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19342</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-07-15 16:08:43 +0200</bug_when>
            <thetext>The problem appears with overridden class attributes. When doing single-file 
api data, the parent data is not available. When parsing the original class, 
undocumented features are attributed with a doc error. There is no way of 
knowing at this point if the feature is overridden. (This is only detected when 
going up the inheritance chain and finding a compatible feature. In this case, 
the doc error attribute is removed again).

We could before invoking the api doc generation (in api.py, where also the 
climbing is done to detect overridden features, in postWorkItemList), make sure 
that the list of classes (classList in Generator.runApiData) is extended to 
contain all super classes (using a novel Class method to get the tree and then 
the super class, and then recursing).

I&#39;d say it&#39;s not worth it at the moment. Single-class api generation is good to 
check what you actually documented, not if the class documentation is complete. 
This should be done by looking at the complete API doc, or at TODOC hints in 
the code :).

-&gt; Closing this again.</thetext>
          </long_desc>
      
      

    </bug>