<bug>
          <bug_id>6557</bug_id>
          
          <creation_ts>2012-06-23 08:48:00 +0200</creation_ts>
          <short_desc>Some methods missing in q.min.js</short_desc>
          <delta_ts>2012-07-31 08:59:01 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website</component>
          <version>2.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>2.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Alexander Steitz">alexander.steitz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>29897</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-06-23 08:48:00 +0200</bug_when>
            <thetext>The XHR class included in q is missing the setRequestHeader method. Seems like the static optimization striped that one out.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29898</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-06-23 08:49:43 +0200</bug_when>
            <thetext>As a workaround, you can set the header in the XHR call of the io module but the API is still in the API viewer so it should be available.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29899</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-06-23 08:51:25 +0200</bug_when>
            <thetext>But the workaround also tries to use that methods --&gt; there is no way to set the request headers!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29900</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-06-23 08:54:52 +0200</bug_when>
            <thetext>getRequest is also missing --&gt; we should check all methods!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29911</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-06-25 11:51:20 +0200</bug_when>
            <thetext>In the end, 12 methods were missing. To check that, we added a functionality to the website API viewer which will have a red !! before the method name if its missing.

The reasons were either part of the static optimization process or simply missing attach statements.

Additionally, had to fix some APi docs and the API viewer as well. It now shows the superclass for a given class and respects overridden methods.

master: a84a3024045dd38eb546dc1ad9e88f7c4589ceb4
2.0.x: 85bd913cc6ce6646f9d70469d07fbe1f47d8560b</thetext>
          </long_desc>
      
      

    </bug>