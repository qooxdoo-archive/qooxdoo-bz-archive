<bug>
          <bug_id>638</bug_id>
          
          <creation_ts>2007-09-14 10:36:00 +0200</creation_ts>
          <short_desc>Add theme classes (and similar const classes) to API viewer</short_desc>
          <delta_ts>2014-03-03 08:46:10 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>2319</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-14 10:36:30 +0200</bug_when>
            <thetext>The theme classes are entirely absent from the API viewer. You have to search the source code to find them, and see what is defined in them.

It&#39;s logical to include them in the documentation. After all, what is the API viewer for? It&#39;s so you don&#39;t have to look at the source code.

See also bug 470 at http://bugzilla.qooxdoo.org/show_bug.cgi?id=470

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2320</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-14 10:45:32 +0200</bug_when>
            <thetext>The general requirement is to show the keys of any dict defined in a class which is not otherwise documented.

For example, I have constant classes which just define keys to numerical values (so I don&#39;t use magic numbers in code):

   statics :
      {
      //
      // Community types
      //
      /** community where every one is a member */
      eGlobal    : 0,

So, show the Statics as a heading, then eGlobal as the entry with the documentation line as given above. On expansion, it can say Value: 0.

In the case of a theme file, colors for example, you get:

  colors :
  {
    &quot;document-background&quot;               : [ 243, 248, 253 ], //[ 229, 244, 254 ],
    &quot;background&quot;                        : [ 229, 244, 254 ],

The same applies. In addition, you could apply some smarts here and show a swatch of the colour defined.

This would work recursively as well:

borders:
   {
    &quot;inset-thin&quot; :
    {
      width : 1,
      color : &quot;border-light&quot;
    },

The inset-thin entry would have value showing the keys and values defined.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5113</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:14 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35437</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:10 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>