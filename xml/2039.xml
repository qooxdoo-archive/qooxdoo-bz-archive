<bug>
          <bug_id>2039</bug_id>
          
          <creation_ts>2009-03-04 17:27:00 +0100</creation_ts>
          <short_desc>Expose unified and accessible interface to qooxdoo version</short_desc>
          <delta_ts>2014-03-03 15:19:31 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0-beta1</target_milestone>
          
          <blocked>2038</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>fabian.jakobs</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8276</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-04 17:27:18 +0100</bug_when>
            <thetext>This bug is sort of a conceptual bug, and might spinn off a number of concrete 
bugs to realize its solution.

It is not straight forward to determine the qooxdoo version of a check-out/SDK:

- In trunk we use SVN properties and version strings in several .json files. 
This means with every version bump we have to adjust several bits of 
information instead of only one.
- In an installed SDK or svn export of qooxdoo there is no SVN info available. 
There is no single, authoritative place to find the qooxdoo version of this 
tree.
- This is particularly problematic when problems are reported on the mailing 
list and we need to know the proper version of the used qooxdoo. 
- This also impedes the working of an envisioned &quot;collect-environment&quot; script 
(see bug#2038)
- Even if we used tool/data/config/base.json as the single source for the 
qooxdoo version it would not be very intuitive for a casual user to check.

One suggestion to solve this would be a top-level Manifest.json (or other 
named) Json file that holds the qooxdoo version string. All processes needing 
version info (make release, generate applications, ....) should use this 
central information, either directly or indirectly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>8277</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-03-04 17:36:14 +0100</bug_when>
            <thetext>For the 0.8.2 release this has been pragmatically solved by providing a version.txt file with the version number in the top-level directory. Of course, this is just a temporary workaround that has to be replaced later by some more advanced and automated procedure.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11596</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-26 19:13:47 +0200</bug_when>
            <thetext>down prio for now</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11697</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-08-28 18:04:04 +0200</bug_when>
            <thetext>There is now a single point where the qooxdoo version is stored: the 
version.txt file in the root directory of the qooxdoo tree. Changes have only 
to be maintained there.

The tool/admin/Makefile.release reads the contents of this file. The generator 
does this too, and makes the value available to config files as an automatic 
macro, QOOXDOO_VERSION. This is used to initialize the qx.version setting in 
base.json, so it&#39;s also available to standard apps code.

With r19951.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12099</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2009-09-09 17:02:55 +0200</bug_when>
            <thetext>One occurence in the framework is still using a hard-coded version string: create-application.py

-&gt; Reopen this one.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12102</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-09-09 20:04:20 +0200</bug_when>
            <thetext>Fixed explicitly for 0.8.3, moved bug to 0.9.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>12370</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-09-16 17:12:43 +0200</bug_when>
            <thetext>create-application.py now also reads the version file dynamically.

With r20130.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14461</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:14:45 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0-beta1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36522</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:31 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>