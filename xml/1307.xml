<bug>
          <bug_id>1307</bug_id>
          
          <creation_ts>2008-08-31 18:11:00 +0200</creation_ts>
          <short_desc>qx.core.Version not migrated</short_desc>
          <delta_ts>2011-08-24 16:28:17 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.migration</component>
          <version>0.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Evgeny Stambulchik">fnevgeny</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>4856</commentid>
            <who name="Evgeny Stambulchik">fnevgeny</who>
            <bug_when>2008-08-31 18:11:07 +0200</bug_when>
            <thetext>After doing migration, qx.core.Version remains unchanged, but it&#39;s undefined in 0.8. What is the supposed replacement?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4857</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-08-31 18:28:37 +0200</bug_when>
            <thetext>Yes, I agree this (or even better, a variant) should be added back in to 0.8.  Among other things, it would allow qooxdoo-contrib projects to use the same source code for 0.7 and 0.8 with the required changes &quot;ifdef&#39;ed&quot; using the qooxdoo version variant.

The current workaround is:

      var bVersion_0_7 = (qx.application.Gui !== undefined);
      var bVersion_0_8 = ! bVersion_0_7;

which works as long as you have a gui application, that this is surely a kludge.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4907</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-09-01 16:21:04 +0200</bug_when>
            <thetext>to jony</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>4926</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-01 17:30:32 +0200</bug_when>
            <thetext>Mhh, this is something should be implemented using some Class working with 
qxlibinfo added by Thomas using the generator. qx.core.Version is basically not 
a good idea as to specific to the qooxdoo framework itself.

@Thron7: Can you add the missing info to the libinfo e.g. version, svn revision 
(if possible), etc.?

Increased priority.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5485</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-11 12:02:30 +0200</bug_when>
            <thetext>I&#39;ve applied some first steps for better integration possibility of such new 
code through some cleanups of the method which generates the qxlibrary map.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5735</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-07 14:58:53 +0200</bug_when>
            <thetext>To clarify: original bug report was about the fact that qx.core.Version was still used within custom code (not being renamed by the migration process), but couldn&#39;t be resolved as it is not available in 0.8 any more.

In general there should be a possibility to determine the version of any library used, not just the qooxdoo framework. As suggest that could be achieved via the meta info prepended to the app code by the generator. @Thomas, please have a look.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6878</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-12-12 15:24:45 +0100</bug_when>
            <thetext>@Andreas: Two things are open here:
- the framework run time has to expose an interface to the 
qxlibraries[&lt;namespac&gt;][&#39;version&#39;] information (maybe through 
qx.util.ResourceManager or similar). This has to be decided, implemented and 
documented.
- the 0.8.1/info migration entry for qx.core.Version  has to be finalized</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6879</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-12-12 15:24:52 +0100</bug_when>
            <thetext>Add &#39;version&#39; info to qxlibraries in bootloader code, making use of Sebastian&#39;s 
preparations (done in Generator.generateLibInfoCode()).
Info could now be used on the JS run time side.

NB: &#39;trunk&#39; as a library version is rather unusable. Should be changed in 
Manifest.json to something more meaningful, like &#39;0.8.1-pre&#39;.

Add migration info to 0.8.1 for qx.core.Version, with a preliminary message 
(has to be finalized when replacement is in place).

With: r16962</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7104</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-12-17 17:01:24 +0100</bug_when>
            <thetext>There&#39;s no obvious place right now to attach such getters. This needs some more thoughts after the 0.8.1 release, maybe introducing new classes to cover other library/part functionality. Any access to the internal qxlibraries[&lt;namespac&gt;][&#39;version&#39;] may be used as a work-around, but is not officially supported and may break later.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7894</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 11:37:25 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15997</commentid>
            <who name="Evgeny Stambulchik">fnevgeny</who>
            <bug_when>2009-12-30 13:44:11 +0100</bug_when>
            <thetext>Hmm, is it really that non-trivial??</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>23453</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-03-22 10:07:32 +0100</bug_when>
            <thetext>Thomas, this is an old open issue. Is it still valid?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24654</commentid>
            <who name="Evgeny Stambulchik">fnevgeny</who>
            <bug_when>2011-05-22 13:29:55 +0200</bug_when>
            <thetext>Seems like qx.core.Environment.get(&quot;qx.version&quot;) was silently added at some point without being documented... I noticed it in the feed reader demo.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24658</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-23 10:56:46 +0200</bug_when>
            <thetext>This was introduced more than a year ago with bug #2039. The missing documentation has been added to trunk. (r27375)
Does that mean we can close that bug as duplicate of 2039?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24660</commentid>
            <who name="Evgeny Stambulchik">fnevgeny</who>
            <bug_when>2011-05-23 11:06:26 +0200</bug_when>
            <thetext>(In reply to comment #13)
&gt; This was introduced more than a year ago with bug #2039. The missing
&gt; documentation has been added to trunk. (r27375)

Thanks!

&gt; Does that mean we can close that bug as duplicate of 2039?

It seems it can be closed, but I wouldn&#39;t call it a duplicate of #2039. Does not really matter, though.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24661</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-23 11:43:48 +0200</bug_when>
            <thetext>Thanks for the quick reply.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26588</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-08-24 16:28:17 +0200</bug_when>
            <thetext>(In reply to comment #11)
&gt; Thomas, this is an old open issue. Is it still valid?

I still think it is worthwhile to have an official interface to query the version of *any* library involved in a build at runtime (not just the version of the qooxdoo framework). This would then make the environment setting &quot;qx.version&quot; superfluous. But this general solution (see e.g. comment#6) is still missing. Yet, as this bug centered around the qooxdoo version, it might be better addressed in its own bug.</thetext>
          </long_desc>
      
      

    </bug>