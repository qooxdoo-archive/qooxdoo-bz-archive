<bug>
          <bug_id>5264</bug_id>
          
          <creation_ts>2011-06-20 17:02:00 +0200</creation_ts>
          <short_desc>Add a semi-automatic destruct feature</short_desc>
          <delta_ts>2014-03-03 08:46:45 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.testrunner</component>
          <version>1.4.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          <blocked>4944</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>25178</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-06-20 17:02:25 +0200</bug_when>
            <thetext>Unit tests that fail to destroy all the objects they create are a common source of memory leaks. We could minimize this problem by adding a convenience method to the unit testing infrastructure (e.g. qx.dev.unit.TestCase.createObject) that instantiates a class with the given parameters, stores a reference to the object in an array on the current test class instance and returns the object. After each test (and the generic and/or test-specific tearDown methods), we would then call destroy or dispose on each object in the list.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25186</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-06-21 08:33:20 +0200</bug_when>
            <thetext>+1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35654</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:45 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>