<bug>
          <bug_id>20</bug_id>
          
          <creation_ts>2006-06-07 14:37:00 +0200</creation_ts>
          <short_desc>Reimplement layout engine</short_desc>
          <delta_ts>2014-03-03 15:22:30 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.layout</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8</target_milestone>
          <dependson>16</dependson>
    
    <dependson>23</dependson>
          <blocked>5</blocked>
    
    <blocked>28</blocked>
    
    <blocked>64</blocked>
    
    <blocked>67</blocked>
    
    <blocked>73</blocked>
    
    <blocked>86</blocked>
    
    <blocked>97</blocked>
    
    <blocked>120</blocked>
    
    <blocked>166</blocked>
    
    <blocked>167</blocked>
    
    <blocked>169</blocked>
    
    <blocked>197</blocked>
    
    <blocked>268</blocked>
    
    <blocked>292</blocked>
    
    <blocked>293</blocked>
    
    <blocked>297</blocked>
    
    <blocked>316</blocked>
    
    <blocked>353</blocked>
    
    <blocked>389</blocked>
    
    <blocked>429</blocked>
    
    <blocked>453</blocked>
    
    <blocked>475</blocked>
    
    <blocked>502</blocked>
    
    <blocked>507</blocked>
    
    <blocked>511</blocked>
    
    <blocked>549</blocked>
    
    <blocked>613</blocked>
    
    <blocked>622</blocked>
    
    <blocked>623</blocked>
    
    <blocked>674</blocked>
    
    <blocked>763</blocked>
          <votes>2</votes>
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Werner">info</reporter>
          <assigned_to name="Sebastian Werner">info</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-06-07 14:37:36 +0200</bug_when>
            <thetext>The layout engine is sometimes problematic. One case is for widgets which depends on their own computed dimensions. They currently compute the dimensions while rendering and interrupting the layouter this way. This is currently true for QxListView and the new table implementation.

The requirements for the new engine:

  * Allow access to computed values at any time.
  * Remove spacing and margins from inner width/height of each &#39;&#39;Parent&#39;&#39; to calculate percents. (Mail: Stanislav Ievlev, 08.02.2006, 13:18 Uhr)
  * Optimize unit detection and unit handling and storage for dimension and location properties. Try to remove all these boolean flags.
  * Try to only have one queue for layouts and jobs
  * Omit caching on setting of the value.
  * Try to reduce caching stuff (sometimes the cache is probably slower than the (re-)calculation)
  * Discuss if it is useful to also cache hasPercentX, hasAutoX, ...
  * Reimplement cached properties so that the invaliation will not set the old value to null, but set a isInvalid flag which will define that the next get must re-evaluate the value first.
  * Add depth property to widgets. Sort job queue according to depth before flush.
  * Add overflow fallback handling to layouts (e.g. show a menu at the end when the toolbar is to small)
  * Support overflow &#39;auto&#39; with &#39;auto&#39; width or(/and?) height
  * Support splitted overflow properties &quot;overflow-x/y&quot; in gecko-1.8 (split overflow properties for this?)

Nice to have:

  * Think about additionally supporting dimensions like &#39;100%-10&#39; as in RelativeLayers
  * Move all layout depending properties from widgets to the used layout implementation like in Qt or SWT.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-06-07 14:39:25 +0200</bug_when>
            <thetext>*** Bug 21 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-06-07 14:41:44 +0200</bug_when>
            <thetext>*** Bug 22 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-06-07 15:16:01 +0200</bug_when>
            <thetext>Also add resize events which will be fired if widgets are resized, e.g. &#39;&#39;Window&#39;&#39;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>214</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-07-17 16:49:14 +0200</bug_when>
            <thetext>Maybe it&#39;s possible to implement the layouts as singletons. Each (parent-)widget then has a property layoutImpl, as currently, and must support the needed properties of the layout. The layout itself could include some fallback mechanics to handle missing properties.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>396</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-09-08 12:10:29 +0200</bug_when>
            <thetext>We definitely handle the font-size/line-height issues for Internet Explorer where it&#39;s not easily possible to reduce the height of an aribitary object to less than its line height.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>397</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-09-08 12:11:06 +0200</bug_when>
            <thetext>We need to be sure to remove all margins added by the browser as default values. Gecko for examples add a marginTop/marginBottom of 1px to all textareas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>1191</commentid>
            <who name="David Werner">david.werner</who>
            <bug_when>2007-04-12 11:45:11 +0200</bug_when>
            <thetext>Maybe you can also handle the padding problem that occurs if you add items to a let BoxLayout. 
Let&#39;s say you have a VerticalBoxLayout with overflow set to &quot;scrollY&quot; and set paddingBottom, too.  Then the bottom padding is shown as long as the items are in the layout&#39;s visible area. If you add a new item below that area and you scroll into view, the bottom padding is gone. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3037</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-05-07 14:48:06 +0200</bug_when>
            <thetext>fixed in trunk</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37701</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:30 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>