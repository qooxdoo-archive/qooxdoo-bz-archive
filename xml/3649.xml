<bug>
          <bug_id>3649</bug_id>
          
          <creation_ts>2010-04-28 19:33:00 +0200</creation_ts>
          <short_desc>Combined Images are not Automatically included in the Build</short_desc>
          <delta_ts>2014-03-03 15:20:03 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.system</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          <cc>schnepe2</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18085</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-04-28 19:33:58 +0200</bug_when>
            <thetext>Currently, combined images have to be covered by a #asset hint in the 
application, in order to be included in a build (both source or build).

This defeats the idea of combined images, which are an optimization technique 
that should not be reflected in the application code. If combined images are 
available, they should be included silently *iff* their contained images are 
being referenced in the application. (Of course they have to be in the scope of 
the respective library to be found at all).

The problem is the filtering function 
(ResourceHandler.getResourceFilterByAsset) that is parameterized with the 
#asset expression, and then used to filter a library&#39;s resource files. Maybe 
this has to be re-thought.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18135</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-03 16:48:39 +0200</bug_when>
            <thetext>Combined images are now included into a build without a specific #asset hint. 
Just one or more of the embedded images has to be #asset&#39;ed.

The new implementation does a two-pass processing of the images. In the first 
pass all &quot;simple&quot; images that are required are registered, and all combined 
images in a separate structure. In the second pass, the combined images are 
re-iterated, and if a required embedded image is found, this combined image is 
added to the build, updating the image information on all required simple 
images that are contained in it.

With r22111</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18215</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-05 14:51:36 +0200</bug_when>
            <thetext>The nightly shows problems in the build version of a Demobrowser demo:

demobrowser.demo.animation.Tree_Highlight-qx.theme.Modern.js has references to 
the combined demobrowser/demo/test/combined/icons22.png, but the image is not 
included in the resources.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>18260</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-05-07 13:06:15 +0200</bug_when>
            <thetext>Fixed resource copying for the build version. The resource copying needs the 
same treatment of combined images as the code generation (of course, once you 
think about it, which I didn&#39;t...). There is room for code re-use here. - 
Thanks to Peter for the pointer.

With r22147</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20038</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-30 17:02:50 +0200</bug_when>
            <thetext>There is a regression in trunk/r23168. Combined images are not used, although copied to the build version. Check branch 1.2.x.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20040</commentid>
            <who name="Peter Schneider">schnepe2</who>
            <bug_when>2010-08-31 11:03:51 +0200</bug_when>
            <thetext>I just want to make sure you noticed that the error is on *both* &#39;versions&#39;:
&quot;source&quot; _and_ &quot;build&quot;, so this might be a little different issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20046</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-08-31 17:40:58 +0200</bug_when>
            <thetext>Fixed, both source and build versions.

With r23206.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20590</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-10-13 07:54:09 +0200</bug_when>
            <thetext>mass retargeting to 1.2.2 due to intermediate 1.2.1 release</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36739</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:03 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>