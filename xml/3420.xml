<bug>
          <bug_id>3420</bug_id>
          
          <creation_ts>2010-02-08 11:14:00 +0100</creation_ts>
          <short_desc>GlobalError handler should wrap &quot;window.onerror&quot; instead of resetting it</short_desc>
          <delta_ts>2010-04-12 14:37:41 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.0.2</target_milestone>
          <dependson>3553</dependson>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alexander Steitz">alexander.steitz</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          <cc>christian.schuff</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>16724</commentid>
            <who name="Alexander Steitz">alexander.steitz</who>
            <bug_when>2010-02-08 11:14:38 +0100</bug_when>
            <thetext>The class &quot;qx.event.GlobalError&quot; is setting &quot;window.onerror&quot; to null if the error handler of qooxdoo is used and no callback is specified (yet).

We need to modify the implementation here and wrap an already defined function to keep any additional error handling functional. This may be the case where qooxdoo is used at traditional webpages where a generic error handling routine is used.

Disabling the error handling completely and implement the eror handling on the foundation of &quot;window.onerror&quot; is no solution for a project which uses qooxdoo at a tradtional webpage, since &quot;window.onerror&quot; does *not* catch all errors and is not completely cross-browser.

@Fabian
Since you are the author of the error handler, can you please take a look?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17292</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-17 13:16:56 +0100</bug_when>
            <thetext>to Martin</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17563</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-29 09:41:19 +0200</bug_when>
            <thetext>Accept</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17578</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-29 14:22:56 +0200</bug_when>
            <thetext>Added the wrapping of the native onerror handler with r21829 for trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17709</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-04-12 14:37:41 +0200</bug_when>
            <thetext>nightly tests were ok --&gt; CLOSED</thetext>
          </long_desc>
      
      

    </bug>