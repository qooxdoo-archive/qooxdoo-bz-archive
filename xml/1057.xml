<bug>
          <bug_id>1057</bug_id>
          
          <creation_ts>2008-07-11 14:34:00 +0200</creation_ts>
          <short_desc>Update JSON regexp validation</short_desc>
          <delta_ts>2014-03-03 15:25:41 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>andreas.junghans</cc>
    
    <cc>derrell.lipman</cc>
    
    <cc>thron7</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>3800</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-07-11 14:34:35 +0200</bug_when>
            <thetext>Newer RegExp&#39;s

It appears there are newer versions for the detecting expression. Samples:

http://tobielangel.com/2007/4/19/sanitize-json-regex-bug
http://www.devpro.it/code/149.html
(look for &quot;Eaeflnr-u&quot;)

So it seems beneficial to improve the regexp.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3805</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-07-11 14:40:10 +0200</bug_when>
            <thetext>Volunteers? Unit tests would be great.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3829</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-07-11 15:16:26 +0200</bug_when>
            <thetext>The given URLs list these versions for the regexp:

1. /^(&quot;(\\.|[^&quot;\\\n\r])*?&quot;|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/  (A.Giammarchi, devpro.it)
2. /^(&quot;(\.|[^&quot;\\n\r])*?&quot;|[,:{}[]0-9.\-+Eaeflnr-u \n\r\t])+?$/  (T.Langel)
3. /^(&quot;(\.|[^&quot;\\n\r]*)*?&quot;|[,:{}[]0-9.\-+Eaeflnr-u \n\r\t]*)+?$/ (T.Langel)

1. is derived from a string argument to new RegExp(). It looks pretty much like 2. except for some additional &#39;\&#39;, so 2. might actually represent the current canonical form. 3. is a tentative fix for a Safari regexp bug, but that might be fixed meanwhile. On the other hand, D.Crockford warns that it might incure negative impacts on IE.

So, the issue of this bug is really not so much replacing the regexp literal in Json.js with one of the newer versions, but to come up with a rock-solid (unit) test bed so the new version can be exhaustively tested against all current browsers.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3849</commentid>
            <who name="Andreas Junghans">andreas.junghans</who>
            <bug_when>2008-07-11 16:02:11 +0200</bug_when>
            <thetext>Unfortunately, there&#39;s a problem with the improved expressions: They reject our &quot;new Date(...)&quot; syntax that we currently use in the RPC to transport date and time values. There was a discussion on the mailing list about this some (or rather a long) time ago.

The problem with other approaches regarding dates (class hinting, format matching of strings, etc.) is the huge performance impact these can have. eval()-ing a string is very fast in all browsers, but walking the whole object tree returned by the server to scan for dates can be very slow, especially for large responses - see also my comment on bug 1028: http://bugzilla.qooxdoo.org/show_bug.cgi?id=1028

As long as validation of JSON strings is optional, we could use a stricter expression at the expense of losing our date handling (so validation has to be turned of to efficiently deal with Date objects). A better solution would be to make the validation aware of the date syntax.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3852</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-07-11 16:13:00 +0200</bug_when>
            <thetext>What&#39;s about to replace &quot;new Date&quot; constructs first with something empty like we already do for strings? What values are allowed inside the &quot;new Date()&quot; construct in our specification?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3858</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-07-11 16:28:29 +0200</bug_when>
            <thetext>The file backend/SERVER_WRITER_GUIDE describes this issue and how we have resolved it.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3861</commentid>
            <who name="Andreas Junghans">andreas.junghans</who>
            <bug_when>2008-07-11 17:03:54 +0200</bug_when>
            <thetext>@sw: Replacing &quot;new Date(Date.UTC(...))&quot; with &quot;[...]&quot; should work for validation (see the SERVER_WRITER_GUIDE mentioned by Derrell).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5132</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-09-03 20:17:34 +0200</bug_when>
            <thetext>Long grown priorities normalized to P5 to increase a few of them afterwards.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16246</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2010-01-15 17:14:02 +0100</bug_when>
            <thetext>this has been done with the fix of bug #1400</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38840</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:41 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>