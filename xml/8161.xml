<bug>
          <bug_id>8161</bug_id>
          
          <creation_ts>2014-03-06 16:59:00 +0100</creation_ts>
          <short_desc>Rewrite Drag&amp;Drop handler to work without over and out events</short_desc>
          <delta_ts>2014-04-09 14:43:47 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Christian Hagendorn">christian.hagendorn</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>39698</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-06 16:59:19 +0100</bug_when>
            <thetext>The current implementation of drag &amp; drop relies on the existence of mouseover / mouseout events. As we migrated to pointer events, i became clear that the algorithm needs to be adapted because pointerover / pointerout wont be fired on touch devices. So the goal is to rewrite the algorithm only using down, up and move events.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39743</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-17 16:22:38 +0100</bug_when>
            <thetext>Check the drag &amp; drop demo of the table as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39880</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-04-03 15:44:19 +0200</bug_when>
            <thetext>Did a complete rewrite of the algorithm based on track events instead of mouse / pointer events. This way, I could manage to the a good UX for mouse and touch interaction (longtap to start the drag&amp;drop).

pointer: 69a3db840cfdee11d8d64130a546866277e9a43f</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39918</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-04-09 11:52:02 +0200</bug_when>
            <thetext>Reopen: Does not work on Firefox.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39921</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-04-09 14:43:47 +0200</bug_when>
            <thetext>It was the introduced button handling for the dom level 3 spec [1]. Firefox implements as the spec says as a read only property so we need to use the initializer which seems to be missing. Reverted the change back to the dom level 2 API which works.

[1] http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-buttons

pointer: 8869efada39b7284cadda121c884b2beb245a726</thetext>
          </long_desc>
      
      

    </bug>