<bug>
          <bug_id>135</bug_id>
          
          <creation_ts>2006-08-28 20:16:00 +0200</creation_ts>
          <short_desc>API Static methods</short_desc>
          <delta_ts>2008-06-05 14:28:53 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="christophe">cpco</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>299</commentid>
            <who name="christophe">cpco</who>
            <bug_when>2006-08-28 20:16:09 +0200</bug_when>
            <thetext>In file api.py:

To check if a method is static, the code only check if the right method is a function:
(42)  elif leftItem.children[1].get(&quot;name&quot;) == &quot;Class&quot;:
              if rightItem.type == &quot;function&quot;:
                handleMethodDefinition(item, True, currClassNode)
              elif leftItem.children[2].get(&quot;name&quot;).isupper():
                handleConstantDefinition(item, currClassNode)

Some of the defined classes use the singleton pattern provided from qx.util.Return.returnInstance.

qx.core.Init, for example, use this approach:

/**
 * Singleton Instance Getter
 */
qx.Class.getInstance = return qx.util.Return.returnInstance;

In these situations, the generated API documentation does not refer to the these static methods.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>729</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2006-11-29 14:28:40 +0100</bug_when>
            <thetext>Will be changed competely with 0.7, so no special reason to fix this now.</thetext>
          </long_desc>
      
      

    </bug>