<bug>
          <bug_id>3953</bug_id>
          
          <creation_ts>2010-08-04 00:06:00 +0200</creation_ts>
          <short_desc>Duration assignment not being applied for Pulsate</short_desc>
          <delta_ts>2014-03-03 15:22:25 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>website.animation</component>
          <version>1.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.2.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andy Jarrell">andyjarrell</reporter>
          <assigned_to name="Gabriel Munteanu">jajalinux</assigned_to>
          <cc>adrian.olaru</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>19631</commentid>
              <attachid>779</attachid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-08-04 00:06:30 +0200</bug_when>
            <thetext>Created attachment 779
Updated Pulsate.js

I am seeing that &quot;duration&quot; property of Pulsate isn&#39;t being applied.  It seems only to use the default init&#39;ed value of 2.  Looking at the code it appears that the __fadeEffects array is only updated at construction time.  It looks like the refined property needs an apply method that updates the array.  I&#39;m not sure if I&#39;m misunderstanding of the way of using it, or if it&#39;s worth me filing a bug report.  From the original source: 

  /* 
    ***************************************************************************** 
       CONSTRUCTOR 
    ***************************************************************************** 
  */ 

  /** 
   * @param element {Object} The DOM element 
   */ 
  construct : function(element) 
  { 
    this.base(arguments, element); 

    var duration = this.getDuration() / 6; 
    var counter = 0; 

    this.__fadeEffects = [ 
      new qx.fx.effect.core.Fade(element), 
      new qx.fx.effect.core.Fade(element), 
      new qx.fx.effect.core.Fade(element), 
      new qx.fx.effect.core.Fade(element), 
      new qx.fx.effect.core.Fade(element), 
      new qx.fx.effect.core.Fade(element) 
    ]; 

    for (var i=0, l=this.__fadeEffects.length; i&lt;l; i++) 
    { 
      this.__fadeEffects[i].set({ 
        duration : duration, 
        to : ( (counter % 2) != 0) ? 1 : 0, 
        from : ( (counter % 2) != 0) ? 0 : 1, 
        transition: &quot;sinodial&quot;, 
        modifyDisplay : false 
      }); 
      counter++; 
    } 

  }, 


  /* 
   ***************************************************************************** 
      PROPERTIES 
   ***************************************************************************** 
   */ 

  properties : 
  { 

    /** 
     * Number of seconds the effect should run. 
     */ 
    duration : 
    { 
      init : 2, 
      refine : true 
    } 

  }, 

From the property definition I don&#39;t see any update of the __fadeEffects array values.  Continued kudos on a great API!


I attached a modified file with the fix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19632</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-08-04 00:07:30 +0200</bug_when>
            <thetext>From this discussion thread:
http://qooxdoo.678.n2.nabble.com/Duration-assignment-not-being-applied-for-Pulsate-tp5338354.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20336</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-09-23 15:40:56 +0200</bug_when>
            <thetext>This still exists in the trunk version of the source.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20337</commentid>
            <who name="Christian Hagendorn">christian.hagendorn</who>
            <bug_when>2010-09-23 15:56:30 +0200</bug_when>
            <thetext>Please do not change the version number. It is important to know since which version the bug exist, maybe it is possible to apply the fix on other branches. So please keep the version number to 1.1.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20338</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-09-23 16:00:46 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; Please do not change the version number. It is important to know since which
&gt; version the bug exist, maybe it is possible to apply the fix on other branches.
&gt; So please keep the version number to 1.1.

Will do, thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21110</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-11-05 10:39:07 +0100</bug_when>
            <thetext>Gabriel, please review the proposed patches when fixing the bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21115</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-11-05 12:14:16 +0100</bug_when>
            <thetext>the proposed solution works in the way that it keeps the number of pulsations to 6 [if you count fadein and fadeout as 2] and makes each pulsation last longer.
i am not sure this is what the ultimate user wants, maybe it wants more pulsations during a longer duration of the effects.
i just looked at the scriptaculous pulsate thing, and it has a pulses property that specifies how many times the effect should pulsate, that i think we better include in qooxdoo too.
in that case, duration property will mean what Andy intended in the first place and we just add another property only for this effect.
Andreas, what do you think?

also the code for _applyDuration in the forum link must be stripped to:
    _applyDuration: function(value, old) {
      var effectDuration = value / 6;

      for (var i=0, l=this.__fadeEffects.length; i&lt;l; i++)
      {
        this.__fadeEffects[i].set({
          duration : effectDuration
        });
      }
     }
as we do not want to affect the other properties when changing the duration.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21116</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-11-05 13:00:12 +0100</bug_when>
            <thetext>For now it&#39;s fine just to fix the defect and allow the duration to be applied properly (for the predefined 3 pulsations).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21124</commentid>
            <who name="Andy Jarrell">andyjarrell</who>
            <bug_when>2010-11-05 15:38:43 +0100</bug_when>
            <thetext>If it helps to know how I was using it, I&#39;m pulsing a label to indicate to the user that they have some new error messages to review.  I needed it to pulse at a quicker rate and keep pulsing until the user clicks in the list of errors I&#39;ve created.  Once they click in the list I stop the animation and hide the label.

My original issue was the speed of the pulse, however, having the ability to specify how long the pulsing is to last (also specifying infinitely) would be a nice feature if you get around to it.

Thanks again for an amazing api and all your hard work.  I would be months behind in developing my web interface without it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21125</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-11-05 16:04:38 +0100</bug_when>
            <thetext>fixed on trunk with rev. 23678</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21126</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-11-05 16:07:34 +0100</bug_when>
            <thetext>as a workaround for the infinte loop, one can restart the animation once it has finished. add a Listener to the finish event where you check if the condition to stop it is met, if not start it over.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21128</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-11-05 16:08:51 +0100</bug_when>
            <thetext>Gabriel, great. Please fix that in branch_1_2_x as well, thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21145</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2010-11-08 08:55:26 +0100</bug_when>
            <thetext>fixed on branch_1_2_x with rev. 23685</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37665</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:25 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="0" isprivate="0" isurl="0">
            <attachid>779</attachid>
            <date>2010-08-04 00:06:00 +0200</date>
            <delta_ts>2010-08-04 00:06:30 +0200</delta_ts>
            <desc>Updated Pulsate.js</desc>
            <filename>Pulsate.js</filename>
            <type>text/plain</type>
            <size>3907</size>
            <attacher>andyjarrell</attacher>
            
              <data encoding="base64">LyogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoNCiAgIHFvb3hkb28gLSB0aGUgbmV3IGVyYSBvZiB3ZWIgZGV2
ZWxvcG1lbnQNCg0KICAgaHR0cDovL3Fvb3hkb28ub3JnDQoNCiAgIENvcHlyaWdodDoNCiAgICAg
MjAwOCAxJjEgSW50ZXJuZXQgQUcsIEdlcm1hbnksIGh0dHA6Ly93d3cuMXVuZDEuZGUNCg0KICAg
TGljZW5zZToNCiAgICAgTEdQTDogaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRt
bA0KICAgICBFUEw6IGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvb3JnL2RvY3VtZW50cy9lcGwtdjEw
LnBocA0KICAgICBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdCdzIHRvcC1sZXZl
bCBkaXJlY3RvcnkgZm9yIGRldGFpbHMuDQoNCiAgIEF1dGhvcnM6DQogICAgICogSm9uYXRoYW4g
V2Vp3yAoam9uYXRoYW5fcmFzcykNCg0KICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQogICBUaGlzIGNsYXNz
IGNvbnRhaW5zIGNvZGUgYmFzZWQgb24gdGhlIGZvbGxvd2luZyB3b3JrOg0KDQogICAqIHNjcmlw
dC5hY3Vsby51cw0KICAgICAgIGh0dHA6Ly9zY3JpcHQuYWN1bG8udXMvDQogICAgICAgVmVyc2lv
biAxLjguMQ0KDQogICAgIENvcHlyaWdodDoNCiAgICAgICAoYykgMjAwOCBUaG9tYXMgRnVjaHMN
Cg0KICAgICBMaWNlbnNlOg0KICAgICAgIE1JVDogaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9s
aWNlbnNlcy9taXQtbGljZW5zZS5waHANCg0KICAgICBBdXRob3I6DQogICAgICAgVGhvbWFzIEZ1
Y2hzDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiAqLw0KDQovKioNCiAqIENvbWJpbmF0aW9uIGVmZmVjdCAi
UHVsc2F0ZSINCiAqDQogKiBGYWRlcyB0aGUgZWxlbWVudCBpbiBhbmQgb3V0IHNldmVyYWwgdGlt
ZXMuDQogKi8NCg0KcXguQ2xhc3MuZGVmaW5lKCJxeC5meC5lZmZlY3QuY29tYmluYXRpb24uUHVs
c2F0ZSIsDQp7DQoNCiAgZXh0ZW5kIDogcXguZnguQmFzZSwNCg0KICAvKg0KICAgICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQogICAgICAgQ09OU1RSVUNUT1INCiAgICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KICAqLw0KDQogIC8qKg0KICAgKiBAcGFyYW0gZWxlbWVudCB7T2JqZWN0fSBUaGUgRE9NIGVs
ZW1lbnQNCiAgICovDQogIGNvbnN0cnVjdCA6IGZ1bmN0aW9uKGVsZW1lbnQpDQogIHsNCiAgICB0
aGlzLmJhc2UoYXJndW1lbnRzLCBlbGVtZW50KTsNCg0KICAgIHRoaXMuX19mYWRlRWZmZWN0cyA9
IFsNCiAgICAgIG5ldyBxeC5meC5lZmZlY3QuY29yZS5GYWRlKGVsZW1lbnQpLA0KICAgICAgbmV3
IHF4LmZ4LmVmZmVjdC5jb3JlLkZhZGUoZWxlbWVudCksDQogICAgICBuZXcgcXguZnguZWZmZWN0
LmNvcmUuRmFkZShlbGVtZW50KSwNCiAgICAgIG5ldyBxeC5meC5lZmZlY3QuY29yZS5GYWRlKGVs
ZW1lbnQpLA0KICAgICAgbmV3IHF4LmZ4LmVmZmVjdC5jb3JlLkZhZGUoZWxlbWVudCksDQogICAg
ICBuZXcgcXguZnguZWZmZWN0LmNvcmUuRmFkZShlbGVtZW50KQ0KICAgIF07DQoJIA0KCSB0aGlz
LmluaXREdXJhdGlvbigpOw0KICB9LA0KDQoNCiAgLyoNCiAgICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQogICAgICBQUk9QRVJUSUVTDQogICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAgKi8NCg0KICBw
cm9wZXJ0aWVzIDoNCiAgew0KDQogICAgLyoqDQogICAgICogTnVtYmVyIG9mIHNlY29uZHMgdGhl
IGVmZmVjdCBzaG91bGQgcnVuLg0KICAgICAqLw0KICAgIGR1cmF0aW9uIDoNCiAgICB7DQogICAg
ICBpbml0IDogMiwNCiAgICAgIHJlZmluZSA6IHRydWUNCiAgICB9DQoNCiAgfSwNCg0KDQogIC8q
DQogICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KICAgICAgTUVNQkVSUw0KICAgKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCiAgICovDQoNCiAgIG1lbWJlcnMgOg0KICAgew0KDQogICAgX19vbGRWYWx1ZSA6
IG51bGwsDQogICAgX19mYWRlRWZmZWN0cyA6IG51bGwsDQoNCiAgICBiZWZvcmVTZXR1cCA6IGZ1
bmN0aW9uKCkgew0KICAgICAgdGhpcy5fX29sZFZhbHVlID0gcXguYm9tLmVsZW1lbnQuU3R5bGUu
Z2V0KHRoaXMuX2dldEVsZW1lbnQoKSwgIm9wYWNpdHkiKTsNCiAgICB9LA0KDQoNCiAgICBzdGFy
dCA6IGZ1bmN0aW9uKCkNCiAgICB7DQogICAgICBpZiAoIXRoaXMuYmFzZShhcmd1bWVudHMpKSB7
DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCg0KICAgICAgdmFyIGNvdW50ZXIgPSAwOw0KICAg
ICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICBmb3IgKHZhciBpPTAsIGw9dGhpcy5fX2ZhZGVF
ZmZlY3RzLmxlbmd0aDsgaTxsOyBpKyspDQogICAgICB7DQogICAgICAgIHRoaXMuX19mYWRlRWZm
ZWN0c1tpXS5pZCA9IGNvdW50ZXI7DQogICAgICAgIGlmIChjb3VudGVyIDwgNSkNCiAgICAgICAg
ew0KICAgICAgICAgIHRoaXMuX19mYWRlRWZmZWN0c1tpXS5hZnRlckZpbmlzaEludGVybmFsID0g
ZnVuY3Rpb24oKXsNCiAgICAgICAgICAgIHNlbGYuX19mYWRlRWZmZWN0c1t0aGlzLmlkICsgMV0u
c3RhcnQoKTsNCiAgICAgICAgICB9Ow0KICAgICAgICB9DQogICAgICAgIGNvdW50ZXIrKzsNCiAg
ICAgIH0NCiAgICAgIHRoaXMuX19mYWRlRWZmZWN0c1swXS5zdGFydCgpOw0KICAgIH0sDQoNCg0K
ICAgIGFmdGVyRmluaXNoIDogZnVuY3Rpb24oKSB7DQogICAgICBxeC5ib20uZWxlbWVudC5TdHls
ZS5zZXQodGhpcy5fZ2V0RWxlbWVudCgpLCAib3BhY2l0eSIsIHRoaXMuX19vbGRWYWx1ZSk7DQog
ICAgfSwNCgkgDQoNCgkgX2FwcGx5RHVyYXRpb246IGZ1bmN0aW9uKHZhbHVlLCBvbGQpIHsNCgkJ
dmFyIGVmZmVjdER1cmF0aW9uID0gdmFsdWUgLyA2Ow0KCQl2YXIgY291bnRlciA9IDA7DQoJCQ0K
CQlmb3IgKHZhciBpPTAsIGw9dGhpcy5fX2ZhZGVFZmZlY3RzLmxlbmd0aDsgaTxsOyBpKyspDQoJ
CXsNCgkJCXRoaXMuX19mYWRlRWZmZWN0c1tpXS5zZXQoew0KCQkJICBkdXJhdGlvbiA6IGVmZmVj
dER1cmF0aW9uLA0KCQkJICB0byA6ICggKGNvdW50ZXIgJSAyKSAhPT0gMCkgPyAxIDogMCwNCgkJ
CSAgZnJvbSA6ICggKGNvdW50ZXIgJSAyKSAhPT0gMCkgPyAwIDogMSwNCgkJCSAgdHJhbnNpdGlv
bjogInNpbm9kaWFsIiwNCgkJCSAgbW9kaWZ5RGlzcGxheSA6IGZhbHNlDQoJCQl9KTsNCgkJCWNv
dW50ZXIrKzsNCgkJfQkgCQ0KCSB9DQoNCiAgIH0sDQoNCg0KICAgLyoNCiAgICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQogICAgICBERVNUUlVDVE9SDQogICAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAg
Ki8NCg0KICAgZGVzdHJ1Y3QgOiBmdW5jdGlvbigpIHsNCiAgICAgdGhpcy5fZGlzcG9zZUFycmF5
KCJfX2ZhZGVFZmZlY3RzIik7DQogICB9DQp9KTsNCg==
</data>

          </attachment>
      

    </bug>