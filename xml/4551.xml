<bug>
          <bug_id>4551</bug_id>
          
          <creation_ts>2011-01-13 15:51:00 +0100</creation_ts>
          <short_desc>API doc for overridden, yet undocumented constructor can contain mismatching class-name.</short_desc>
          <delta_ts>2014-03-03 08:47:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.apidata</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tristan Koch">tristan.koch</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>derrell.lipman</cc>
    
    <cc>qooxdoo</cc>
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>22229</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2011-01-13 15:51:16 +0100</bug_when>
            <thetext>For an example, review the API documentation for the constructor of qx.ui.toolbar.ToggleButton (parent) and qx.ui.toolbar.CheckBox (sub-class). Note the description in the constructor of CheckBox, which is &quot;Creates a ToggleButton&quot;. Obviously, it should read &quot;Creates a CheckBox&quot; instead.

Examples like this are scattered over the framework.

I see two approaches solving this issue:

1) Copy &amp; paste the API doc comment followed by the function body and replace the string in question. Clearly, this is hard to maintain and probably not what we want.

2) Introduce a macro, mirroring the last part of this.constructor (where each part is seperated by a dot).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22230</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2011-01-13 16:13:03 +0100</bug_when>
            <thetext>This is probably a more general issue. An overridden method might do the same thing as its superclass is documented to do (e.g., in the case of an implementation of an abstract method); it might add functionality to the superclass; or it might partially or entirely change the functionality of that method.

Traditionally, overridden methods have simply had non-Javadoc documentation, like:

  // overridden

That clearly indicates that the superclass&#39; documentation should be used. If I write a subclass and override a method in the subclass with changes that require different documentation, I&#39;ve always assumed, but have never verified, that when I add full and proper Javadoc documentation to the method, the subclass&#39; documentation is used entirely in place of the superclass&#39; documentation in the API viewer.

It would be nice to have a flag, e.g. @addDoc, which appends documentation provided in the subclass&#39; method to the superclass&#39; documentation. Possibly there is a small set of flags that might be appropriate for indicating alterations to superclass documentation.

This bug report as initially written applies to constructors, but both constructors and other methods (and anything else that can be overridden) should work consistently.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22232</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2011-01-13 17:00:26 +0100</bug_when>
            <thetext>Thanks for the input. Instead of introducing new flags like @addDoc I suggest to refer to the superclass&#39; method explicitly (e.g. {@link qx.foo.Class}), just within the add&#39;tl method-specific JSdoc.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35837</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:47:15 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>