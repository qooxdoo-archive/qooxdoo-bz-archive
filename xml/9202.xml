<bug>
          <bug_id>9202</bug_id>
          
          <creation_ts>2015-08-31 16:02:00 +0200</creation_ts>
          <short_desc>Implement consistent setters to allow for method chaining</short_desc>
          <delta_ts>2015-08-31 16:03:11 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andreas Ecker">qooxdoo</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43520</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-08-31 16:02:39 +0200</bug_when>
            <thetext>As of today the framework typically only allows for chainable setters in very limited feature areas, e.g. low-level (bom) API such as DOM element handling or simple Xhr calls.

The framework&#39;s auto-generated property setters on the other hand always return the value given as an argument to the setter (see qx.core.Property, qx.test.core.Property). This disallows to use method chaining, aka fluent interface, which could reduce code size and readability considerably.

Moreover, the various setter APIs are inconsistent, e.g. see bug #9199:
(1) obj.setKey ( value ) -&gt; returns value
(2) obj.set ( key, value ) -&gt; returns value or obj (dep. on setter type/implementation)
(3) obj.set ( {key : value} ) -&gt; returns obj

All those inconsistencies could be resolved and the paradigm of method chaining be introduced by always returning the instance, i.e. &quot;return this&quot;.

Certainly the risk to break the framework code base and even more so existing apps is high. As there might not be a save and fully automatic migration path for apps, such a fundamental change could only be addressed in a major version of the framework, e.g. qooxdoo 6.0.</thetext>
          </long_desc>
      
      

    </bug>