<bug>
          <bug_id>5064</bug_id>
          
          <creation_ts>2011-04-29 17:00:00 +0200</creation_ts>
          <short_desc>searching for generic, finds non-public methods, but shows public method icon</short_desc>
          <delta_ts>2014-03-03 15:19:48 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>1.4.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gabriel Munteanu">jajalinux</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          <cc>tinobutz</cc>
          <qa_contact name="Adrian Olaru">adrian.olaru</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>24253</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-04-29 17:00:23 +0200</bug_when>
            <thetext>it should show an appropriate icon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24270</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-02 10:52:38 +0200</bug_when>
            <thetext>Sounds like the same problem with the mixins. Did you check if its a problem of the generated data or the search?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24304</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-03 10:46:21 +0200</bug_when>
            <thetext>in the apiindex.json file we have this entry:
&quot;#genericToString&quot;:[[2,55],[2,56],[2,57],[2,58],[2,59]],
which shows up as result when searching for generic with toggle methods on.
However genericToString in class 55 [qx.Bootstrap] is internal.
I guess the lack of _, or __, confuses the generator. Maybe you could use the @internal line in the comment section of the method.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24311</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-04 08:56:12 +0200</bug_when>
            <thetext>So your suggestion is that we should put an @internal flag in every method comment of internal classes to please the tooling?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24314</commentid>
            <who name="Gabriel Munteanu">jajalinux</who>
            <bug_when>2011-05-04 09:28:03 +0200</bug_when>
            <thetext>yes, I see no other way for the generation tool to differentiate between an internal and a public method.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24323</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-05-05 08:18:10 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; yes, I see no other way for the generation tool to differentiate between an
&gt; internal and a public method.

I can&#39;t imagine that marking that methods by hand is something we want to do. 

--&gt; to Daniel to check that out. How are internal methods marked in the API data and could that be improved?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24400</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-05-09 17:50:36 +0200</bug_when>
            <thetext>Gabriel is right: Unlike private and protected members, we don&#39;t have a naming convention for internal items, so adding an @internal doc hint is the only way to mark an item as internal. Unless we want to change qx.Class.define and force users to explicitly define the accessibility of all their members, I guess.

qx.Bootstrap#genericToString has auch an @internal hint and is marked accordingly in the generated JSON file: access: &quot;internal&quot;, isInternal: true

TheAPIViewer displays it with a private static method icon in the class panel and also shows &quot;Access : internal&quot; when expanding the comment node. So it seems like it&#39;s just the search results view using the wrong icon -&gt; Gabriel</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>24639</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-05-19 17:03:04 +0200</bug_when>
            <thetext>Checked it too, works fine.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36637</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:19:48 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>