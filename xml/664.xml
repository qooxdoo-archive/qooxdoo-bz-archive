<bug>
          <bug_id>664</bug_id>
          
          <creation_ts>2007-09-26 07:01:00 +0200</creation_ts>
          <short_desc>IE7 leaks lots of memory on each XMLHTTPRequest</short_desc>
          <delta_ts>2012-05-16 09:36:38 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>IE 7</rep_platform>
          <op_sys>Windows</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.nabble.com/Serious-memory-problems-in-IE7-and-0.7.x-tf4509832.html</bug_file_loc>
          
          
          <priority>P1</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugh Gibson">hgibson</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>rherrmann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Internet Explorer</cf_browser>
          <cf_browser_version>7</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>2415</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-26 07:01:24 +0200</bug_when>
            <thetext>IE7 leaks around 170k per XMLHTTPRequest, i.e. every time an AJAX request is made to the server. This has been in all versions of qooxdoo since 0.5 but may have been made worse by recent changes to XmlHttpTransport.js.

See the thread at http://www.nabble.com/Serious-memory-problems-in-IE7-and-0.7.x-tf4509832.html for more information.

The fix introduced by bug 190 at http://bugzilla.qooxdoo.org/show_bug.cgi?id=190 may have caused this leak to occur; or it may have been there since 0.5 and never discovered (which seems unlikely).

Basically XMLHTTPRequest.onreadystatechange must be cleared when the qooxdoo object is being disposed. Otherwise IE leaks memory on each request. The existing code didn&#39;t clear it to null because of an exception. Doing some research (see the thread, or google on &quot;onreadystatechange dummy IE unhook&quot;) showed that the correct way to clear the onreadystatechange function was to set it to a dummy function. This is possibly due to this function being called after the request has finished, without any check if the function exists or not. 

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2416</commentid>
              <attachid>260</attachid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-26 07:04:01 +0200</bug_when>
            <thetext>Created attachment 260
Fixes the problem

This patch fixes the problem, for 0.7.x branch. Similar patches will have to be carried out on 0.6.x and trunk - as I can&#39;t test these I thought it was best just to release a tested patch for 0.7.x

Note also that some more refinements could be made - see my contribution to bug 190.

Hugh</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2424</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2007-09-26 09:21:16 +0200</bug_when>
            <thetext>I just applied the patch to legacy_0_7 and trunk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2438</commentid>
            <who name="RÃ¼diger Herrmann">rherrmann</who>
            <bug_when>2007-09-28 17:01:59 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; Created an attachment (id=260) [details]
&gt; Fixes the problem
&gt; 
&gt; This patch fixes the problem, for 0.7.x branch. Similar patches will have to be
&gt; carried out on 0.6.x and trunk - as I can&#39;t test these I thought it was best
&gt; just to release a tested patch for 0.7.x
&gt; 
&gt; Note also that some more refinements could be made - see my contribution to bug
&gt; 190.
&gt; 
&gt; Hugh
&gt; 

Hi Hugh,

may I ask you a favor: could you please attach the patch (or even better the one from bug #190) to the corresponding RAP bug entry?
I know, this must sound strange, but let me try to explain. RAP, as an Eclipse project, is licensed under the EPL and the Eclipse Foundation has a legal department, that ensures that all code that is not developed by project committers complies to the EPL. Therefore, each code contribution (e.g. updating to a newer qooxdoo revision) has to pass the legal process, that takes some time. In contrast, a patch submitted by its author that has a reasonable size (approx below 100 loc) can be committed right away.
Puh, are you still with me? It would help a lot for the upcoming 1.0 release on Oct, 10th to have the patch in place bypassing the legal process
Here is the URL to the bug:
  https://bugs.eclipse.org/bugs/show_bug.cgi?id=204910
Thanks!
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2440</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2007-09-29 11:22:34 +0200</bug_when>
            <thetext>&gt; may I ask you a favor: could you please attach the patch (or even better the
&gt; one from bug #190) to the corresponding RAP bug entry?

I&#39;ve attached both. I don&#39;t feel happy just releasing the bug 190 patch as I can&#39;t test it here (I wasn&#39;t abe to reproduce the original crash). But now you have both patches that you can test.

Hugh</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>260</attachid>
            <date>2007-09-26 07:04:00 +0200</date>
            <delta_ts>2007-09-26 07:04:01 +0200</delta_ts>
            <desc>Fixes the problem</desc>
            <filename>qxbug664.patch</filename>
            <type>text/plain</type>
            <size>1379</size>
            <attacher>hgibson</attacher>
            
              <data encoding="base64">SW5kZXg6IGJyYW5jaGVzL2xlZ2FjeV8wXzdfeC9xb294ZG9vL2Zyb250ZW5kL2ZyYW1ld29yay9z
b3VyY2UvY2xhc3MvcXgvaW8vcmVtb3RlL1htbEh0dHBUcmFuc3BvcnQuanMNCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
Ci0tLSBicmFuY2hlcy9sZWdhY3lfMF83X3gvcW9veGRvby9mcm9udGVuZC9mcmFtZXdvcmsvc291
cmNlL2NsYXNzL3F4L2lvL3JlbW90ZS9YbWxIdHRwVHJhbnNwb3J0LmpzCShyZXZpc2lvbiAxMDIz
MSkNCisrKyBicmFuY2hlcy9sZWdhY3lfMF83X3gvcW9veGRvby9mcm9udGVuZC9mcmFtZXdvcmsv
c291cmNlL2NsYXNzL3F4L2lvL3JlbW90ZS9YbWxIdHRwVHJhbnNwb3J0LmpzCSh3b3JraW5nIGNv
cHkpDQpAQCAtMTEwLDYgKzExMCwxNiBAQA0KICAgICAgKi8KICAgICBjcmVhdGVSZXF1ZXN0T2Jq
ZWN0IDogZnVuY3Rpb24oKSB7CiAgICAgICByZXR1cm4gcXgubmV0Lkh0dHBSZXF1ZXN0LmNyZWF0
ZSgpOworICAgIH0sCisKKworICAgIC8qKgorICAgICAqIER1bW15IGZ1bmN0aW9uIHRvIHVzZSBm
b3Igb25yZWFkeXN0YXRlY2hhbmdlIGFmdGVyIGRpc3Bvc2FsCisgICAgICoKKyAgICAgKiBAdHlw
ZSBzdGF0aWMKKyAgICAgKiBAcmV0dXJuIHt2YXJ9IG5vbmUKKyAgICAgKi8KKyAgICBfX2R1bW15
IDogZnVuY3Rpb24oKSB7CiAgICAgfQogICB9LAogCkBAIC04ODMsMTMgKzg5MywxMCBAQA0KIAog
ICAgIGlmICh2UmVxdWVzdCkKICAgICB7Ci0gICAgICAvLyBTaG91bGQgYmUgcmlnaHQsCi0gICAg
ICAvLyBidXQgaXMgbm90IGNvbXBhdGlibGUgdG8gbXNodG1sICh0aHJvd3MgYW4gZXhjZXB0aW9u
KQotICAgICAgaWYgKHF4LmNvcmUuVmFyaWFudC5pc1NldCgicXguY2xpZW50IiwgIm1zaHRtbCIp
KSB7Ci0gICAgICB9IGVsc2UgeyAvLyBlbXB0eSB0byBoZWxwIHRoZSBnZW5lcmF0b3IgdG8gb3B0
aW1pemUgdGhpcyB2YXJpYW50Ci0gICAgICAgIHZSZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9
IG51bGw7Ci0gICAgICB9Ci0KKyAgICAgIC8vIENsZWFuIHVwIHN0YXRlIGNoYW5nZSBoYW5kbGVy
CisgICAgICAvLyBOb3RlIHRoYXQgZm9yIElFIHRoZSBwcm9wZXIgd2F5IHRvIGRvIHRoaXMgaXMg
dG8gc2V0IGl0IHRvIGEgCisgICAgICAvLyBkdW1teSBmdW5jdGlvbiwgbm90IG51bGwgKEdvb2ds
ZSBvbiAib25yZWFkeXN0YXRlY2hhbmdlIGR1bW15IElFIHVuaG9vayIpCisgICAgICB2UmVxdWVz
dC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBxeC5pby5yZW1vdGUuWG1sSHR0cFRyYW5zcG9ydC5fX2R1
bW15OwogICAgICAgLy8gQWJvcnRpbmcKICAgICAgIHN3aXRjaCh2UmVxdWVzdC5yZWFkeVN0YXRl
KQogICAgICAgewo=
</data>

          </attachment>
      

    </bug>