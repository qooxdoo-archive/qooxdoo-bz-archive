<bug>
          <bug_id>8660</bug_id>
          
          <creation_ts>2014-10-29 10:07:00 +0100</creation_ts>
          <short_desc>Dragging of elements of virtual widget stops on resize</short_desc>
          <delta_ts>2014-12-16 11:44:26 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.0.2</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mustafa Sak">mustafa.sak</reporter>
          <assigned_to name="Mustafa Sak">mustafa.sak</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>41461</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-10-29 10:07:55 +0100</bug_when>
            <thetext>Related to Bug http://bugzilla.qooxdoo.org/show_bug.cgi?id=8321

Guess you have a virtual widget whose elements are drag able. 
Guess you are starting a drag session, which resizes the virtual widget. All elements will be pooled and re added to the virtual widget. So the DOM element you started to drag with will be places elsewhere or may be still is pooled and not re added to the DOM.

However, the track event target is invalid from now on. Since 4.0 the drag / drop events based on trackstart, track and trackend events. In contrast to qx 3.5 the target is be the DOM element taken at trackstart and will be used for track and trackend events. This can break the drag event chain if that target is removed from DOM during the drag session.

Recommend to take that in account and work like qx 3.5 did.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41462</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-10-29 11:24:00 +0100</bug_when>
            <thetext>Drag &amp; Drop handler base on pointer events again, which solve the target problem. 
__escaped property not necessary anymore.

Minor fix on MDragDropScrolling.
Table pane does not need to change the gesture event target anymore.

Committed into:
branch_4_0_x ad38c72a3cbcbb61132504d7454d512eddbcf4a4
master 75926d929892a7952af9ea92791339bb70fdd490</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41469</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-10-30 13:31:04 +0100</bug_when>
            <thetext>Since form button stop event propagation on pointerup, the listener must be added on capture phase.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41554</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-11-11 08:56:23 +0100</bug_when>
            <thetext>The fix seems to be totally good so I&#39;m fine with that. Just have a minor change request and a question postet to the commit on github:

https://github.com/qooxdoo/qooxdoo/commit/75926d929892a7952af9ea92791339bb70fdd490</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41555</commentid>
            <who name="Mustafa Sak">mustafa.sak</who>
            <bug_when>2014-11-11 09:55:58 +0100</bug_when>
            <thetext>Member variable re-named from __startTargets to __startConfig

Committed into 

master 511cb4109deb1d187c535807cbcf6faff0e310d3
branch_4_0_x 9cd9123da6b369c4d315494c6ff0eb343843c48d</thetext>
          </long_desc>
      
      

    </bug>