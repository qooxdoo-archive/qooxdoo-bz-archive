<bug>
          <bug_id>6161</bug_id>
          
          <creation_ts>2012-02-21 18:17:00 +0100</creation_ts>
          <short_desc>TextArea&#39;s autoSize property does not work (patch provided)</short_desc>
          <delta_ts>2014-03-03 15:25:12 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.form</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Derrell Lipman">derrell.lipman</reporter>
          <assigned_to name="Derrell Lipman">derrell.lipman</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Tristan Koch">tristan.koch</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28610</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2012-02-21 18:17:30 +0100</bug_when>
            <thetext>The TextArea widget depends on an existing DOM element for its content element. It creates a listener on the TextArea for its &quot;appear&quot; event, to create a clone which it uses for auto-sizing. The content element&#39;s DOM element may not be created, however, when the TextArea&#39;s appear event fires, and in fact, on Firefox, in my tests, the content element&#39;s DOM element is never created at the time the TextArea&#39;s appear event fires, so autoSize never works.

It is necessary to wait for the appear event to fire on the content element itself, rather than on the TextArea.

The following patch fixes the problem. I&#39;m not absolutely convinced that this is appropriate for other browsers, so I&#39;m only supplying it as a patch. This should be tested on a variety of browsers, and then applied.


diff --git a/framework/source/class/qx/ui/form/TextArea.js b/framework/source/class/qx/ui/form/TextArea.js
index aa9f62e..ede5f3f 100644
--- a/framework/source/class/qx/ui/form/TextArea.js
+++ b/framework/source/class/qx/ui/form/TextArea.js
@@ -190,7 +190,7 @@ qx.Class.define(&quot;qx.ui.form.TextArea&quot;,
 
         // On init, the clone is not yet present. Try again on appear.
         } else {
-          this.addListenerOnce(&quot;appear&quot;, function() {
+          this.getContentElement().addListenerOnce(&quot;appear&quot;, function() {
             this.__autoSize();
           }, this);
         }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28611</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2012-02-21 18:25:28 +0100</bug_when>
            <thetext>This playground snippet can be used to test the fix. It will display only a single line (the beginning of the control&#39;s value) with the currently-released TextArea, but displays the entire text properly, multi-line, with the poatch applied.


var vbox = new qx.ui.container.Composite(new qx.ui.layout.VBox(10));
this.getRoot().add(vbox, { edge : 10 });

var control = new qx.ui.form.TextArea();
control.set(
          {
            readOnly          : true,
            wrap              : true,
            anonymous         : true,
            autoSize          : true,
            minimalLineHeight : 1
          });
vbox.add(control);

control.setValue(&quot;qooxdoo is a comprehensive and innovative Ajax application framework. Leveraging object-oriented JavaScript allows developers to build impressive cross-browser applications. No HTML, CSS nor DOM knowledge is needed.&quot;);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28626</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2012-02-23 16:15:46 +0100</bug_when>
            <thetext>I&#39;ve now verified that this correctly fixes the problem in multiple browsers and operating systems. Committed to master:

8fc11f7450cd74c75875a1666a0ce577de759e59

I&#39;ve not yet committed this to branch, and I&#39;m not closing this bug. After a bit more testing in master, this should probably be applied to branch as well.

Derrell</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28627</commentid>
            <who name="Tristan Koch">tristan.koch</who>
            <bug_when>2012-02-23 16:18:19 +0100</bug_when>
            <thetext>Thanks. I&#39;ll keep an eye on it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35097</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2014-02-17 18:24:19 +0100</bug_when>
            <thetext>Shipped as fixed with qooxdoo 2.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38661</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:12 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>