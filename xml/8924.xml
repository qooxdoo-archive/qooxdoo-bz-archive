<bug>
          <bug_id>8924</bug_id>
          
          <creation_ts>2015-02-10 15:25:00 +0100</creation_ts>
          <short_desc>IO test fails in Firefox</short_desc>
          <delta_ts>2015-02-12 13:56:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>next</product>
          <component>io</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>Firefox</cf_browser>
          <cf_browser_version>35</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>42440</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-02-10 15:25:20 +0100</bug_when>
            <thetext>io.request.XhrWithRemoteLowLevel.call handler in order when request failed fails because the sequence of readyState changes is not as expected.

Chrome stable and IE 11 are unaffected.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42472</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-02-12 10:52:20 +0100</bug_when>
            <thetext>The native XMLHttpRequest behaves differently in Firefox when sending a request to an invalid URI. This can be easily demonstrated with a small example:

var req = new XMLHttpRequest();
req.onreadystatechange = function(e) {
  console.log(req.readyState);
}
req.open(&quot;GET&quot;, &quot;http://no.valid.domain&quot;);
req.send();

In Firefox, the sequence is 1 (OPENED) -&gt; 2 (HEADERS_RECEIVED) -&gt; 4 (DONE), while in other browsers it&#39;s just 1 -&gt; 4. The XHR specification[1] defines readyState 2 as &quot;All redirects (if any) have been followed and all HTTP headers of the response have been received.&quot;, so since in this example there is no response, it seems that Firefox is wrong.

[1]https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42479</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2015-02-12 13:34:05 +0100</bug_when>
            <thetext>We decided not to try and fix this behavior in the IO layer. Such a fix wouldn&#39;t be trivial and relying on the specific readystatechange event sequence for failing events seems like an edge case. Fixed test with f753df7f6b524cf0d1bc4f56ebcd18ec33d017fa (qooxdoo is not affected since it tests the higher-level events rather than the readyState sequence).</thetext>
          </long_desc>
      
      

    </bug>