<bug>
          <bug_id>3180</bug_id>
          
          <creation_ts>2009-12-04 14:42:00 +0100</creation_ts>
          <short_desc>Mac OSX cannot handle Unicode name spaces</short_desc>
          <delta_ts>2014-03-03 15:23:46 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.0-beta1</version>
          <rep_platform>All</rep_platform>
          <op_sys>Mac OS</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15310</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-12-04 14:42:09 +0100</bug_when>
            <thetext>Compiling a skeleton app with Unicode name space on OSX  results in the 
following error:

&gt;&gt;&gt; Scanning libraries...
  - Scanning /Users/jweiss/workspace/qooxdoo.trunk/application/öäüΩΩßÆø...
!!! Detected conflict between filename and classname!
!!! Classname: öäüωωßæø.Application
!!! Path: öäüωωßæø/Application.js

(see sample application in qooxdoo-contrib/Bugs/1589)

The two expressions are obviously equivalent, still they regarded as not equal.

(I tried to test this behaviour also on Windows, but there even the Python 
interpreter wouldn&#39;t run... Have to dig this sometime).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26203</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-07-22 16:27:51 +0200</bug_when>
            <thetext>Normalize resource id&#39;s gleaned from file system paths; OSX encodes some 
characters on the file system e.g. &quot;ö&quot; not as \xf6 (as it is usually encoded in 
class code), but as combining character &quot;o\u0308&quot;, hence the mismatch.

I did this for both classes and other resources (Resource.id will do the 
conversion through a property setter, but the Library class needs this early, 
before the class object is created, for sanity check). 

The justified question, though, is whether we might get the problem the other 
way round, some editor using the combining characters when editing code - and 
then it mismatches with the normalized id&#39;s from the file system. We&#39;ll see...

Fixed in trunk and branch,

with r28244.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38137</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:23:46 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>