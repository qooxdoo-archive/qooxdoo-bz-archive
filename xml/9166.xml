<bug>
          <bug_id>9166</bug_id>
          
          <creation_ts>2015-06-12 12:09:00 +0200</creation_ts>
          <short_desc>qx.event.message.Bus.dispatchByName() does not dispose its message</short_desc>
          <delta_ts>2015-06-19 17:15:45 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>4.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <keywords>Performance</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>5.0.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="George Nikolaidis">gnikolaidis</reporter>
          <assigned_to name="Christian Boulanger">info</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43378</commentid>
            <who name="George Nikolaidis">gnikolaidis</who>
            <bug_when>2015-06-12 12:09:27 +0200</bug_when>
            <thetext>It seems that while qx.event.message.Bus.dispatchByName() creates a new qx.event.message.Message object, it does not trouble itself with disposing it after usage.

Since qx.event.message.Message extends qx.core.Object and calls the base constructor which registers every instance in the registry, I believe this leads to memory leaks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43401</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-06-19 17:15:45 +0200</bug_when>
            <thetext>Hi Christian, would you mind looking into this issue, thanks.</thetext>
          </long_desc>
      
      

    </bug>