<bug>
          <bug_id>6150</bug_id>
          
          <creation_ts>2012-02-15 15:09:00 +0100</creation_ts>
          <short_desc>Error on css-minify and CSS3 feature transform-origin</short_desc>
          <delta_ts>2014-03-03 15:20:56 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>1.6</version>
          <rep_platform>All</rep_platform>
          <op_sys>Mac OS</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.0.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christopher Zuendorf">christopher.zuendorf</reporter>
          <assigned_to name="Christopher Zuendorf">christopher.zuendorf</assigned_to>
          
          <qa_contact name="Richard Sternagel">richard.sternagel</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>28557</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-02-15 15:09:22 +0100</bug_when>
            <thetext>Der css-minify Job modifiziert die CSS-Datei auf eine ungültige Weise, wenn es sich um das CSS3-Feature transform-origin handelt.

IST:
Gibt man im CSS-File:

transform-origin: 0 0; 

ein, wandelt der minify-Job es in:

transform-origin: 0;

Die Werte &quot;0 0&quot; stehen für X/Y des Drehpunkts (der Achse) an dem das Objekt z.Bsp. gedreht wird. Gibt man einen der Werte nicht an, wird er als 50% angenommen.

Somit bedeutet die Original-CSS-Angabe:

transform-origin: 0 0;

minimierte/interpretierte Version 

transform-origin: 0 50%;


SOLLTE:

Beibehaltung der zweiten Koordinate wenn es sich um die CSS-Anweisung 
transform-origin handelt.



Eventuell ist zu prüfen, ob ein ähnliches Verhalten auch für andere CSS3-Feature zutrifft.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28570</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-02-16 08:09:17 +0100</bug_when>
            <thetext>Please only english here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28579</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-02-16 10:05:05 +0100</bug_when>
            <thetext>The CSS-Minify job modifies the CSS-file in a unexpected way, when it handles the CSS feature &quot;transform-origin&quot;.

IS:
If you use following statement in CSS file:

transform-origin: 0 0;

CSS minify job transforms it in:

transform-origin: 0;

The values &quot;0 0&quot; describe X/Y of the rotation point, at which the transformed object should be rotated. If you do not enter x or y, it will assumed as &quot;50%&quot;.

original transform-origin:
0 0;

minified transform-origin meaning:
0 50%;

SHOULD:

The second coordinate of the rotation point should not be replaced/deleted, when it contains the same value as the first coordinate.


This bug targets some other CSS3 features?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>29157</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2012-04-13 16:06:21 +0200</bug_when>
            <thetext>Please check if there is a new version of the CSS minify. Alternatives?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31229</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-06 12:36:27 +0100</bug_when>
            <thetext>There is no new version of cssmin.py available since 2010.
As yui compressor will not be improved anymore, it is not likely, that there will be a new version of it.

We should look of another solution, in near future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31248</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2012-11-07 08:59:12 +0100</bug_when>
            <thetext>Then we should add a follow up bug for finding an alternative.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31249</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2012-11-07 10:07:11 +0100</bug_when>
            <thetext>There is also the option of forking cssmin on Github and patching our own fork.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>31252</commentid>
            <who name="Christopher Zuendorf">christopher.zuendorf</who>
            <bug_when>2012-11-07 10:35:00 +0100</bug_when>
            <thetext>Opened bug #6973  for the search of an alternative.

http://bugzilla.qooxdoo.org/show_bug.cgi?id=6973

Closed this one.

If think forking and maintaining is too much effort. There are a lot of new CSS attributes, which will come in future. There are also a bunch of browser hacks which have to be maintained.
A third-party solution should be preferred therefore.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37091</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:56 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>