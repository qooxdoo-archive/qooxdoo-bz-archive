<bug>
          <bug_id>2643</bug_id>
          
          <creation_ts>2009-08-02 21:25:00 +0200</creation_ts>
          <short_desc>Grid Layout: grid.getCellWidget(nrow, ncol) exception</short_desc>
          <delta_ts>2014-03-03 15:22:00 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.layout</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>2182</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>0.8.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Liu">yliu135</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>11170</commentid>
            <who name="Liu">yliu135</who>
            <bug_when>2009-08-02 21:25:40 +0200</bug_when>
            <thetext>when you use getCellWidget on an empty composite with Grid layout, javascript engine will throw an TypeError exception. The reason is that the getCellWidget may return an undefined object because of the random and non-zero numbers: nrow and ncol. For example,
var cont = new qx.ui.container.Composite(new qx.ui.layout.Grid);
var layout = cont.getLayout();
layout.getCellWidget(10,12); It should return null, but exception happens.

Solution:
    getCellWidget : function(row, column)
    {
      if (this._invalidChildrenCache) {
        this.__buildGrid();
      }

	  if (typeof this.__grid[row] == &quot;undefined&quot;)
	  {
		  return null;
	  }
	  if ((typeof this.__grid[row][column]) == &quot;undefined&quot;)
	  {
		  return null;
	  }


      return this.__grid[row][column] ||  null;
    },</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11172</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-08-03 09:59:02 +0200</bug_when>
            <thetext>to Fabian. I doubt grid should be so defensive and fallback to report null for uninitialized cells, though.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11287</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-08-11 15:44:54 +0200</bug_when>
            <thetext>Right, it should not throw an exception in this case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>11567</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2009-08-26 15:00:56 +0200</bug_when>
            <thetext>This has already been fixed in trunk

*** This bug has been marked as a duplicate of bug 2182 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37508</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:22:00 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>