<bug>
          <bug_id>5745</bug_id>
          
          <creation_ts>2011-10-25 17:40:00 +0200</creation_ts>
          <short_desc>removeBinding should not throw an error when binding does not exist</short_desc>
          <delta_ts>2014-03-03 08:45:51 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.databinding</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tino Butz">tinobutz</reporter>
          <assigned_to name="Martin Wittemann">martin.wittemann</assigned_to>
          
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>27321</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-10-25 17:40:36 +0200</bug_when>
            <thetext>In my opinion the removeBinding method should not throw an error when the binding does not exist. It should rather print a warning in the debug version of the application.

Why?

* e.g. native JS: clearTimeout does not throw an exception, when the timeout id does not exist
* when someone would like to remove the binding in the destructor, a check if the binding id != null is needed
* when the bindings are removed, the programmer always has to remember to check first on binding id != null and then has to reset the binding id to null.
* when i want to remove a binding that does not exist, I do not care if it does not exist (as I want to remove it) -&gt; This might lead to unnecessary erros, because of raise conditions. 

A warning in the debug version should be sufficient.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27325</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2011-10-26 09:00:56 +0200</bug_when>
            <thetext>I tend to disagree and here is why:

&gt; * e.g. native JS: clearTimeout does not throw an exception, when the timeout id
&gt; does not exist
Timeouts are another type of code. The timeout might run out and with that, the id is no longer valid. Additionally, you don&#39;t have no chance of checking if the id is valid or not because don&#39;t know when the timeout is over. In the binding scenario, you are able to do that. If the binding id is there, it is valid. If you remove the binding, you have to clear the id as well. That way, it is always clear if you have a valid id or not.

&gt; * when someone would like to remove the binding in the destructor, a check if
&gt; the binding id != null is needed
Thats pure application logic. If you set up the binding in the constructor, you know that the binding id is there so you don&#39;t need to check it. The same would be true for every other thing you want to dispose in the desctructor like created widgets and so on.

&gt; * when the bindings are removed, the programmer always has to remember to check
&gt; first on binding id != null and then has to reset the binding id to null.
See above. If you have conditional creates, you have to have conditional disposes and thats true for every listener, object, ...

&gt; * when i want to remove a binding that does not exist, I do not care if it does
&gt; not exist (as I want to remove it) -&gt; This might lead to unnecessary erros,
&gt; because of raise conditions. 
Sure, the binding is already gone, maybe... If you remove the binding on the wrong object, the binding is still there and the programme might think its ok. This might lead to even harder to detect 

Still, I like the idea behind that to force the developer to do a proper cleanup and not just do some cleanup which isn&#39;t bad if its not doing what its suposed to do.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35317</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:51 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>