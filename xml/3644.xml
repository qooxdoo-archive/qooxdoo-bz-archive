<bug>
          <bug_id>3644</bug_id>
          
          <creation_ts>2010-04-28 10:01:00 +0200</creation_ts>
          <short_desc>Suggested Generator Enhancement: Optimize Global Identifiers</short_desc>
          <delta_ts>2014-03-03 08:46:06 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator.compiler</component>
          <version>1.0.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Richard Sternagel">richard.sternagel</assigned_to>
          <cc>christian.schuff</cc>
    
    <cc>martin.wittemann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>18064</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-04-28 10:01:22 +0200</bug_when>
            <thetext>The generator could optimize global identifiers, by creating aliases to them 
and replace occurrences of these identifiers by the aliases. E.g. a package 
optimized in this way would could look like this:

  ...
  qx.a = qx.Class;
  qx.b = qx.ui.basic.Label;
  qx.c = qx.ui.form.Button;
  ...
  (function() {
    qx.a.define(&quot;foo&quot;, {
    ...
    var a = new qx.b(&quot;Mylabel&quot;);
  })();

Each package would carry the definitions of the aliases that are used within 
it, but the aliases are unique across the entire application (i.e. the 
assignment of e.g qx.b to qx.ui.basic.Label would be the same in all packages 
using qx.ui.basic.Label). This ensures independence of the individual packages, 
and compactness of the list of aliases. In the JS run time, the list of all 
these aliases would merge with every new package loaded.

This optimization could save transfer size of the code, as the aliases are much 
shorter than the original identifiers. E.g. many occurrences of 
qx.ui.basic.Label would be replaced by qx.b. There is also a size penality, as 
the alias definitions take space, so it has to be verified if and when this 
optimization pays off, and how much size can be gained in a serious application.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35413</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:46:06 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>