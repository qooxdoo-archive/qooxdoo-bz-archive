<bug>
          <bug_id>2154</bug_id>
          
          <creation_ts>2009-03-24 17:51:00 +0100</creation_ts>
          <short_desc>Python: replace dict.has_key() by &#39;in&#39; key word</short_desc>
          <delta_ts>2014-03-03 15:27:56 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool</component>
          <version>0.8.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.4</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>8867</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-03-24 17:51:24 +0100</bug_when>
            <thetext>Replacing the dict.has_key() method with the equivalent &#39;in&#39; key word would 
leave us with more meaningful DeprecationWarnings when running python2.6 with 
-3 flag (check for python3 compatibility). Currently, the dict.has_key warnings 
are overwhelming.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>22495</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-01-31 19:02:54 +0100</bug_when>
            <thetext>Replaced .has_key with &quot;... in ...&quot; syntax in all our own modules, and affected 
3rd party libs, just skipping the &#39;graph&#39; module.

With r24822.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39638</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:27:56 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>