<bug>
          <bug_id>1019</bug_id>
          
          <creation_ts>2008-06-30 17:32:00 +0200</creation_ts>
          <short_desc>HTTP headers inserted by qooxdoo cause unnecessary overhead</short_desc>
          <delta_ts>2014-03-03 15:20:25 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>0.7.4</target_milestone>
          
          
          <votes>1</votes>
          <everconfirmed>1</everconfirmed>
          <reporter name="Helder Magalhães">helder.magalhaes</reporter>
          <assigned_to name="Fabian Jakobs">fabian.jakobs</assigned_to>
          <cc>matthias.braun</cc>
    
    <cc>rherrmann</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>3574</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2008-06-30 17:32:13 +0200</bug_when>
            <thetext>The framework artificially adds several HTTP headers per request, some of which arguably useful, therefore causing unneeded overhead: bandwidth increase and a minor performance decrease.

HTTP headers with potentially low usefulness:
 * X-Requested-With;
 * X-Qooxdoo-Version.

HTTP header with arguably usefulness:
 * X-Qooxdoo-Response-Type.

There are some proposals to enhance performance and decrease bandwidth:
 * Completely remove the HTTP headers;
 * Combine &quot;X-Requested-With&quot; and &quot;X-Qooxdoo-Version&quot; into a single header;
 * Use them within a debug variant (qx.ioRemoteDebug&quot;?).

The &quot;X-Qooxdoo-Response-Type&quot; suggests usage by some of the back-end modules (is this correct?), so this one might not be possible to easily suppress...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3575</commentid>
              <attachid>316</attachid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2008-06-30 17:35:34 +0200</bug_when>
            <thetext>Created attachment 316
Proposed patch for legacy_0_7_x

This patch implements one of the proposals: adds the referred HTTP headers using the &quot;qx.debug&quot; and &quot;qx.ioRemoteDebug&quot; variants - this approach is already observed in the patched file. :-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3577</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-06-30 17:41:04 +0200</bug_when>
            <thetext>Sebastian can you take a look on this issue?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3581</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-07-01 08:44:52 +0200</bug_when>
            <thetext>I am not sure if I like to change this. This has nothing todo with debugging. It is just a information about the requesting engine. If I remember correctly, this is merly the same jquery or dojo do. We could combine the two headers as suggested, but this is also a change in an API. Not sure if the benefit at all weights out these changes.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3582</commentid>
            <who name="Sebastian Werner">info</who>
            <bug_when>2008-07-01 08:45:09 +0200</bug_when>
            <thetext>to none</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>3591</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2008-07-01 09:58:51 +0200</bug_when>
            <thetext>(In reply to comment #3)
&gt; I am not sure if I like to change this. This has nothing todo with debugging.
&gt; It is just a information about the requesting engine. If I remember correctly,
&gt; this is merly the same jquery or dojo do.
Yes, I understand this might be interesting for marketing purposes but, if it lowers performance, than I believe it should be taken as relevant.

&gt; We could combine the two headers as
&gt; suggested, but this is also a change in an API. Not sure if the benefit at all
&gt; weights out these changes.
Seems fair to me. Overall avoiding about 100 bytes per remote request seems a good performance/bandwidth boost, specially considering the default HTTP headers overhead (referer, agent, etc.)... As stated initially, this is an enhancement proposal. ;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5644</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2008-09-25 15:01:41 +0200</bug_when>
            <thetext>In my opinion, all three headers should be removed. They consume time and bandwidth and from a framework point of view it is unknown whether anyone actually makes use of them.

Even for the X-Qooxdoo-Response-Type header, I can&#39;t see any reason why it should be sent by default. If a specific application evaluates this information, I should be in its responsibility to the this header.

Setting such headers should and can be done in application code.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5692</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-10-02 15:16:06 +0200</bug_when>
            <thetext>I think you are right. I&#39;ll take another look at this. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5742</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-07 16:24:33 +0200</bug_when>
            <thetext>Should be fixed both in 0.7.4 and 0.8.x</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5744</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2008-10-07 16:34:22 +0200</bug_when>
            <thetext>I agree that the headers should never have been sent by default.  I&#39;d recommend, however, to leave 0.7 as is, since changing it now will not be backward compatible with any applications that depend on those headers being sent.

For 0.7, it would be reasonable to just provide the ability to turn off the sending of those headers, but to leave them sent as the default.

0.8 should not send any extra headers without explicitly being told to do so.

Derrell
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6623</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-12-03 15:11:12 +0100</bug_when>
            <thetext>I have removed both

 * X-Requested-With
 * X-Qooxdoo-Version
 
 The header X-Qooxdoo-Response-Type is still set but only if the user explicitly set the responseType property. If you don&#39;t set it it, this header will not be sent.
 
 Fixed in rev. 16826</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6625</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-12-03 15:13:19 +0100</bug_when>
            <thetext>fixed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6626</commentid>
            <who name="Fabian Jakobs">fabian.jakobs</who>
            <bug_when>2008-12-03 15:19:53 +0100</bug_when>
            <thetext>Andreas convinced me to put the two headers back since we don&#39;t want to risk any incompatible changes in 0.7.4. We don&#39;t know if any server relies on these headers being set. However in 0.8 both headers are gone.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6627</commentid>
            <who name="Helder Magalhães">helder.magalhaes</who>
            <bug_when>2008-12-03 15:37:51 +0100</bug_when>
            <thetext>(In reply to comment #12)
&gt; Andreas convinced me to put the two headers back since we don&#39;t want to risk
&gt; any incompatible changes in 0.7.4. We don&#39;t know if any server relies on these
&gt; headers being set.

Too bad, I was just replying to this stating that allowing this to be configurable (previous behavior - enabled - by default) was a wise choice and would avoid breaking existing content as well... :-|

I&#39;m convinced that, if this was made configurable and properly announced in the release notes, most users would consider disabling the headers from now on, which would also help them preparing for the 0.8.x default behavior. In my particular case, I&#39;m almost certain that I&#39;ll disable them again, as I can&#39;t think of any use for these, except possibly for statistical/benchmark studies. The overhead adds to the usual HTTP (browser user agent, accept-*,  etc.) is already considerable, having performance in mind (more latency and traffic).


&gt; However in 0.8 both headers are gone.

Yes, this sounds good. It will cause a relevant HTTP overhead decrease
without any known loss of functionality. Thanks for considering this being the
default from now on: I strongly believe this will be better for 99% of
applications, specially those which make extensive use of server calls (for
example, pooling strategies or keeping data which is changed very often updated).
;-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6628</commentid>
            <who name="Rüdiger Herrmann">rherrmann</who>
            <bug_when>2008-12-03 16:57:29 +0100</bug_when>
            <thetext>From my point of view it would be desirable to be able eliminate them from the headers.
If there is actually a backwards-compatibility issue, a property or setting would be great :)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7536</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-02 14:11:19 +0100</bug_when>
            <thetext>*** Bug 1889 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>36881</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:20:25 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
          <attachment isobsolete="0" ispatch="1" isprivate="0" isurl="0">
            <attachid>316</attachid>
            <date>2008-06-30 17:35:00 +0200</date>
            <delta_ts>2008-06-30 17:35:34 +0200</delta_ts>
            <desc>Proposed patch for legacy_0_7_x</desc>
            <filename>Request-RequestHeaders-RemoveQooxdoo.patch</filename>
            <type>text/plain</type>
            <size>1166</size>
            <attacher>helder.magalhaes</attacher>
            
              <data encoding="base64">SW5kZXg6IFJlcXVlc3QuanMNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCi0tLSBSZXF1ZXN0LmpzCShyZXZpc2lvbiAx
NDIxMSkNCisrKyBSZXF1ZXN0LmpzCSh3b3JraW5nIGNvcHkpDQpAQCAtNzUsOCArNzUsMTMgQEAN
CiAgICAgdGhpcy5zZXRQcm9oaWJpdENhY2hpbmcodHJ1ZSk7CiAKICAgICAvLyBQcm90b3R5cGUt
U3R5bGUgUmVxdWVzdCBIZWFkZXJzCi0gICAgdGhpcy5zZXRSZXF1ZXN0SGVhZGVyKCJYLVJlcXVl
c3RlZC1XaXRoIiwgInFvb3hkb28iKTsKLSAgICB0aGlzLnNldFJlcXVlc3RIZWFkZXIoIlgtUW9v
eGRvby1WZXJzaW9uIiwgcXguY29yZS5WZXJzaW9uLnRvU3RyaW5nKCkpOworICAgIGlmIChxeC5j
b3JlLlZhcmlhbnQuaXNTZXQoInF4LmRlYnVnIiwgIm9uIikpCisgICAgeworICAgICAgaWYgKHF4
LmNvcmUuU2V0dGluZy5nZXQoInF4LmlvUmVtb3RlRGVidWciKSkgeworICAgICAgICB0aGlzLnNl
dFJlcXVlc3RIZWFkZXIoIlgtUmVxdWVzdGVkLVdpdGgiLCAicW9veGRvbyIpOworICAgICAgICB0
aGlzLnNldFJlcXVlc3RIZWFkZXIoIlgtUW9veGRvby1WZXJzaW9uIiwgcXguY29yZS5WZXJzaW9u
LnRvU3RyaW5nKCkpOworICAgICAgfQorICAgIH0KIAogICAgIC8vIEdldCB0aGUgbmV4dCBzZXF1
ZW5jZSBudW1iZXIgZm9yIHRoaXMgcmVxdWVzdAogICAgIHRoaXMuX3NlcU51bSA9ICsrcXguaW8u
cmVtb3RlLlJlcXVlc3QuX3NlcU51bTsKQEAgLTcyOCw3ICs3MzMsMTIgQEANCiAgICAgICogQHBh
cmFtIG9sZCB7dmFyfSBQcmV2aW91cyB2YWx1ZQogICAgICAqLwogICAgIF9hcHBseVJlc3BvbnNl
VHlwZSA6IGZ1bmN0aW9uKHZhbHVlLCBvbGQpIHsKLSAgICAgIHRoaXMuc2V0UmVxdWVzdEhlYWRl
cigiWC1Rb294ZG9vLVJlc3BvbnNlLVR5cGUiLCB2YWx1ZSk7CisgICAgICBpZiAocXguY29yZS5W
YXJpYW50LmlzU2V0KCJxeC5kZWJ1ZyIsICJvbiIpKQorICAgICAgeworICAgICAgICBpZiAocXgu
Y29yZS5TZXR0aW5nLmdldCgicXguaW9SZW1vdGVEZWJ1ZyIpKSB7CisgICAgICAgICAgdGhpcy5z
ZXRSZXF1ZXN0SGVhZGVyKCJYLVFvb3hkb28tUmVzcG9uc2UtVHlwZSIsIHZhbHVlKTsKKyAgICAg
ICAgfQorICAgICAgfQogICAgIH0sCiAKIAo=
</data>

          </attachment>
      

    </bug>