<bug>
          <bug_id>1463</bug_id>
          
          <creation_ts>2008-10-09 13:37:00 +0200</creation_ts>
          <short_desc>Custom theme is loaded too late</short_desc>
          <delta_ts>2014-03-03 15:25:48 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>tool.generator</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gaëtan de Menten">ged</reporter>
          <assigned_to name="Thomas Herchenroeder">thron7</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>5803</commentid>
            <who name="Gaëtan de Menten">ged</who>
            <bug_when>2008-10-09 13:37:56 +0200</bug_when>
            <thetext>Copy-paste from my messages to the ML:

I&#39;m using an &quot;extended&quot; modern theme for my application, that is I&#39;m
inheriting from the theme and adding some states (&quot;invalid&quot;, ...) to
some widgets. It works fine in source form, but I systematically get
the following exception as the first message in my console:

The theme to use is not available: pinte.theme.Common     Meta.js (line 108)

While my theme seem to work flawlessly (except from this error
message) in source form, the error seem fatal in &quot;build&quot; form.
=====
After investigation, what happens is that my custom theme classes are only loaded after the
theme.manager.Meta.initialize method is called. I&#39;ve found a simple
workaround, which might be the correct fix: I simply modified my
config.json to read:

 &quot;jobs&quot; :
 {
   &quot;common&quot; :
   {
     &quot;include&quot; :
     [
       &quot;${QXTHEME}&quot;,
       &quot;${APPLICATION}.Application&quot;
     ],

instead of the (generated stuff from migration script):

     &quot;include&quot; :
     [
       &quot;${APPLICATION}.Application&quot;,
       &quot;${QXTHEME}&quot;
     ],

*IF* this is the correct fix, it should be applied to at least
tool/data/config/base.json and
component/skeleton/migration/config.tmpl.json.

Answer from Fabian Jakobs:

Wow, this is a really ugly bug.  We should modify the templates to fix
it for the moment but usually the order of the includes should not
matter. The dependency detection should be able to detect this
dependency.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5804</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2008-10-09 13:43:51 +0200</bug_when>
            <thetext>@Thomas, please look into this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>6873</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2008-12-12 12:56:57 +0100</bug_when>
            <thetext>&quot;include&quot; keys in configs are fixed; dependency checking postponed to 0.8.2, 
changing severity</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>7901</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-02-18 12:09:58 +0100</bug_when>
            <thetext>Untarget 0.8.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>21528</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2010-11-24 14:10:58 +0100</bug_when>
            <thetext>Checking this again, the problem is gone:

You can invert the order of the &quot;include&quot; key, giving the theme as second. I 
tried with the Showcase, which comes with a custom theme. The generated load 
order is correct and the app works, with no warnings or exceptions.

In the generated app, theme.manager.Meta is actually loaded before the custom 
theme class (e.g. showcase.theme.Theme). But this doesn&#39;t hurt, as the main 
application class (showcase.Application in my case), which is actually 
triggering the call to theme.manager.Meta.initialize (via 
application.AbstractGui#main), is loaded later than both, so their respective 
order is irrelevant for this case.

It&#39;s hard to say whether this change in behaviour is due to changes in the 
generator (e.g. dependency analysis), or due to refactored dependencies in the 
framework. If  something like this re-appears, please open a new bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38879</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:25:48 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>