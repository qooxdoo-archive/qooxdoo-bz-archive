<bug>
          <bug_id>2580</bug_id>
          
          <creation_ts>2009-07-13 13:27:00 +0200</creation_ts>
          <short_desc>API Generation can not handle concatenated strings in property checks</short_desc>
          <delta_ts>2014-03-03 08:45:56 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>app.apiviewer.desktop</component>
          <version>master</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>LATER</resolution>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Wittemann">martin.wittemann</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>10865</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2009-07-13 13:27:02 +0200</bug_when>
            <thetext>The generation of the API data fails if a check is given not as single string literal. I found this (well, Daniel found it actually) by using a long string which I broke up into two stings to get it into the 80 character width we have in the framework. 
As long as its only the api data generation, the process should ignore such checks and just go on. The current way to react is to stop and return an error.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>10868</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-07-13 13:34:49 +0200</bug_when>
            <thetext>Provide skeleton code and generator invocation (I presume &#39;generate.py api&#39;) to 
reproduce the issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>13086</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-10-12 12:28:04 +0200</bug_when>
            <thetext>down prio</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>14804</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2009-11-24 20:26:41 +0100</bug_when>
            <thetext>mass renaming of 0.9 target to 1.0 (for issues with status &quot;NEW&quot;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15019</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2009-11-27 10:59:43 +0100</bug_when>
            <thetext>to 1.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16486</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-27 16:30:43 +0100</bug_when>
            <thetext>moved to target 1.0.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>35348</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 08:45:56 +0100</bug_when>
            <thetext>Move open issues to RESOLVED â€“ LATER, whose last comment is older than a year.</thetext>
          </long_desc>
      
      

    </bug>