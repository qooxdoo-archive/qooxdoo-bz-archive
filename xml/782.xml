<bug>
          <bug_id>782</bug_id>
          
          <creation_ts>2008-02-01 12:33:00 +0100</creation_ts>
          <short_desc>layout problem</short_desc>
          <delta_ts>2012-05-16 09:43:00 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop.table</component>
          <version>0.7.3</version>
          <rep_platform>Firefox 2.0</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>763</dup_id>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="cyrille rigault">cyrille.rigault</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          <cc>cyrille.rigault</cc>
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>Firefox</cf_browser>
          <cf_browser_version>2</cf_browser_version>

      

      

      

          <long_desc isprivate="0">
            <commentid>2822</commentid>
            <who name="cyrille rigault">cyrille.rigault</who>
            <bug_when>2008-02-01 12:33:38 +0100</bug_when>
            <thetext>I have an application with SplitPanes. The contents (tables) is changed dynamically using removeAt() and add() in boxLayout parents.

When I change the child table in a pane (t1-&gt;t2), resize the pane, and change again the child with the original one (t2-&gt;t1), the first table (t1) has memorized the original pane size and does not take into account the current size.

Here is a small example.
1) resize the pane so that an horizontal scrollbar appears below the table
2) change child using the button
3) resize the pane with a large left part
4) change child again to have the initial table visible
=&gt; you should see the horizontal scrollbar below the table, although it is not usefull now !

Cyrille

&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
    &lt;title&gt;Layout&lt;/title&gt;

    &lt;script type=&quot;text/javascript&quot;&gt;
      qxsettings = { &quot;qx.application&quot; : &quot;qc.Application&quot; };
    &lt;/script&gt;

    &lt;script type=&quot;text/javascript&quot; src=&quot;script/qx.js&quot;&gt;&lt;/script&gt;
  &lt;/head&gt;
&lt;body&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
qx.Class.define(&quot;qc.Application&quot;,
{
  extend : qx.application.Gui,

  members :
  {
    main : function()
    {
      this.base(arguments);

      frame = new qx.ui.layout.CanvasLayout();
      frame.setEdge( 20);
      frame.addToDocument();

      var split = new qx.ui.splitpane.HorizontalSplitPane( &quot;1*&quot;, &quot;1*&quot;);
      split.setEdge( 0);
      split.setShowKnob(true);
      frame.add( split);

      this.box = new qx.ui.layout.VerticalBoxLayout();
      this.box.setWidth(&quot;100%&quot;);
      this.box.setHeight(&quot;100%&quot;);

      var tableModel = new qx.ui.table.model.Simple();
      tableModel.setColumns([ &quot;field1&quot;, &quot;field2&quot; ]);
      tableModel.setData( [[&quot;value1&quot;, &quot;value2&quot;]] );
  
      this.table = new qx.ui.table.Table(tableModel);
      with (this.table) {
        set({ width:&quot;100%&quot;, height:&quot;1*&quot;, border:&quot;inset-thin&quot; });
        getSelectionModel().setSelectionMode(qx.ui.table.selection.Model.MULTIPLE_INTERVAL_SELECTION);
      };

      this.text = new qx.ui.form.TextArea(&quot;This is the text widget&quot;);
      this.text.setWrap(true);
      this.text.setBackgroundColor(&quot;white&quot;);
      this.text.setWidth(&quot;100%&quot;);
      this.text.setHeight(&quot;100%&quot;);

      this.box.add( this.table);

      var button = new qx.ui.form.Button( &quot;button1&quot;);
      split.addLeft( this.box);
      split.addRight( button);

      button.addEventListener( &quot;click&quot;, function(e) {
        var child = this.box.getChildren()[0];
        var newchild = (child.toHashCode() == this.text.toHashCode()) ? this.table : this.text;
        this.box.removeAt(0);
        this.box.add( newchild);
      }, this);
    }
  }
});
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>2825</commentid>
            <who name="Hugh Gibson">hgibson</who>
            <bug_when>2008-02-02 07:55:19 +0100</bug_when>
            <thetext>See http://www.nabble.com/Should-shared-instances-be-used-for-internal-qooxdoo-operations--tt14801438.html#a14885872 

for a workaround for this.

The problem is covered at bug 763 and will be fixed in qooxdoo 0.8.

Hugh

*** This bug has been marked as a duplicate of bug 763 ***</thetext>
          </long_desc>
      
      

    </bug>