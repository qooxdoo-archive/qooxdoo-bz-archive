<bug>
          <bug_id>3202</bug_id>
          
          <creation_ts>2009-12-09 15:25:00 +0100</creation_ts>
          <short_desc>Cannot use the &#39;this&#39; variable when making asynchronous RPC calls</short_desc>
          <delta_ts>2009-12-09 15:33:15 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.io</component>
          <version>1.0-beta1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>unspecified</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Uwe Stahl">uwe.stahl</reporter>
          <assigned_to name="Unassigned">none</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15441</commentid>
            <who name="Uwe Stahl">uwe.stahl</who>
            <bug_when>2009-12-09 15:25:40 +0100</bug_when>
            <thetext>The callback function that is called when an asynchronous javascript call is completed cannot access the &#39;this&#39; variable.
But I need the &#39;this&#39; variable inside the callback function.

The method qx.core.Object.addListener() allows to set a &#39;this&#39; variable for a callback, but a similar functionality is missing for the method qx.io.remote.Rpc.callAsync().


One workaround for this issue would be to use a closure like this:
  var self = this;
  rpc.callAsync( function() {
    // Here we can use &quot;self&quot; instead of &quot;this&quot;
    }
    &quot;getMailsInInbox&quot;);
But this method is so large that I would not like to put all code inside RPC-Call. I would prefer the following style:
  rpc.callAsync( this.__callbackMethod, &quot;getMailsInInbox&quot;, this )</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>15442</commentid>
            <who name="Derrell Lipman">derrell.lipman</who>
            <bug_when>2009-12-09 15:33:15 +0100</bug_when>
            <thetext>Thanks for the report. We have discussed this many times. Your solution is absolutely what we would do if we were creating this interface now. Unfortunately it would require a non-backward-compatible change, or a separate method.

Were we to implement it, what it would do is to bind the provided &#39;this&#39; parameter to the function by calling qx.lang.Function.bind(). In the absence of the more desirable solution, you can do that yourself:

rpc.callAsync( qx.lang.Function.bind(this.__callbackMethod, this), &quot;getMailsInInbox&quot;);

Since we&#39;ve discussed in depth your proposed solution on a number of occasions, with no better resolution than what I just described, I&#39;m going to close the bug. If you can come up with a solution that is backward compatible yet accomplishes your goals, please re-open this. I&#39;d love to hear about it.

Derrell
</thetext>
          </long_desc>
      
      

    </bug>