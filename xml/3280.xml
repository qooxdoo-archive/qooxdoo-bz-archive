<bug>
          <bug_id>3280</bug_id>
          
          <creation_ts>2009-12-28 11:59:00 +0100</creation_ts>
          <short_desc>Event keypad</short_desc>
          <delta_ts>2014-03-03 15:26:34 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.event</component>
          <version>1.0-beta1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.3</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>marcomarchi89</reporter>
          <assigned_to name="Adrian Olaru">adrian.olaru</assigned_to>
          
          <qa_contact name="qooxdoo bugs mailing list">qooxdoo-bugs</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>15989</commentid>
            <who name="">marcomarchi89</who>
            <bug_when>2009-12-28 11:59:49 +0100</bug_when>
            <thetext>There&#39;s no way to distinguish between normal numbers and keypad numbers in events. 

I&#39;ve attached a listener to the keydown event, the listener function receives a KeySequence event object as argument and i have to do something only if the key sequence is CTRL+5(keypad). 

With this type of event object i can&#39;t get the char code because KeySequence event hasn&#39;t got a getCharCode() function, in the native event object there&#39;s no property that indicates the code of the pressed key and if i use the getKeyIdentifier() function there&#39;s no way to distinguish between normal and keypad numbers (for example 5 in the keypad has &quot;5&quot; as identifier, and the normal number has the same identifier).

I think that there must be a prefix or a suffix in keypad numbers identifiers.

However I do not understand why the native event is not completely cloned as in version 8.3.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>16151</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2010-01-13 15:29:27 +0100</bug_when>
            <thetext>to Fabian. Is this a valid issue (or enhancement) that could be resolved at all?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>17334</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-03-17 13:55:19 +0100</bug_when>
            <thetext>to Chris</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19717</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2010-08-09 15:09:07 +0200</bug_when>
            <thetext>Adrian, pleas check if its possible at all to detect cross browser if the keypad has been used or not.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19975</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-08-25 10:22:04 +0200</bug_when>
            <thetext>accept.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>19986</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-08-26 10:28:07 +0200</bug_when>
            <thetext>After reading a few documents about how browsers handle the keyboard events, the best thing here is to just expose keyCode for the keydown event. the keyCode is an ASCII code to identify which key from the keyboard (and not the character) is pressed. 

Exposing this to just the keydown event seems to be the safer thing to do right now, as it seems that there aren&#39;t browser incompatibilities. Althogh, be careful, the users may have different keyboard with different layouts, thus (possibly) returning different ASCII codes for keyCode. 

Ex. Pressing the 7 key from the NumPad gives you a different keyCode than pressing 7 key, but the same char, &quot;7&quot;. 


This is my preliminary thoughts. I wanna dig a little deeper though, maybe do same tests, see what I find.


More info here: 
http://unixpapa.com/js/key.html
http://www.quirksmode.org/js/keys.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20025</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-08-30 13:18:45 +0200</bug_when>
            <thetext>OK, so the specification (http://www.w3.org/TR/DOM-Level-3-Events/#events-keyboardevents) that qx.event.type.KeySequence implements does provide a KeyLocation exactly for this purpose. Unfortunately, the KeyLocation is not implemented by any browser. 

We could just expose keyCode for users to check the code of the num key but this is not to be trusted. 

My suggestion is...do nothing...or at most, expose the keyCode attribute. I tend to favor the first, as the w3c spec is doing the same thing.

Martin, what do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>20030</commentid>
            <who name="Adrian Olaru">adrian.olaru</who>
            <bug_when>2010-08-30 15:11:53 +0200</bug_when>
            <thetext>Committed revision 23191 on trunk.

KeySequence event now has a getKeyCode method which returns a code which identifies the physical key being pressed. 

Here&#39;s an example which checks for numpad 1-9 keys:

var doc = this.getRoot();
var tf = new qx.ui.form.TextField();

doc.add(tf);

tf.addListener(&quot;keydown&quot;, function(e) {
  var keyCode = e.getKeyCode();
  if (keyCode &gt; 95 &amp;&amp; keyCode &lt; 106) {
    this.debug(&quot;numpad &quot; + e.getKeyIdentifier());
  }
});</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39161</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:26:34 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>