<bug>
          <bug_id>4885</bug_id>
          
          <creation_ts>2011-03-28 10:52:00 +0200</creation_ts>
          <short_desc>Add dispose debugging for unit tests</short_desc>
          <delta_ts>2014-03-03 15:21:20 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>core.dev</component>
          <version>1.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.5</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Wagner">daniel.wagner</reporter>
          <assigned_to name="Daniel Wagner">daniel.wagner</assigned_to>
          
          <qa_contact name="Daniel Wagner">daniel.wagner</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>23645</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-03-28 10:52:23 +0200</bug_when>
            <thetext>Currently many of the framework&#39;s unit test classes leak significant amounts of memory. We should try to find a way to aid test developers in identifying such leaks, e.g. by keeping track of object instances that are created in the test code but not disposed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25328</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-06-29 09:49:09 +0200</bug_when>
            <thetext>Martin came up with an idea for dispose debugging (not just of unit tests): By temporarily disabling the ObjectRegistry&#39;s reuse of hashes, we can compare all objects added to the Registry between two arbitrary points in the application logic (e.g. from before a unit test started until after tearDown is done).
We created an early implementation of this and, after adding some checks to ignore objects that don&#39;t need to be disposed such as singletons or pooled decorators, used it to find and eliminate a large number of memory leaks in the framework unit tests.

I&#39;ll continue going through the unit tests in order to find any additional false positives that need to be ignored, then we&#39;ll see about adding this dispose debugging feature to the framework (controlled by an environment setting, of course).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>25726</commentid>
            <who name="Daniel Wagner">daniel.wagner</who>
            <bug_when>2011-07-04 14:10:14 +0200</bug_when>
            <thetext>Added the dispose profiling feature with r27942. Also added a how-to to the Memory Management manual page. Still busy patching leaks in qx.test.* but that&#39;s a different issue (bug #4944).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>37250</commentid>
            <who name="Martin Wittemann">martin.wittemann</who>
            <bug_when>2014-03-03 15:21:20 +0100</bug_when>
            <thetext>Closed all bugs already shipped with a release.</thetext>
          </long_desc>
      
      

    </bug>