<bug>
          <bug_id>5650</bug_id>
          
          <creation_ts>2011-09-27 17:10:00 +0200</creation_ts>
          <short_desc>We need a Resource Abstraction for Mobile CSS Files</short_desc>
          <delta_ts>2011-12-02 10:20:55 +0100</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>mobile</component>
          <version>1.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.6</target_milestone>
          
          <blocked>4889</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Herchenroeder">thron7</reporter>
          <assigned_to name="Tino Butz">tinobutz</assigned_to>
          <cc>jajalinux</cc>
    
    <cc>tristan.koch</cc>
          <qa_contact name="Tino Butz">tinobutz</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>26995</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-09-27 17:10:30 +0200</bug_when>
            <thetext>Mobile CSS files make use of image URIs, e.g. for background images:

   background: url(&quot;../../icon/android/arrow.png&quot;) no-repeat right center;

(from android.css). This refers to the image file 
qx/mobile/icon/android/arrow.png. If the android.css is relocated, or placed in 
a minified CSS file together with other files, such relative links can break.

The issue is currently handled in the Mobileshowcase by placing the combined 
CSS file in such a path that the relative URIs remain valid. But this will 
become unusable if we have custom images or images from contribs being used, 
alongside with framework images.

As with the resource IDs in the JS code, we need a resource abstraction, 
something that allows us to reference images in CSS files in a way that is 
adaptable when the CSS code is moved.

Possible approaches may go from a strict path convention for image files, over 
simple, generator-replaced macros, up to Sass variables.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>26996</commentid>
            <who name="Thomas Herchenroeder">thron7</who>
            <bug_when>2011-09-27 17:48:51 +0200</bug_when>
            <thetext>A first, simple approach would be a path convention:

For all the various CSS files in the mobile realm which are for consumption in 
a final combined (and minified) CSS file, if we could agree on this combined 
CSS file being located in the &lt;application&gt;/css resource folder, then all image 
URIs could be relative to this folder, navigating over the resource root. E.g. 
the image URI from the bug description would be 

    url(&quot;../../qx/mobile/icon/android/arrow.png&quot;)

(where &quot;../..&quot; would be stepping up into the resource root). This would always 
work, no matter where the resource structure is built up, but it requires all 
necessary images to be available under the common resource root. We would need 
a resource-copying job for the source version, then.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>27759</commentid>
            <who name="Tino Butz">tinobutz</who>
            <bug_when>2011-12-01 18:17:23 +0100</bug_when>
            <thetext>We will have this fixed with less. We will only have one css file.</thetext>
          </long_desc>
      
      

    </bug>