<bug>
          <bug_id>9188</bug_id>
          
          <creation_ts>2015-08-04 11:15:00 +0200</creation_ts>
          <short_desc>GroupBox set/getLegend is not a property</short_desc>
          <delta_ts>2015-09-01 11:46:43 +0200</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>framework</product>
          <component>desktop</component>
          <version>4.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>5.1</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alex Rempel">alexey.rempel</reporter>
          <assigned_to name="Andreas Ecker">qooxdoo</assigned_to>
          <cc>qooxdoo</cc>
          <qa_contact name="Martin Wittemann">martin.wittemann</qa_contact>
          <cf_browser>---</cf_browser>
          

      

      

      

          <long_desc isprivate="0">
            <commentid>43472</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-04 11:15:55 +0200</bug_when>
            <thetext>Please make qx.ui.groupbox.GroupBox.setLegend/getLegend a real property (important for layout editors based on properties).

Hacked local qooxdoo for it to work:
1. create property (same as for &quot;value&quot; in a label):
  legend:
    {
      check: &quot;String&quot;,
      apply: &quot;_applyLegend&quot;,
      event: &quot;changeLegend&quot;,
      nullable: true
    }
2. bind &quot;legend&quot; to child control &quot;legend&quot;&#39;s &quot;value&quot; in constructor:
  this.bind(&quot;legend&quot;, this.getChildControl(&quot;legend&quot;), &quot;label&quot;);
3. removed setLegend and getLegend methods
4. added _applyLegend function:
  _applyLegend: function(val, old)
    {
      var control = this.getChildControl(&quot;legend&quot;);

      if (val !== null)
      {
        control.show();
      }
      else
      {
        control.exclude();
      }
    }</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43474</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-08-07 10:08:53 +0200</bug_when>
            <thetext>Hi Alex, thanks for the enhancement. Would you mind providing a pull request over at Github?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43476</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-08 11:48:28 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; Hi Alex, thanks for the enhancement. Would you mind providing a pull request
&gt; over at Github?

Hello Andreas,
I&#39;m kind of new to the github scene; can you tell me which repo I have to fork to introduce a pull request to?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43477</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-08 13:48:07 +0200</bug_when>
            <thetext>(In reply to comment #1)
&gt; Hi Alex, thanks for the enhancement. Would you mind providing a pull request
&gt; over at Github?

Hi Andreas, OK created pull request on master.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43522</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-08-31 17:01:35 +0200</bug_when>
            <thetext>Alex, do you just want the GroupBox&#39; legend to be the _target_ property of a data-binding? If yes, that should already work with the existing getLegend()/setLegend() methods, e.g. 
      textfield.bind(&quot;value&quot;, groupBox, &quot;legend&quot;);

Or do you really need the GroupBox&#39; legend to be the _source_ property of a data-binding, as in e.g.
      groupBox.bind(&quot;legend&quot;, label, &quot;value&quot;);</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43523</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-31 17:06:52 +0200</bug_when>
            <thetext>(In reply to comment #4)
&gt; Alex, do you just want the GroupBox&#39; legend to be the _target_ property of a
&gt; data-binding? If yes, that should already work with the existing
&gt; getLegend()/setLegend() methods, e.g. 
&gt;       textfield.bind(&quot;value&quot;, groupBox, &quot;legend&quot;);
&gt; 
&gt; Or do you really need the GroupBox&#39; legend to be the _source_ property of a
&gt; data-binding, as in e.g.
&gt;       groupBox.bind(&quot;legend&quot;, label, &quot;value&quot;);

I have an editor for qooxdoo which is entirely property based (i.e. &quot;legend&quot; as a property would provide information about type, initial value etc.) which is why I always try to do everything by property in my widgets.
Apart from that it seemed like the right call for Groupbox.setLegend to become a property as I don&#39;t see any difference to an Atom.setLabel which is a property.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43524</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-08-31 17:22:35 +0200</bug_when>
            <thetext>The following modified &quot;Data Binding&quot; example of the qooxdoo playground shows how the GroupBox&#39; legend is used as a target property:
http://tinyurl.com/o9jkhf9

Isn&#39;t that exactly what you would need for your editor? Higher-level widget API doesn&#39;t necessarily need to be converted to qooxdoo dynamic properties. Let us know if the existing feature is fine for your use case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43525</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-31 17:29:02 +0200</bug_when>
            <thetext>(In reply to comment #6)
&gt; The following modified &quot;Data Binding&quot; example of the qooxdoo playground shows
&gt; how the GroupBox&#39; legend is used as a target property:
&gt; http://tinyurl.com/o9jkhf9
&gt; 
&gt; Isn&#39;t that exactly what you would need for your editor? Higher-level widget API
&gt; doesn&#39;t necessarily need to be converted to qooxdoo dynamic properties. Let us
&gt; know if the existing feature is fine for your use case.

The editor uses the property system as the source of - well - set/get properties. That means that clicking on a widget in the editor the qx.util.PropertyUtil.getAllProperties method is used to provide the setters and the property definitions then provide information for the handling. For example if the property type is set to an array with values then the editor prepares a selectbox for setting, a string would be a textfield, an int would become a spinner etc.
In other words I don&#39;t have any code like &quot;if GROUPBOX add setLegend&quot; and instead it is done generically using the property system i.e. &quot;add all properties for &lt;clazz&gt;&quot;. Kind of like reflection if you want.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43526</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-08-31 17:41:01 +0200</bug_when>
            <thetext>Ok, I see. But just grep&#39;ing through the ui.* namespace for &quot;setFoo :&quot; function declarations turns up quite a number of hits. Thus there doesn&#39;t seem to be a programmatic way to determine _all_ setters of a widget (or layout). You should run into those missing spots as well besides the GroupBox&#39; legend, right? 

Maybe you&#39;d have to complement your editor with meta information not just based on generic runtime information of property declarations but of setFoo() info as well; or on compile-time API info. Would that be feasible?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43527</commentid>
            <who name="Alex Rempel">alexey.rempel</who>
            <bug_when>2015-08-31 17:50:11 +0200</bug_when>
            <thetext>It seemed to me that making &quot;legend&quot; a property would be quite straightforward and easy, if it goes against some qooxdoo maximes then I&#39;m not the one standing in the way.

Apart from that; the editor uses widgets (layout items) only and there the non-property problem seems to be quite rare. Special code is usually only required for the Layout classes, which by the way I&#39;m also quite unhappy with as it would seem that adding some meta mechanism to what layout options a layout class provides wouldn&#39;t be that hard (i.e. Layout.getPossiblyLayoutOptions =&gt; some array of definitions with &quot;flex&quot; being the one in there for an HBox). Because of that the editor does not provide support for a Grid.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43529</commentid>
            <who name="Andreas Ecker">qooxdoo</who>
            <bug_when>2015-09-01 11:46:43 +0200</bug_when>
            <thetext>Turned legend into a property of GroupBox with 133ced6c (master).

@Alex, please verify. PR wasn&#39;t applied directly, for an even easier fix. Anyway, future bug reports and PRs welcome. ;-)</thetext>
          </long_desc>
      
      

    </bug>